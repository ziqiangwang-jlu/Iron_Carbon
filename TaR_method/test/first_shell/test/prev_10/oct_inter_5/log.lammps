LAMMPS (29 Oct 2020)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
#-----------------------
#
#Note: Please make sure that the initial interstitial sites, which are considered as the starting point are stable
#energetically. The position of a carbon atom after the relaxation is output into the start_site.txt
#Only if the diffuse distance greater than a quarter of lattice constant is considered as reasonable
#In this case, the displacement threshold is 1.0A
#The dot product is the nineth order which should not be too small
#
#------------------------

# the step size should be larger otherwise the number of the energy minimum sites is smaller
variable                i                 equal     288751  # The id of the carbon atom
variable                delta             equal     0.03
variable                iter_tot          equal     80
variable                seed_start        equal     1
variable                seed_stop         equal     15
variable                tol               equal     1.0e-09 # determine the accurancy of the saddle point and
#influence the computational cost
# The energy tolerance depends on the energy magnitude of the total energy of the system. In this case, 1.0e-10
# of energy tolerance corresponds to the convergence of the total energy between 0.1-0.2 meV
variable                etol              equal     1.0e-30  # unitless
variable                ftol              equal     1.0e-30  # eV/A
# The total force(length of the global force vector for all atoms) tolerance(eV/Angstrom) typical value ranging from 1.0e-02 to 1.0e-04 eV/nm

label                   loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.367 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.87993 on 104 procs for 158 steps with 288751 atoms

99.8% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4994     | 1.3268     | 1.724      |  30.5 | 70.58
Neigh   | 3.1485e-05 | 0.0088133  | 0.012771   |   3.9 |  0.47
Comm    | 0.035347   | 0.30282    | 0.8957     |  44.9 | 16.11
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.861e-05  | 0.0016988  | 0.0043311  |   2.6 |  0.09
Other   |            | 0.2398     |            |       | 12.76

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,1)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,1)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,1)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.14044487449458
variable                y_1    equal     $y
variable                y_1    equal     4.00537759136883
variable                z_1    equal     $z
variable                z_1    equal     31.3305342603564

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.14044487449458  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.14044487449458  y  4.00537759136883  z  ${z_1}
set                atom        288751    x  1.14044487449458  y  4.00537759136883  z  31.3305342603564
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.14044487449458-${x_0}
variable           vector_x          equal     1.14044487449458-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.00537759136883-${y_0}
variable           vector_y          equal     4.00537759136883-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3305342603564-${z_0}
variable           vector_z          equal     31.3305342603564-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.02519143939019  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.02519143939019  -0.0193053638935101  ${vector_z}
fix                hold    carbon   planeforce   -0.02519143939019  -0.0193053638935101  0.00966593742370137
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3  0.026901204 -0.061764802 -0.053250077 
     380   -1152449.3            0   -1152449.3 -1.0514488e-06 4.980125e-06 7.2062972e-06 
Loop time of 2.61399 on 104 procs for 222 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33749804  -1152449.34254307  -1152449.34254307
  Force two-norm initial, final = 0.34067855 3.9914718e-05
  Force max component initial, final = 0.16219895 9.8808989e-06
  Final line search alpha, max atom move = 1.0000000 9.8808989e-06
  Iterations, force evaluations = 222 444

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68111    | 1.8712     | 2.4502     |  36.8 | 71.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.045316   | 0.42779    | 1.2757     |  53.9 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.0485e-05 | 0.0036616  | 0.0078073  |   2.9 |  0.14
Other   |            | 0.3113     |            |       | 11.91

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14159224828726-${x_0}
variable           new_x         equal     1.14159224828726-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.0035848642368-${y_0}
variable           new_y         equal     4.0035848642368-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3299440173164-${z_0}
variable           new_z         equal     31.3299440173164-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02404406559751^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02404406559751^2+-0.0210980910255394^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02404406559751^2+-0.0210980910255394^2+0.00907569438370004^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.02404406559751/${norm}
variable           unit_x        equal     -0.02404406559751/0.0332507859144056
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0210980910255394/${norm}
variable           unit_y        equal     -0.0210980910255394/0.0332507859144056
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00907569438370004/${norm}
variable           unit_z        equal     0.00907569438370004/0.0332507859144056
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14159224828726+${delta}*${unit_x}
variable           x_new         equal     1.14159224828726+0.03*${unit_x}
variable           x_new         equal     1.14159224828726+0.03*-0.723112700535993
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.0035848642368+${delta}*${unit_y}
variable           y_new         equal     4.0035848642368+0.03*${unit_y}
variable           y_new         equal     4.0035848642368+0.03*-0.634514055693308
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3299440173164+${delta}*${unit_z}
variable           z_new         equal     31.3299440173164+0.03*${unit_z}
variable           z_new         equal     31.3299440173164+0.03*0.272946763034797

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11989886727118  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11989886727118  y  3.984549442566  z   ${z_new}
set                atom          288751    x  1.11989886727118  y  3.984549442566  z   31.3381324202074
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02404406559751  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02404406559751  -0.0210980910255394  ${new_z}
fix                hold    carbon   planeforce   -0.02404406559751  -0.0210980910255394  0.00907569438370004
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     380   -1152449.3            0   -1152449.3  0.034718669 -0.063265606 -0.055092815 
     609   -1152449.3            0   -1152449.3 1.7599664e-06 -4.4575602e-06 -5.6997582e-06 
Loop time of 2.67104 on 104 procs for 229 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.3321129  -1152449.33610811  -1152449.33610811
  Force two-norm initial, final = 0.30554327 2.5643618e-05
  Force max component initial, final = 0.13969916 6.5776212e-06
  Final line search alpha, max atom move = 1.0000000 6.5776212e-06
  Iterations, force evaluations = 229 458

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.70133    | 1.9214     | 2.5088     |  37.4 | 71.94
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.048109   | 0.43375    | 1.2966     |  54.9 | 16.24
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7877e-05 | 0.00377    | 0.0080659  |   2.9 |  0.14
Other   |            | 0.3121     |            |       | 11.68

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115457 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12231167100493-${x_0}
variable           new_x         equal     1.12231167100493-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.98110464637518-${y_0}
variable           new_y         equal     3.98110464637518-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3365165645241-${z_0}
variable           new_z         equal     31.3365165645241-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0433246428798402*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0433246428798402*-0.0433246428798402+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0433246428798402*-0.0433246428798402+-0.04357830888716*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0433246428798402*-0.0433246428798402+-0.04357830888716*-0.04357830888716+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0433246428798402*-0.0433246428798402+-0.04357830888716*-0.04357830888716+0.0156482415913999*${new_z})
variable           module        equal     sqrt(-0.0433246428798402*-0.0433246428798402+-0.04357830888716*-0.04357830888716+0.0156482415913999*0.0156482415913999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0433246428798402/${module}
variable           unitx         equal     -0.0433246428798402/0.0634110491242121
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.04357830888716/${module}
variable           unity         equal     -0.04357830888716/0.0634110491242121
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0156482415913999/${module}
variable           unitz         equal     0.0156482415913999/0.0634110491242121
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.75996639148041e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.75996639148041e-06*1.75996639148041e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.75996639148041e-06*1.75996639148041e-06+-4.45756021282689e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.75996639148041e-06*1.75996639148041e-06+-4.45756021282689e-06*-4.45756021282689e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.75996639148041e-06*1.75996639148041e-06+-4.45756021282689e-06*-4.45756021282689e-06+-5.69975822992561e-06*${fz})
variable           f_module      equal     sqrt(1.75996639148041e-06*1.75996639148041e-06+-4.45756021282689e-06*-4.45756021282689e-06+-5.69975822992561e-06*-5.69975822992561e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.683234916914466*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.683234916914466*-0.683234916914466+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.683234916914466*-0.683234916914466+-0.687235260873812*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.683234916914466*-0.683234916914466+-0.687235260873812*-0.687235260873812+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.683234916914466*-0.683234916914466+-0.687235260873812*-0.687235260873812+0.246774683710839*${unitz})
variable           dir_module    equal     sqrt(-0.683234916914466*-0.683234916914466+-0.687235260873812*-0.687235260873812+0.246774683710839*0.246774683710839)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.75996639148041e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.75996639148041e-06*-0.683234916914466+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.75996639148041e-06*-0.683234916914466+-4.45756021282689e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.75996639148041e-06*-0.683234916914466+-4.45756021282689e-06*-0.687235260873812+${fz}*${unitz}
variable           dot      equal     1.75996639148041e-06*-0.683234916914466+-4.45756021282689e-06*-0.687235260873812+-5.69975822992561e-06*${unitz}
variable           dot      equal     1.75996639148041e-06*-0.683234916914466+-4.45756021282689e-06*-0.687235260873812+-5.69975822992561e-06*0.246774683710839
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.54366030049298e-07/${f_module}*${dir_module}
variable           cos      equal     4.54366030049298e-07/7.44678243469773e-06*${dir_module}
variable           cos      equal     4.54366030049298e-07/7.44678243469773e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0610150805443453)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.50974332445563/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.5019206393577-90.0)
print              "The dot product: ${dot}"
The dot product: 4.54366030049298e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.5019206393577

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0433246428798402^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0433246428798402^2+-0.04357830888716^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0433246428798402^2+-0.04357830888716^2+0.0156482415913999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0433246428798402/${norm}
variable           unit_x        equal     -0.0433246428798402/0.0634110491242121
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.04357830888716/${norm}
variable           unit_y        equal     -0.04357830888716/0.0634110491242121
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0156482415913999/${norm}
variable           unit_z        equal     0.0156482415913999/0.0634110491242121
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12231167100493+${delta}*${unit_x}
variable           x_new         equal     1.12231167100493+0.03*${unit_x}
variable           x_new         equal     1.12231167100493+0.03*-0.683234916914466
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.98110464637518+${delta}*${unit_y}
variable           y_new         equal     3.98110464637518+0.03*${unit_y}
variable           y_new         equal     3.98110464637518+0.03*-0.687235260873812
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3365165645241+${delta}*${unit_z}
variable           z_new         equal     31.3365165645241+0.03*${unit_z}
variable           z_new         equal     31.3365165645241+0.03*0.246774683710839

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1018146234975  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1018146234975  y  3.96048758854897  z   ${z_new}
set                atom          288751    x  1.1018146234975  y  3.96048758854897  z   31.3439198050354
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0433246428798402  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0433246428798402  -0.04357830888716  ${new_z}
fix                hold    carbon   planeforce   -0.0433246428798402  -0.04357830888716  0.0156482415913999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     609   -1152449.3            0   -1152449.3  0.042230946 -0.066693477 -0.068809541 
     842   -1152449.3            0   -1152449.3 -1.633973e-06 3.0996993e-06 4.108344e-06 
Loop time of 2.73464 on 104 procs for 233 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32234664  -1152449.32623171  -1152449.32623171
  Force two-norm initial, final = 0.30345814 1.8364449e-05
  Force max component initial, final = 0.13054498 5.0516875e-06
  Final line search alpha, max atom move = 1.0000000 5.0516875e-06
  Iterations, force evaluations = 233 466

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.71477    | 1.9633     | 2.5558     |  37.7 | 71.79
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.046914   | 0.44438    | 1.319      |  55.3 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.1712e-05 | 0.0038463  | 0.0082019  |   2.9 |  0.14
Other   |            | 0.3231     |            |       | 11.82

Nlocal:        2776.45 ave        3959 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115398 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10503249719879-${x_0}
variable           new_x         equal     1.10503249719879-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.95559560453604-${y_0}
variable           new_y         equal     3.95559560453604-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3392054631065-${z_0}
variable           new_z         equal     31.3392054631065-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0606038166859801*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0606038166859801*-0.0606038166859801+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0606038166859801*-0.0606038166859801+-0.0690873507262997*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0606038166859801*-0.0606038166859801+-0.0690873507262997*-0.0690873507262997+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0606038166859801*-0.0606038166859801+-0.0690873507262997*-0.0690873507262997+0.0183371401737986*${new_z})
variable           module        equal     sqrt(-0.0606038166859801*-0.0606038166859801+-0.0690873507262997*-0.0690873507262997+0.0183371401737986*0.0183371401737986)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0606038166859801/${module}
variable           unitx         equal     -0.0606038166859801/0.0937130478484195
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0690873507262997/${module}
variable           unity         equal     -0.0690873507262997/0.0937130478484195
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0183371401737986/${module}
variable           unitz         equal     0.0183371401737986/0.0937130478484195
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.6339729538034e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.6339729538034e-06*-1.6339729538034e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.6339729538034e-06*-1.6339729538034e-06+3.09969931899474e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.6339729538034e-06*-1.6339729538034e-06+3.09969931899474e-06*3.09969931899474e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.6339729538034e-06*-1.6339729538034e-06+3.09969931899474e-06*3.09969931899474e-06+4.10834401460789e-06*${fz})
variable           f_module      equal     sqrt(-1.6339729538034e-06*-1.6339729538034e-06+3.09969931899474e-06*3.09969931899474e-06+4.10834401460789e-06*4.10834401460789e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.64669561045551*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.64669561045551*-0.64669561045551+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.64669561045551*-0.64669561045551+-0.737222321891059*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.64669561045551*-0.64669561045551+-0.737222321891059*-0.737222321891059+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.64669561045551*-0.64669561045551+-0.737222321891059*-0.737222321891059+0.195673287709721*${unitz})
variable           dir_module    equal     sqrt(-0.64669561045551*-0.64669561045551+-0.737222321891059*-0.737222321891059+0.195673287709721*0.195673287709721)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.6339729538034e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.6339729538034e-06*-0.64669561045551+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.6339729538034e-06*-0.64669561045551+3.09969931899474e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.6339729538034e-06*-0.64669561045551+3.09969931899474e-06*-0.737222321891059+${fz}*${unitz}
variable           dot      equal     -1.6339729538034e-06*-0.64669561045551+3.09969931899474e-06*-0.737222321891059+4.10834401460789e-06*${unitz}
variable           dot      equal     -1.6339729538034e-06*-0.64669561045551+3.09969931899474e-06*-0.737222321891059+4.10834401460789e-06*0.195673287709721
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.24591211904874e-07/${f_module}*${dir_module}
variable           cos      equal     -4.24591211904874e-07/5.39967536286228e-06*${dir_module}
variable           cos      equal     -4.24591211904874e-07/5.39967536286228e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0786327294461282)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.64951031495747/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(94.5099793103582-90.0)
print              "The dot product: ${dot}"
The dot product: -4.24591211904874e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 94.5099793103582

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0606038166859801^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0606038166859801^2+-0.0690873507262997^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0606038166859801^2+-0.0690873507262997^2+0.0183371401737986^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0606038166859801/${norm}
variable           unit_x        equal     -0.0606038166859801/0.0937130478484195
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0690873507262997/${norm}
variable           unit_y        equal     -0.0690873507262997/0.0937130478484195
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0183371401737986/${norm}
variable           unit_z        equal     0.0183371401737986/0.0937130478484195
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10503249719879+${delta}*${unit_x}
variable           x_new         equal     1.10503249719879+0.03*${unit_x}
variable           x_new         equal     1.10503249719879+0.03*-0.64669561045551
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.95559560453604+${delta}*${unit_y}
variable           y_new         equal     3.95559560453604+0.03*${unit_y}
variable           y_new         equal     3.95559560453604+0.03*-0.737222321891059
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3392054631065+${delta}*${unit_z}
variable           z_new         equal     31.3392054631065+0.03*${unit_z}
variable           z_new         equal     31.3392054631065+0.03*0.195673287709721

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08563162888512  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08563162888512  y  3.93347893487931  z   ${z_new}
set                atom          288751    x  1.08563162888512  y  3.93347893487931  z   31.3450756617378
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0606038166859801  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0606038166859801  -0.0690873507262997  ${new_z}
fix                hold    carbon   planeforce   -0.0606038166859801  -0.0690873507262997  0.0183371401737986
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     842   -1152449.3            0   -1152449.3  0.047899941 -0.063056689 -0.079265378 
     997   -1152449.3            0   -1152449.3 1.6082158e-06 -1.9805925e-06 -2.1470018e-06 
Loop time of 1.81658 on 104 procs for 155 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30972995  -1152449.31351593  -1152449.31351593
  Force two-norm initial, final = 0.29791883 2.6812638e-05
  Force max component initial, final = 0.13029721 6.6209388e-06
  Final line search alpha, max atom move = 1.0000000 6.6209388e-06
  Iterations, force evaluations = 155 310

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.47471    | 1.2993     | 1.6924     |  30.6 | 71.52
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033506   | 0.29317    | 0.87788    |  45.4 | 16.14
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.927e-05  | 0.0025578  | 0.0054963  |   2.4 |  0.14
Other   |            | 0.2216     |            |       | 12.20

Nlocal:        2776.45 ave        3955 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115288 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.08941093492133-${x_0}
variable           new_x         equal     1.08941093492133-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.92824290858319-${y_0}
variable           new_y         equal     3.92824290858319-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.337838829077-${z_0}
variable           new_z         equal     31.337838829077-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0762253789634402*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0762253789634402*-0.0762253789634402+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0762253789634402*-0.0762253789634402+-0.0964400466791497*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0762253789634402*-0.0762253789634402+-0.0964400466791497*-0.0964400466791497+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0762253789634402*-0.0762253789634402+-0.0964400466791497*-0.0964400466791497+0.0169705061443004*${new_z})
variable           module        equal     sqrt(-0.0762253789634402*-0.0762253789634402+-0.0964400466791497*-0.0964400466791497+0.0169705061443004*0.0169705061443004)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0762253789634402/${module}
variable           unitx         equal     -0.0762253789634402/0.124092663281881
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0964400466791497/${module}
variable           unity         equal     -0.0964400466791497/0.124092663281881
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0169705061443004/${module}
variable           unitz         equal     0.0169705061443004/0.124092663281881
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.6082157850829e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.6082157850829e-06*1.6082157850829e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.6082157850829e-06*1.6082157850829e-06+-1.98059248576145e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.6082157850829e-06*1.6082157850829e-06+-1.98059248576145e-06*-1.98059248576145e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.6082157850829e-06*1.6082157850829e-06+-1.98059248576145e-06*-1.98059248576145e-06+-2.1470018069591e-06*${fz})
variable           f_module      equal     sqrt(1.6082157850829e-06*1.6082157850829e-06+-1.98059248576145e-06*-1.98059248576145e-06+-2.1470018069591e-06*-2.1470018069591e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.61426176977354*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.61426176977354*-0.61426176977354+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.61426176977354*-0.61426176977354+-0.777161551123152*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.61426176977354*-0.61426176977354+-0.777161551123152*-0.777161551123152+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.61426176977354*-0.61426176977354+-0.777161551123152*-0.777161551123152+0.136756724333906*${unitz})
variable           dir_module    equal     sqrt(-0.61426176977354*-0.61426176977354+-0.777161551123152*-0.777161551123152+0.136756724333906*0.136756724333906)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.6082157850829e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.6082157850829e-06*-0.61426176977354+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.6082157850829e-06*-0.61426176977354+-1.98059248576145e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.6082157850829e-06*-0.61426176977354+-1.98059248576145e-06*-0.777161551123152+${fz}*${unitz}
variable           dot      equal     1.6082157850829e-06*-0.61426176977354+-1.98059248576145e-06*-0.777161551123152+-2.1470018069591e-06*${unitz}
variable           dot      equal     1.6082157850829e-06*-0.61426176977354+-1.98059248576145e-06*-0.777161551123152+-2.1470018069591e-06*0.136756724333906
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.57757919795759e-07/${f_module}*${dir_module}
variable           cos      equal     2.57757919795759e-07/3.33447467603672e-06*${dir_module}
variable           cos      equal     2.57757919795759e-07/3.33447467603672e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0773009078905719)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.49341822679309/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(85.5665614431553-90.0)
print              "The dot product: ${dot}"
The dot product: 2.57757919795759e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 85.5665614431553

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0762253789634402^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0762253789634402^2+-0.0964400466791497^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0762253789634402^2+-0.0964400466791497^2+0.0169705061443004^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0762253789634402/${norm}
variable           unit_x        equal     -0.0762253789634402/0.124092663281881
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0964400466791497/${norm}
variable           unit_y        equal     -0.0964400466791497/0.124092663281881
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0169705061443004/${norm}
variable           unit_z        equal     0.0169705061443004/0.124092663281881
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.08941093492133+${delta}*${unit_x}
variable           x_new         equal     1.08941093492133+0.03*${unit_x}
variable           x_new         equal     1.08941093492133+0.03*-0.61426176977354
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.92824290858319+${delta}*${unit_y}
variable           y_new         equal     3.92824290858319+0.03*${unit_y}
variable           y_new         equal     3.92824290858319+0.03*-0.777161551123152
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.337838829077+${delta}*${unit_z}
variable           z_new         equal     31.337838829077+0.03*${unit_z}
variable           z_new         equal     31.337838829077+0.03*0.136756724333906

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07098308182812  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07098308182812  y  3.9049280620495  z   ${z_new}
set                atom          288751    x  1.07098308182812  y  3.9049280620495  z   31.341941530807
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0762253789634402  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0762253789634402  -0.0964400466791497  ${new_z}
fix                hold    carbon   planeforce   -0.0762253789634402  -0.0964400466791497  0.0169705061443004
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     997   -1152449.3            0   -1152449.3  0.051334599 -0.054963069 -0.081767844 
    1000   -1152449.3            0   -1152449.3 0.0057338645 -0.0054368646 -0.005142185 
    1148   -1152449.3            0   -1152449.3 9.9431727e-06 -1.0215083e-05 -1.3389171e-05 
Loop time of 1.75435 on 104 procs for 151 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.29420495  -1152449.29785891  -1152449.29785891
  Force two-norm initial, final = 0.28952608 0.00016775759
  Force max component initial, final = 0.14150165 4.4029296e-05
  Final line search alpha, max atom move = 1.0000000 4.4029296e-05
  Iterations, force evaluations = 151 302

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46326    | 1.2704     | 1.6572     |  30.3 | 72.41
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.029121   | 0.28664    | 0.85478    |  44.7 | 16.34
Output  | 8.872e-05  | 9.6028e-05 | 0.00016474 |   0.0 |  0.01
Modify  | 1.91e-05   | 0.0024939  | 0.0053646  |   2.4 |  0.14
Other   |            | 0.1947     |            |       | 11.10

Nlocal:        2776.45 ave        3951 max           0 min
Histogram: 8 4 4 0 4 12 8 1 29 34
Nghost:        3879.13 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115140 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07527214781285-${x_0}
variable           new_x         equal     1.07527214781285-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.90006949064616-${y_0}
variable           new_y         equal     3.90006949064616-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3335961596291-${z_0}
variable           new_z         equal     31.3335961596291-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0903641660719201*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0903641660719201*-0.0903641660719201+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0903641660719201*-0.0903641660719201+-0.12461346461618*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0903641660719201*-0.0903641660719201+-0.12461346461618*-0.12461346461618+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0903641660719201*-0.0903641660719201+-0.12461346461618*-0.12461346461618+0.0127278366963992*${new_z})
variable           module        equal     sqrt(-0.0903641660719201*-0.0903641660719201+-0.12461346461618*-0.12461346461618+0.0127278366963992*0.0127278366963992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0903641660719201/${module}
variable           unitx         equal     -0.0903641660719201/0.154454510780656
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.12461346461618/${module}
variable           unity         equal     -0.12461346461618/0.154454510780656
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0127278366963992/${module}
variable           unitz         equal     0.0127278366963992/0.154454510780656
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.94317270239215e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.94317270239215e-06*9.94317270239215e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.94317270239215e-06*9.94317270239215e-06+-1.02150833494997e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.94317270239215e-06*9.94317270239215e-06+-1.02150833494997e-05*-1.02150833494997e-05+${fz}*${fz})
variable           f_module      equal     sqrt(9.94317270239215e-06*9.94317270239215e-06+-1.02150833494997e-05*-1.02150833494997e-05+-1.33891709410068e-05*${fz})
variable           f_module      equal     sqrt(9.94317270239215e-06*9.94317270239215e-06+-1.02150833494997e-05*-1.02150833494997e-05+-1.33891709410068e-05*-1.33891709410068e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.585053590310795*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.585053590310795*-0.585053590310795+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.585053590310795*-0.585053590310795+-0.806797185697905*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.585053590310795*-0.585053590310795+-0.806797185697905*-0.806797185697905+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.585053590310795*-0.585053590310795+-0.806797185697905*-0.806797185697905+0.0824050824548223*${unitz})
variable           dir_module    equal     sqrt(-0.585053590310795*-0.585053590310795+-0.806797185697905*-0.806797185697905+0.0824050824548223*0.0824050824548223)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.94317270239215e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.94317270239215e-06*-0.585053590310795+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.94317270239215e-06*-0.585053590310795+-1.02150833494997e-05*${unity}+${fz}*${unitz}
variable           dot      equal     9.94317270239215e-06*-0.585053590310795+-1.02150833494997e-05*-0.806797185697905+${fz}*${unitz}
variable           dot      equal     9.94317270239215e-06*-0.585053590310795+-1.02150833494997e-05*-0.806797185697905+-1.33891709410068e-05*${unitz}
variable           dot      equal     9.94317270239215e-06*-0.585053590310795+-1.02150833494997e-05*-0.806797185697905+-1.33891709410068e-05*0.0824050824548223
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.3208758740357e-06/${f_module}*${dir_module}
variable           cos      equal     1.3208758740357e-06/1.95572111947057e-05*${dir_module}
variable           cos      equal     1.3208758740357e-06/1.95572111947057e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0675390709281327)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.50320580330816/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.1273482691301-90.0)
print              "The dot product: ${dot}"
The dot product: 1.3208758740357e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.1273482691301

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0903641660719201^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0903641660719201^2+-0.12461346461618^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0903641660719201^2+-0.12461346461618^2+0.0127278366963992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0903641660719201/${norm}
variable           unit_x        equal     -0.0903641660719201/0.154454510780656
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.12461346461618/${norm}
variable           unit_y        equal     -0.12461346461618/0.154454510780656
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0127278366963992/${norm}
variable           unit_z        equal     0.0127278366963992/0.154454510780656
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07527214781285+${delta}*${unit_x}
variable           x_new         equal     1.07527214781285+0.03*${unit_x}
variable           x_new         equal     1.07527214781285+0.03*-0.585053590310795
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.90006949064616+${delta}*${unit_y}
variable           y_new         equal     3.90006949064616+0.03*${unit_y}
variable           y_new         equal     3.90006949064616+0.03*-0.806797185697905
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3335961596291+${delta}*${unit_z}
variable           z_new         equal     31.3335961596291+0.03*${unit_z}
variable           z_new         equal     31.3335961596291+0.03*0.0824050824548223

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05772054010353  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05772054010353  y  3.87586557507522  z   ${z_new}
set                atom          288751    x  1.05772054010353  y  3.87586557507522  z   31.3360683121027
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0903641660719201  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0903641660719201  -0.12461346461618  ${new_z}
fix                hold    carbon   planeforce   -0.0903641660719201  -0.12461346461618  0.0127278366963992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1148   -1152449.3            0   -1152449.3  0.052539778 -0.046090996 -0.078241533 
    1356   -1152449.3            0   -1152449.3 -3.6278923e-06 3.559502e-06 9.0927012e-06 
Loop time of 2.42708 on 104 procs for 208 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.27559843  -1152449.27912378  -1152449.27912378
  Force two-norm initial, final = 0.28067489 5.7862600e-05
  Force max component initial, final = 0.15123922 9.0927012e-06
  Final line search alpha, max atom move = 1.0000000 9.0927012e-06
  Iterations, force evaluations = 208 416

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64963    | 1.7471     | 2.261      |  35.1 | 71.98
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.045467   | 0.3929     | 1.1784     |  52.6 | 16.19
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6331e-05 | 0.0034276  | 0.0073242  |   2.8 |  0.14
Other   |            | 0.2837     |            |       | 11.69

Nlocal:        2776.45 ave        3947 max           0 min
Histogram: 8 4 4 0 4 12 8 2 26 36
Nghost:        3879.12 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115011 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06242877570324-${x_0}
variable           new_x         equal     1.06242877570324-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.87158190298946-${y_0}
variable           new_y         equal     3.87158190298946-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3275556764672-${z_0}
variable           new_z         equal     31.3275556764672-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10320753818153*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10320753818153*-0.10320753818153+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10320753818153*-0.10320753818153+-0.15310105227288*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10320753818153*-0.10320753818153+-0.15310105227288*-0.15310105227288+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10320753818153*-0.10320753818153+-0.15310105227288*-0.15310105227288+0.0066873535344989*${new_z})
variable           module        equal     sqrt(-0.10320753818153*-0.10320753818153+-0.15310105227288*-0.15310105227288+0.0066873535344989*0.0066873535344989)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10320753818153/${module}
variable           unitx         equal     -0.10320753818153/0.184760517540546
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.15310105227288/${module}
variable           unity         equal     -0.15310105227288/0.184760517540546
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0066873535344989/${module}
variable           unitz         equal     0.0066873535344989/0.184760517540546
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.62789233599519e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.62789233599519e-06*-3.62789233599519e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.62789233599519e-06*-3.62789233599519e-06+3.55950204172341e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.62789233599519e-06*-3.62789233599519e-06+3.55950204172341e-06*3.55950204172341e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.62789233599519e-06*-3.62789233599519e-06+3.55950204172341e-06*3.55950204172341e-06+9.092701216805e-06*${fz})
variable           f_module      equal     sqrt(-3.62789233599519e-06*-3.62789233599519e-06+3.55950204172341e-06*3.55950204172341e-06+9.092701216805e-06*9.092701216805e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.558601694536177*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.558601694536177*-0.558601694536177+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.558601694536177*-0.558601694536177+-0.82864593751358*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.558601694536177*-0.558601694536177+-0.82864593751358*-0.82864593751358+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.558601694536177*-0.558601694536177+-0.82864593751358*-0.82864593751358+0.0361947109886794*${unitz})
variable           dir_module    equal     sqrt(-0.558601694536177*-0.558601694536177+-0.82864593751358*-0.82864593751358+0.0361947109886794*0.0361947109886794)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.62789233599519e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.62789233599519e-06*-0.558601694536177+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.62789233599519e-06*-0.558601694536177+3.55950204172341e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.62789233599519e-06*-0.558601694536177+3.55950204172341e-06*-0.82864593751358+${fz}*${unitz}
variable           dot      equal     -3.62789233599519e-06*-0.558601694536177+3.55950204172341e-06*-0.82864593751358+9.092701216805e-06*${unitz}
variable           dot      equal     -3.62789233599519e-06*-0.558601694536177+3.55950204172341e-06*-0.82864593751358+9.092701216805e-06*0.0361947109886794
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.93912407315004e-07/${f_module}*${dir_module}
variable           cos      equal     -5.93912407315004e-07/1.04167592371473e-05*${dir_module}
variable           cos      equal     -5.93912407315004e-07/1.04167592371473e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0570150844225186)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62784234650282/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.2684961672841-90.0)
print              "The dot product: ${dot}"
The dot product: -5.93912407315004e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.2684961672841

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10320753818153^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10320753818153^2+-0.15310105227288^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10320753818153^2+-0.15310105227288^2+0.0066873535344989^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10320753818153/${norm}
variable           unit_x        equal     -0.10320753818153/0.184760517540546
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.15310105227288/${norm}
variable           unit_y        equal     -0.15310105227288/0.184760517540546
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0066873535344989/${norm}
variable           unit_z        equal     0.0066873535344989/0.184760517540546
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06242877570324+${delta}*${unit_x}
variable           x_new         equal     1.06242877570324+0.03*${unit_x}
variable           x_new         equal     1.06242877570324+0.03*-0.558601694536177
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.87158190298946+${delta}*${unit_y}
variable           y_new         equal     3.87158190298946+0.03*${unit_y}
variable           y_new         equal     3.87158190298946+0.03*-0.82864593751358
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3275556764672+${delta}*${unit_z}
variable           z_new         equal     31.3275556764672+0.03*${unit_z}
variable           z_new         equal     31.3275556764672+0.03*0.0361947109886794

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04567072486715  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04567072486715  y  3.84672252486405  z   ${z_new}
set                atom          288751    x  1.04567072486715  y  3.84672252486405  z   31.3286415177969
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10320753818153  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10320753818153  -0.15310105227288  ${new_z}
fix                hold    carbon   planeforce   -0.10320753818153  -0.15310105227288  0.0066873535344989
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1356   -1152449.3            0   -1152449.3  0.052196264 -0.038321334 -0.071775572 
    1561   -1152449.3            0   -1152449.3 -9.4059727e-07 7.6669191e-07 3.0362699e-06 
Loop time of 2.41525 on 104 procs for 205 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.25379303  -1152449.25720367  -1152449.25720367
  Force two-norm initial, final = 0.27273312 6.8891371e-05
  Force max component initial, final = 0.15965548 1.3922389e-05
  Final line search alpha, max atom move = 1.0000000 1.3922389e-05
  Iterations, force evaluations = 205 410

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62678    | 1.7275     | 2.2559     |  35.4 | 71.52
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.048837   | 0.39244    | 1.1593     |  51.7 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6857e-05 | 0.0033884  | 0.0072211  |   2.7 |  0.14
Other   |            | 0.292      |            |       | 12.09

Nlocal:        2776.45 ave        3943 max           0 min
Histogram: 8 4 4 0 4 12 8 2 26 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114896 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05073192241858-${x_0}
variable           new_x         equal     1.05073192241858-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.84295969469082-${y_0}
variable           new_y         equal     3.84295969469082-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.320605525799-${z_0}
variable           new_z         equal     31.320605525799-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11490439146619*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11490439146619*-0.11490439146619+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11490439146619*-0.11490439146619+-0.18172326057152*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11490439146619*-0.11490439146619+-0.18172326057152*-0.18172326057152+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11490439146619*-0.11490439146619+-0.18172326057152*-0.18172326057152+-0.000262797133700587*${new_z})
variable           module        equal     sqrt(-0.11490439146619*-0.11490439146619+-0.18172326057152*-0.18172326057152+-0.000262797133700587*-0.000262797133700587)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.11490439146619/${module}
variable           unitx         equal     -0.11490439146619/0.215003329446996
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.18172326057152/${module}
variable           unity         equal     -0.18172326057152/0.215003329446996
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.000262797133700587/${module}
variable           unitz         equal     -0.000262797133700587/0.215003329446996
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.40597265295982e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.40597265295982e-07*-9.40597265295982e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.40597265295982e-07*-9.40597265295982e-07+7.66691909827566e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.40597265295982e-07*-9.40597265295982e-07+7.66691909827566e-07*7.66691909827566e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-9.40597265295982e-07*-9.40597265295982e-07+7.66691909827566e-07*7.66691909827566e-07+3.03626986541739e-06*${fz})
variable           f_module      equal     sqrt(-9.40597265295982e-07*-9.40597265295982e-07+7.66691909827566e-07*7.66691909827566e-07+3.03626986541739e-06*3.03626986541739e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.534430753987542*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.534430753987542*-0.534430753987542+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.534430753987542*-0.534430753987542+-0.845211379000154*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.534430753987542*-0.534430753987542+-0.845211379000154*-0.845211379000154+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.534430753987542*-0.534430753987542+-0.845211379000154*-0.845211379000154+-0.00122229332158028*${unitz})
variable           dir_module    equal     sqrt(-0.534430753987542*-0.534430753987542+-0.845211379000154*-0.845211379000154+-0.00122229332158028*-0.00122229332158028)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.40597265295982e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.40597265295982e-07*-0.534430753987542+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.40597265295982e-07*-0.534430753987542+7.66691909827566e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -9.40597265295982e-07*-0.534430753987542+7.66691909827566e-07*-0.845211379000154+${fz}*${unitz}
variable           dot      equal     -9.40597265295982e-07*-0.534430753987542+7.66691909827566e-07*-0.845211379000154+3.03626986541739e-06*${unitz}
variable           dot      equal     -9.40597265295982e-07*-0.534430753987542+7.66691909827566e-07*-0.845211379000154+3.03626986541739e-06*-0.00122229332158028
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.49043833061882e-07/${f_module}*${dir_module}
variable           cos      equal     -1.49043833061882e-07/3.26978201042807e-06*${dir_module}
variable           cos      equal     -1.49043833061882e-07/3.26978201042807e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0455821925090258)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61639431870967/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.6125724909882-90.0)
print              "The dot product: ${dot}"
The dot product: -1.49043833061882e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.6125724909882

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11490439146619^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11490439146619^2+-0.18172326057152^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11490439146619^2+-0.18172326057152^2+-0.000262797133700587^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.11490439146619/${norm}
variable           unit_x        equal     -0.11490439146619/0.215003329446996
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.18172326057152/${norm}
variable           unit_y        equal     -0.18172326057152/0.215003329446996
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.000262797133700587/${norm}
variable           unit_z        equal     -0.000262797133700587/0.215003329446996
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05073192241858+${delta}*${unit_x}
variable           x_new         equal     1.05073192241858+0.03*${unit_x}
variable           x_new         equal     1.05073192241858+0.03*-0.534430753987542
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.84295969469082+${delta}*${unit_y}
variable           y_new         equal     3.84295969469082+0.03*${unit_y}
variable           y_new         equal     3.84295969469082+0.03*-0.845211379000154
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.320605525799+${delta}*${unit_z}
variable           z_new         equal     31.320605525799+0.03*${unit_z}
variable           z_new         equal     31.320605525799+0.03*-0.00122229332158028

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03469899979895  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03469899979895  y  3.81760335332082  z   ${z_new}
set                atom          288751    x  1.03469899979895  y  3.81760335332082  z   31.3205688569994
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11490439146619  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11490439146619  -0.18172326057152  ${new_z}
fix                hold    carbon   planeforce   -0.11490439146619  -0.18172326057152  -0.000262797133700587
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1561   -1152449.2            0   -1152449.2  0.051202578 -0.032283102 -0.063967577 
    1756   -1152449.2            0   -1152449.2 -3.8381165e-06 2.4048528e-06 1.5216083e-05 
Loop time of 2.26018 on 104 procs for 195 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.22870006  -1152449.23201994  -1152449.23201994
  Force two-norm initial, final = 0.26640829 9.3070689e-05
  Force max component initial, final = 0.16721031 1.5216083e-05
  Final line search alpha, max atom move = 1.0000000 1.5216083e-05
  Iterations, force evaluations = 195 390

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59723    | 1.6348     | 2.1269     |  34.3 | 72.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.045028   | 0.36682    | 1.1068     |  51.2 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3864e-05 | 0.0032138  | 0.0068921  |   2.7 |  0.14
Other   |            | 0.2554     |            |       | 11.30

Nlocal:        2776.45 ave        3934 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114591 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.04010280915829-${x_0}
variable           new_x         equal     1.04010280915829-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.81419705268917-${y_0}
variable           new_y         equal     3.81419705268917-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3132728536974-${z_0}
variable           new_z         equal     31.3132728536974-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12553350472648*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12553350472648*-0.12553350472648+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12553350472648*-0.12553350472648+-0.21048590257317*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12553350472648*-0.12553350472648+-0.21048590257317*-0.21048590257317+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12553350472648*-0.12553350472648+-0.21048590257317*-0.21048590257317+-0.00759546923530152*${new_z})
variable           module        equal     sqrt(-0.12553350472648*-0.12553350472648+-0.21048590257317*-0.21048590257317+-0.00759546923530152*-0.00759546923530152)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.12553350472648/${module}
variable           unitx         equal     -0.12553350472648/0.245195161338595
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.21048590257317/${module}
variable           unity         equal     -0.21048590257317/0.245195161338595
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00759546923530152/${module}
variable           unitz         equal     -0.00759546923530152/0.245195161338595
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.8381164575421e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.8381164575421e-06*-3.8381164575421e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.8381164575421e-06*-3.8381164575421e-06+2.40485280443158e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.8381164575421e-06*-3.8381164575421e-06+2.40485280443158e-06*2.40485280443158e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.8381164575421e-06*-3.8381164575421e-06+2.40485280443158e-06*2.40485280443158e-06+1.52160834334953e-05*${fz})
variable           f_module      equal     sqrt(-3.8381164575421e-06*-3.8381164575421e-06+2.40485280443158e-06*2.40485280443158e-06+1.52160834334953e-05*1.52160834334953e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.511973825426058*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.511973825426058*-0.511973825426058+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.511973825426058*-0.511973825426058+-0.858442317638176*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.511973825426058*-0.511973825426058+-0.858442317638176*-0.858442317638176+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.511973825426058*-0.511973825426058+-0.858442317638176*-0.858442317638176+-0.0309772394929637*${unitz})
variable           dir_module    equal     sqrt(-0.511973825426058*-0.511973825426058+-0.858442317638176*-0.858442317638176+-0.0309772394929637*-0.0309772394929637)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.8381164575421e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.8381164575421e-06*-0.511973825426058+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.8381164575421e-06*-0.511973825426058+2.40485280443158e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.8381164575421e-06*-0.511973825426058+2.40485280443158e-06*-0.858442317638176+${fz}*${unitz}
variable           dot      equal     -3.8381164575421e-06*-0.511973825426058+2.40485280443158e-06*-0.858442317638176+1.52160834334953e-05*${unitz}
variable           dot      equal     -3.8381164575421e-06*-0.511973825426058+2.40485280443158e-06*-0.858442317638176+1.52160834334953e-05*-0.0309772394929637
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.70764510480675e-07/${f_module}*${dir_module}
variable           cos      equal     -5.70764510480675e-07/1.58758826528709e-05*${dir_module}
variable           cos      equal     -5.70764510480675e-07/1.58758826528709e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0359516710321275)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60675574705995/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.0603230149248-90.0)
print              "The dot product: ${dot}"
The dot product: -5.70764510480675e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.0603230149248

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12553350472648^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12553350472648^2+-0.21048590257317^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12553350472648^2+-0.21048590257317^2+-0.00759546923530152^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.12553350472648/${norm}
variable           unit_x        equal     -0.12553350472648/0.245195161338595
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.21048590257317/${norm}
variable           unit_y        equal     -0.21048590257317/0.245195161338595
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00759546923530152/${norm}
variable           unit_z        equal     -0.00759546923530152/0.245195161338595
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.04010280915829+${delta}*${unit_x}
variable           x_new         equal     1.04010280915829+0.03*${unit_x}
variable           x_new         equal     1.04010280915829+0.03*-0.511973825426058
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.81419705268917+${delta}*${unit_y}
variable           y_new         equal     3.81419705268917+0.03*${unit_y}
variable           y_new         equal     3.81419705268917+0.03*-0.858442317638176
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3132728536974+${delta}*${unit_z}
variable           z_new         equal     31.3132728536974+0.03*${unit_z}
variable           z_new         equal     31.3132728536974+0.03*-0.0309772394929637

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02474359439551  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02474359439551  y  3.78844378316002  z   ${z_new}
set                atom          288751    x  1.02474359439551  y  3.78844378316002  z   31.3123435365126
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12553350472648  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12553350472648  -0.21048590257317  ${new_z}
fix                hold    carbon   planeforce   -0.12553350472648  -0.21048590257317  -0.00759546923530152
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1756   -1152449.2            0   -1152449.2  0.053481901  -0.02971884 -0.060348298 
    1954   -1152449.2            0   -1152449.2 1.1019982e-05 -6.1543777e-06 -1.1581539e-05 
Loop time of 2.30056 on 104 procs for 198 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.20031515  -1152449.20360294  -1152449.20360294
  Force two-norm initial, final = 0.26343518 8.8357186e-05
  Force max component initial, final = 0.17418827 1.1581539e-05
  Final line search alpha, max atom move = 1.0000000 1.1581539e-05
  Iterations, force evaluations = 198 396

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60778    | 1.6669     | 2.1714     |  34.7 | 72.46
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042967   | 0.3723     | 1.1179     |  51.6 | 16.18
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5097e-05 | 0.0032614  | 0.0070067  |   2.7 |  0.14
Other   |            | 0.2581     |            |       | 11.22

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114487 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.03124120945842-${x_0}
variable           new_x         equal     1.03124120945842-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.78485803800588-${y_0}
variable           new_y         equal     3.78485803800588-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3043230200518-${z_0}
variable           new_z         equal     31.3043230200518-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13439510442635*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13439510442635*-0.13439510442635+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13439510442635*-0.13439510442635+-0.23982491725646*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13439510442635*-0.13439510442635+-0.23982491725646*-0.23982491725646+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13439510442635*-0.13439510442635+-0.23982491725646*-0.23982491725646+-0.0165453028808997*${new_z})
variable           module        equal     sqrt(-0.13439510442635*-0.13439510442635+-0.23982491725646*-0.23982491725646+-0.0165453028808997*-0.0165453028808997)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.13439510442635/${module}
variable           unitx         equal     -0.13439510442635/0.275412022392375
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.23982491725646/${module}
variable           unity         equal     -0.23982491725646/0.275412022392375
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0165453028808997/${module}
variable           unitz         equal     -0.0165453028808997/0.275412022392375
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.10199821368688e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.10199821368688e-05*1.10199821368688e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.10199821368688e-05*1.10199821368688e-05+-6.1543777466379e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.10199821368688e-05*1.10199821368688e-05+-6.1543777466379e-06*-6.1543777466379e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.10199821368688e-05*1.10199821368688e-05+-6.1543777466379e-06*-6.1543777466379e-06+-1.15815392234823e-05*${fz})
variable           f_module      equal     sqrt(1.10199821368688e-05*1.10199821368688e-05+-6.1543777466379e-06*-6.1543777466379e-06+-1.15815392234823e-05*-1.15815392234823e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.487978350614192*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.487978350614192*-0.487978350614192+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.487978350614192*-0.487978350614192+-0.870785941634695*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.487978350614192*-0.487978350614192+-0.870785941634695*-0.870785941634695+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.487978350614192*-0.487978350614192+-0.870785941634695*-0.870785941634695+-0.0600747299888306*${unitz})
variable           dir_module    equal     sqrt(-0.487978350614192*-0.487978350614192+-0.870785941634695*-0.870785941634695+-0.0600747299888306*-0.0600747299888306)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.10199821368688e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.10199821368688e-05*-0.487978350614192+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.10199821368688e-05*-0.487978350614192+-6.1543777466379e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.10199821368688e-05*-0.487978350614192+-6.1543777466379e-06*-0.870785941634695+${fz}*${unitz}
variable           dot      equal     1.10199821368688e-05*-0.487978350614192+-6.1543777466379e-06*-0.870785941634695+-1.15815392234823e-05*${unitz}
variable           dot      equal     1.10199821368688e-05*-0.487978350614192+-6.1543777466379e-06*-0.870785941634695+-1.15815392234823e-05*-0.0600747299888306
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.7739075604035e-07/${f_module}*${dir_module}
variable           cos      equal     6.7739075604035e-07/1.71303363227427e-05*${dir_module}
variable           cos      equal     6.7739075604035e-07/1.71303363227427e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0395433424819002)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53124267155923/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.7337424906808-90.0)
print              "The dot product: ${dot}"
The dot product: 6.7739075604035e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.7337424906808

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13439510442635^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13439510442635^2+-0.23982491725646^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13439510442635^2+-0.23982491725646^2+-0.0165453028808997^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.13439510442635/${norm}
variable           unit_x        equal     -0.13439510442635/0.275412022392375
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.23982491725646/${norm}
variable           unit_y        equal     -0.23982491725646/0.275412022392375
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0165453028808997/${norm}
variable           unit_z        equal     -0.0165453028808997/0.275412022392375
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.03124120945842+${delta}*${unit_x}
variable           x_new         equal     1.03124120945842+0.03*${unit_x}
variable           x_new         equal     1.03124120945842+0.03*-0.487978350614192
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.78485803800588+${delta}*${unit_y}
variable           y_new         equal     3.78485803800588+0.03*${unit_y}
variable           y_new         equal     3.78485803800588+0.03*-0.870785941634695
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3043230200518+${delta}*${unit_z}
variable           z_new         equal     31.3043230200518+0.03*${unit_z}
variable           z_new         equal     31.3043230200518+0.03*-0.0600747299888306

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01660185893999  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01660185893999  y  3.75873445975684  z   ${z_new}
set                atom          288751    x  1.01660185893999  y  3.75873445975684  z   31.3025207781521
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13439510442635  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13439510442635  -0.23982491725646  ${new_z}
fix                hold    carbon   planeforce   -0.13439510442635  -0.23982491725646  -0.0165453028808997
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1954   -1152449.2            0   -1152449.2  0.061152366 -0.029718458 -0.065961432 
    2000   -1152449.2            0   -1152449.2 0.00043151545 -0.00021147902 -0.00043973968 
    2215   -1152449.2            0   -1152449.2 -8.819797e-07 4.2914958e-07 9.4365099e-07 
Loop time of 3.04624 on 104 procs for 261 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.16889738  -1152449.17238234  -1152449.17238234
  Force two-norm initial, final = 0.26578007 5.4527183e-06
  Force max component initial, final = 0.1815215 9.4365099e-07
  Final line search alpha, max atom move = 1.0000000 9.4365099e-07
  Iterations, force evaluations = 261 522

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.79723    | 2.193      | 2.8511     |  39.9 | 71.99
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.051426   | 0.49168    | 1.4952     |  59.6 | 16.14
Output  | 0.00010054 | 0.00010947 | 0.00021668 |   0.0 |  0.00
Modify  | 3.2933e-05 | 0.0043025  | 0.0092195  |   3.1 |  0.14
Other   |            | 0.3572     |            |       | 11.72

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114488 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.02574783399095-${x_0}
variable           new_x         equal     1.02574783399095-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.75442752336419-${y_0}
variable           new_y         equal     3.75442752336419-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2906585832168-${z_0}
variable           new_z         equal     31.2906585832168-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13988847989382*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13988847989382*-0.13988847989382+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13988847989382*-0.13988847989382+-0.27025543189815*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13988847989382*-0.13988847989382+-0.27025543189815*-0.27025543189815+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13988847989382*-0.13988847989382+-0.27025543189815*-0.27025543189815+-0.0302097397159002*${new_z})
variable           module        equal     sqrt(-0.13988847989382*-0.13988847989382+-0.27025543189815*-0.27025543189815+-0.0302097397159002*-0.0302097397159002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.13988847989382/${module}
variable           unitx         equal     -0.13988847989382/0.305809440094909
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.27025543189815/${module}
variable           unity         equal     -0.27025543189815/0.305809440094909
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0302097397159002/${module}
variable           unitz         equal     -0.0302097397159002/0.305809440094909
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81979702958773e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81979702958773e-07*-8.81979702958773e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81979702958773e-07*-8.81979702958773e-07+4.29149581222885e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81979702958773e-07*-8.81979702958773e-07+4.29149581222885e-07*4.29149581222885e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81979702958773e-07*-8.81979702958773e-07+4.29149581222885e-07*4.29149581222885e-07+9.43650993697709e-07*${fz})
variable           f_module      equal     sqrt(-8.81979702958773e-07*-8.81979702958773e-07+4.29149581222885e-07*4.29149581222885e-07+9.43650993697709e-07*9.43650993697709e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.457436761436812*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.457436761436812*-0.457436761436812+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.457436761436812*-0.457436761436812+-0.883738029193197*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.457436761436812*-0.457436761436812+-0.883738029193197*-0.883738029193197+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.457436761436812*-0.457436761436812+-0.883738029193197*-0.883738029193197+-0.0987861581595535*${unitz})
variable           dir_module    equal     sqrt(-0.457436761436812*-0.457436761436812+-0.883738029193197*-0.883738029193197+-0.0987861581595535*-0.0987861581595535)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81979702958773e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81979702958773e-07*-0.457436761436812+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81979702958773e-07*-0.457436761436812+4.29149581222885e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81979702958773e-07*-0.457436761436812+4.29149581222885e-07*-0.883738029193197+${fz}*${unitz}
variable           dot      equal     -8.81979702958773e-07*-0.457436761436812+4.29149581222885e-07*-0.883738029193197+9.43650993697709e-07*${unitz}
variable           dot      equal     -8.81979702958773e-07*-0.457436761436812+4.29149581222885e-07*-0.883738029193197+9.43650993697709e-07*-0.0987861581595535
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.90255224753774e-08/${f_module}*${dir_module}
variable           cos      equal     -6.90255224753774e-08/1.36107852727229e-06*${dir_module}
variable           cos      equal     -6.90255224753774e-08/1.36107852727229e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0507138428035523)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62153193323281/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.9069361199292-90.0)
print              "The dot product: ${dot}"
The dot product: -6.90255224753774e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.9069361199292

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13988847989382^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13988847989382^2+-0.27025543189815^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13988847989382^2+-0.27025543189815^2+-0.0302097397159002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.13988847989382/${norm}
variable           unit_x        equal     -0.13988847989382/0.305809440094909
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.27025543189815/${norm}
variable           unit_y        equal     -0.27025543189815/0.305809440094909
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0302097397159002/${norm}
variable           unit_z        equal     -0.0302097397159002/0.305809440094909
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.02574783399095+${delta}*${unit_x}
variable           x_new         equal     1.02574783399095+0.03*${unit_x}
variable           x_new         equal     1.02574783399095+0.03*-0.457436761436812
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.75442752336419+${delta}*${unit_y}
variable           y_new         equal     3.75442752336419+0.03*${unit_y}
variable           y_new         equal     3.75442752336419+0.03*-0.883738029193197
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2906585832168+${delta}*${unit_z}
variable           z_new         equal     31.2906585832168+0.03*${unit_z}
variable           z_new         equal     31.2906585832168+0.03*-0.0987861581595535

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01202473114785  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01202473114785  y  3.72791538248839  z   ${z_new}
set                atom          288751    x  1.01202473114785  y  3.72791538248839  z   31.287694998472
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13988847989382  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13988847989382  -0.27025543189815  ${new_z}
fix                hold    carbon   planeforce   -0.13988847989382  -0.27025543189815  -0.0302097397159002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2215   -1152449.1            0   -1152449.1  0.069040365 -0.027631065 -0.072509938 
    2410   -1152449.1            0   -1152449.1 -2.3613098e-05 8.8070933e-06 3.0554237e-05 
Loop time of 2.25906 on 104 procs for 195 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.13485637  -1152449.13852468  -1152449.13852468
  Force two-norm initial, final = 0.26942274 0.00012797154
  Force max component initial, final = 0.18993526 3.0554237e-05
  Final line search alpha, max atom move = 1.0000000 3.0554237e-05
  Iterations, force evaluations = 195 390

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59354    | 1.6406     | 2.1345     |  34.6 | 72.62
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035024   | 0.37117    | 1.1162     |  51.0 | 16.43
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4988e-05 | 0.0032251  | 0.006969   |   2.7 |  0.14
Other   |            | 0.2441     |            |       | 10.81

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114490 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.02423294104411-${x_0}
variable           new_x         equal     1.02423294104411-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.72307501139368-${y_0}
variable           new_y         equal     3.72307501139368-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2744657767821-${z_0}
variable           new_z         equal     31.2744657767821-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14140337284066*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14140337284066*-0.14140337284066+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14140337284066*-0.14140337284066+-0.30160794386866*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14140337284066*-0.14140337284066+-0.30160794386866*-0.30160794386866+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14140337284066*-0.14140337284066+-0.30160794386866*-0.30160794386866+-0.046402546150599*${new_z})
variable           module        equal     sqrt(-0.14140337284066*-0.14140337284066+-0.30160794386866*-0.30160794386866+-0.046402546150599*-0.046402546150599)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.14140337284066/${module}
variable           unitx         equal     -0.14140337284066/0.336326421716543
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.30160794386866/${module}
variable           unity         equal     -0.30160794386866/0.336326421716543
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.046402546150599/${module}
variable           unitz         equal     -0.046402546150599/0.336326421716543
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.36130978036815e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.36130978036815e-05*-2.36130978036815e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.36130978036815e-05*-2.36130978036815e-05+8.807093294939e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.36130978036815e-05*-2.36130978036815e-05+8.807093294939e-06*8.807093294939e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.36130978036815e-05*-2.36130978036815e-05+8.807093294939e-06*8.807093294939e-06+3.05542372673823e-05*${fz})
variable           f_module      equal     sqrt(-2.36130978036815e-05*-2.36130978036815e-05+8.807093294939e-06*8.807093294939e-06+3.05542372673823e-05*3.05542372673823e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.420434921880254*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.420434921880254*-0.420434921880254+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.420434921880254*-0.420434921880254+-0.896771482684332*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.420434921880254*-0.420434921880254+-0.896771482684332*-0.896771482684332+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.420434921880254*-0.420434921880254+-0.896771482684332*-0.896771482684332+-0.137968780192081*${unitz})
variable           dir_module    equal     sqrt(-0.420434921880254*-0.420434921880254+-0.896771482684332*-0.896771482684332+-0.137968780192081*-0.137968780192081)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.36130978036815e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.36130978036815e-05*-0.420434921880254+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.36130978036815e-05*-0.420434921880254+8.807093294939e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.36130978036815e-05*-0.420434921880254+8.807093294939e-06*-0.896771482684332+${fz}*${unitz}
variable           dot      equal     -2.36130978036815e-05*-0.420434921880254+8.807093294939e-06*-0.896771482684332+3.05542372673823e-05*${unitz}
variable           dot      equal     -2.36130978036815e-05*-0.420434921880254+8.807093294939e-06*-0.896771482684332+3.05542372673823e-05*-0.137968780192081
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.18571002728021e-06/${f_module}*${dir_module}
variable           cos      equal     -2.18571002728021e-06/3.96068768673255e-05*${dir_module}
variable           cos      equal     -2.18571002728021e-06/3.96068768673255e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0551851143073428)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62600948965327/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.1634812053533-90.0)
print              "The dot product: ${dot}"
The dot product: -2.18571002728021e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.1634812053533

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14140337284066^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14140337284066^2+-0.30160794386866^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14140337284066^2+-0.30160794386866^2+-0.046402546150599^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.14140337284066/${norm}
variable           unit_x        equal     -0.14140337284066/0.336326421716543
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.30160794386866/${norm}
variable           unit_y        equal     -0.30160794386866/0.336326421716543
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.046402546150599/${norm}
variable           unit_z        equal     -0.046402546150599/0.336326421716543
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.02423294104411+${delta}*${unit_x}
variable           x_new         equal     1.02423294104411+0.03*${unit_x}
variable           x_new         equal     1.02423294104411+0.03*-0.420434921880254
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.72307501139368+${delta}*${unit_y}
variable           y_new         equal     3.72307501139368+0.03*${unit_y}
variable           y_new         equal     3.72307501139368+0.03*-0.896771482684332
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2744657767821+${delta}*${unit_z}
variable           z_new         equal     31.2744657767821+0.03*${unit_z}
variable           z_new         equal     31.2744657767821+0.03*-0.137968780192081

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0116198933877  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0116198933877  y  3.69617186691315  z   ${z_new}
set                atom          288751    x  1.0116198933877  y  3.69617186691315  z   31.2703267133763
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14140337284066  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14140337284066  -0.30160794386866  ${new_z}
fix                hold    carbon   planeforce   -0.14140337284066  -0.30160794386866  -0.046402546150599
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2410   -1152449.1            0   -1152449.1  0.078838397 -0.026238348 -0.069701372 
    2608   -1152449.1            0   -1152449.1 2.5367724e-05 -7.5121817e-06 -2.8475767e-05 
Loop time of 2.31378 on 104 procs for 198 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.09808358  -1152449.10201937  -1152449.10201937
  Force two-norm initial, final = 0.27272628 0.00012990768
  Force max component initial, final = 0.19874598 2.8475767e-05
  Final line search alpha, max atom move = 1.0000000 2.8475767e-05
  Iterations, force evaluations = 198 396

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60566    | 1.6601     | 2.1565     |  34.7 | 71.75
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.049381   | 0.37556    | 1.1224     |  51.0 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6544e-05 | 0.0032726  | 0.0069811  |   2.7 |  0.14
Other   |            | 0.2749     |            |       | 11.88

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.07 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114451 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.02982824675421-${x_0}
variable           new_x         equal     1.02982824675421-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.68945194474479-${y_0}
variable           new_y         equal     3.68945194474479-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2585182951501-${z_0}
variable           new_z         equal     31.2585182951501-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13580806713056*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13580806713056*-0.13580806713056+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13580806713056*-0.13580806713056+-0.33523101051755*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13580806713056*-0.13580806713056+-0.33523101051755*-0.33523101051755+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13580806713056*-0.13580806713056+-0.33523101051755*-0.33523101051755+-0.0623500277825997*${new_z})
variable           module        equal     sqrt(-0.13580806713056*-0.13580806713056+-0.33523101051755*-0.33523101051755+-0.0623500277825997*-0.0623500277825997)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.13580806713056/${module}
variable           unitx         equal     -0.13580806713056/0.367030226922589
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.33523101051755/${module}
variable           unity         equal     -0.33523101051755/0.367030226922589
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0623500277825997/${module}
variable           unitz         equal     -0.0623500277825997/0.367030226922589
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.53677243077066e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.53677243077066e-05*2.53677243077066e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.53677243077066e-05*2.53677243077066e-05+-7.51218172095253e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.53677243077066e-05*2.53677243077066e-05+-7.51218172095253e-06*-7.51218172095253e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.53677243077066e-05*2.53677243077066e-05+-7.51218172095253e-06*-7.51218172095253e-06+-2.84757670674868e-05*${fz})
variable           f_module      equal     sqrt(2.53677243077066e-05*2.53677243077066e-05+-7.51218172095253e-06*-7.51218172095253e-06+-2.84757670674868e-05*-2.84757670674868e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.370018753684839*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.370018753684839*-0.370018753684839+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.370018753684839*-0.370018753684839+-0.913360769570224*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.370018753684839*-0.370018753684839+-0.913360769570224*-0.913360769570224+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.370018753684839*-0.370018753684839+-0.913360769570224*-0.913360769570224+-0.169877092427458*${unitz})
variable           dir_module    equal     sqrt(-0.370018753684839*-0.370018753684839+-0.913360769570224*-0.913360769570224+-0.169877092427458*-0.169877092427458)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.53677243077066e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.53677243077066e-05*-0.370018753684839+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.53677243077066e-05*-0.370018753684839+-7.51218172095253e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.53677243077066e-05*-0.370018753684839+-7.51218172095253e-06*-0.913360769570224+${fz}*${unitz}
variable           dot      equal     2.53677243077066e-05*-0.370018753684839+-7.51218172095253e-06*-0.913360769570224+-2.84757670674868e-05*${unitz}
variable           dot      equal     2.53677243077066e-05*-0.370018753684839+-7.51218172095253e-06*-0.913360769570224+-2.84757670674868e-05*-0.169877092427458
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.3121788597086e-06/${f_module}*${dir_module}
variable           cos      equal     2.3121788597086e-06/3.886931464333e-05*${dir_module}
variable           cos      equal     2.3121788597086e-06/3.886931464333e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.05948596935463)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.51127521880904/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.589691720468-90.0)
print              "The dot product: ${dot}"
The dot product: 2.3121788597086e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.589691720468

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13580806713056^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13580806713056^2+-0.33523101051755^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13580806713056^2+-0.33523101051755^2+-0.0623500277825997^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.13580806713056/${norm}
variable           unit_x        equal     -0.13580806713056/0.367030226922589
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.33523101051755/${norm}
variable           unit_y        equal     -0.33523101051755/0.367030226922589
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0623500277825997/${norm}
variable           unit_z        equal     -0.0623500277825997/0.367030226922589
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.02982824675421+${delta}*${unit_x}
variable           x_new         equal     1.02982824675421+0.03*${unit_x}
variable           x_new         equal     1.02982824675421+0.03*-0.370018753684839
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.68945194474479+${delta}*${unit_y}
variable           y_new         equal     3.68945194474479+0.03*${unit_y}
variable           y_new         equal     3.68945194474479+0.03*-0.913360769570224
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2585182951501+${delta}*${unit_z}
variable           z_new         equal     31.2585182951501+0.03*${unit_z}
variable           z_new         equal     31.2585182951501+0.03*-0.169877092427458

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01872768414366  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01872768414366  y  3.66205112165768  z   ${z_new}
set                atom          288751    x  1.01872768414366  y  3.66205112165768  z   31.2534219823773
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13580806713056  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13580806713056  -0.33523101051755  ${new_z}
fix                hold    carbon   planeforce   -0.13580806713056  -0.33523101051755  -0.0623500277825997
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2608   -1152449.1            0   -1152449.1  0.097393678 -0.028891848 -0.056798749 
    2791   -1152449.1            0   -1152449.1 -2.6915611e-05 6.1062578e-06  2.57955e-05 
Loop time of 2.12111 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.05877363  -1152449.06307385  -1152449.06307385
  Force two-norm initial, final = 0.27886361 0.0001774747
  Force max component initial, final = 0.20960008 2.6915611e-05
  Final line search alpha, max atom move = 1.0000000 2.6915611e-05
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55987    | 1.5373     | 2.0025     |  33.3 | 72.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037633   | 0.34593    | 1.0311     |  49.1 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3204e-05 | 0.0030144  | 0.0064604  |   2.6 |  0.14
Other   |            | 0.2349     |            |       | 11.07

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114451 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.04200954647458-${x_0}
variable           new_x         equal     1.04200954647458-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.65415081978719-${y_0}
variable           new_y         equal     3.65415081978719-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.245187205887-${z_0}
variable           new_z         equal     31.245187205887-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12362676741019*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12362676741019*-0.12362676741019+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12362676741019*-0.12362676741019+-0.37053213547515*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12362676741019*-0.12362676741019+-0.37053213547515*-0.37053213547515+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12362676741019*-0.12362676741019+-0.37053213547515*-0.37053213547515+-0.0756811170457006*${new_z})
variable           module        equal     sqrt(-0.12362676741019*-0.12362676741019+-0.37053213547515*-0.37053213547515+-0.0756811170457006*-0.0756811170457006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.12362676741019/${module}
variable           unitx         equal     -0.12362676741019/0.397875951167387
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.37053213547515/${module}
variable           unity         equal     -0.37053213547515/0.397875951167387
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0756811170457006/${module}
variable           unitz         equal     -0.0756811170457006/0.397875951167387
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69156112050876e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69156112050876e-05*-2.69156112050876e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69156112050876e-05*-2.69156112050876e-05+6.10625777707293e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69156112050876e-05*-2.69156112050876e-05+6.10625777707293e-06*6.10625777707293e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69156112050876e-05*-2.69156112050876e-05+6.10625777707293e-06*6.10625777707293e-06+2.57955004265716e-05*${fz})
variable           f_module      equal     sqrt(-2.69156112050876e-05*-2.69156112050876e-05+6.10625777707293e-06*6.10625777707293e-06+2.57955004265716e-05*2.57955004265716e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.3107168630008*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.3107168630008*-0.3107168630008+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.3107168630008*-0.3107168630008+-0.931275525419395*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.3107168630008*-0.3107168630008+-0.931275525419395*-0.931275525419395+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.3107168630008*-0.3107168630008+-0.931275525419395*-0.931275525419395+-0.190212846048243*${unitz})
variable           dir_module    equal     sqrt(-0.3107168630008*-0.3107168630008+-0.931275525419395*-0.931275525419395+-0.190212846048243*-0.190212846048243)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69156112050876e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69156112050876e-05*-0.3107168630008+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69156112050876e-05*-0.3107168630008+6.10625777707293e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69156112050876e-05*-0.3107168630008+6.10625777707293e-06*-0.931275525419395+${fz}*${unitz}
variable           dot      equal     -2.69156112050876e-05*-0.3107168630008+6.10625777707293e-06*-0.931275525419395+2.57955004265716e-05*${unitz}
variable           dot      equal     -2.69156112050876e-05*-0.3107168630008+6.10625777707293e-06*-0.931275525419395+2.57955004265716e-05*-0.190212846048243
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.23010969167271e-06/${f_module}*${dir_module}
variable           cos      equal     -2.23010969167271e-06/3.77775641464713e-05*${dir_module}
variable           cos      equal     -2.23010969167271e-06/3.77775641464713e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.059032649194271)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62986331655952/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.3842892220554-90.0)
print              "The dot product: ${dot}"
The dot product: -2.23010969167271e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.3842892220554

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12362676741019^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12362676741019^2+-0.37053213547515^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12362676741019^2+-0.37053213547515^2+-0.0756811170457006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.12362676741019/${norm}
variable           unit_x        equal     -0.12362676741019/0.397875951167387
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.37053213547515/${norm}
variable           unit_y        equal     -0.37053213547515/0.397875951167387
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0756811170457006/${norm}
variable           unit_z        equal     -0.0756811170457006/0.397875951167387
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.04200954647458+${delta}*${unit_x}
variable           x_new         equal     1.04200954647458+0.03*${unit_x}
variable           x_new         equal     1.04200954647458+0.03*-0.3107168630008
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.65415081978719+${delta}*${unit_y}
variable           y_new         equal     3.65415081978719+0.03*${unit_y}
variable           y_new         equal     3.65415081978719+0.03*-0.931275525419395
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.245187205887+${delta}*${unit_z}
variable           z_new         equal     31.245187205887+0.03*${unit_z}
variable           z_new         equal     31.245187205887+0.03*-0.190212846048243

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03268804058456  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03268804058456  y  3.62621255402461  z   ${z_new}
set                atom          288751    x  1.03268804058456  y  3.62621255402461  z   31.2394808205056
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12362676741019  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12362676741019  -0.37053213547515  ${new_z}
fix                hold    carbon   planeforce   -0.12362676741019  -0.37053213547515  -0.0756811170457006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2791     -1152449            0     -1152449   0.10915444 -0.028954857 -0.036544195 
    3000     -1152449            0     -1152449 -7.1577935e-06 1.2884903e-07 1.1061572e-05 
    3013     -1152449            0     -1152449 1.0605466e-05 -1.0073572e-06 -1.2392276e-05 
Loop time of 2.58003 on 104 procs for 222 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.01708563  -1152449.02155919  -1152449.02155919
  Force two-norm initial, final = 0.28423423 4.6389004e-05
  Force max component initial, final = 0.22166794 1.2392276e-05
  Final line search alpha, max atom move = 1.0000000 1.2392276e-05
  Iterations, force evaluations = 222 444

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6804     | 1.8595     | 2.4083     |  36.6 | 72.07
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.047709   | 0.41636    | 1.2564     |  54.8 | 16.14
Output  | 0.00013418 | 0.00014083 | 0.00029889 |   0.0 |  0.01
Modify  | 2.8083e-05 | 0.0036569  | 0.0078128  |   2.9 |  0.14
Other   |            | 0.3003     |            |       | 11.64

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05826151223995-${x_0}
variable           new_x         equal     1.05826151223995-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.61814141976251-${y_0}
variable           new_y         equal     3.61814141976251-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2372219873244-${z_0}
variable           new_z         equal     31.2372219873244-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10737480164482*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10737480164482*-0.10737480164482+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10737480164482*-0.10737480164482+-0.40654153549983*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10737480164482*-0.10737480164482+-0.40654153549983*-0.40654153549983+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10737480164482*-0.10737480164482+-0.40654153549983*-0.40654153549983+-0.0836463356083001*${new_z})
variable           module        equal     sqrt(-0.10737480164482*-0.10737480164482+-0.40654153549983*-0.40654153549983+-0.0836463356083001*-0.0836463356083001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10737480164482/${module}
variable           unitx         equal     -0.10737480164482/0.428721445201334
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.40654153549983/${module}
variable           unity         equal     -0.40654153549983/0.428721445201334
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0836463356083001/${module}
variable           unitz         equal     -0.0836463356083001/0.428721445201334
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.06054664020814e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.06054664020814e-05*1.06054664020814e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.06054664020814e-05*1.06054664020814e-05+-1.00735721298877e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.06054664020814e-05*1.06054664020814e-05+-1.00735721298877e-06*-1.00735721298877e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.06054664020814e-05*1.06054664020814e-05+-1.00735721298877e-06*-1.00735721298877e-06+-1.23922762441938e-05*${fz})
variable           f_module      equal     sqrt(1.06054664020814e-05*1.06054664020814e-05+-1.00735721298877e-06*-1.00735721298877e-06+-1.23922762441938e-05*-1.23922762441938e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.250453535382153*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.250453535382153*-0.250453535382153+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.250453535382153*-0.250453535382153+-0.948264986625318*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.250453535382153*-0.250453535382153+-0.948264986625318*-0.948264986625318+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.250453535382153*-0.250453535382153+-0.948264986625318*-0.948264986625318+-0.195106488244409*${unitz})
variable           dir_module    equal     sqrt(-0.250453535382153*-0.250453535382153+-0.948264986625318*-0.948264986625318+-0.195106488244409*-0.195106488244409)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.06054664020814e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.06054664020814e-05*-0.250453535382153+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.06054664020814e-05*-0.250453535382153+-1.00735721298877e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.06054664020814e-05*-0.250453535382153+-1.00735721298877e-06*-0.948264986625318+${fz}*${unitz}
variable           dot      equal     1.06054664020814e-05*-0.250453535382153+-1.00735721298877e-06*-0.948264986625318+-1.23922762441938e-05*${unitz}
variable           dot      equal     1.06054664020814e-05*-0.250453535382153+-1.00735721298877e-06*-0.948264986625318+-1.23922762441938e-05*-0.195106488244409
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.16878518683051e-07/${f_module}*${dir_module}
variable           cos      equal     7.16878518683051e-07/1.63419459267447e-05*${dir_module}
variable           cos      equal     7.16878518683051e-07/1.63419459267447e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0438673902053384)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52691485503859/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.4857768695411-90.0)
print              "The dot product: ${dot}"
The dot product: 7.16878518683051e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.4857768695411

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10737480164482^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10737480164482^2+-0.40654153549983^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10737480164482^2+-0.40654153549983^2+-0.0836463356083001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10737480164482/${norm}
variable           unit_x        equal     -0.10737480164482/0.428721445201334
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.40654153549983/${norm}
variable           unit_y        equal     -0.40654153549983/0.428721445201334
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0836463356083001/${norm}
variable           unit_z        equal     -0.0836463356083001/0.428721445201334
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05826151223995+${delta}*${unit_x}
variable           x_new         equal     1.05826151223995+0.03*${unit_x}
variable           x_new         equal     1.05826151223995+0.03*-0.250453535382153
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.61814141976251+${delta}*${unit_y}
variable           y_new         equal     3.61814141976251+0.03*${unit_y}
variable           y_new         equal     3.61814141976251+0.03*-0.948264986625318
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2372219873244+${delta}*${unit_z}
variable           z_new         equal     31.2372219873244+0.03*${unit_z}
variable           z_new         equal     31.2372219873244+0.03*-0.195106488244409

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05074790617849  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05074790617849  y  3.58969347016375  z   ${z_new}
set                atom          288751    x  1.05074790617849  y  3.58969347016375  z   31.2313687926771
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10737480164482  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10737480164482  -0.40654153549983  ${new_z}
fix                hold    carbon   planeforce   -0.10737480164482  -0.40654153549983  -0.0836463356083001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3013     -1152449            0     -1152449   0.11053251 -0.026998814 -0.010667132 
    3224     -1152449            0     -1152449 -8.5818723e-06 2.2036343e-07 9.9453244e-06 
Loop time of 2.44552 on 104 procs for 211 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.97279298  -1152448.97732673  -1152448.97732673
  Force two-norm initial, final = 0.28853466 5.9524449e-05
  Force max component initial, final = 0.23413808 1.6050588e-05
  Final line search alpha, max atom move = 1.0000000 1.6050588e-05
  Iterations, force evaluations = 211 422

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64528    | 1.7726     | 2.3098     |  35.8 | 72.49
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043546   | 0.39777    | 1.1938     |  53.1 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6643e-05 | 0.0034781  | 0.0074256  |   2.8 |  0.14
Other   |            | 0.2716     |            |       | 11.11

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114438 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07606702782563-${x_0}
variable           new_x         equal     1.07606702782563-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.58207014911761-${y_0}
variable           new_y         equal     3.58207014911761-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2359184358418-${z_0}
variable           new_z         equal     31.2359184358418-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0895692860591402*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0895692860591402*-0.0895692860591402+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0895692860591402*-0.0895692860591402+-0.44261280614473*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0895692860591402*-0.0895692860591402+-0.44261280614473*-0.44261280614473+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0895692860591402*-0.0895692860591402+-0.44261280614473*-0.44261280614473+-0.0849498870909002*${new_z})
variable           module        equal     sqrt(-0.0895692860591402*-0.0895692860591402+-0.44261280614473*-0.44261280614473+-0.0849498870909002*-0.0849498870909002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0895692860591402/${module}
variable           unitx         equal     -0.0895692860591402/0.459505425958403
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.44261280614473/${module}
variable           unity         equal     -0.44261280614473/0.459505425958403
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0849498870909002/${module}
variable           unitz         equal     -0.0849498870909002/0.459505425958403
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.58187227562705e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.58187227562705e-06*-8.58187227562705e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.58187227562705e-06*-8.58187227562705e-06+2.20363429706077e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.58187227562705e-06*-8.58187227562705e-06+2.20363429706077e-07*2.20363429706077e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-8.58187227562705e-06*-8.58187227562705e-06+2.20363429706077e-07*2.20363429706077e-07+9.94532444487472e-06*${fz})
variable           f_module      equal     sqrt(-8.58187227562705e-06*-8.58187227562705e-06+2.20363429706077e-07*2.20363429706077e-07+9.94532444487472e-06*9.94532444487472e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.194925415455809*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.194925415455809*-0.194925415455809+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.194925415455809*-0.194925415455809+-0.963237387723029*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.194925415455809*-0.194925415455809+-0.963237387723029*-0.963237387723029+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.194925415455809*-0.194925415455809+-0.963237387723029*-0.963237387723029+-0.184872435213834*${unitz})
variable           dir_module    equal     sqrt(-0.194925415455809*-0.194925415455809+-0.963237387723029*-0.963237387723029+-0.184872435213834*-0.184872435213834)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.58187227562705e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.58187227562705e-06*-0.194925415455809+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.58187227562705e-06*-0.194925415455809+2.20363429706077e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -8.58187227562705e-06*-0.194925415455809+2.20363429706077e-07*-0.963237387723029+${fz}*${unitz}
variable           dot      equal     -8.58187227562705e-06*-0.194925415455809+2.20363429706077e-07*-0.963237387723029+9.94532444487472e-06*${unitz}
variable           dot      equal     -8.58187227562705e-06*-0.194925415455809+2.20363429706077e-07*-0.963237387723029+9.94532444487472e-06*-0.184872435213834
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.78053624780138e-07/${f_module}*${dir_module}
variable           cos      equal     -3.78053624780138e-07/1.31379819649043e-05*${dir_module}
variable           cos      equal     -3.78053624780138e-07/1.31379819649043e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0287756236680822)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59957592315465/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.6489494075039-90.0)
print              "The dot product: ${dot}"
The dot product: -3.78053624780138e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.6489494075039

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0895692860591402^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0895692860591402^2+-0.44261280614473^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0895692860591402^2+-0.44261280614473^2+-0.0849498870909002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0895692860591402/${norm}
variable           unit_x        equal     -0.0895692860591402/0.459505425958403
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.44261280614473/${norm}
variable           unit_y        equal     -0.44261280614473/0.459505425958403
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0849498870909002/${norm}
variable           unit_z        equal     -0.0849498870909002/0.459505425958403
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07606702782563+${delta}*${unit_x}
variable           x_new         equal     1.07606702782563+0.03*${unit_x}
variable           x_new         equal     1.07606702782563+0.03*-0.194925415455809
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.58207014911761+${delta}*${unit_y}
variable           y_new         equal     3.58207014911761+0.03*${unit_y}
variable           y_new         equal     3.58207014911761+0.03*-0.963237387723029
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2359184358418+${delta}*${unit_z}
variable           z_new         equal     31.2359184358418+0.03*${unit_z}
variable           z_new         equal     31.2359184358418+0.03*-0.184872435213834

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07021926536196  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07021926536196  y  3.55317302748592  z   ${z_new}
set                atom          288751    x  1.07021926536196  y  3.55317302748592  z   31.2303722627854
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0895692860591402  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0895692860591402  -0.44261280614473  ${new_z}
fix                hold    carbon   planeforce   -0.0895692860591402  -0.44261280614473  -0.0849498870909002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3224   -1152448.9            0   -1152448.9   0.10337767  -0.02341253  0.012986731 
    3353   -1152448.9            0   -1152448.9 -2.8467407e-05 7.894973e-07 2.5901903e-05 
Loop time of 1.48889 on 104 procs for 129 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.92565306  -1152448.93018009  -1152448.93018009
  Force two-norm initial, final = 0.29345183 0.00014088988
  Force max component initial, final = 0.24673612 3.0417208e-05
  Final line search alpha, max atom move = 1.0000000 3.0417208e-05
  Iterations, force evaluations = 129 258

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.395      | 1.08       | 1.3993     |  27.9 | 72.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025517   | 0.2419     | 0.73132    |  41.5 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6531e-05 | 0.0021291  | 0.0045222  |   2.2 |  0.14
Other   |            | 0.1649     |            |       | 11.08

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114447 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.09334381283162-${x_0}
variable           new_x         equal     1.09334381283162-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.54669379004207-${y_0}
variable           new_y         equal     3.54669379004207-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2397488998441-${z_0}
variable           new_z         equal     31.2397488998441-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0722925010531501*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0722925010531501*-0.0722925010531501+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0722925010531501*-0.0722925010531501+-0.47798916522027*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0722925010531501*-0.0722925010531501+-0.47798916522027*-0.47798916522027+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0722925010531501*-0.0722925010531501+-0.47798916522027*-0.47798916522027+-0.0811194230886016*${new_z})
variable           module        equal     sqrt(-0.0722925010531501*-0.0722925010531501+-0.47798916522027*-0.47798916522027+-0.0811194230886016*-0.0811194230886016)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0722925010531501/${module}
variable           unitx         equal     -0.0722925010531501/0.490183851813498
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.47798916522027/${module}
variable           unity         equal     -0.47798916522027/0.490183851813498
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0811194230886016/${module}
variable           unitz         equal     -0.0811194230886016/0.490183851813498
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.84674071540375e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.84674071540375e-05*-2.84674071540375e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.84674071540375e-05*-2.84674071540375e-05+7.89497300539558e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.84674071540375e-05*-2.84674071540375e-05+7.89497300539558e-07*7.89497300539558e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.84674071540375e-05*-2.84674071540375e-05+7.89497300539558e-07*7.89497300539558e-07+2.59019028102455e-05*${fz})
variable           f_module      equal     sqrt(-2.84674071540375e-05*-2.84674071540375e-05+7.89497300539558e-07*7.89497300539558e-07+2.59019028102455e-05*2.59019028102455e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.147480380648393*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.147480380648393*-0.147480380648393+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.147480380648393*-0.147480380648393+-0.975122218840722*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.147480380648393*-0.147480380648393+-0.975122218840722*-0.975122218840722+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.147480380648393*-0.147480380648393+-0.975122218840722*-0.975122218840722+-0.165487750745949*${unitz})
variable           dir_module    equal     sqrt(-0.147480380648393*-0.147480380648393+-0.975122218840722*-0.975122218840722+-0.165487750745949*-0.165487750745949)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.84674071540375e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.84674071540375e-05*-0.147480380648393+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.84674071540375e-05*-0.147480380648393+7.89497300539558e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.84674071540375e-05*-0.147480380648393+7.89497300539558e-07*-0.975122218840722+${fz}*${unitz}
variable           dot      equal     -2.84674071540375e-05*-0.147480380648393+7.89497300539558e-07*-0.975122218840722+2.59019028102455e-05*${unitz}
variable           dot      equal     -2.84674071540375e-05*-0.147480380648393+7.89497300539558e-07*-0.975122218840722+2.59019028102455e-05*-0.165487750745949
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.57919952428361e-07/${f_module}*${dir_module}
variable           cos      equal     -8.57919952428361e-07/3.84957808759961e-05*${dir_module}
variable           cos      equal     -8.57919952428361e-07/3.84957808759961e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0222860774065584)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59308424941544/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.2770039002713-90.0)
print              "The dot product: ${dot}"
The dot product: -8.57919952428361e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.2770039002713

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0722925010531501^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0722925010531501^2+-0.47798916522027^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0722925010531501^2+-0.47798916522027^2+-0.0811194230886016^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0722925010531501/${norm}
variable           unit_x        equal     -0.0722925010531501/0.490183851813498
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.47798916522027/${norm}
variable           unit_y        equal     -0.47798916522027/0.490183851813498
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0811194230886016/${norm}
variable           unit_z        equal     -0.0811194230886016/0.490183851813498
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.09334381283162+${delta}*${unit_x}
variable           x_new         equal     1.09334381283162+0.03*${unit_x}
variable           x_new         equal     1.09334381283162+0.03*-0.147480380648393
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.54669379004207+${delta}*${unit_y}
variable           y_new         equal     3.54669379004207+0.03*${unit_y}
variable           y_new         equal     3.54669379004207+0.03*-0.975122218840722
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2397488998441+${delta}*${unit_z}
variable           z_new         equal     31.2397488998441+0.03*${unit_z}
variable           z_new         equal     31.2397488998441+0.03*-0.165487750745949

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08891940141217  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08891940141217  y  3.51744012347685  z   ${z_new}
set                atom          288751    x  1.08891940141217  y  3.51744012347685  z   31.2347842673217
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0722925010531501  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0722925010531501  -0.47798916522027  ${new_z}
fix                hold    carbon   planeforce   -0.0722925010531501  -0.47798916522027  -0.0811194230886016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3353   -1152448.9            0   -1152448.9  0.091128536   -0.0187122  0.029047531 
    3481   -1152448.9            0   -1152448.9 1.7774472e-05 3.2025142e-06 -3.47109e-05 
Loop time of 1.49408 on 104 procs for 128 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.87538042  -1152448.87985345  -1152448.87985345
  Force two-norm initial, final = 0.29901033 0.0001944631
  Force max component initial, final = 0.25872482 3.4710900e-05
  Final line search alpha, max atom move = 1.0000000 3.4710900e-05
  Iterations, force evaluations = 128 256

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.3906     | 1.0782     | 1.4054     |  28.0 | 72.16
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026478   | 0.24273    | 0.7263     |  41.4 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6395e-05 | 0.0021197  | 0.004542   |   2.2 |  0.14
Other   |            | 0.1711     |            |       | 11.45

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114446 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238195
Ave neighs/atom = 28.530447
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10879191402746-${x_0}
variable           new_x         equal     1.10879191402746-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.51239709481311-${y_0}
variable           new_y         equal     3.51239709481311-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.24678976964-${z_0}
variable           new_z         equal     31.24678976964-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05684439985731*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05684439985731*-0.05684439985731+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05684439985731*-0.05684439985731+-0.51228586044923*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05684439985731*-0.05684439985731+-0.51228586044923*-0.51228586044923+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05684439985731*-0.05684439985731+-0.51228586044923*-0.51228586044923+-0.0740785532927006*${new_z})
variable           module        equal     sqrt(-0.05684439985731*-0.05684439985731+-0.51228586044923*-0.51228586044923+-0.0740785532927006*-0.0740785532927006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.05684439985731/${module}
variable           unitx         equal     -0.05684439985731/0.520726147479926
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.51228586044923/${module}
variable           unity         equal     -0.51228586044923/0.520726147479926
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0740785532927006/${module}
variable           unitz         equal     -0.0740785532927006/0.520726147479926
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.77744722755526e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.77744722755526e-05*1.77744722755526e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.77744722755526e-05*1.77744722755526e-05+3.20251423050477e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.77744722755526e-05*1.77744722755526e-05+3.20251423050477e-06*3.20251423050477e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.77744722755526e-05*1.77744722755526e-05+3.20251423050477e-06*3.20251423050477e-06+-3.47108997114231e-05*${fz})
variable           f_module      equal     sqrt(1.77744722755526e-05*1.77744722755526e-05+3.20251423050477e-06*3.20251423050477e-06+-3.47108997114231e-05*-3.47108997114231e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.10916371327311*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.10916371327311*-0.10916371327311+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.10916371327311*-0.10916371327311+-0.983791313204564*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.10916371327311*-0.10916371327311+-0.983791313204564*-0.983791313204564+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.10916371327311*-0.10916371327311+-0.983791313204564*-0.983791313204564+-0.14226009900061*${unitz})
variable           dir_module    equal     sqrt(-0.10916371327311*-0.10916371327311+-0.983791313204564*-0.983791313204564+-0.14226009900061*-0.14226009900061)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.77744722755526e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.77744722755526e-05*-0.10916371327311+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.77744722755526e-05*-0.10916371327311+3.20251423050477e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.77744722755526e-05*-0.10916371327311+3.20251423050477e-06*-0.983791313204564+${fz}*${unitz}
variable           dot      equal     1.77744722755526e-05*-0.10916371327311+3.20251423050477e-06*-0.983791313204564+-3.47108997114231e-05*${unitz}
variable           dot      equal     1.77744722755526e-05*-0.10916371327311+3.20251423050477e-06*-0.983791313204564+-3.47108997114231e-05*-0.14226009900061
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.52957046106563e-07/${f_module}*${dir_module}
variable           cos      equal     -1.52957046106563e-07/3.91284362177617e-05*${dir_module}
variable           cos      equal     -1.52957046106563e-07/3.91284362177617e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00390910194456303)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57470543869541/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.2239756135438-90.0)
print              "The dot product: ${dot}"
The dot product: -1.52957046106563e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.2239756135438

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05684439985731^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05684439985731^2+-0.51228586044923^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05684439985731^2+-0.51228586044923^2+-0.0740785532927006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.05684439985731/${norm}
variable           unit_x        equal     -0.05684439985731/0.520726147479926
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.51228586044923/${norm}
variable           unit_y        equal     -0.51228586044923/0.520726147479926
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0740785532927006/${norm}
variable           unit_z        equal     -0.0740785532927006/0.520726147479926
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10879191402746+${delta}*${unit_x}
variable           x_new         equal     1.10879191402746+0.03*${unit_x}
variable           x_new         equal     1.10879191402746+0.03*-0.10916371327311
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.51239709481311+${delta}*${unit_y}
variable           y_new         equal     3.51239709481311+0.03*${unit_y}
variable           y_new         equal     3.51239709481311+0.03*-0.983791313204564
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.24678976964+${delta}*${unit_z}
variable           z_new         equal     31.24678976964+0.03*${unit_z}
variable           z_new         equal     31.24678976964+0.03*-0.14226009900061

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10551700262927  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10551700262927  y  3.48288335541697  z   ${z_new}
set                atom          288751    x  1.10551700262927  y  3.48288335541697  z   31.24252196667
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.05684439985731  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.05684439985731  -0.51228586044923  ${new_z}
fix                hold    carbon   planeforce   -0.05684439985731  -0.51228586044923  -0.0740785532927006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3481   -1152448.8            0   -1152448.8  0.076830716 -0.014019353  0.037993727 
    3785   -1152448.8            0   -1152448.8 3.0160353e-07 -1.8093843e-08 -1.0630948e-07 
Loop time of 3.52524 on 104 procs for 304 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.82171689  -1152448.82609088  -1152448.82609088
  Force two-norm initial, final = 0.30438427 1.7965598e-06
  Force max component initial, final = 0.26956072 3.0160353e-07
  Final line search alpha, max atom move = 1.0000000 3.0160353e-07
  Iterations, force evaluations = 304 608

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.93093    | 2.5492     | 3.3304     |  43.0 | 72.31
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.062057   | 0.57348    | 1.7287     |  63.7 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.8383e-05 | 0.0050102  | 0.010707   |   3.3 |  0.14
Other   |            | 0.3975     |            |       | 11.28

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114446 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238198
Ave neighs/atom = 28.530457
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1217983913016-${x_0}
variable           new_x         equal     1.1217983913016-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.47921528228061-${y_0}
variable           new_y         equal     3.47921528228061-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2553947374309-${z_0}
variable           new_z         equal     31.2553947374309-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04383792258317*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04383792258317*-0.04383792258317+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04383792258317*-0.04383792258317+-0.54546767298173*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04383792258317*-0.04383792258317+-0.54546767298173*-0.54546767298173+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04383792258317*-0.04383792258317+-0.54546767298173*-0.54546767298173+-0.0654735855017989*${new_z})
variable           module        equal     sqrt(-0.04383792258317*-0.04383792258317+-0.54546767298173*-0.54546767298173+-0.0654735855017989*-0.0654735855017989)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.04383792258317/${module}
variable           unitx         equal     -0.04383792258317/0.551129327946693
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.54546767298173/${module}
variable           unity         equal     -0.54546767298173/0.551129327946693
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0654735855017989/${module}
variable           unitz         equal     -0.0654735855017989/0.551129327946693
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01603534696221e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01603534696221e-07*3.01603534696221e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01603534696221e-07*3.01603534696221e-07+-1.8093842958232e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01603534696221e-07*3.01603534696221e-07+-1.8093842958232e-08*-1.8093842958232e-08+${fz}*${fz})
variable           f_module      equal     sqrt(3.01603534696221e-07*3.01603534696221e-07+-1.8093842958232e-08*-1.8093842958232e-08+-1.0630947532115e-07*${fz})
variable           f_module      equal     sqrt(3.01603534696221e-07*3.01603534696221e-07+-1.8093842958232e-08*-1.8093842958232e-08+-1.0630947532115e-07*-1.0630947532115e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0795419883505277*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0795419883505277*-0.0795419883505277+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0795419883505277*-0.0795419883505277+-0.989727175314629*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0795419883505277*-0.0795419883505277+-0.989727175314629*-0.989727175314629+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0795419883505277*-0.0795419883505277+-0.989727175314629*-0.989727175314629+-0.118798950049945*${unitz})
variable           dir_module    equal     sqrt(-0.0795419883505277*-0.0795419883505277+-0.989727175314629*-0.989727175314629+-0.118798950049945*-0.118798950049945)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.01603534696221e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.01603534696221e-07*-0.0795419883505277+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.01603534696221e-07*-0.0795419883505277+-1.8093842958232e-08*${unity}+${fz}*${unitz}
variable           dot      equal     3.01603534696221e-07*-0.0795419883505277+-1.8093842958232e-08*-0.989727175314629+${fz}*${unitz}
variable           dot      equal     3.01603534696221e-07*-0.0795419883505277+-1.8093842958232e-08*-0.989727175314629+-1.0630947532115e-07*${unitz}
variable           dot      equal     3.01603534696221e-07*-0.0795419883505277+-1.8093842958232e-08*-0.989727175314629+-1.0630947532115e-07*-0.118798950049945
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.54727728686582e-09/${f_module}*${dir_module}
variable           cos      equal     6.54727728686582e-09/3.20302644131e-07*${dir_module}
variable           cos      equal     6.54727728686582e-09/3.20302644131e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0204409092676365)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55035399378606/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.8287405951927-90.0)
print              "The dot product: ${dot}"
The dot product: 6.54727728686582e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.8287405951927

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04383792258317^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04383792258317^2+-0.54546767298173^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04383792258317^2+-0.54546767298173^2+-0.0654735855017989^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.04383792258317/${norm}
variable           unit_x        equal     -0.04383792258317/0.551129327946693
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.54546767298173/${norm}
variable           unit_y        equal     -0.54546767298173/0.551129327946693
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0654735855017989/${norm}
variable           unit_z        equal     -0.0654735855017989/0.551129327946693
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1217983913016+${delta}*${unit_x}
variable           x_new         equal     1.1217983913016+0.03*${unit_x}
variable           x_new         equal     1.1217983913016+0.03*-0.0795419883505277
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.47921528228061+${delta}*${unit_y}
variable           y_new         equal     3.47921528228061+0.03*${unit_y}
variable           y_new         equal     3.47921528228061+0.03*-0.989727175314629
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2553947374309+${delta}*${unit_z}
variable           z_new         equal     31.2553947374309+0.03*${unit_z}
variable           z_new         equal     31.2553947374309+0.03*-0.118798950049945

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11941213165108  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11941213165108  y  3.44952346702117  z   ${z_new}
set                atom          288751    x  1.11941213165108  y  3.44952346702117  z   31.2518307689294
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04383792258317  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04383792258317  -0.54546767298173  ${new_z}
fix                hold    carbon   planeforce   -0.04383792258317  -0.54546767298173  -0.0654735855017989
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3785   -1152448.8            0   -1152448.8  0.062305641 -0.010069629   0.04217437 
    4000   -1152448.8            0   -1152448.8 -8.9669868e-07 -1.9393977e-07 2.2161194e-06 
    4052   -1152448.8            0   -1152448.8 -6.6191767e-07 -3.6856982e-08 7.5024741e-07 
Loop time of 3.08923 on 104 procs for 267 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.76453193  -1152448.76876553  -1152448.76876553
  Force two-norm initial, final = 0.30904907 5.0481957e-06
  Force max component initial, final = 0.27922764 9.3566995e-07
  Final line search alpha, max atom move = 1.0000000 9.3566995e-07
  Iterations, force evaluations = 267 534

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.81621    | 2.2466     | 2.9172     |  40.3 | 72.72
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.053499   | 0.50186    | 1.5116     |  59.9 | 16.25
Output  | 0.00010101 | 0.000107   | 0.00025754 |   0.0 |  0.00
Modify  | 3.3795e-05 | 0.0044028  | 0.0094719  |   3.1 |  0.14
Other   |            | 0.3362     |            |       | 10.88

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114446 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238196
Ave neighs/atom = 28.530450
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.13232348871254-${x_0}
variable           new_x         equal     1.13232348871254-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.44696882018486-${y_0}
variable           new_y         equal     3.44696882018486-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2644689983417-${z_0}
variable           new_z         equal     31.2644689983417-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0333128251722301*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0333128251722301*-0.0333128251722301+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0333128251722301*-0.0333128251722301+-0.57771413507748*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0333128251722301*-0.0333128251722301+-0.57771413507748*-0.57771413507748+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0333128251722301*-0.0333128251722301+-0.57771413507748*-0.57771413507748+-0.0563993245909984*${new_z})
variable           module        equal     sqrt(-0.0333128251722301*-0.0333128251722301+-0.57771413507748*-0.57771413507748+-0.0563993245909984*-0.0563993245909984)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0333128251722301/${module}
variable           unitx         equal     -0.0333128251722301/0.581415729064494
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.57771413507748/${module}
variable           unity         equal     -0.57771413507748/0.581415729064494
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0563993245909984/${module}
variable           unitz         equal     -0.0563993245909984/0.581415729064494
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.61917668850667e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.61917668850667e-07*-6.61917668850667e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.61917668850667e-07*-6.61917668850667e-07+-3.68569817344953e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.61917668850667e-07*-6.61917668850667e-07+-3.68569817344953e-08*-3.68569817344953e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-6.61917668850667e-07*-6.61917668850667e-07+-3.68569817344953e-08*-3.68569817344953e-08+7.50247410086807e-07*${fz})
variable           f_module      equal     sqrt(-6.61917668850667e-07*-6.61917668850667e-07+-3.68569817344953e-08*-3.68569817344953e-08+7.50247410086807e-07*7.50247410086807e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0572960508409893*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0572960508409893*-0.0572960508409893+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0572960508409893*-0.0572960508409893+-0.993633481514217*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0572960508409893*-0.0572960508409893+-0.993633481514217*-0.993633481514217+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0572960508409893*-0.0572960508409893+-0.993633481514217*-0.993633481514217+-0.0970034379388836*${unitz})
variable           dir_module    equal     sqrt(-0.0572960508409893*-0.0572960508409893+-0.993633481514217*-0.993633481514217+-0.0970034379388836*-0.0970034379388836)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.61917668850667e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.61917668850667e-07*-0.0572960508409893+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.61917668850667e-07*-0.0572960508409893+-3.68569817344953e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -6.61917668850667e-07*-0.0572960508409893+-3.68569817344953e-08*-0.993633481514217+${fz}*${unitz}
variable           dot      equal     -6.61917668850667e-07*-0.0572960508409893+-3.68569817344953e-08*-0.993633481514217+7.50247410086807e-07*${unitz}
variable           dot      equal     -6.61917668850667e-07*-0.0572960508409893+-3.68569817344953e-08*-0.993633481514217+7.50247410086807e-07*-0.0970034379388836
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.77102140280568e-09/${f_module}*${dir_module}
variable           cos      equal     1.77102140280568e-09/1.00118160879095e-06*${dir_module}
variable           cos      equal     1.77102140280568e-09/1.00118160879095e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00176893121812775)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56902739465424/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8986476540953-90.0)
print              "The dot product: ${dot}"
The dot product: 1.77102140280568e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8986476540953

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0333128251722301^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0333128251722301^2+-0.57771413507748^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0333128251722301^2+-0.57771413507748^2+-0.0563993245909984^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0333128251722301/${norm}
variable           unit_x        equal     -0.0333128251722301/0.581415729064494
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.57771413507748/${norm}
variable           unit_y        equal     -0.57771413507748/0.581415729064494
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0563993245909984/${norm}
variable           unit_z        equal     -0.0563993245909984/0.581415729064494
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.13232348871254+${delta}*${unit_x}
variable           x_new         equal     1.13232348871254+0.03*${unit_x}
variable           x_new         equal     1.13232348871254+0.03*-0.0572960508409893
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.44696882018486+${delta}*${unit_y}
variable           y_new         equal     3.44696882018486+0.03*${unit_y}
variable           y_new         equal     3.44696882018486+0.03*-0.993633481514217
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2644689983417+${delta}*${unit_z}
variable           z_new         equal     31.2644689983417+0.03*${unit_z}
variable           z_new         equal     31.2644689983417+0.03*-0.0970034379388836

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13060460718731  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13060460718731  y  3.41715981573943  z   ${z_new}
set                atom          288751    x  1.13060460718731  y  3.41715981573943  z   31.2615588952035
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0333128251722301  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0333128251722301  -0.57771413507748  ${new_z}
fix                hold    carbon   planeforce   -0.0333128251722301  -0.57771413507748  -0.0563993245909984
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4052   -1152448.7            0   -1152448.7  0.048983708 -0.0071110733  0.043908005 
    4338   -1152448.7            0   -1152448.7 1.8587726e-07 -4.9741572e-09 -5.8838571e-08 
Loop time of 3.32134 on 104 procs for 286 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.7040273  -1152448.70816736  -1152448.70816736
  Force two-norm initial, final = 0.31445957 1.9457030e-06
  Force max component initial, final = 0.28796852 6.4226428e-07
  Final line search alpha, max atom move = 1.0000000 6.4226428e-07
  Iterations, force evaluations = 286 572

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.87647    | 2.4044     | 3.1188     |  41.8 | 72.39
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.0603     | 0.54066    | 1.6413     |  62.2 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.6372e-05 | 0.0047169  | 0.010068   |   3.2 |  0.14
Other   |            | 0.3716     |            |       | 11.19

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238197
Ave neighs/atom = 28.530454
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14085319186279-${x_0}
variable           new_x         equal     1.14085319186279-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.41536135729558-${y_0}
variable           new_y         equal     3.41536135729558-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2739275815291-${z_0}
variable           new_z         equal     31.2739275815291-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0247831220219801*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0247831220219801*-0.0247831220219801+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0247831220219801*-0.0247831220219801+-0.60932159796676*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0247831220219801*-0.0247831220219801+-0.60932159796676*-0.60932159796676+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0247831220219801*-0.0247831220219801+-0.60932159796676*-0.60932159796676+-0.0469407414035992*${new_z})
variable           module        equal     sqrt(-0.0247831220219801*-0.0247831220219801+-0.60932159796676*-0.60932159796676+-0.0469407414035992*-0.0469407414035992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0247831220219801/${module}
variable           unitx         equal     -0.0247831220219801/0.611629337171985
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.60932159796676/${module}
variable           unity         equal     -0.60932159796676/0.611629337171985
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0469407414035992/${module}
variable           unitz         equal     -0.0469407414035992/0.611629337171985
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85877259476848e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85877259476848e-07*1.85877259476848e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85877259476848e-07*1.85877259476848e-07+-4.97415715142321e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85877259476848e-07*1.85877259476848e-07+-4.97415715142321e-09*-4.97415715142321e-09+${fz}*${fz})
variable           f_module      equal     sqrt(1.85877259476848e-07*1.85877259476848e-07+-4.97415715142321e-09*-4.97415715142321e-09+-5.88385705605258e-08*${fz})
variable           f_module      equal     sqrt(1.85877259476848e-07*1.85877259476848e-07+-4.97415715142321e-09*-4.97415715142321e-09+-5.88385705605258e-08*-5.88385705605258e-08)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0405198385946803*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0405198385946803*-0.0405198385946803+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0405198385946803*-0.0405198385946803+-0.996226899095626*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0405198385946803*-0.0405198385946803+-0.996226899095626*-0.996226899095626+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0405198385946803*-0.0405198385946803+-0.996226899095626*-0.996226899095626+-0.0767470403245223*${unitz})
variable           dir_module    equal     sqrt(-0.0405198385946803*-0.0405198385946803+-0.996226899095626*-0.996226899095626+-0.0767470403245223*-0.0767470403245223)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.85877259476848e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.85877259476848e-07*-0.0405198385946803+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.85877259476848e-07*-0.0405198385946803+-4.97415715142321e-09*${unity}+${fz}*${unitz}
variable           dot      equal     1.85877259476848e-07*-0.0405198385946803+-4.97415715142321e-09*-0.996226899095626+${fz}*${unitz}
variable           dot      equal     1.85877259476848e-07*-0.0405198385946803+-4.97415715142321e-09*-0.996226899095626+-5.88385705605258e-08*${unitz}
variable           dot      equal     1.85877259476848e-07*-0.0405198385946803+-4.97415715142321e-09*-0.996226899095626+-5.88385705605258e-08*-0.0767470403245223
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.93935874959921e-09/${f_module}*${dir_module}
variable           cos      equal     1.93935874959921e-09/1.95030959633584e-07*${dir_module}
variable           cos      equal     1.93935874959921e-09/1.95030959633584e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00994385072627852)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56085231218639/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.4302499315161-90.0)
print              "The dot product: ${dot}"
The dot product: 1.93935874959921e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.4302499315161

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0247831220219801^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0247831220219801^2+-0.60932159796676^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0247831220219801^2+-0.60932159796676^2+-0.0469407414035992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0247831220219801/${norm}
variable           unit_x        equal     -0.0247831220219801/0.611629337171985
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.60932159796676/${norm}
variable           unit_y        equal     -0.60932159796676/0.611629337171985
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0469407414035992/${norm}
variable           unit_z        equal     -0.0469407414035992/0.611629337171985
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14085319186279+${delta}*${unit_x}
variable           x_new         equal     1.14085319186279+0.03*${unit_x}
variable           x_new         equal     1.14085319186279+0.03*-0.0405198385946803
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.41536135729558+${delta}*${unit_y}
variable           y_new         equal     3.41536135729558+0.03*${unit_y}
variable           y_new         equal     3.41536135729558+0.03*-0.996226899095626
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2739275815291+${delta}*${unit_z}
variable           z_new         equal     31.2739275815291+0.03*${unit_z}
variable           z_new         equal     31.2739275815291+0.03*-0.0767470403245223

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13963759670495  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13963759670495  y  3.38547455032271  z   ${z_new}
set                atom          288751    x  1.13963759670495  y  3.38547455032271  z   31.2716251703194
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0247831220219801  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0247831220219801  -0.60932159796676  ${new_z}
fix                hold    carbon   planeforce   -0.0247831220219801  -0.60932159796676  -0.0469407414035992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4338   -1152448.6            0   -1152448.6  0.038209466 -0.005129864  0.046415694 
    4588   -1152448.7            0   -1152448.7 1.9418969e-06 -4.1353953e-07 4.3427584e-06 
Loop time of 2.90957 on 104 procs for 250 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.64156938  -1152448.68042814  -1152448.68042814
  Force two-norm initial, final = 0.33002377 7.9555521e-05
  Force max component initial, final = 0.29631372 4.3427584e-06
  Final line search alpha, max atom move = 1.0000000 4.3427584e-06
  Iterations, force evaluations = 250 499

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.76798    | 2.0966     | 2.7278     |  38.8 | 72.06
Neigh   | 1.0163e-05 | 0.0029513  | 0.0042359  |   2.2 |  0.10
Comm    | 0.053803   | 0.47311    | 1.4025     |  57.0 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.1574e-05 | 0.0041271  | 0.0088672  |   3.0 |  0.14
Other   |            | 0.3327     |            |       | 11.44

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15358287955485-${x_0}
variable           new_x         equal     1.15358287955485-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.38296310615074-${y_0}
variable           new_y         equal     3.38296310615074-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2968627250343-${z_0}
variable           new_z         equal     31.2968627250343-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0120534343299201*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0120534343299201*-0.0120534343299201+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0120534343299201*-0.0120534343299201+-0.6417198491116*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0120534343299201*-0.0120534343299201+-0.6417198491116*-0.6417198491116+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0120534343299201*-0.0120534343299201+-0.6417198491116*-0.6417198491116+-0.0240055978984017*${new_z})
variable           module        equal     sqrt(-0.0120534343299201*-0.0120534343299201+-0.6417198491116*-0.6417198491116+-0.0240055978984017*-0.0240055978984017)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0120534343299201/${module}
variable           unitx         equal     -0.0120534343299201/0.642281806338479
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.6417198491116/${module}
variable           unity         equal     -0.6417198491116/0.642281806338479
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0240055978984017/${module}
variable           unitz         equal     -0.0240055978984017/0.642281806338479
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.94189687625671e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.94189687625671e-06*1.94189687625671e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.94189687625671e-06*1.94189687625671e-06+-4.1353952546701e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.94189687625671e-06*1.94189687625671e-06+-4.1353952546701e-07*-4.1353952546701e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.94189687625671e-06*1.94189687625671e-06+-4.1353952546701e-07*-4.1353952546701e-07+4.34275835982735e-06*${fz})
variable           f_module      equal     sqrt(1.94189687625671e-06*1.94189687625671e-06+-4.1353952546701e-07*-4.1353952546701e-07+4.34275835982735e-06*4.34275835982735e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0187665822244512*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0187665822244512*-0.0187665822244512+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0187665822244512*-0.0187665822244512+-0.999125061271652*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0187665822244512*-0.0187665822244512+-0.999125061271652*-0.999125061271652+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0187665822244512*-0.0187665822244512+-0.999125061271652*-0.999125061271652+-0.0373754910406895*${unitz})
variable           dir_module    equal     sqrt(-0.0187665822244512*-0.0187665822244512+-0.999125061271652*-0.999125061271652+-0.0373754910406895*-0.0373754910406895)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.94189687625671e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.94189687625671e-06*-0.0187665822244512+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.94189687625671e-06*-0.0187665822244512+-4.1353952546701e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.94189687625671e-06*-0.0187665822244512+-4.1353952546701e-07*-0.999125061271652+${fz}*${unitz}
variable           dot      equal     1.94189687625671e-06*-0.0187665822244512+-4.1353952546701e-07*-0.999125061271652+4.34275835982735e-06*${unitz}
variable           dot      equal     1.94189687625671e-06*-0.0187665822244512+-4.1353952546701e-07*-0.999125061271652+4.34275835982735e-06*-0.0373754910406895
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.14422210151193e-07/${f_module}*${dir_module}
variable           cos      equal     2.14422210151193e-07/4.77509461571071e-06*${dir_module}
variable           cos      equal     2.14422210151193e-07/4.77509461571071e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0449042851309616)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52587693715975/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.4263085556024-90.0)
print              "The dot product: ${dot}"
The dot product: 2.14422210151193e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.4263085556024

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0120534343299201^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0120534343299201^2+-0.6417198491116^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0120534343299201^2+-0.6417198491116^2+-0.0240055978984017^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0120534343299201/${norm}
variable           unit_x        equal     -0.0120534343299201/0.642281806338479
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.6417198491116/${norm}
variable           unit_y        equal     -0.6417198491116/0.642281806338479
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0240055978984017/${norm}
variable           unit_z        equal     -0.0240055978984017/0.642281806338479
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15358287955485+${delta}*${unit_x}
variable           x_new         equal     1.15358287955485+0.03*${unit_x}
variable           x_new         equal     1.15358287955485+0.03*-0.0187665822244512
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.38296310615074+${delta}*${unit_y}
variable           y_new         equal     3.38296310615074+0.03*${unit_y}
variable           y_new         equal     3.38296310615074+0.03*-0.999125061271652
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2968627250343+${delta}*${unit_z}
variable           z_new         equal     31.2968627250343+0.03*${unit_z}
variable           z_new         equal     31.2968627250343+0.03*-0.0373754910406895

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15301988208812  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15301988208812  y  3.35298935431259  z   ${z_new}
set                atom          288751    x  1.15301988208812  y  3.35298935431259  z   31.2957414603031
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0120534343299201  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0120534343299201  -0.6417198491116  ${new_z}
fix                hold    carbon   planeforce   -0.0120534343299201  -0.6417198491116  -0.0240055978984017
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4588   -1152448.6            0   -1152448.6  0.026333419 -0.0025476988  0.054883062 
    4773   -1152448.6            0   -1152448.6 4.0737798e-06 -3.237183e-07 6.6081846e-06 
Loop time of 2.13898 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.63411874   -1152448.6391844   -1152448.6391844
  Force two-norm initial, final = 0.34223607 0.00015090436
  Force max component initial, final = 0.30822189 5.3542052e-05
  Final line search alpha, max atom move = 1.0000000 5.3542052e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56324    | 1.5517     | 2.0058     |  33.4 | 72.54
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038681   | 0.34887    | 1.0596     |  50.0 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.312e-05  | 0.0030502  | 0.0064965  |   2.6 |  0.14
Other   |            | 0.2354     |            |       | 11.00

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15997299941093-${x_0}
variable           new_x         equal     1.15997299941093-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.35235833141467-${y_0}
variable           new_y         equal     3.35235833141467-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3091187974173-${z_0}
variable           new_z         equal     31.3091187974173-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00566331447384005*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00566331447384005*-0.00566331447384005+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00566331447384005*-0.00566331447384005+-0.67232462384767*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00566331447384005*-0.00566331447384005+-0.67232462384767*-0.67232462384767+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00566331447384005*-0.00566331447384005+-0.67232462384767*-0.67232462384767+-0.0117495255153983*${new_z})
variable           module        equal     sqrt(-0.00566331447384005*-0.00566331447384005+-0.67232462384767*-0.67232462384767+-0.0117495255153983*-0.0117495255153983)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00566331447384005/${module}
variable           unitx         equal     -0.00566331447384005/0.672451131542343
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.67232462384767/${module}
variable           unity         equal     -0.67232462384767/0.672451131542343
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0117495255153983/${module}
variable           unitz         equal     -0.0117495255153983/0.672451131542343
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07377980723125e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07377980723125e-06*4.07377980723125e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07377980723125e-06*4.07377980723125e-06+-3.2371830297546e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07377980723125e-06*4.07377980723125e-06+-3.2371830297546e-07*-3.2371830297546e-07+${fz}*${fz})
variable           f_module      equal     sqrt(4.07377980723125e-06*4.07377980723125e-06+-3.2371830297546e-07*-3.2371830297546e-07+6.60818462952523e-06*${fz})
variable           f_module      equal     sqrt(4.07377980723125e-06*4.07377980723125e-06+-3.2371830297546e-07*-3.2371830297546e-07+6.60818462952523e-06*6.60818462952523e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00842189745573124*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00842189745573124*-0.00842189745573124+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00842189745573124*-0.00842189745573124+-0.999811870798131*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00842189745573124*-0.00842189745573124+-0.999811870798131*-0.999811870798131+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00842189745573124*-0.00842189745573124+-0.999811870798131*-0.999811870798131+-0.0174726830906648*${unitz})
variable           dir_module    equal     sqrt(-0.00842189745573124*-0.00842189745573124+-0.999811870798131*-0.999811870798131+-0.0174726830906648*-0.0174726830906648)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07377980723125e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07377980723125e-06*-0.00842189745573124+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07377980723125e-06*-0.00842189745573124+-3.2371830297546e-07*${unity}+${fz}*${unitz}
variable           dot      equal     4.07377980723125e-06*-0.00842189745573124+-3.2371830297546e-07*-0.999811870798131+${fz}*${unitz}
variable           dot      equal     4.07377980723125e-06*-0.00842189745573124+-3.2371830297546e-07*-0.999811870798131+6.60818462952523e-06*${unitz}
variable           dot      equal     4.07377980723125e-06*-0.00842189745573124+-3.2371830297546e-07*-0.999811870798131+6.60818462952523e-06*-0.0174726830906648
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.73885730479464e-07/${f_module}*${dir_module}
variable           cos      equal     1.73885730479464e-07/7.76972197413652e-06*${dir_module}
variable           cos      equal     1.73885730479464e-07/7.76972197413652e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0223799166892054)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54841454148115/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7176181635544-90.0)
print              "The dot product: ${dot}"
The dot product: 1.73885730479464e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7176181635544

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00566331447384005^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00566331447384005^2+-0.67232462384767^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00566331447384005^2+-0.67232462384767^2+-0.0117495255153983^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00566331447384005/${norm}
variable           unit_x        equal     -0.00566331447384005/0.672451131542343
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.67232462384767/${norm}
variable           unit_y        equal     -0.67232462384767/0.672451131542343
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0117495255153983/${norm}
variable           unit_z        equal     -0.0117495255153983/0.672451131542343
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15997299941093+${delta}*${unit_x}
variable           x_new         equal     1.15997299941093+0.03*${unit_x}
variable           x_new         equal     1.15997299941093+0.03*-0.00842189745573124
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.35235833141467+${delta}*${unit_y}
variable           y_new         equal     3.35235833141467+0.03*${unit_y}
variable           y_new         equal     3.35235833141467+0.03*-0.999811870798131
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3091187974173+${delta}*${unit_z}
variable           z_new         equal     31.3091187974173+0.03*${unit_z}
variable           z_new         equal     31.3091187974173+0.03*-0.0174726830906648

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15972034248726  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15972034248726  y  3.32236397529073  z   ${z_new}
set                atom          288751    x  1.15972034248726  y  3.32236397529073  z   31.3085946169246
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00566331447384005  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00566331447384005  -0.67232462384767  ${new_z}
fix                hold    carbon   planeforce   -0.00566331447384005  -0.67232462384767  -0.0117495255153983
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4773   -1152448.6            0   -1152448.6   0.01153181 -0.00058740657  0.028053868 
    4942   -1152448.6            0   -1152448.6 -3.1824013e-06 9.5571277e-08 -3.9347958e-06 
Loop time of 1.96218 on 104 procs for 169 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.59211768  -1152448.59775483  -1152448.59775483
  Force two-norm initial, final = 0.34934315 0.00020237876
  Force max component initial, final = 0.31508265 6.5454942e-05
  Final line search alpha, max atom move = 1.0000000 6.5454942e-05
  Iterations, force evaluations = 169 338

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51722    | 1.4214     | 1.853      |  32.1 | 72.44
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031012   | 0.32116    | 0.96281    |  47.3 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1307e-05 | 0.0027901  | 0.0059488  |   2.5 |  0.14
Other   |            | 0.2169     |            |       | 11.05

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16310496355709-${x_0}
variable           new_x         equal     1.16310496355709-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.32221422829729-${y_0}
variable           new_y         equal     3.32221422829729-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3155319538726-${z_0}
variable           new_z         equal     31.3155319538726-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00253135032768004*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00253135032768004*-0.00253135032768004+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00253135032768004*-0.00253135032768004+-0.70246872696505*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00253135032768004*-0.00253135032768004+-0.70246872696505*-0.70246872696505+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00253135032768004*-0.00253135032768004+-0.70246872696505*-0.70246872696505+-0.0053363690600996*${new_z})
variable           module        equal     sqrt(-0.00253135032768004*-0.00253135032768004+-0.70246872696505*-0.70246872696505+-0.0053363690600996*-0.0053363690600996)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00253135032768004/${module}
variable           unitx         equal     -0.00253135032768004/0.702493556506481
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.70246872696505/${module}
variable           unity         equal     -0.70246872696505/0.702493556506481
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0053363690600996/${module}
variable           unitz         equal     -0.0053363690600996/0.702493556506481
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.18240128892661e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.18240128892661e-06*-3.18240128892661e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.18240128892661e-06*-3.18240128892661e-06+9.55712773456931e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.18240128892661e-06*-3.18240128892661e-06+9.55712773456931e-08*9.55712773456931e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-3.18240128892661e-06*-3.18240128892661e-06+9.55712773456931e-08*9.55712773456931e-08+-3.93479582543641e-06*${fz})
variable           f_module      equal     sqrt(-3.18240128892661e-06*-3.18240128892661e-06+9.55712773456931e-08*9.55712773456931e-08+-3.93479582543641e-06*-3.93479582543641e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0036033787132063*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0036033787132063*-0.0036033787132063+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0036033787132063*-0.0036033787132063+-0.999964655132846*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0036033787132063*-0.0036033787132063+-0.999964655132846*-0.999964655132846+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0036033787132063*-0.0036033787132063+-0.999964655132846*-0.999964655132846+-0.00759632456507858*${unitz})
variable           dir_module    equal     sqrt(-0.0036033787132063*-0.0036033787132063+-0.999964655132846*-0.999964655132846+-0.00759632456507858*-0.00759632456507858)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.18240128892661e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.18240128892661e-06*-0.0036033787132063+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.18240128892661e-06*-0.0036033787132063+9.55712773456931e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -3.18240128892661e-06*-0.0036033787132063+9.55712773456931e-08*-0.999964655132846+${fz}*${unitz}
variable           dot      equal     -3.18240128892661e-06*-0.0036033787132063+9.55712773456931e-08*-0.999964655132846+-3.93479582543641e-06*${unitz}
variable           dot      equal     -3.18240128892661e-06*-0.0036033787132063+9.55712773456931e-08*-0.999964655132846+-3.93479582543641e-06*-0.00759632456507858
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.42105161428619e-08/${f_module}*${dir_module}
variable           cos      equal     -5.42105161428619e-08/5.06156398958731e-06*${dir_module}
variable           cos      equal     -5.42105161428619e-08/5.06156398958731e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0107102303269077)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5815067618924/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.6136627278357-90.0)
print              "The dot product: ${dot}"
The dot product: -5.42105161428619e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.6136627278357

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00253135032768004^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00253135032768004^2+-0.70246872696505^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00253135032768004^2+-0.70246872696505^2+-0.0053363690600996^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00253135032768004/${norm}
variable           unit_x        equal     -0.00253135032768004/0.702493556506481
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.70246872696505/${norm}
variable           unit_y        equal     -0.70246872696505/0.702493556506481
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0053363690600996/${norm}
variable           unit_z        equal     -0.0053363690600996/0.702493556506481
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16310496355709+${delta}*${unit_x}
variable           x_new         equal     1.16310496355709+0.03*${unit_x}
variable           x_new         equal     1.16310496355709+0.03*-0.0036033787132063
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.32221422829729+${delta}*${unit_y}
variable           y_new         equal     3.32221422829729+0.03*${unit_y}
variable           y_new         equal     3.32221422829729+0.03*-0.999964655132846
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3155319538726+${delta}*${unit_z}
variable           z_new         equal     31.3155319538726+0.03*${unit_z}
variable           z_new         equal     31.3155319538726+0.03*-0.00759632456507858

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16299686219569  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16299686219569  y  3.2922152886433  z   ${z_new}
set                atom          288751    x  1.16299686219569  y  3.2922152886433  z   31.3153040641356
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00253135032768004  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00253135032768004  -0.70246872696505  ${new_z}
fix                hold    carbon   planeforce   -0.00253135032768004  -0.70246872696505  -0.0053363690600996
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4942   -1152448.6            0   -1152448.6 0.0044543405 -0.00011507134  0.013034804 
    5000   -1152448.6            0   -1152448.6 -0.00012134945 1.106593e-06 -8.8106535e-05 
    5136   -1152448.6            0   -1152448.6 -1.0547108e-06 -6.4473917e-09 1.3490322e-06 
Loop time of 2.28615 on 104 procs for 194 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.5513003  -1152448.55590707  -1152448.55590707
  Force two-norm initial, final = 0.35234315 8.8314742e-05
  Force max component initial, final = 0.32215857 3.5774638e-05
  Final line search alpha, max atom move = 1.0000000 3.5774638e-05
  Iterations, force evaluations = 194 388

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5927     | 1.6337     | 2.1205     |  34.5 | 71.46
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03896    | 0.36896    | 1.1076     |  50.4 | 16.14
Output  | 9.5851e-05 | 0.00010187 | 0.00021961 |   0.0 |  0.00
Modify  | 2.5207e-05 | 0.0032006  | 0.0068104  |   2.7 |  0.14
Other   |            | 0.2802     |            |       | 12.25

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16444342230351-${x_0}
variable           new_x         equal     1.16444342230351-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.29218644908834-${y_0}
variable           new_y         equal     3.29218644908834-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.318414256656-${z_0}
variable           new_z         equal     31.318414256656-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00119289158126001*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00119289158126001*-0.00119289158126001+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00119289158126001*-0.00119289158126001+-0.732496506174*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00119289158126001*-0.00119289158126001+-0.732496506174*-0.732496506174+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00119289158126001*-0.00119289158126001+-0.732496506174*-0.732496506174+-0.00245406627670164*${new_z})
variable           module        equal     sqrt(-0.00119289158126001*-0.00119289158126001+-0.732496506174*-0.732496506174+-0.00245406627670164*-0.00245406627670164)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00119289158126001/${module}
variable           unitx         equal     -0.00119289158126001/0.732501588386491
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.732496506174/${module}
variable           unity         equal     -0.732496506174/0.732501588386491
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00245406627670164/${module}
variable           unitz         equal     -0.00245406627670164/0.732501588386491
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05471076470257e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05471076470257e-06*-1.05471076470257e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05471076470257e-06*-1.05471076470257e-06+-6.44739168313782e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05471076470257e-06*-1.05471076470257e-06+-6.44739168313782e-09*-6.44739168313782e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05471076470257e-06*-1.05471076470257e-06+-6.44739168313782e-09*-6.44739168313782e-09+1.3490321869725e-06*${fz})
variable           f_module      equal     sqrt(-1.05471076470257e-06*-1.05471076470257e-06+-6.44739168313782e-09*-6.44739168313782e-09+1.3490321869725e-06*1.3490321869725e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00162851739869621*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00162851739869621*-0.00162851739869621+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00162851739869621*-0.00162851739869621+-0.999993061840996*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00162851739869621*-0.00162851739869621+-0.999993061840996*-0.999993061840996+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00162851739869621*-0.00162851739869621+-0.999993061840996*-0.999993061840996+-0.00335025386375926*${unitz})
variable           dir_module    equal     sqrt(-0.00162851739869621*-0.00162851739869621+-0.999993061840996*-0.999993061840996+-0.00335025386375926*-0.00335025386375926)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05471076470257e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05471076470257e-06*-0.00162851739869621+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05471076470257e-06*-0.00162851739869621+-6.44739168313782e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05471076470257e-06*-0.00162851739869621+-6.44739168313782e-09*-0.999993061840996+${fz}*${unitz}
variable           dot      equal     -1.05471076470257e-06*-0.00162851739869621+-6.44739168313782e-09*-0.999993061840996+1.3490321869725e-06*${unitz}
variable           dot      equal     -1.05471076470257e-06*-0.00162851739869621+-6.44739168313782e-09*-0.999993061840996+1.3490321869725e-06*-0.00335025386375926
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.64536148427926e-09/${f_module}*${dir_module}
variable           cos      equal     3.64536148427926e-09/1.71240889028491e-06*${dir_module}
variable           cos      equal     3.64536148427926e-09/1.71240889028491e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00212879149656409)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56866753369047/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8780291396598-90.0)
print              "The dot product: ${dot}"
The dot product: 3.64536148427926e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8780291396598

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00119289158126001^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00119289158126001^2+-0.732496506174^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00119289158126001^2+-0.732496506174^2+-0.00245406627670164^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00119289158126001/${norm}
variable           unit_x        equal     -0.00119289158126001/0.732501588386491
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.732496506174/${norm}
variable           unit_y        equal     -0.732496506174/0.732501588386491
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00245406627670164/${norm}
variable           unit_z        equal     -0.00245406627670164/0.732501588386491
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16444342230351+${delta}*${unit_x}
variable           x_new         equal     1.16444342230351+0.03*${unit_x}
variable           x_new         equal     1.16444342230351+0.03*-0.00162851739869621
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.29218644908834+${delta}*${unit_y}
variable           y_new         equal     3.29218644908834+0.03*${unit_y}
variable           y_new         equal     3.29218644908834+0.03*-0.999993061840996
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.318414256656+${delta}*${unit_z}
variable           z_new         equal     31.318414256656+0.03*${unit_z}
variable           z_new         equal     31.318414256656+0.03*-0.00335025386375926

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16439456678155  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16439456678155  y  3.26218665723311  z   ${z_new}
set                atom          288751    x  1.16439456678155  y  3.26218665723311  z   31.3183137490401
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00119289158126001  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00119289158126001  -0.732496506174  ${new_z}
fix                hold    carbon   planeforce   -0.00119289158126001  -0.732496506174  -0.00245406627670164
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5136   -1152448.5            0   -1152448.5 0.0014632902 -2.0947533e-05 0.0055411903 
    5291   -1152448.5            0   -1152448.5 1.5830939e-06 -1.3984082e-09 -3.521219e-07 
Loop time of 1.80366 on 104 procs for 155 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.50569939  -1152448.51042107  -1152448.51042107
  Force two-norm initial, final = 0.35808364 8.5542304e-05
  Force max component initial, final = 0.32899643 4.0977842e-05
  Final line search alpha, max atom move = 1.0000000 4.0977842e-05
  Iterations, force evaluations = 155 310

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.47566    | 1.3087     | 1.7007     |  30.8 | 72.56
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031207   | 0.29325    | 0.88124    |  45.8 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0197e-05 | 0.0025565  | 0.0054612  |   2.4 |  0.14
Other   |            | 0.1991     |            |       | 11.04

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16501211795287-${x_0}
variable           new_x         equal     1.16501211795287-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.26218113967603-${y_0}
variable           new_y         equal     3.26218113967603-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3196604606775-${z_0}
variable           new_z         equal     31.3196604606775-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000624195931899996*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000624195931899996*-0.000624195931899996+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000624195931899996*-0.000624195931899996+-0.76250181558631*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000624195931899996*-0.000624195931899996+-0.76250181558631*-0.76250181558631+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000624195931899996*-0.000624195931899996+-0.76250181558631*-0.76250181558631+-0.00120786225519964*${new_z})
variable           module        equal     sqrt(-0.000624195931899996*-0.000624195931899996+-0.76250181558631*-0.76250181558631+-0.00120786225519964*-0.00120786225519964)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000624195931899996/${module}
variable           unitx         equal     -0.000624195931899996/0.762503027747568
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.76250181558631/${module}
variable           unity         equal     -0.76250181558631/0.762503027747568
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00120786225519964/${module}
variable           unitz         equal     -0.00120786225519964/0.762503027747568
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.58309393958606e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.58309393958606e-06*1.58309393958606e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.58309393958606e-06*1.58309393958606e-06+-1.3984082139096e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.58309393958606e-06*1.58309393958606e-06+-1.3984082139096e-09*-1.3984082139096e-09+${fz}*${fz})
variable           f_module      equal     sqrt(1.58309393958606e-06*1.58309393958606e-06+-1.3984082139096e-09*-1.3984082139096e-09+-3.52121900617132e-07*${fz})
variable           f_module      equal     sqrt(1.58309393958606e-06*1.58309393958606e-06+-1.3984082139096e-09*-1.3984082139096e-09+-3.52121900617132e-07*-3.52121900617132e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000818614365039139*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000818614365039139*-0.000818614365039139+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000818614365039139*-0.000818614365039139+-0.99999841028663*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000818614365039139*-0.000818614365039139+-0.99999841028663*-0.99999841028663+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000818614365039139*-0.000818614365039139+-0.99999841028663*-0.99999841028663+-0.00158407535609093*${unitz})
variable           dir_module    equal     sqrt(-0.000818614365039139*-0.000818614365039139+-0.99999841028663*-0.99999841028663+-0.00158407535609093*-0.00158407535609093)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.58309393958606e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.58309393958606e-06*-0.000818614365039139+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.58309393958606e-06*-0.000818614365039139+-1.3984082139096e-09*${unity}+${fz}*${unitz}
variable           dot      equal     1.58309393958606e-06*-0.000818614365039139+-1.3984082139096e-09*-0.99999841028663+${fz}*${unitz}
variable           dot      equal     1.58309393958606e-06*-0.000818614365039139+-1.3984082139096e-09*-0.99999841028663+-3.52121900617132e-07*${unitz}
variable           dot      equal     1.58309393958606e-06*-0.000818614365039139+-1.3984082139096e-09*-0.99999841028663+-3.52121900617132e-07*-0.00158407535609093
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.60250175797312e-10/${f_module}*${dir_module}
variable           cos      equal     6.60250175797312e-10/1.62178241758686e-06*${dir_module}
variable           cos      equal     6.60250175797312e-10/1.62178241758686e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000407113906672965)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57038921287698/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9766740907224-90.0)
print              "The dot product: ${dot}"
The dot product: 6.60250175797312e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9766740907224

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5291   -1152448.5            0   -1152448.5  0.002590666    1.5898294 0.0053260171 
    5481   -1152449.3            0   -1152449.3 -4.0562073e-05 -7.505457e-08 3.6311746e-05 
Loop time of 2.17189 on 104 procs for 190 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.51042107  -1152449.34502401  -1152449.34502401
  Force two-norm initial, final = 1.5898405 0.00019494013
  Force max component initial, final = 1.5898294 4.0562073e-05
  Final line search alpha, max atom move = 1.0000000 4.0562073e-05
  Iterations, force evaluations = 190 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58624    | 1.5707     | 2.0341     |  33.3 | 72.32
Neigh   | 4.0293e-05 | 0.011842   | 0.017171   |   4.5 |  0.55
Comm    | 0.039296   | 0.35182    | 1.0623     |  50.1 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1578e-05 | 0.0020044  | 0.0051319  |   2.8 |  0.09
Other   |            | 0.2355     |            |       | 10.84

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 4
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563908829452-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563908829452-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563908829452-1.16563631388477)^2+(4.02468199648687-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563908829452-1.16563631388477)^2+(4.02468199648687-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563908829452-1.16563631388477)^2+(4.02468199648687-4.02468295526234)^2+(31.3208501002681-${z_0})^2)
variable                displacement      equal     sqrt((1.16563908829452-1.16563631388477)^2+(4.02468199648687-4.02468295526234)^2+(31.3208501002681-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 2
2
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.342 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.8626 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49002    | 1.3291     | 1.7486     |  30.8 | 71.36
Neigh   | 3.0184e-05 | 0.0088707  | 0.013008   |   3.9 |  0.48
Comm    | 0.029702   | 0.30573    | 0.90265    |  45.0 | 16.41
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8043e-05 | 0.0016893  | 0.0043844  |   2.6 |  0.09
Other   |            | 0.2172     |            |       | 11.66

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,2)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,2)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,2)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.15528452131084
variable                y_1    equal     $y
variable                y_1    equal     4.042889207122
variable                z_1    equal     $z
variable                z_1    equal     31.3031335605025

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.15528452131084  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.15528452131084  y  4.042889207122  z  ${z_1}
set                atom        288751    x  1.15528452131084  y  4.042889207122  z  31.3031335605025
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.15528452131084-${x_0}
variable           vector_x          equal     1.15528452131084-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.042889207122-${y_0}
variable           vector_y          equal     4.042889207122-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3031335605025-${z_0}
variable           vector_z          equal     31.3031335605025-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.01035179257393  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.01035179257393  0.0182062518596604  ${vector_z}
fix                hold    carbon   planeforce   -0.01035179257393  0.0182062518596604  -0.0177347624302016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 -0.0089609675  0.018760303   0.02448958 
     359   -1152449.3            0   -1152449.3 1.4738536e-05 -4.2972226e-07 -9.0440398e-06 
Loop time of 2.32994 on 104 procs for 201 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.34069655   -1152449.3434106   -1152449.3434106
  Force two-norm initial, final = 0.22960683 0.00012017139
  Force max component initial, final = 0.10128229 1.4738536e-05
  Final line search alpha, max atom move = 1.0000000 1.4738536e-05
  Iterations, force evaluations = 201 402

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61309    | 1.6831     | 2.194      |  34.9 | 72.24
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036331   | 0.37698    | 1.1334     |  51.6 | 16.18
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4152e-05 | 0.0033078  | 0.007117   |   2.7 |  0.14
Other   |            | 0.2666     |            |       | 11.44

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15570079161147-${x_0}
variable           new_x         equal     1.15570079161147-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.04358861398911-${y_0}
variable           new_y         equal     4.04358861398911-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3036085842758-${z_0}
variable           new_z         equal     31.3036085842758-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00993552227329997^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00993552227329997^2+0.0189056587267702^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00993552227329997^2+0.0189056587267702^2+-0.0172597386569002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00993552227329997/${norm}
variable           unit_x        equal     -0.00993552227329997/0.0274597362194329
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0189056587267702/${norm}
variable           unit_y        equal     0.0189056587267702/0.0274597362194329
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0172597386569002/${norm}
variable           unit_z        equal     -0.0172597386569002/0.0274597362194329
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15570079161147+${delta}*${unit_x}
variable           x_new         equal     1.15570079161147+0.03*${unit_x}
variable           x_new         equal     1.15570079161147+0.03*-0.361821475410559
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.04358861398911+${delta}*${unit_y}
variable           y_new         equal     4.04358861398911+0.03*${unit_y}
variable           y_new         equal     4.04358861398911+0.03*0.688486538096856
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3036085842758+${delta}*${unit_z}
variable           z_new         equal     31.3036085842758+0.03*${unit_z}
variable           z_new         equal     31.3036085842758+0.03*-0.628547139673021

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14484614734915  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14484614734915  y  4.06424321013202  z   ${z_new}
set                atom          288751    x  1.14484614734915  y  4.06424321013202  z   31.2847521700856
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00993552227329997  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00993552227329997  0.0189056587267702  ${new_z}
fix                hold    carbon   planeforce   -0.00993552227329997  0.0189056587267702  -0.0172597386569002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     359   -1152449.3            0   -1152449.3 -0.0074006581  0.022851268  0.029290575 
     549   -1152449.3            0   -1152449.3 3.4993305e-05 -7.0093968e-06 -2.7821628e-05 
Loop time of 2.25251 on 104 procs for 190 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33474427  -1152449.33796034  -1152449.33796034
  Force two-norm initial, final = 0.25031452 0.00018179392
  Force max component initial, final = 0.11750046 5.6267126e-05
  Final line search alpha, max atom move = 1.0000000 5.6267126e-05
  Iterations, force evaluations = 190 380

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58294    | 1.6053     | 2.1275     |  34.2 | 71.27
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036587   | 0.3728     | 1.0989     |  49.2 | 16.55
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2711e-05 | 0.0031358  | 0.0067966  |   2.7 |  0.14
Other   |            | 0.2713     |            |       | 12.04

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115498 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14565783046364-${x_0}
variable           new_x         equal     1.14565783046364-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.0657364348244-${y_0}
variable           new_y         equal     4.0657364348244-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2859205481923-${z_0}
variable           new_z         equal     31.2859205481923-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0199784834211301*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0199784834211301*-0.0199784834211301+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0199784834211301*-0.0199784834211301+0.0410534795620601*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0199784834211301*-0.0199784834211301+0.0410534795620601*0.0410534795620601+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0199784834211301*-0.0199784834211301+0.0410534795620601*0.0410534795620601+-0.0349477747403988*${new_z})
variable           module        equal     sqrt(-0.0199784834211301*-0.0199784834211301+0.0410534795620601*0.0410534795620601+-0.0349477747403988*-0.0349477747403988)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0199784834211301/${module}
variable           unitx         equal     -0.0199784834211301/0.0574967385446037
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0410534795620601/${module}
variable           unity         equal     0.0410534795620601/0.0574967385446037
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0349477747403988/${module}
variable           unitz         equal     -0.0349477747403988/0.0574967385446037
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.4993304769632e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.4993304769632e-05*3.4993304769632e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.4993304769632e-05*3.4993304769632e-05+-7.00939682581366e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.4993304769632e-05*3.4993304769632e-05+-7.00939682581366e-06*-7.00939682581366e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.4993304769632e-05*3.4993304769632e-05+-7.00939682581366e-06*-7.00939682581366e-06+-2.78216277064962e-05*${fz})
variable           f_module      equal     sqrt(3.4993304769632e-05*3.4993304769632e-05+-7.00939682581366e-06*-7.00939682581366e-06+-2.78216277064962e-05*-2.78216277064962e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347471594508471*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347471594508471*-0.347471594508471+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347471594508471*-0.347471594508471+0.714014057166259*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347471594508471*-0.347471594508471+0.714014057166259*0.714014057166259+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347471594508471*-0.347471594508471+0.714014057166259*0.714014057166259+-0.607821863031199*${unitz})
variable           dir_module    equal     sqrt(-0.347471594508471*-0.347471594508471+0.714014057166259*0.714014057166259+-0.607821863031199*-0.607821863031199)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.4993304769632e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.4993304769632e-05*-0.347471594508471+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.4993304769632e-05*-0.347471594508471+-7.00939682581366e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.4993304769632e-05*-0.347471594508471+-7.00939682581366e-06*0.714014057166259+${fz}*${unitz}
variable           dot      equal     3.4993304769632e-05*-0.347471594508471+-7.00939682581366e-06*0.714014057166259+-2.78216277064962e-05*${unitz}
variable           dot      equal     3.4993304769632e-05*-0.347471594508471+-7.00939682581366e-06*0.714014057166259+-2.78216277064962e-05*-0.607821863031199
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.53393686189479e-07/${f_module}*${dir_module}
variable           cos      equal     -2.53393686189479e-07/4.52515855059351e-05*${dir_module}
variable           cos      equal     -2.53393686189479e-07/4.52515855059351e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00559966426273051)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57639602032211/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.3208388056761-90.0)
print              "The dot product: ${dot}"
The dot product: -2.53393686189479e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.3208388056761

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0199784834211301^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0199784834211301^2+0.0410534795620601^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0199784834211301^2+0.0410534795620601^2+-0.0349477747403988^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0199784834211301/${norm}
variable           unit_x        equal     -0.0199784834211301/0.0574967385446037
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0410534795620601/${norm}
variable           unit_y        equal     0.0410534795620601/0.0574967385446037
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0349477747403988/${norm}
variable           unit_z        equal     -0.0349477747403988/0.0574967385446037
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14565783046364+${delta}*${unit_x}
variable           x_new         equal     1.14565783046364+0.03*${unit_x}
variable           x_new         equal     1.14565783046364+0.03*-0.347471594508471
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.0657364348244+${delta}*${unit_y}
variable           y_new         equal     4.0657364348244+0.03*${unit_y}
variable           y_new         equal     4.0657364348244+0.03*0.714014057166259
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2859205481923+${delta}*${unit_z}
variable           z_new         equal     31.2859205481923+0.03*${unit_z}
variable           z_new         equal     31.2859205481923+0.03*-0.607821863031199

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13523368262839  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13523368262839  y  4.08715685653939  z   ${z_new}
set                atom          288751    x  1.13523368262839  y  4.08715685653939  z   31.2676858923014
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0199784834211301  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0199784834211301  0.0410534795620601  ${new_z}
fix                hold    carbon   planeforce   -0.0199784834211301  0.0410534795620601  -0.0349477747403988
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     549   -1152449.3            0   -1152449.3 -0.0091201114   0.02545792  0.035119323 
     815   -1152449.3            0   -1152449.3 -9.3526576e-08 -1.1305128e-07 -7.9336359e-08 
Loop time of 3.06987 on 104 procs for 266 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32555222  -1152449.32870889  -1152449.32870889
  Force two-norm initial, final = 0.2495086 3.3670450e-06
  Force max component initial, final = 0.12457192 2.8297594e-07
  Final line search alpha, max atom move = 1.0000000 2.8297594e-07
  Iterations, force evaluations = 266 532

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.81251    | 2.2308     | 2.9004     |  40.1 | 72.67
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.051746   | 0.50012    | 1.5068     |  59.5 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.1898e-05 | 0.0043923  | 0.0093887  |   3.1 |  0.14
Other   |            | 0.3345     |            |       | 10.90

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115481 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.13587405064176-${x_0}
variable           new_x         equal     1.13587405064176-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.08946284736585-${y_0}
variable           new_y         equal     4.08946284736585-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.270028684257-${z_0}
variable           new_z         equal     31.270028684257-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0297622632430101*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0297622632430101*-0.0297622632430101+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0297622632430101*-0.0297622632430101+0.0647798921035099*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0297622632430101*-0.0297622632430101+0.0647798921035099*0.0647798921035099+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0297622632430101*-0.0297622632430101+0.0647798921035099*0.0647798921035099+-0.0508396386757006*${new_z})
variable           module        equal     sqrt(-0.0297622632430101*-0.0297622632430101+0.0647798921035099*0.0647798921035099+-0.0508396386757006*-0.0508396386757006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0297622632430101/${module}
variable           unitx         equal     -0.0297622632430101/0.0875608108400351
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0647798921035099/${module}
variable           unity         equal     0.0647798921035099/0.0875608108400351
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0508396386757006/${module}
variable           unitz         equal     -0.0508396386757006/0.0875608108400351
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.35265762478576e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.35265762478576e-08*-9.35265762478576e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.35265762478576e-08*-9.35265762478576e-08+-1.13051278561355e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.35265762478576e-08*-9.35265762478576e-08+-1.13051278561355e-07*-1.13051278561355e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-9.35265762478576e-08*-9.35265762478576e-08+-1.13051278561355e-07*-1.13051278561355e-07+-7.93363587982298e-08*${fz})
variable           f_module      equal     sqrt(-9.35265762478576e-08*-9.35265762478576e-08+-1.13051278561355e-07*-1.13051278561355e-07+-7.93363587982298e-08*-7.93363587982298e-08)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.339903924569438*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.339903924569438*-0.339903924569438+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.339903924569438*-0.339903924569438+0.739827457992096*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.339903924569438*-0.339903924569438+0.739827457992096*0.739827457992096+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.339903924569438*-0.339903924569438+0.739827457992096*0.739827457992096+-0.580620921482552*${unitz})
variable           dir_module    equal     sqrt(-0.339903924569438*-0.339903924569438+0.739827457992096*0.739827457992096+-0.580620921482552*-0.580620921482552)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.35265762478576e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.35265762478576e-08*-0.339903924569438+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.35265762478576e-08*-0.339903924569438+-1.13051278561355e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -9.35265762478576e-08*-0.339903924569438+-1.13051278561355e-07*0.739827457992096+${fz}*${unitz}
variable           dot      equal     -9.35265762478576e-08*-0.339903924569438+-1.13051278561355e-07*0.739827457992096+-7.93363587982298e-08*${unitz}
variable           dot      equal     -9.35265762478576e-08*-0.339903924569438+-1.13051278561355e-07*0.739827457992096+-7.93363587982298e-08*-0.580620921482552
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.78403997011548e-09/${f_module}*${dir_module}
variable           cos      equal     -5.78403997011548e-09/1.66799490036285e-07*${dir_module}
variable           cos      equal     -5.78403997011548e-09/1.66799490036285e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0346766046398418)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60547988477619/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.9872214908254-90.0)
print              "The dot product: ${dot}"
The dot product: -5.78403997011548e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.9872214908254

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0297622632430101^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0297622632430101^2+0.0647798921035099^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0297622632430101^2+0.0647798921035099^2+-0.0508396386757006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0297622632430101/${norm}
variable           unit_x        equal     -0.0297622632430101/0.0875608108400351
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0647798921035099/${norm}
variable           unit_y        equal     0.0647798921035099/0.0875608108400351
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0508396386757006/${norm}
variable           unit_z        equal     -0.0508396386757006/0.0875608108400351
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.13587405064176+${delta}*${unit_x}
variable           x_new         equal     1.13587405064176+0.03*${unit_x}
variable           x_new         equal     1.13587405064176+0.03*-0.339903924569438
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.08946284736585+${delta}*${unit_y}
variable           y_new         equal     4.08946284736585+0.03*${unit_y}
variable           y_new         equal     4.08946284736585+0.03*0.739827457992096
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.270028684257+${delta}*${unit_z}
variable           z_new         equal     31.270028684257+0.03*${unit_z}
variable           z_new         equal     31.270028684257+0.03*-0.580620921482552

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12567693290468  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12567693290468  y  4.11165767110561  z   ${z_new}
set                atom          288751    x  1.12567693290468  y  4.11165767110561  z   31.2526100566125
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0297622632430101  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0297622632430101  0.0647798921035099  ${new_z}
fix                hold    carbon   planeforce   -0.0297622632430101  0.0647798921035099  -0.0508396386757006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     815   -1152449.3            0   -1152449.3 -0.013901604   0.02611578   0.04141494 
    1000   -1152449.3            0   -1152449.3 2.9230484e-05 -7.9966569e-06 -2.7301294e-05 
    1023   -1152449.3            0   -1152449.3 -8.4151352e-06 -2.8547696e-06 1.2887937e-06 
Loop time of 2.42593 on 104 procs for 208 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31308733  -1152449.31613712  -1152449.31613712
  Force two-norm initial, final = 0.24856327 6.3710528e-05
  Force max component initial, final = 0.13225621 1.2741773e-05
  Final line search alpha, max atom move = 1.0000000 1.2741773e-05
  Iterations, force evaluations = 208 416

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63558    | 1.7531     | 2.2923     |  35.7 | 72.27
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040397   | 0.39653    | 1.1831     |  52.5 | 16.35
Output  | 0.00010015 | 0.00011008 | 0.00026186 |   0.0 |  0.00
Modify  | 2.511e-05  | 0.003431   | 0.0073501  |   2.8 |  0.14
Other   |            | 0.2727     |            |       | 11.24

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.12 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115482 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12432976107032-${x_0}
variable           new_x         equal     1.12432976107032-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.11457255677449-${y_0}
variable           new_y         equal     4.11457255677449-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2571128593045-${z_0}
variable           new_z         equal     31.2571128593045-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0413065528144501*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0413065528144501*-0.0413065528144501+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0413065528144501*-0.0413065528144501+0.0898896015121506*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0413065528144501*-0.0413065528144501+0.0898896015121506*0.0898896015121506+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0413065528144501*-0.0413065528144501+0.0898896015121506*0.0898896015121506+-0.0637554636282012*${new_z})
variable           module        equal     sqrt(-0.0413065528144501*-0.0413065528144501+0.0898896015121506*0.0898896015121506+-0.0637554636282012*-0.0637554636282012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0413065528144501/${module}
variable           unitx         equal     -0.0413065528144501/0.117690827628465
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0898896015121506/${module}
variable           unity         equal     0.0898896015121506/0.117690827628465
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0637554636282012/${module}
variable           unitz         equal     -0.0637554636282012/0.117690827628465
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.41513519147134e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.41513519147134e-06*-8.41513519147134e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.41513519147134e-06*-8.41513519147134e-06+-2.85476955422714e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.41513519147134e-06*-8.41513519147134e-06+-2.85476955422714e-06*-2.85476955422714e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-8.41513519147134e-06*-8.41513519147134e-06+-2.85476955422714e-06*-2.85476955422714e-06+1.28879368133773e-06*${fz})
variable           f_module      equal     sqrt(-8.41513519147134e-06*-8.41513519147134e-06+-2.85476955422714e-06*-2.85476955422714e-06+1.28879368133773e-06*1.28879368133773e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.350975123948059*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.350975123948059*-0.350975123948059+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.350975123948059*-0.350975123948059+0.76377746102628*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.350975123948059*-0.350975123948059+0.76377746102628*0.76377746102628+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.350975123948059*-0.350975123948059+0.76377746102628*0.76377746102628+-0.541719902161527*${unitz})
variable           dir_module    equal     sqrt(-0.350975123948059*-0.350975123948059+0.76377746102628*0.76377746102628+-0.541719902161527*-0.541719902161527)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.41513519147134e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.41513519147134e-06*-0.350975123948059+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.41513519147134e-06*-0.350975123948059+-2.85476955422714e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -8.41513519147134e-06*-0.350975123948059+-2.85476955422714e-06*0.76377746102628+${fz}*${unitz}
variable           dot      equal     -8.41513519147134e-06*-0.350975123948059+-2.85476955422714e-06*0.76377746102628+1.28879368133773e-06*${unitz}
variable           dot      equal     -8.41513519147134e-06*-0.350975123948059+-2.85476955422714e-06*0.76377746102628+1.28879368133773e-06*-0.541719902161527
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.49292879629273e-08/${f_module}*${dir_module}
variable           cos      equal     7.49292879629273e-08/8.97915355985951e-06*${dir_module}
variable           cos      equal     7.49292879629273e-08/8.97915355985951e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00834480527183452)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56245142467053/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.521872327824-90.0)
print              "The dot product: ${dot}"
The dot product: 7.49292879629273e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.521872327824

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0413065528144501^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0413065528144501^2+0.0898896015121506^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0413065528144501^2+0.0898896015121506^2+-0.0637554636282012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0413065528144501/${norm}
variable           unit_x        equal     -0.0413065528144501/0.117690827628465
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0898896015121506/${norm}
variable           unit_y        equal     0.0898896015121506/0.117690827628465
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0637554636282012/${norm}
variable           unit_z        equal     -0.0637554636282012/0.117690827628465
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12432976107032+${delta}*${unit_x}
variable           x_new         equal     1.12432976107032+0.03*${unit_x}
variable           x_new         equal     1.12432976107032+0.03*-0.350975123948059
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.11457255677449+${delta}*${unit_y}
variable           y_new         equal     4.11457255677449+0.03*${unit_y}
variable           y_new         equal     4.11457255677449+0.03*0.76377746102628
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2571128593045+${delta}*${unit_z}
variable           z_new         equal     31.2571128593045+0.03*${unit_z}
variable           z_new         equal     31.2571128593045+0.03*-0.541719902161527

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11380050735188  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11380050735188  y  4.13748588060528  z   ${z_new}
set                atom          288751    x  1.11380050735188  y  4.13748588060528  z   31.2408612622397
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0413065528144501  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0413065528144501  0.0898896015121506  ${new_z}
fix                hold    carbon   planeforce   -0.0413065528144501  0.0898896015121506  -0.0637554636282012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1023   -1152449.3            0   -1152449.3 -0.011476688  0.022539527  0.039214389 
    1213   -1152449.3            0   -1152449.3 -1.2313267e-05 2.2797989e-06 1.1191964e-05 
Loop time of 2.20508 on 104 procs for 190 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.29809511  -1152449.30106415  -1152449.30106415
  Force two-norm initial, final = 0.24599419 8.2216240e-05
  Force max component initial, final = 0.14002415 2.3023290e-05
  Final line search alpha, max atom move = 1.0000000 2.3023290e-05
  Iterations, force evaluations = 190 380

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58072    | 1.5949     | 2.0775     |  33.9 | 72.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036353   | 0.36066    | 1.0761     |  50.0 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.284e-05  | 0.0031324  | 0.0067263  |   2.6 |  0.14
Other   |            | 0.2464     |            |       | 11.17

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115483 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.11212184910288-${x_0}
variable           new_x         equal     1.11212184910288-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.14018711156329-${y_0}
variable           new_y         equal     4.14018711156329-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2457573470968-${z_0}
variable           new_z         equal     31.2457573470968-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0535144647818901*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0535144647818901*-0.0535144647818901+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0535144647818901*-0.0535144647818901+0.11550415630095*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0535144647818901*-0.0535144647818901+0.11550415630095*0.11550415630095+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0535144647818901*-0.0535144647818901+0.11550415630095*0.11550415630095+-0.0751109758359014*${new_z})
variable           module        equal     sqrt(-0.0535144647818901*-0.0535144647818901+0.11550415630095*0.11550415630095+-0.0751109758359014*-0.0751109758359014)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0535144647818901/${module}
variable           unitx         equal     -0.0535144647818901/0.147806179690525
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.11550415630095/${module}
variable           unity         equal     0.11550415630095/0.147806179690525
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0751109758359014/${module}
variable           unitz         equal     -0.0751109758359014/0.147806179690525
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.23132674539783e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.23132674539783e-05*-1.23132674539783e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.23132674539783e-05*-1.23132674539783e-05+2.27979889031146e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.23132674539783e-05*-1.23132674539783e-05+2.27979889031146e-06*2.27979889031146e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.23132674539783e-05*-1.23132674539783e-05+2.27979889031146e-06*2.27979889031146e-06+1.11919638816263e-05*${fz})
variable           f_module      equal     sqrt(-1.23132674539783e-05*-1.23132674539783e-05+2.27979889031146e-06*2.27979889031146e-06+1.11919638816263e-05*1.11919638816263e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.362058371943163*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.362058371943163*-0.362058371943163+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.362058371943163*-0.362058371943163+0.781456881862391*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.362058371943163*-0.362058371943163+0.781456881862391*0.781456881862391+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.362058371943163*-0.362058371943163+0.781456881862391*0.781456881862391+-0.508172093975827*${unitz})
variable           dir_module    equal     sqrt(-0.362058371943163*-0.362058371943163+0.781456881862391*0.781456881862391+-0.508172093975827*-0.508172093975827)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.23132674539783e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.23132674539783e-05*-0.362058371943163+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.23132674539783e-05*-0.362058371943163+2.27979889031146e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.23132674539783e-05*-0.362058371943163+2.27979889031146e-06*0.781456881862391+${fz}*${unitz}
variable           dot      equal     -1.23132674539783e-05*-0.362058371943163+2.27979889031146e-06*0.781456881862391+1.11919638816263e-05*${unitz}
variable           dot      equal     -1.23132674539783e-05*-0.362058371943163+2.27979889031146e-06*0.781456881862391+1.11919638816263e-05*-0.508172093975827
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.52242378356391e-07/${f_module}*${dir_module}
variable           cos      equal     5.52242378356391e-07/1.67950615926556e-05*${dir_module}
variable           cos      equal     5.52242378356391e-07/1.67950615926556e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0328812356721504)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5379091631729/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.1157043243034-90.0)
print              "The dot product: ${dot}"
The dot product: 5.52242378356391e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.1157043243034

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0535144647818901^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0535144647818901^2+0.11550415630095^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0535144647818901^2+0.11550415630095^2+-0.0751109758359014^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0535144647818901/${norm}
variable           unit_x        equal     -0.0535144647818901/0.147806179690525
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.11550415630095/${norm}
variable           unit_y        equal     0.11550415630095/0.147806179690525
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0751109758359014/${norm}
variable           unit_z        equal     -0.0751109758359014/0.147806179690525
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.11212184910288+${delta}*${unit_x}
variable           x_new         equal     1.11212184910288+0.03*${unit_x}
variable           x_new         equal     1.11212184910288+0.03*-0.362058371943163
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.14018711156329+${delta}*${unit_y}
variable           y_new         equal     4.14018711156329+0.03*${unit_y}
variable           y_new         equal     4.14018711156329+0.03*0.781456881862391
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2457573470968+${delta}*${unit_z}
variable           z_new         equal     31.2457573470968+0.03*${unit_z}
variable           z_new         equal     31.2457573470968+0.03*-0.508172093975827

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10126009794459  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10126009794459  y  4.16363081801916  z   ${z_new}
set                atom          288751    x  1.10126009794459  y  4.16363081801916  z   31.2305121842775
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0535144647818901  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0535144647818901  0.11550415630095  ${new_z}
fix                hold    carbon   planeforce   -0.0535144647818901  0.11550415630095  -0.0751109758359014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1213   -1152449.3            0   -1152449.3 -0.007708258  0.018269103  0.033585779 
    1380   -1152449.3            0   -1152449.3 1.6453945e-05 -6.4867495e-07 -1.2720494e-05 
Loop time of 1.94444 on 104 procs for 167 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.28066236  -1152449.28355137  -1152449.28355137
  Force two-norm initial, final = 0.24254503 0.00021555641
  Force max component initial, final = 0.14682542 2.7079367e-05
  Final line search alpha, max atom move = 1.0000000 2.7079367e-05
  Iterations, force evaluations = 167 334

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51342    | 1.4064     | 1.8311     |  31.8 | 72.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031509   | 0.31661    | 0.95373    |  46.8 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9907e-05 | 0.0027537  | 0.0059495  |   2.5 |  0.14
Other   |            | 0.2187     |            |       | 11.25

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115482 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.09988311206115-${x_0}
variable           new_x         equal     1.09988311206115-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.16586322941622-${y_0}
variable           new_y         equal     4.16586322941622-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2349262057146-${z_0}
variable           new_z         equal     31.2349262057146-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.06575320182362*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.06575320182362*-0.06575320182362+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.06575320182362*-0.06575320182362+0.14118027415388*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.06575320182362*-0.06575320182362+0.14118027415388*0.14118027415388+${new_z}*${new_z})
variable           module        equal     sqrt(-0.06575320182362*-0.06575320182362+0.14118027415388*0.14118027415388+-0.0859421172180994*${new_z})
variable           module        equal     sqrt(-0.06575320182362*-0.06575320182362+0.14118027415388*0.14118027415388+-0.0859421172180994*-0.0859421172180994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.06575320182362/${module}
variable           unitx         equal     -0.06575320182362/0.177880299280589
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.14118027415388/${module}
variable           unity         equal     0.14118027415388/0.177880299280589
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0859421172180994/${module}
variable           unitz         equal     -0.0859421172180994/0.177880299280589
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.64539446944318e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.64539446944318e-05*1.64539446944318e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.64539446944318e-05*1.64539446944318e-05+-6.48674946091804e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.64539446944318e-05*1.64539446944318e-05+-6.48674946091804e-07*-6.48674946091804e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.64539446944318e-05*1.64539446944318e-05+-6.48674946091804e-07*-6.48674946091804e-07+-1.27204937173847e-05*${fz})
variable           f_module      equal     sqrt(1.64539446944318e-05*1.64539446944318e-05+-6.48674946091804e-07*-6.48674946091804e-07+-1.27204937173847e-05*-1.27204937173847e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.36964859003245*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.36964859003245*-0.36964859003245+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.36964859003245*-0.36964859003245+0.793681339220043*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.36964859003245*-0.36964859003245+0.793681339220043*0.793681339220043+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.36964859003245*-0.36964859003245+0.793681339220043*0.793681339220043+-0.48314578717081*${unitz})
variable           dir_module    equal     sqrt(-0.36964859003245*-0.36964859003245+0.793681339220043*0.793681339220043+-0.48314578717081*-0.48314578717081)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.64539446944318e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.64539446944318e-05*-0.36964859003245+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.64539446944318e-05*-0.36964859003245+-6.48674946091804e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.64539446944318e-05*-0.36964859003245+-6.48674946091804e-07*0.793681339220043+${fz}*${unitz}
variable           dot      equal     1.64539446944318e-05*-0.36964859003245+-6.48674946091804e-07*0.793681339220043+-1.27204937173847e-05*${unitz}
variable           dot      equal     1.64539446944318e-05*-0.36964859003245+-6.48674946091804e-07*0.793681339220043+-1.27204937173847e-05*-0.48314578717081
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.51165706414083e-07/${f_module}*${dir_module}
variable           cos      equal     -4.51165706414083e-07/2.08077878595282e-05*${dir_module}
variable           cos      equal     -4.51165706414083e-07/2.08077878595282e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0216825406650562)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59248056676424/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.2424154321923-90.0)
print              "The dot product: ${dot}"
The dot product: -4.51165706414083e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.2424154321923

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.06575320182362^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.06575320182362^2+0.14118027415388^2+${new_z}^2)
variable           norm          equal     sqrt(-0.06575320182362^2+0.14118027415388^2+-0.0859421172180994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.06575320182362/${norm}
variable           unit_x        equal     -0.06575320182362/0.177880299280589
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.14118027415388/${norm}
variable           unit_y        equal     0.14118027415388/0.177880299280589
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0859421172180994/${norm}
variable           unit_z        equal     -0.0859421172180994/0.177880299280589
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.09988311206115+${delta}*${unit_x}
variable           x_new         equal     1.09988311206115+0.03*${unit_x}
variable           x_new         equal     1.09988311206115+0.03*-0.36964859003245
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.16586322941622+${delta}*${unit_y}
variable           y_new         equal     4.16586322941622+0.03*${unit_y}
variable           y_new         equal     4.16586322941622+0.03*0.793681339220043
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2349262057146+${delta}*${unit_z}
variable           z_new         equal     31.2349262057146+0.03*${unit_z}
variable           z_new         equal     31.2349262057146+0.03*-0.48314578717081

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08879365436018  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08879365436018  y  4.18967366959282  z   ${z_new}
set                atom          288751    x  1.08879365436018  y  4.18967366959282  z   31.2204318320995
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.06575320182362  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.06575320182362  0.14118027415388  ${new_z}
fix                hold    carbon   planeforce   -0.06575320182362  0.14118027415388  -0.0859421172180994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1380   -1152449.3            0   -1152449.3 -0.0042101654  0.014737656  0.027431232 
    1566   -1152449.3            0   -1152449.3 -2.6255401e-05 -2.8689466e-06 1.5374743e-05 
Loop time of 2.14953 on 104 procs for 186 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.26048868   -1152449.2633037   -1152449.2633037
  Force two-norm initial, final = 0.24005855 0.00010593409
  Force max component initial, final = 0.15255076 2.6255401e-05
  Final line search alpha, max atom move = 1.0000000 2.6255401e-05
  Iterations, force evaluations = 186 372

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56718    | 1.5619     | 2.0298     |  33.7 | 72.66
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034803   | 0.34959    | 1.054      |  50.0 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2525e-05 | 0.0030709  | 0.0065758  |   2.6 |  0.14
Other   |            | 0.2349     |            |       | 10.93

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115482 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.0879184261717-${x_0}
variable           new_x         equal     1.0879184261717-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.19146163824022-${y_0}
variable           new_y         equal     4.19146163824022-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2240386196629-${z_0}
variable           new_z         equal     31.2240386196629-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07771788771307*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07771788771307*-0.07771788771307+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07771788771307*-0.07771788771307+0.16677868297788*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07771788771307*-0.07771788771307+0.16677868297788*0.16677868297788+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07771788771307*-0.07771788771307+0.16677868297788*0.16677868297788+-0.0968297032698011*${new_z})
variable           module        equal     sqrt(-0.07771788771307*-0.07771788771307+0.16677868297788*0.16677868297788+-0.0968297032698011*-0.0968297032698011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.07771788771307/${module}
variable           unitx         equal     -0.07771788771307/0.207921116295905
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.16677868297788/${module}
variable           unity         equal     0.16677868297788/0.207921116295905
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0968297032698011/${module}
variable           unitz         equal     -0.0968297032698011/0.207921116295905
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.62554007378623e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.62554007378623e-05*-2.62554007378623e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.62554007378623e-05*-2.62554007378623e-05+-2.86894662975325e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.62554007378623e-05*-2.62554007378623e-05+-2.86894662975325e-06*-2.86894662975325e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.62554007378623e-05*-2.62554007378623e-05+-2.86894662975325e-06*-2.86894662975325e-06+1.53747433127006e-05*${fz})
variable           f_module      equal     sqrt(-2.62554007378623e-05*-2.62554007378623e-05+-2.86894662975325e-06*-2.86894662975325e-06+1.53747433127006e-05*1.53747433127006e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.373785448527821*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.373785448527821*-0.373785448527821+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.373785448527821*-0.373785448527821+0.802124795927544*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.373785448527821*-0.373785448527821+0.802124795927544*0.802124795927544+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.373785448527821*-0.373785448527821+0.802124795927544*0.802124795927544+-0.465704037159924*${unitz})
variable           dir_module    equal     sqrt(-0.373785448527821*-0.373785448527821+0.802124795927544*0.802124795927544+-0.465704037159924*-0.465704037159924)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.62554007378623e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.62554007378623e-05*-0.373785448527821+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.62554007378623e-05*-0.373785448527821+-2.86894662975325e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.62554007378623e-05*-0.373785448527821+-2.86894662975325e-06*0.802124795927544+${fz}*${unitz}
variable           dot      equal     -2.62554007378623e-05*-0.373785448527821+-2.86894662975325e-06*0.802124795927544+1.53747433127006e-05*${unitz}
variable           dot      equal     -2.62554007378623e-05*-0.373785448527821+-2.86894662975325e-06*0.802124795927544+1.53747433127006e-05*-0.465704037159924
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.52553480139486e-07/${f_module}*${dir_module}
variable           cos      equal     3.52553480139486e-07/3.05607535018616e-05*${dir_module}
variable           cos      equal     3.52553480139486e-07/3.05607535018616e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0115361514276148)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55925991947475/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.3390125498118-90.0)
print              "The dot product: ${dot}"
The dot product: 3.52553480139486e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.3390125498118

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07771788771307^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07771788771307^2+0.16677868297788^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07771788771307^2+0.16677868297788^2+-0.0968297032698011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.07771788771307/${norm}
variable           unit_x        equal     -0.07771788771307/0.207921116295905
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.16677868297788/${norm}
variable           unit_y        equal     0.16677868297788/0.207921116295905
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0968297032698011/${norm}
variable           unit_z        equal     -0.0968297032698011/0.207921116295905
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.0879184261717+${delta}*${unit_x}
variable           x_new         equal     1.0879184261717+0.03*${unit_x}
variable           x_new         equal     1.0879184261717+0.03*-0.373785448527821
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.19146163824022+${delta}*${unit_y}
variable           y_new         equal     4.19146163824022+0.03*${unit_y}
variable           y_new         equal     4.19146163824022+0.03*0.802124795927544
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2240386196629+${delta}*${unit_z}
variable           z_new         equal     31.2240386196629+0.03*${unit_z}
variable           z_new         equal     31.2240386196629+0.03*-0.465704037159924

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07670486271587  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07670486271587  y  4.21552538211805  z   ${z_new}
set                atom          288751    x  1.07670486271587  y  4.21552538211805  z   31.2100674985481
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07771788771307  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07771788771307  0.16677868297788  ${new_z}
fix                hold    carbon   planeforce   -0.07771788771307  0.16677868297788  -0.0968297032698011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1566   -1152449.2            0   -1152449.2 -0.0013243564  0.012087301  0.021882028 
    1784   -1152449.2            0   -1152449.2 5.8824682e-08 1.9586163e-06 3.3262904e-06 
Loop time of 2.59078 on 104 procs for 218 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
       -1152449.237309  -1152449.24006424  -1152449.24006424
  Force two-norm initial, final = 0.23863145 4.1081737e-05
  Force max component initial, final = 0.15751579 9.8239547e-06
  Final line search alpha, max atom move = 1.0000000 9.8239547e-06
  Iterations, force evaluations = 218 436

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6697     | 1.8461     | 2.4245     |  36.3 | 71.25
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.049757   | 0.42509    | 1.2663     |  53.2 | 16.41
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6185e-05 | 0.0035919  | 0.0077988  |   2.8 |  0.14
Other   |            | 0.316      |            |       | 12.20

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115482 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07629647991292-${x_0}
variable           new_x         equal     1.07629647991292-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.21699941958866-${y_0}
variable           new_y         equal     4.21699941958866-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2129341465648-${z_0}
variable           new_z         equal     31.2129341465648-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0893398339718501*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0893398339718501*-0.0893398339718501+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0893398339718501*-0.0893398339718501+0.19231646432632*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0893398339718501*-0.0893398339718501+0.19231646432632*0.19231646432632+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0893398339718501*-0.0893398339718501+0.19231646432632*0.19231646432632+-0.107934176367902*${new_z})
variable           module        equal     sqrt(-0.0893398339718501*-0.0893398339718501+0.19231646432632*0.19231646432632+-0.107934176367902*-0.107934176367902)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0893398339718501/${module}
variable           unitx         equal     -0.0893398339718501/0.237943301677756
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.19231646432632/${module}
variable           unity         equal     0.19231646432632/0.237943301677756
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.107934176367902/${module}
variable           unitz         equal     -0.107934176367902/0.237943301677756
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.88246822397783e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.88246822397783e-08*5.88246822397783e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.88246822397783e-08*5.88246822397783e-08+1.9586162672091e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.88246822397783e-08*5.88246822397783e-08+1.9586162672091e-06*1.9586162672091e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.88246822397783e-08*5.88246822397783e-08+1.9586162672091e-06*1.9586162672091e-06+3.32629039032061e-06*${fz})
variable           f_module      equal     sqrt(5.88246822397783e-08*5.88246822397783e-08+1.9586162672091e-06*1.9586162672091e-06+3.32629039032061e-06*3.32629039032061e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375466900483889*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375466900483889*-0.375466900483889+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375466900483889*-0.375466900483889+0.808244917887086*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375466900483889*-0.375466900483889+0.808244917887086*0.808244917887086+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375466900483889*-0.375466900483889+0.808244917887086*0.808244917887086+-0.453613006152516*${unitz})
variable           dir_module    equal     sqrt(-0.375466900483889*-0.375466900483889+0.808244917887086*0.808244917887086+-0.453613006152516*-0.453613006152516)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.88246822397783e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.88246822397783e-08*-0.375466900483889+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.88246822397783e-08*-0.375466900483889+1.9586162672091e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.88246822397783e-08*-0.375466900483889+1.9586162672091e-06*0.808244917887086+${fz}*${unitz}
variable           dot      equal     5.88246822397783e-08*-0.375466900483889+1.9586162672091e-06*0.808244917887086+3.32629039032061e-06*${unitz}
variable           dot      equal     5.88246822397783e-08*-0.375466900483889+1.9586162672091e-06*0.808244917887086+3.32629039032061e-06*-0.453613006152516
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.2106339660653e-08/${f_module}*${dir_module}
variable           cos      equal     5.2106339660653e-08/3.86054993312558e-06*${dir_module}
variable           cos      equal     5.2106339660653e-08/3.86054993312558e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0134971287933755)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55729878816701/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.2266480028073-90.0)
print              "The dot product: ${dot}"
The dot product: 5.2106339660653e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.2266480028073

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0893398339718501^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0893398339718501^2+0.19231646432632^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0893398339718501^2+0.19231646432632^2+-0.107934176367902^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0893398339718501/${norm}
variable           unit_x        equal     -0.0893398339718501/0.237943301677756
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.19231646432632/${norm}
variable           unit_y        equal     0.19231646432632/0.237943301677756
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.107934176367902/${norm}
variable           unit_z        equal     -0.107934176367902/0.237943301677756
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07629647991292+${delta}*${unit_x}
variable           x_new         equal     1.07629647991292+0.03*${unit_x}
variable           x_new         equal     1.07629647991292+0.03*-0.375466900483889
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.21699941958866+${delta}*${unit_y}
variable           y_new         equal     4.21699941958866+0.03*${unit_y}
variable           y_new         equal     4.21699941958866+0.03*0.808244917887086
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2129341465648+${delta}*${unit_z}
variable           z_new         equal     31.2129341465648+0.03*${unit_z}
variable           z_new         equal     31.2129341465648+0.03*-0.453613006152516

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0650324728984  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0650324728984  y  4.24124676712527  z   ${z_new}
set                atom          288751    x  1.0650324728984  y  4.24124676712527  z   31.1993257563802
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0893398339718501  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0893398339718501  0.19231646432632  ${new_z}
fix                hold    carbon   planeforce   -0.0893398339718501  0.19231646432632  -0.107934176367902
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1784   -1152449.2            0   -1152449.2 0.00091324876  0.010268166  0.017539838 
    1968   -1152449.2            0   -1152449.2 -3.4851247e-05 4.1313628e-06 3.6208491e-05 
Loop time of 2.14644 on 104 procs for 184 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.21090711  -1152449.21362286  -1152449.21362286
  Force two-norm initial, final = 0.23803219 0.00013744391
  Force max component initial, final = 0.16193503 3.6658886e-05
  Final line search alpha, max atom move = 1.0000000 3.6658886e-05
  Iterations, force evaluations = 184 368

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56361    | 1.5475     | 2.0129     |  33.5 | 72.10
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034482   | 0.34905    | 1.0416     |  49.2 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2438e-05 | 0.0030363  | 0.0064926  |   2.6 |  0.14
Other   |            | 0.2468     |            |       | 11.50

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115484 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06503824863523-${x_0}
variable           new_x         equal     1.06503824863523-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.2425665944321-${y_0}
variable           new_y         equal     4.2425665944321-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2016726359909-${z_0}
variable           new_z         equal     31.2016726359909-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10059806524954*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10059806524954*-0.10059806524954+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10059806524954*-0.10059806524954+0.21788363916976*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10059806524954*-0.10059806524954+0.21788363916976*0.21788363916976+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10059806524954*-0.10059806524954+0.21788363916976*0.21788363916976+-0.119195686941801*${new_z})
variable           module        equal     sqrt(-0.10059806524954*-0.10059806524954+0.21788363916976*0.21788363916976+-0.119195686941801*-0.119195686941801)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10059806524954/${module}
variable           unitx         equal     -0.10059806524954/0.26795682998449
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.21788363916976/${module}
variable           unity         equal     0.21788363916976/0.26795682998449
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.119195686941801/${module}
variable           unitz         equal     -0.119195686941801/0.26795682998449
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.48512465812069e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.48512465812069e-05*-3.48512465812069e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.48512465812069e-05*-3.48512465812069e-05+4.13136276353e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.48512465812069e-05*-3.48512465812069e-05+4.13136276353e-06*4.13136276353e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.48512465812069e-05*-3.48512465812069e-05+4.13136276353e-06*4.13136276353e-06+3.62084910854728e-05*${fz})
variable           f_module      equal     sqrt(-3.48512465812069e-05*-3.48512465812069e-05+4.13136276353e-06*4.13136276353e-06+3.62084910854728e-05*3.62084910854728e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375426389599261*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375426389599261*-0.375426389599261+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375426389599261*-0.375426389599261+0.813129634286133*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375426389599261*-0.375426389599261+0.813129634286133*0.813129634286133+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.375426389599261*-0.375426389599261+0.813129634286133*0.813129634286133+-0.444831680344555*${unitz})
variable           dir_module    equal     sqrt(-0.375426389599261*-0.375426389599261+0.813129634286133*0.813129634286133+-0.444831680344555*-0.444831680344555)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.48512465812069e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.48512465812069e-05*-0.375426389599261+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.48512465812069e-05*-0.375426389599261+4.13136276353e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.48512465812069e-05*-0.375426389599261+4.13136276353e-06*0.813129634286133+${fz}*${unitz}
variable           dot      equal     -3.48512465812069e-05*-0.375426389599261+4.13136276353e-06*0.813129634286133+3.62084910854728e-05*${unitz}
variable           dot      equal     -3.48512465812069e-05*-0.375426389599261+4.13136276353e-06*0.813129634286133+3.62084910854728e-05*-0.444831680344555
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.36727237736887e-07/${f_module}*${dir_module}
variable           cos      equal     3.36727237736887e-07/5.04255131182096e-05*${dir_module}
variable           cos      equal     3.36727237736887e-07/5.04255131182096e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00667771564262551)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56411856152262/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.6173922333195-90.0)
print              "The dot product: ${dot}"
The dot product: 3.36727237736887e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.6173922333195

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10059806524954^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10059806524954^2+0.21788363916976^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10059806524954^2+0.21788363916976^2+-0.119195686941801^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10059806524954/${norm}
variable           unit_x        equal     -0.10059806524954/0.26795682998449
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.21788363916976/${norm}
variable           unit_y        equal     0.21788363916976/0.26795682998449
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.119195686941801/${norm}
variable           unit_z        equal     -0.119195686941801/0.26795682998449
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06503824863523+${delta}*${unit_x}
variable           x_new         equal     1.06503824863523+0.03*${unit_x}
variable           x_new         equal     1.06503824863523+0.03*-0.375426389599261
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.2425665944321+${delta}*${unit_y}
variable           y_new         equal     4.2425665944321+0.03*${unit_y}
variable           y_new         equal     4.2425665944321+0.03*0.813129634286133
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2016726359909+${delta}*${unit_z}
variable           z_new         equal     31.2016726359909+0.03*${unit_z}
variable           z_new         equal     31.2016726359909+0.03*-0.444831680344555

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05377545694725  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05377545694725  y  4.26696048346068  z   ${z_new}
set                atom          288751    x  1.05377545694725  y  4.26696048346068  z   31.1883276855806
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10059806524954  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10059806524954  0.21788363916976  ${new_z}
fix                hold    carbon   planeforce   -0.10059806524954  0.21788363916976  -0.119195686941801
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1968   -1152449.2            0   -1152449.2 0.0028351266 0.0092201074  0.014461113 
    2000   -1152449.2            0   -1152449.2 -1.5239108e-05 0.00018561109 0.00035214903 
    2172   -1152449.2            0   -1152449.2 -1.967424e-05 2.6022417e-06 2.1361313e-05 
Loop time of 2.43763 on 104 procs for 204 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.18111126  -1152449.18380592  -1152449.18380592
  Force two-norm initial, final = 0.23817036 8.9033416e-05
  Force max component initial, final = 0.16607145 2.2913683e-05
  Final line search alpha, max atom move = 1.0000000 2.2913683e-05
  Iterations, force evaluations = 204 408

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62385    | 1.7254     | 2.2855     |  35.5 | 70.78
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043618   | 0.40032    | 1.1795     |  51.1 | 16.42
Output  | 0.00010141 | 0.00010338 | 0.00018457 |   0.0 |  0.00
Modify  | 2.4531e-05 | 0.0033699  | 0.0072565  |   2.7 |  0.14
Other   |            | 0.3085     |            |       | 12.65

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.07 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115486 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05419000222792-${x_0}
variable           new_x         equal     1.05419000222792-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.26826025671225-${y_0}
variable           new_y         equal     4.26826025671225-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1903537393681-${z_0}
variable           new_z         equal     31.1903537393681-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11144631165685*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11144631165685*-0.11144631165685+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11144631165685*-0.11144631165685+0.243577301449911*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11144631165685*-0.11144631165685+0.243577301449911*0.243577301449911+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11144631165685*-0.11144631165685+0.243577301449911*0.243577301449911+-0.130514583564601*${new_z})
variable           module        equal     sqrt(-0.11144631165685*-0.11144631165685+0.243577301449911*0.243577301449911+-0.130514583564601*-0.130514583564601)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.11144631165685/${module}
variable           unitx         equal     -0.11144631165685/0.29796684158909
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.243577301449911/${module}
variable           unity         equal     0.243577301449911/0.29796684158909
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.130514583564601/${module}
variable           unitz         equal     -0.130514583564601/0.29796684158909
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.96742404319824e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.96742404319824e-05*-1.96742404319824e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.96742404319824e-05*-1.96742404319824e-05+2.6022417071059e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.96742404319824e-05*-1.96742404319824e-05+2.6022417071059e-06*2.6022417071059e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.96742404319824e-05*-1.96742404319824e-05+2.6022417071059e-06*2.6022417071059e-06+2.13613133261507e-05*${fz})
variable           f_module      equal     sqrt(-1.96742404319824e-05*-1.96742404319824e-05+2.6022417071059e-06*2.6022417071059e-06+2.13613133261507e-05*2.13613133261507e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.374022529025359*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.374022529025359*-0.374022529025359+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.374022529025359*-0.374022529025359+0.817464453933486*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.374022529025359*-0.374022529025359+0.817464453933486*0.817464453933486+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.374022529025359*-0.374022529025359+0.817464453933486*0.817464453933486+-0.43801713931843*${unitz})
variable           dir_module    equal     sqrt(-0.374022529025359*-0.374022529025359+0.817464453933486*0.817464453933486+-0.43801713931843*-0.43801713931843)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.96742404319824e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.96742404319824e-05*-0.374022529025359+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.96742404319824e-05*-0.374022529025359+2.6022417071059e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.96742404319824e-05*-0.374022529025359+2.6022417071059e-06*0.817464453933486+${fz}*${unitz}
variable           dot      equal     -1.96742404319824e-05*-0.374022529025359+2.6022417071059e-06*0.817464453933486+2.13613133261507e-05*${unitz}
variable           dot      equal     -1.96742404319824e-05*-0.374022529025359+2.6022417071059e-06*0.817464453933486+2.13613133261507e-05*-0.43801713931843
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.29227903920108e-07/${f_module}*${dir_module}
variable           cos      equal     1.29227903920108e-07/2.91573850935854e-05*${dir_module}
variable           cos      equal     1.29227903920108e-07/2.91573850935854e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00443208139225551)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56636423089236/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7460596103874-90.0)
print              "The dot product: ${dot}"
The dot product: 1.29227903920108e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7460596103874

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11144631165685^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11144631165685^2+0.243577301449911^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11144631165685^2+0.243577301449911^2+-0.130514583564601^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.11144631165685/${norm}
variable           unit_x        equal     -0.11144631165685/0.29796684158909
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.243577301449911/${norm}
variable           unit_y        equal     0.243577301449911/0.29796684158909
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.130514583564601/${norm}
variable           unit_z        equal     -0.130514583564601/0.29796684158909
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05419000222792+${delta}*${unit_x}
variable           x_new         equal     1.05419000222792+0.03*${unit_x}
variable           x_new         equal     1.05419000222792+0.03*-0.374022529025359
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.26826025671225+${delta}*${unit_y}
variable           y_new         equal     4.26826025671225+0.03*${unit_y}
variable           y_new         equal     4.26826025671225+0.03*0.817464453933486
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1903537393681+${delta}*${unit_z}
variable           z_new         equal     31.1903537393681+0.03*${unit_z}
variable           z_new         equal     31.1903537393681+0.03*-0.43801713931843

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04296932635716  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04296932635716  y  4.29278419033025  z   ${z_new}
set                atom          288751    x  1.04296932635716  y  4.29278419033025  z   31.1772132251885
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11144631165685  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11144631165685  0.243577301449911  ${new_z}
fix                hold    carbon   planeforce   -0.11144631165685  0.243577301449911  -0.130514583564601
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2172   -1152449.1            0   -1152449.1 0.0051819243 0.0088336465  0.012061253 
    2359   -1152449.2            0   -1152449.2 -1.3422432e-05 1.0014605e-05 3.0151504e-05 
Loop time of 2.16054 on 104 procs for 187 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.14776615  -1152449.15045896  -1152449.15045896
  Force two-norm initial, final = 0.23910058 0.00013631755
  Force max component initial, final = 0.17007364 3.0151504e-05
  Final line search alpha, max atom move = 1.0000000 3.0151504e-05
  Iterations, force evaluations = 187 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57205    | 1.5694     | 2.0407     |  33.7 | 72.64
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035881   | 0.35211    | 1.0588     |  50.0 | 16.30
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2717e-05 | 0.0030851  | 0.0066271  |   2.6 |  0.14
Other   |            | 0.236      |            |       | 10.92

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115478 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.04387857998292-${x_0}
variable           new_x         equal     1.04387857998292-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.29420475499116-${y_0}
variable           new_y         equal     4.29420475499116-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1790879914948-${z_0}
variable           new_z         equal     31.1790879914948-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12175773390185*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12175773390185*-0.12175773390185+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12175773390185*-0.12175773390185+0.26952179972882*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12175773390185*-0.12175773390185+0.26952179972882*0.26952179972882+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12175773390185*-0.12175773390185+0.26952179972882*0.26952179972882+-0.1417803314379*${new_z})
variable           module        equal     sqrt(-0.12175773390185*-0.12175773390185+0.26952179972882*0.26952179972882+-0.1417803314379*-0.1417803314379)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.12175773390185/${module}
variable           unitx         equal     -0.12175773390185/0.327976536777582
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.26952179972882/${module}
variable           unity         equal     0.26952179972882/0.327976536777582
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1417803314379/${module}
variable           unitz         equal     -0.1417803314379/0.327976536777582
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.34224316314546e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.34224316314546e-05*-1.34224316314546e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.34224316314546e-05*-1.34224316314546e-05+1.00146049117237e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.34224316314546e-05*-1.34224316314546e-05+1.00146049117237e-05*1.00146049117237e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-1.34224316314546e-05*-1.34224316314546e-05+1.00146049117237e-05*1.00146049117237e-05+3.01515036167065e-05*${fz})
variable           f_module      equal     sqrt(-1.34224316314546e-05*-1.34224316314546e-05+1.00146049117237e-05*1.00146049117237e-05+3.01515036167065e-05*3.01515036167065e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.371239159661047*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.371239159661047*-0.371239159661047+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.371239159661047*-0.371239159661047+0.821771588836542*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.371239159661047*-0.371239159661047+0.821771588836542*0.821771588836542+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.371239159661047*-0.371239159661047+0.821771588836542*0.821771588836542+-0.432288031427226*${unitz})
variable           dir_module    equal     sqrt(-0.371239159661047*-0.371239159661047+0.821771588836542*0.821771588836542+-0.432288031427226*-0.432288031427226)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.34224316314546e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.34224316314546e-05*-0.371239159661047+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.34224316314546e-05*-0.371239159661047+1.00146049117237e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -1.34224316314546e-05*-0.371239159661047+1.00146049117237e-05*0.821771588836542+${fz}*${unitz}
variable           dot      equal     -1.34224316314546e-05*-0.371239159661047+1.00146049117237e-05*0.821771588836542+3.01515036167065e-05*${unitz}
variable           dot      equal     -1.34224316314546e-05*-0.371239159661047+1.00146049117237e-05*0.821771588836542+3.01515036167065e-05*-0.432288031427226
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.78515886309544e-07/${f_module}*${dir_module}
variable           cos      equal     1.78515886309544e-07/3.44901022437925e-05*${dir_module}
variable           cos      equal     1.78515886309544e-07/3.44901022437925e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00517585842592488)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56562044525891/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7034438327283-90.0)
print              "The dot product: ${dot}"
The dot product: 1.78515886309544e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7034438327283

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12175773390185^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12175773390185^2+0.26952179972882^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12175773390185^2+0.26952179972882^2+-0.1417803314379^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.12175773390185/${norm}
variable           unit_x        equal     -0.12175773390185/0.327976536777582
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.26952179972882/${norm}
variable           unit_y        equal     0.26952179972882/0.327976536777582
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1417803314379/${norm}
variable           unit_z        equal     -0.1417803314379/0.327976536777582
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.04387857998292+${delta}*${unit_x}
variable           x_new         equal     1.04387857998292+0.03*${unit_x}
variable           x_new         equal     1.04387857998292+0.03*-0.371239159661047
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.29420475499116+${delta}*${unit_y}
variable           y_new         equal     4.29420475499116+0.03*${unit_y}
variable           y_new         equal     4.29420475499116+0.03*0.821771588836542
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1790879914948+${delta}*${unit_z}
variable           z_new         equal     31.1790879914948+0.03*${unit_z}
variable           z_new         equal     31.1790879914948+0.03*-0.432288031427226

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03274140519309  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03274140519309  y  4.31885790265626  z   ${z_new}
set                atom          288751    x  1.03274140519309  y  4.31885790265626  z   31.166119350552
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12175773390185  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12175773390185  0.26952179972882  ${new_z}
fix                hold    carbon   planeforce   -0.12175773390185  0.26952179972882  -0.1417803314379
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2359   -1152449.1            0   -1152449.1 0.0081959087 0.0091676142  0.010389005 
    2583   -1152449.1            0   -1152449.1 8.8524441e-06 9.4187961e-07 -5.8117825e-06 
Loop time of 2.65039 on 104 procs for 224 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.11071725  -1152449.11343514  -1152449.11343514
  Force two-norm initial, final = 0.24112058 4.1290583e-05
  Force max component initial, final = 0.17412192 9.1119427e-06
  Final line search alpha, max atom move = 1.0000000 9.1119427e-06
  Iterations, force evaluations = 224 448

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68821    | 1.8941     | 2.4817     |  37.0 | 71.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042261   | 0.43484    | 1.2798     |  53.9 | 16.41
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.68e-05   | 0.0036978  | 0.0079139  |   2.9 |  0.14
Other   |            | 0.3177     |            |       | 11.99

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.07 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115478 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.03427456175421-${x_0}
variable           new_x         equal     1.03427456175421-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.32052741369769-${y_0}
variable           new_y         equal     4.32052741369769-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1679764202126-${z_0}
variable           new_z         equal     31.1679764202126-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13136175213056*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13136175213056*-0.13136175213056+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13136175213056*-0.13136175213056+0.29584445843535*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13136175213056*-0.13136175213056+0.29584445843535*0.29584445843535+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13136175213056*-0.13136175213056+0.29584445843535*0.29584445843535+-0.1528919027201*${new_z})
variable           module        equal     sqrt(-0.13136175213056*-0.13136175213056+0.29584445843535*0.29584445843535+-0.1528919027201*-0.1528919027201)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.13136175213056/${module}
variable           unitx         equal     -0.13136175213056/0.357988529742349
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.29584445843535/${module}
variable           unity         equal     0.29584445843535/0.357988529742349
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1528919027201/${module}
variable           unitz         equal     -0.1528919027201/0.357988529742349
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.85244414493338e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.85244414493338e-06*8.85244414493338e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.85244414493338e-06*8.85244414493338e-06+9.4187960530388e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.85244414493338e-06*8.85244414493338e-06+9.4187960530388e-07*9.4187960530388e-07+${fz}*${fz})
variable           f_module      equal     sqrt(8.85244414493338e-06*8.85244414493338e-06+9.4187960530388e-07*9.4187960530388e-07+-5.81178252195069e-06*${fz})
variable           f_module      equal     sqrt(8.85244414493338e-06*8.85244414493338e-06+9.4187960530388e-07*9.4187960530388e-07+-5.81178252195069e-06*-5.81178252195069e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366944025343783*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366944025343783*-0.366944025343783+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366944025343783*-0.366944025343783+0.826407646770903*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366944025343783*-0.366944025343783+0.826407646770903*0.826407646770903+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366944025343783*-0.366944025343783+0.826407646770903*0.826407646770903+-0.427086037729028*${unitz})
variable           dir_module    equal     sqrt(-0.366944025343783*-0.366944025343783+0.826407646770903*0.826407646770903+-0.427086037729028*-0.427086037729028)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.85244414493338e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.85244414493338e-06*-0.366944025343783+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.85244414493338e-06*-0.366944025343783+9.4187960530388e-07*${unity}+${fz}*${unitz}
variable           dot      equal     8.85244414493338e-06*-0.366944025343783+9.4187960530388e-07*0.826407646770903+${fz}*${unitz}
variable           dot      equal     8.85244414493338e-06*-0.366944025343783+9.4187960530388e-07*0.826407646770903+-5.81178252195069e-06*${unitz}
variable           dot      equal     8.85244414493338e-06*-0.366944025343783+9.4187960530388e-07*0.826407646770903+-5.81178252195069e-06*-0.427086037729028
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.2156188930566e-08/${f_module}*${dir_module}
variable           cos      equal     1.2156188930566e-08/1.06315436608474e-05*${dir_module}
variable           cos      equal     1.2156188930566e-08/1.06315436608474e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00114340770431423)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56965291884144/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9344875500053-90.0)
print              "The dot product: ${dot}"
The dot product: 1.2156188930566e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9344875500053

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13136175213056^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13136175213056^2+0.29584445843535^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13136175213056^2+0.29584445843535^2+-0.1528919027201^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.13136175213056/${norm}
variable           unit_x        equal     -0.13136175213056/0.357988529742349
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.29584445843535/${norm}
variable           unit_y        equal     0.29584445843535/0.357988529742349
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1528919027201/${norm}
variable           unit_z        equal     -0.1528919027201/0.357988529742349
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.03427456175421+${delta}*${unit_x}
variable           x_new         equal     1.03427456175421+0.03*${unit_x}
variable           x_new         equal     1.03427456175421+0.03*-0.366944025343783
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.32052741369769+${delta}*${unit_y}
variable           y_new         equal     4.32052741369769+0.03*${unit_y}
variable           y_new         equal     4.32052741369769+0.03*0.826407646770903
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1679764202126+${delta}*${unit_z}
variable           z_new         equal     31.1679764202126+0.03*${unit_z}
variable           z_new         equal     31.1679764202126+0.03*-0.427086037729028

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0232662409939  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0232662409939  y  4.34531964310082  z   ${z_new}
set                atom          288751    x  1.0232662409939  y  4.34531964310082  z   31.1551638390807
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13136175213056  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13136175213056  0.29584445843535  ${new_z}
fix                hold    carbon   planeforce   -0.13136175213056  0.29584445843535  -0.1528919027201
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2583   -1152449.1            0   -1152449.1  0.011616066  0.010069567 0.0095042232 
    2845   -1152449.1            0   -1152449.1 7.3741131e-07 -7.0107991e-08 -7.692278e-07 
Loop time of 3.02444 on 104 procs for 262 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.06982127  -1152449.07259517  -1152449.07259517
  Force two-norm initial, final = 0.24445077 6.1594762e-06
  Force max component initial, final = 0.17836388 8.4774389e-07
  Final line search alpha, max atom move = 1.0000000 8.4774389e-07
  Iterations, force evaluations = 262 524

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.801      | 2.1977     | 2.8559     |  39.9 | 72.66
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.051499   | 0.49237    | 1.4847     |  59.3 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.1362e-05 | 0.0043131  | 0.0092524  |   3.1 |  0.14
Other   |            | 0.33       |            |       | 10.91

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.07 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115477 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.02553558961395-${x_0}
variable           new_x         equal     1.02553558961395-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.34738006806143-${y_0}
variable           new_y         equal     4.34738006806143-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1572009626308-${z_0}
variable           new_z         equal     31.1572009626308-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14010072427082*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14010072427082*-0.14010072427082+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14010072427082*-0.14010072427082+0.32269711279909*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14010072427082*-0.14010072427082+0.32269711279909*0.32269711279909+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14010072427082*-0.14010072427082+0.32269711279909*0.32269711279909+-0.163667360301901*${new_z})
variable           module        equal     sqrt(-0.14010072427082*-0.14010072427082+0.32269711279909*0.32269711279909+-0.163667360301901*-0.163667360301901)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.14010072427082/${module}
variable           unitx         equal     -0.14010072427082/0.388005984977383
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.32269711279909/${module}
variable           unity         equal     0.32269711279909/0.388005984977383
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.163667360301901/${module}
variable           unitz         equal     -0.163667360301901/0.388005984977383
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.37411311517034e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.37411311517034e-07*7.37411311517034e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.37411311517034e-07*7.37411311517034e-07+-7.0107990547175e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.37411311517034e-07*7.37411311517034e-07+-7.0107990547175e-08*-7.0107990547175e-08+${fz}*${fz})
variable           f_module      equal     sqrt(7.37411311517034e-07*7.37411311517034e-07+-7.0107990547175e-08*-7.0107990547175e-08+-7.69227803162204e-07*${fz})
variable           f_module      equal     sqrt(7.37411311517034e-07*7.37411311517034e-07+-7.0107990547175e-08*-7.0107990547175e-08+-7.69227803162204e-07*-7.69227803162204e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.361078771192116*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.361078771192116*-0.361078771192116+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.361078771192116*-0.361078771192116+0.831680760846769*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.361078771192116*-0.361078771192116+0.831680760846769*0.831680760846769+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.361078771192116*-0.361078771192116+0.831680760846769*0.831680760846769+-0.421816586956619*${unitz})
variable           dir_module    equal     sqrt(-0.361078771192116*-0.361078771192116+0.831680760846769*0.831680760846769+-0.421816586956619*-0.421816586956619)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.37411311517034e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.37411311517034e-07*-0.361078771192116+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.37411311517034e-07*-0.361078771192116+-7.0107990547175e-08*${unity}+${fz}*${unitz}
variable           dot      equal     7.37411311517034e-07*-0.361078771192116+-7.0107990547175e-08*0.831680760846769+${fz}*${unitz}
variable           dot      equal     7.37411311517034e-07*-0.361078771192116+-7.0107990547175e-08*0.831680760846769+-7.69227803162204e-07*${unitz}
variable           dot      equal     7.37411311517034e-07*-0.361078771192116+-7.0107990547175e-08*0.831680760846769+-7.69227803162204e-07*-0.421816586956619
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -9.79906234310412e-11/${f_module}*${dir_module}
variable           cos      equal     -9.79906234310412e-11/1.06789605573276e-06*${dir_module}
variable           cos      equal     -9.79906234310412e-11/1.06789605573276e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-9.17604507526744e-05)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57088808724578/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0052574865618-90.0)
print              "The dot product: ${dot}"
The dot product: -9.79906234310412e-11
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0052574865618

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2845   -1152449.1            0   -1152449.1   0.52372917   -1.1795074    0.6095666 
    3000   -1152449.3            0   -1152449.3 0.0018472658 6.4820859e-05 -0.0013078377 
    3103   -1152449.3            0   -1152449.3 1.0018794e-05 2.2589975e-07 1.5748807e-05 
Loop time of 3.03662 on 104 procs for 258 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.07259517  -1152449.34502404  -1152449.34502404
  Force two-norm initial, final = 1.4272706 0.00010828841
  Force max component initial, final = 1.1795074 1.5748807e-05
  Final line search alpha, max atom move = 1.0000000 1.5748807e-05
  Iterations, force evaluations = 258 514

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.79008    | 2.1703     | 2.8405     |  39.6 | 71.47
Neigh   | 2.0195e-05 | 0.0059222  | 0.0087225  |   3.2 |  0.20
Comm    | 0.058668   | 0.4924     | 1.4712     |  57.9 | 16.22
Output  | 0.00010414 | 0.00011654 | 0.00027747 |   0.0 |  0.00
Modify  | 2.9108e-05 | 0.0027576  | 0.0071443  |   3.3 |  0.09
Other   |            | 0.3651     |            |       | 12.02

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115472 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 2
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563705311562-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563705311562-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563705311562-1.16563631388477)^2+(4.02468246828592-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563705311562-1.16563631388477)^2+(4.02468246828592-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563705311562-1.16563631388477)^2+(4.02468246828592-4.02468295526234)^2+(31.3208655934416-${z_0})^2)
variable                displacement      equal     sqrt((1.16563705311562-1.16563631388477)^2+(4.02468246828592-4.02468295526234)^2+(31.3208655934416-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 3
3
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.341 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.86155 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48939    | 1.3189     | 1.7482     |  30.6 | 70.85
Neigh   | 3.0073e-05 | 0.0088836  | 0.012823   |   3.9 |  0.48
Comm    | 0.030845   | 0.30128    | 0.89053    |  45.1 | 16.18
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8587e-05 | 0.0016901  | 0.0043404  |   2.6 |  0.09
Other   |            | 0.2308     |            |       | 12.40

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,3)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,3)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,3)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.15702550384334
variable                y_1    equal     $y
variable                y_1    equal     4.00686264466969
variable                z_1    equal     $z
variable                z_1    equal     31.3222486198782

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.15702550384334  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.15702550384334  y  4.00686264466969  z  ${z_1}
set                atom        288751    x  1.15702550384334  y  4.00686264466969  z  31.3222486198782
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.15702550384334-${x_0}
variable           vector_x          equal     1.15702550384334-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.00686264466969-${y_0}
variable           vector_y          equal     4.00686264466969-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3222486198782-${z_0}
variable           vector_z          equal     31.3222486198782-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.00861081004143016  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.00861081004143016  -0.0178203105926498  ${vector_z}
fix                hold    carbon   planeforce   -0.00861081004143016  -0.0178203105926498  0.00138029694549857
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3  0.026210278 -0.014275181 -0.020790045 
     292   -1152449.3            0   -1152449.3 -3.7887709e-06 1.1898787e-06 -8.2738565e-06 
Loop time of 1.63734 on 104 procs for 134 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.34280729  -1152449.34419274  -1152449.34419274
  Force two-norm initial, final = 0.16825233 7.6259839e-05
  Force max component initial, final = 0.096312164 8.3057369e-06
  Final line search alpha, max atom move = 1.0000000 8.3057369e-06
  Iterations, force evaluations = 134 268

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.40645    | 1.1332     | 1.5128     |  28.9 | 69.21
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026077   | 0.26576    | 0.76577    |  41.2 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.653e-05  | 0.002215   | 0.0047743  |   2.2 |  0.14
Other   |            | 0.2362     |            |       | 14.43

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15789367105149-${x_0}
variable           new_x         equal     1.15789367105149-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.00641959217999-${y_0}
variable           new_y         equal     4.00641959217999-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3219445475818-${z_0}
variable           new_z         equal     31.3219445475818-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00774264283328008^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00774264283328008^2+-0.0182633630823501^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00774264283328008^2+-0.0182633630823501^2+0.00107622464910051^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00774264283328008/${norm}
variable           unit_x        equal     -0.00774264283328008/0.0198659811893806
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0182633630823501/${norm}
variable           unit_y        equal     -0.0182633630823501/0.0198659811893806
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00107622464910051/${norm}
variable           unit_z        equal     0.00107622464910051/0.0198659811893806
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15789367105149+${delta}*${unit_x}
variable           x_new         equal     1.15789367105149+0.03*${unit_x}
variable           x_new         equal     1.15789367105149+0.03*-0.389743791634059
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.00641959217999+${delta}*${unit_y}
variable           y_new         equal     4.00641959217999+0.03*${unit_y}
variable           y_new         equal     4.00641959217999+0.03*-0.919328519857495
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3219445475818+${delta}*${unit_z}
variable           z_new         equal     31.3219445475818+0.03*${unit_z}
variable           z_new         equal     31.3219445475818+0.03*0.0541742508885395

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14620135730247  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14620135730247  y  3.97883973658426  z   ${z_new}
set                atom          288751    x  1.14620135730247  y  3.97883973658426  z   31.3235697751085
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00774264283328008  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00774264283328008  -0.0182633630823501  ${new_z}
fix                hold    carbon   planeforce   -0.00774264283328008  -0.0182633630823501  0.00107622464910051
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     292   -1152449.3            0   -1152449.3   0.04027094 -0.018814458 -0.029558672 
     410   -1152449.3            0   -1152449.3 9.6908728e-06 -6.0577007e-06 -3.3079543e-05 
Loop time of 1.40321 on 104 procs for 118 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33669768  -1152449.33980223  -1152449.33980223
  Force two-norm initial, final = 0.25060981 0.00023203948
  Force max component initial, final = 0.15575779 3.9943789e-05
  Final line search alpha, max atom move = 1.0000000 3.9943789e-05
  Iterations, force evaluations = 118 236

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.35718    | 0.99109    | 1.3278     |  27.0 | 70.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.021871   | 0.22764    | 0.67149    |  39.1 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.4887e-05 | 0.0019472  | 0.0041674  |   2.1 |  0.14
Other   |            | 0.1825     |            |       | 13.01

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115458 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14826663665332-${x_0}
variable           new_x         equal     1.14826663665332-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.97792320162325-${y_0}
variable           new_y         equal     3.97792320162325-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3228744830924-${z_0}
variable           new_z         equal     31.3228744830924-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01736967723145*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01736967723145*-0.01736967723145+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01736967723145*-0.01736967723145+-0.0467597536390896*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01736967723145*-0.01736967723145+-0.0467597536390896*-0.0467597536390896+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01736967723145*-0.01736967723145+-0.0467597536390896*-0.0467597536390896+0.00200616015969857*${new_z})
variable           module        equal     sqrt(-0.01736967723145*-0.01736967723145+-0.0467597536390896*-0.0467597536390896+0.00200616015969857*0.00200616015969857)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.01736967723145/${module}
variable           unitx         equal     -0.01736967723145/0.0499219884029019
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0467597536390896/${module}
variable           unity         equal     -0.0467597536390896/0.0499219884029019
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00200616015969857/${module}
variable           unitz         equal     0.00200616015969857/0.0499219884029019
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.69087275947162e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.69087275947162e-06*9.69087275947162e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.69087275947162e-06*9.69087275947162e-06+-6.05770065188906e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.69087275947162e-06*9.69087275947162e-06+-6.05770065188906e-06*-6.05770065188906e-06+${fz}*${fz})
variable           f_module      equal     sqrt(9.69087275947162e-06*9.69087275947162e-06+-6.05770065188906e-06*-6.05770065188906e-06+-3.30795433465249e-05*${fz})
variable           f_module      equal     sqrt(9.69087275947162e-06*9.69087275947162e-06+-6.05770065188906e-06*-6.05770065188906e-06+-3.30795433465249e-05*-3.30795433465249e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347936406123606*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347936406123606*-0.347936406123606+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347936406123606*-0.347936406123606+-0.936656474131377*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347936406123606*-0.347936406123606+-0.936656474131377*-0.936656474131377+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347936406123606*-0.347936406123606+-0.936656474131377*-0.936656474131377+0.0401859025227039*${unitz})
variable           dir_module    equal     sqrt(-0.347936406123606*-0.347936406123606+-0.936656474131377*-0.936656474131377+0.0401859025227039*0.0401859025227039)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.69087275947162e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.69087275947162e-06*-0.347936406123606+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.69087275947162e-06*-0.347936406123606+-6.05770065188906e-06*${unity}+${fz}*${unitz}
variable           dot      equal     9.69087275947162e-06*-0.347936406123606+-6.05770065188906e-06*-0.936656474131377+${fz}*${unitz}
variable           dot      equal     9.69087275947162e-06*-0.347936406123606+-6.05770065188906e-06*-0.936656474131377+-3.30795433465249e-05*${unitz}
variable           dot      equal     9.69087275947162e-06*-0.347936406123606+-6.05770065188906e-06*-0.936656474131377+-3.30795433465249e-05*0.0401859025227039
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     9.72845789391035e-07/${f_module}*${dir_module}
variable           cos      equal     9.72845789391035e-07/3.49980705188555e-05*${dir_module}
variable           cos      equal     9.72845789391035e-07/3.49980705188555e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0277971263834932)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54299561945112/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.4071368017233-90.0)
print              "The dot product: ${dot}"
The dot product: 9.72845789391035e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.4071368017233

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01736967723145^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01736967723145^2+-0.0467597536390896^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01736967723145^2+-0.0467597536390896^2+0.00200616015969857^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.01736967723145/${norm}
variable           unit_x        equal     -0.01736967723145/0.0499219884029019
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0467597536390896/${norm}
variable           unit_y        equal     -0.0467597536390896/0.0499219884029019
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00200616015969857/${norm}
variable           unit_z        equal     0.00200616015969857/0.0499219884029019
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14826663665332+${delta}*${unit_x}
variable           x_new         equal     1.14826663665332+0.03*${unit_x}
variable           x_new         equal     1.14826663665332+0.03*-0.347936406123606
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.97792320162325+${delta}*${unit_y}
variable           y_new         equal     3.97792320162325+0.03*${unit_y}
variable           y_new         equal     3.97792320162325+0.03*-0.936656474131377
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3228744830924+${delta}*${unit_z}
variable           z_new         equal     31.3228744830924+0.03*${unit_z}
variable           z_new         equal     31.3228744830924+0.03*0.0401859025227039

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13782854446961  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13782854446961  y  3.94982350739931  z   ${z_new}
set                atom          288751    x  1.13782854446961  y  3.94982350739931  z   31.3240800601681
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01736967723145  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01736967723145  -0.0467597536390896  ${new_z}
fix                hold    carbon   planeforce   -0.01736967723145  -0.0467597536390896  0.00200616015969857
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     410   -1152449.3            0   -1152449.3  0.034736596 -0.014199318 -0.030203538 
     534   -1152449.3            0   -1152449.3 2.5764405e-05 -1.0585535e-05 -2.3655952e-05 
Loop time of 1.4787 on 104 procs for 124 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32876745  -1152449.33176356  -1152449.33176356
  Force two-norm initial, final = 0.24620522 0.00016573258
  Force max component initial, final = 0.1648464 4.0882628e-05
  Final line search alpha, max atom move = 1.0000000 4.0882628e-05
  Iterations, force evaluations = 124 248

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.38031    | 1.0477     | 1.3992     |  27.6 | 70.85
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.021834   | 0.24234    | 0.7112     |  40.0 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5383e-05 | 0.002056   | 0.0044221  |   2.1 |  0.14
Other   |            | 0.1866     |            |       | 12.62

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115429 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.13995045931194-${x_0}
variable           new_x         equal     1.13995045931194-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.94897920804495-${y_0}
variable           new_y         equal     3.94897920804495-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3227729592021-${z_0}
variable           new_z         equal     31.3227729592021-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02568585457283*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02568585457283*-0.02568585457283+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02568585457283*-0.02568585457283+-0.0757037472173896*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02568585457283*-0.02568585457283+-0.0757037472173896*-0.0757037472173896+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02568585457283*-0.02568585457283+-0.0757037472173896*-0.0757037472173896+0.00190463626940129*${new_z})
variable           module        equal     sqrt(-0.02568585457283*-0.02568585457283+-0.0757037472173896*-0.0757037472173896+0.00190463626940129*0.00190463626940129)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.02568585457283/${module}
variable           unitx         equal     -0.02568585457283/0.0799652931415231
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0757037472173896/${module}
variable           unity         equal     -0.0757037472173896/0.0799652931415231
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00190463626940129/${module}
variable           unitz         equal     0.00190463626940129/0.0799652931415231
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.57644050190344e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.57644050190344e-05*2.57644050190344e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.57644050190344e-05*2.57644050190344e-05+-1.05855354040737e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.57644050190344e-05*2.57644050190344e-05+-1.05855354040737e-05*-1.05855354040737e-05+${fz}*${fz})
variable           f_module      equal     sqrt(2.57644050190344e-05*2.57644050190344e-05+-1.05855354040737e-05*-1.05855354040737e-05+-2.3655951972741e-05*${fz})
variable           f_module      equal     sqrt(2.57644050190344e-05*2.57644050190344e-05+-1.05855354040737e-05*-1.05855354040737e-05+-2.3655951972741e-05*-2.3655951972741e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.321212535635566*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.321212535635566*-0.321212535635566+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.321212535635566*-0.321212535635566+-0.946707555781839*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.321212535635566*-0.321212535635566+-0.946707555781839*-0.946707555781839+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.321212535635566*-0.321212535635566+-0.946707555781839*-0.946707555781839+0.0238182865912897*${unitz})
variable           dir_module    equal     sqrt(-0.321212535635566*-0.321212535635566+-0.946707555781839*-0.946707555781839+0.0238182865912897*0.0238182865912897)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.57644050190344e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.57644050190344e-05*-0.321212535635566+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.57644050190344e-05*-0.321212535635566+-1.05855354040737e-05*${unity}+${fz}*${unitz}
variable           dot      equal     2.57644050190344e-05*-0.321212535635566+-1.05855354040737e-05*-0.946707555781839+${fz}*${unitz}
variable           dot      equal     2.57644050190344e-05*-0.321212535635566+-1.05855354040737e-05*-0.946707555781839+-2.3655951972741e-05*${unitz}
variable           dot      equal     2.57644050190344e-05*-0.321212535635566+-1.05855354040737e-05*-0.946707555781839+-2.3655951972741e-05*0.0238182865912897
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.18211224005046e-06/${f_module}*${dir_module}
variable           cos      equal     1.18211224005046e-06/3.65439761043099e-05*${dir_module}
variable           cos      equal     1.18211224005046e-06/3.65439761043099e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0323476634473566)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53844301941165/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.1462920336505-90.0)
print              "The dot product: ${dot}"
The dot product: 1.18211224005046e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.1462920336505

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02568585457283^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02568585457283^2+-0.0757037472173896^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02568585457283^2+-0.0757037472173896^2+0.00190463626940129^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.02568585457283/${norm}
variable           unit_x        equal     -0.02568585457283/0.0799652931415231
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0757037472173896/${norm}
variable           unit_y        equal     -0.0757037472173896/0.0799652931415231
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00190463626940129/${norm}
variable           unit_z        equal     0.00190463626940129/0.0799652931415231
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.13995045931194+${delta}*${unit_x}
variable           x_new         equal     1.13995045931194+0.03*${unit_x}
variable           x_new         equal     1.13995045931194+0.03*-0.321212535635566
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.94897920804495+${delta}*${unit_y}
variable           y_new         equal     3.94897920804495+0.03*${unit_y}
variable           y_new         equal     3.94897920804495+0.03*-0.946707555781839
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3227729592021+${delta}*${unit_z}
variable           z_new         equal     31.3227729592021+0.03*${unit_z}
variable           z_new         equal     31.3227729592021+0.03*0.0238182865912897

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13031408324287  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13031408324287  y  3.92057798137149  z   ${z_new}
set                atom          288751    x  1.13031408324287  y  3.92057798137149  z   31.3234875077998
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02568585457283  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02568585457283  -0.0757037472173896  ${new_z}
fix                hold    carbon   planeforce   -0.02568585457283  -0.0757037472173896  0.00190463626940129
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     534   -1152449.3            0   -1152449.3  0.022171294 -0.0083249144 -0.031889862 
     662   -1152449.3            0   -1152449.3 2.110072e-05 -7.5761272e-06 -1.6565473e-05 
Loop time of 1.5242 on 104 procs for 128 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31759027  -1152449.32056175  -1152449.32056175
  Force two-norm initial, final = 0.24367611 0.00011360405
  Force max component initial, final = 0.17273898 2.1100720e-05
  Final line search alpha, max atom move = 1.0000000 2.1100720e-05
  Iterations, force evaluations = 128 256

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.38721    | 1.0763     | 1.4364     |  28.1 | 70.62
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.024649   | 0.24803    | 0.72988    |  40.7 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.713e-05  | 0.0021185  | 0.0045329  |   2.2 |  0.14
Other   |            | 0.1977     |            |       | 12.97

Nlocal:        2776.45 ave        3954 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115242 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.13013177273973-${x_0}
variable           new_x         equal     1.13013177273973-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.92057871141678-${y_0}
variable           new_y         equal     3.92057871141678-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3210578922447-${z_0}
variable           new_z         equal     31.3210578922447-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0355045411450401*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0355045411450401*-0.0355045411450401+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0355045411450401*-0.0355045411450401+-0.10410424384556*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0355045411450401*-0.0355045411450401+-0.10410424384556*-0.10410424384556+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0355045411450401*-0.0355045411450401+-0.10410424384556*-0.10410424384556+0.000189569311999094*${new_z})
variable           module        equal     sqrt(-0.0355045411450401*-0.0355045411450401+-0.10410424384556*-0.10410424384556+0.000189569311999094*0.000189569311999094)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0355045411450401/${module}
variable           unitx         equal     -0.0355045411450401/0.10999228138874
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.10410424384556/${module}
variable           unity         equal     -0.10410424384556/0.10999228138874
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.000189569311999094/${module}
variable           unitz         equal     0.000189569311999094/0.10999228138874
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11007198329366e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11007198329366e-05*2.11007198329366e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11007198329366e-05*2.11007198329366e-05+-7.57612723712433e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11007198329366e-05*2.11007198329366e-05+-7.57612723712433e-06*-7.57612723712433e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.11007198329366e-05*2.11007198329366e-05+-7.57612723712433e-06*-7.57612723712433e-06+-1.65654727615388e-05*${fz})
variable           f_module      equal     sqrt(2.11007198329366e-05*2.11007198329366e-05+-7.57612723712433e-06*-7.57612723712433e-06+-1.65654727615388e-05*-1.65654727615388e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.322791205862512*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.322791205862512*-0.322791205862512+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.322791205862512*-0.322791205862512+-0.946468629718023*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.322791205862512*-0.322791205862512+-0.946468629718023*-0.946468629718023+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.322791205862512*-0.322791205862512+-0.946468629718023*-0.946468629718023+0.00172347831689306*${unitz})
variable           dir_module    equal     sqrt(-0.322791205862512*-0.322791205862512+-0.946468629718023*-0.946468629718023+0.00172347831689306*0.00172347831689306)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11007198329366e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11007198329366e-05*-0.322791205862512+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11007198329366e-05*-0.322791205862512+-7.57612723712433e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.11007198329366e-05*-0.322791205862512+-7.57612723712433e-06*-0.946468629718023+${fz}*${unitz}
variable           dot      equal     2.11007198329366e-05*-0.322791205862512+-7.57612723712433e-06*-0.946468629718023+-1.65654727615388e-05*${unitz}
variable           dot      equal     2.11007198329366e-05*-0.322791205862512+-7.57612723712433e-06*-0.946468629718023+-1.65654727615388e-05*0.00172347831689306
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.30889732136235e-07/${f_module}*${dir_module}
variable           cos      equal     3.30889732136235e-07/2.78756698429735e-05*${dir_module}
variable           cos      equal     3.30889732136235e-07/2.78756698429735e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.011870198420349)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55892584960186/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.3198717560327-90.0)
print              "The dot product: ${dot}"
The dot product: 3.30889732136235e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.3198717560327

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0355045411450401^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0355045411450401^2+-0.10410424384556^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0355045411450401^2+-0.10410424384556^2+0.000189569311999094^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0355045411450401/${norm}
variable           unit_x        equal     -0.0355045411450401/0.10999228138874
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.10410424384556/${norm}
variable           unit_y        equal     -0.10410424384556/0.10999228138874
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.000189569311999094/${norm}
variable           unit_z        equal     0.000189569311999094/0.10999228138874
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.13013177273973+${delta}*${unit_x}
variable           x_new         equal     1.13013177273973+0.03*${unit_x}
variable           x_new         equal     1.13013177273973+0.03*-0.322791205862512
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.92057871141678+${delta}*${unit_y}
variable           y_new         equal     3.92057871141678+0.03*${unit_y}
variable           y_new         equal     3.92057871141678+0.03*-0.946468629718023
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3210578922447+${delta}*${unit_z}
variable           z_new         equal     31.3210578922447+0.03*${unit_z}
variable           z_new         equal     31.3210578922447+0.03*0.00172347831689306

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12044803656385  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12044803656385  y  3.89218465252524  z   ${z_new}
set                atom          288751    x  1.12044803656385  y  3.89218465252524  z   31.3211095965942
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0355045411450401  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0355045411450401  -0.10410424384556  ${new_z}
fix                hold    carbon   planeforce   -0.0355045411450401  -0.10410424384556  0.000189569311999094
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     662   -1152449.3            0   -1152449.3  0.013517831 -0.0046699496 -0.032796331 
     803   -1152449.3            0   -1152449.3 -1.7869266e-05 6.1280314e-06 1.8536616e-05 
Loop time of 1.67092 on 104 procs for 141 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30346559  -1152449.30642812  -1152449.30642812
  Force two-norm initial, final = 0.24276964 9.8846308e-05
  Force max component initial, final = 0.17833419 1.8536616e-05
  Final line search alpha, max atom move = 1.0000000 1.8536616e-05
  Iterations, force evaluations = 141 282

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.42887    | 1.1845     | 1.5735     |  29.4 | 70.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.0266     | 0.27187    | 0.79689    |  42.5 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8777e-05 | 0.0023297  | 0.0049862  |   2.3 |  0.14
Other   |            | 0.2123     |            |       | 12.70

Nlocal:        2776.45 ave        3950 max           0 min
Histogram: 8 4 4 0 4 12 8 1 27 36
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115103 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.11864072666605-${x_0}
variable           new_x         equal     1.11864072666605-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.89279530168357-${y_0}
variable           new_y         equal     3.89279530168357-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3179627805911-${z_0}
variable           new_z         equal     31.3179627805911-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04699558721872*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04699558721872*-0.04699558721872+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04699558721872*-0.04699558721872+-0.13188765357877*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04699558721872*-0.04699558721872+-0.13188765357877*-0.13188765357877+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04699558721872*-0.04699558721872+-0.13188765357877*-0.13188765357877+-0.00290554234160112*${new_z})
variable           module        equal     sqrt(-0.04699558721872*-0.04699558721872+-0.13188765357877*-0.13188765357877+-0.00290554234160112*-0.00290554234160112)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.04699558721872/${module}
variable           unitx         equal     -0.04699558721872/0.140040638961856
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.13188765357877/${module}
variable           unity         equal     -0.13188765357877/0.140040638961856
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00290554234160112/${module}
variable           unitz         equal     -0.00290554234160112/0.140040638961856
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.78692663035299e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.78692663035299e-05*-1.78692663035299e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.78692663035299e-05*-1.78692663035299e-05+6.1280313918865e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.78692663035299e-05*-1.78692663035299e-05+6.1280313918865e-06*6.1280313918865e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.78692663035299e-05*-1.78692663035299e-05+6.1280313918865e-06*6.1280313918865e-06+1.85366163556862e-05*${fz})
variable           f_module      equal     sqrt(-1.78692663035299e-05*-1.78692663035299e-05+6.1280313918865e-06*6.1280313918865e-06+1.85366163556862e-05*1.85366163556862e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.335585352702658*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.335585352702658*-0.335585352702658+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.335585352702658*-0.335585352702658+-0.941781289748994*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.335585352702658*-0.335585352702658+-0.941781289748994*-0.941781289748994+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.335585352702658*-0.335585352702658+-0.941781289748994*-0.941781289748994+-0.0207478512176207*${unitz})
variable           dir_module    equal     sqrt(-0.335585352702658*-0.335585352702658+-0.941781289748994*-0.941781289748994+-0.0207478512176207*-0.0207478512176207)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.78692663035299e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.78692663035299e-05*-0.335585352702658+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.78692663035299e-05*-0.335585352702658+6.1280313918865e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.78692663035299e-05*-0.335585352702658+6.1280313918865e-06*-0.941781289748994+${fz}*${unitz}
variable           dot      equal     -1.78692663035299e-05*-0.335585352702658+6.1280313918865e-06*-0.941781289748994+1.85366163556862e-05*${unitz}
variable           dot      equal     -1.78692663035299e-05*-0.335585352702658+6.1280313918865e-06*-0.941781289748994+1.85366163556862e-05*-0.0207478512176207
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.5919623109128e-07/${f_module}*${dir_module}
variable           cos      equal     -1.5919623109128e-07/2.64663860941442e-05*${dir_module}
variable           cos      equal     -1.5919623109128e-07/2.64663860941442e-05*0.999999999999997
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0060150347132774)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57681139778007/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.344638180922-90.0)
print              "The dot product: ${dot}"
The dot product: -1.5919623109128e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.344638180922

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04699558721872^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04699558721872^2+-0.13188765357877^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04699558721872^2+-0.13188765357877^2+-0.00290554234160112^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.04699558721872/${norm}
variable           unit_x        equal     -0.04699558721872/0.140040638961856
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.13188765357877/${norm}
variable           unit_y        equal     -0.13188765357877/0.140040638961856
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00290554234160112/${norm}
variable           unit_z        equal     -0.00290554234160112/0.140040638961856
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.11864072666605+${delta}*${unit_x}
variable           x_new         equal     1.11864072666605+0.03*${unit_x}
variable           x_new         equal     1.11864072666605+0.03*-0.335585352702658
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.89279530168357+${delta}*${unit_y}
variable           y_new         equal     3.89279530168357+0.03*${unit_y}
variable           y_new         equal     3.89279530168357+0.03*-0.941781289748994
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3179627805911+${delta}*${unit_z}
variable           z_new         equal     31.3179627805911+0.03*${unit_z}
variable           z_new         equal     31.3179627805911+0.03*-0.0207478512176207

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10857316608497  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10857316608497  y  3.8645418629911  z   ${z_new}
set                atom          288751    x  1.10857316608497  y  3.8645418629911  z   31.3173403450546
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04699558721872  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04699558721872  -0.13188765357877  ${new_z}
fix                hold    carbon   planeforce   -0.04699558721872  -0.13188765357877  -0.00290554234160112
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     803   -1152449.3            0   -1152449.3  0.010255195 -0.0029365131 -0.032578804 
     988   -1152449.3            0   -1152449.3 -2.2721995e-05 7.5526787e-06 2.4686755e-05 
Loop time of 2.18472 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.28630488  -1152449.28927099  -1152449.28927099
  Force two-norm initial, final = 0.24294156 9.9744813e-05
  Force max component initial, final = 0.1826065 2.8069355e-05
  Final line search alpha, max atom move = 1.0000000 2.8069355e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5581     | 1.552      | 2.0676     |  33.8 | 71.04
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036939   | 0.35723    | 1.0536     |  49.0 | 16.35
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3083e-05 | 0.0030586  | 0.0065671  |   2.6 |  0.14
Other   |            | 0.2725     |            |       | 12.47

Nlocal:        2776.45 ave        3947 max           0 min
Histogram: 8 4 4 0 4 12 8 1 27 36
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115017 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10616459325912-${x_0}
variable           new_x         equal     1.10616459325912-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.86547665929426-${y_0}
variable           new_y         equal     3.86547665929426-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.313865676466-${z_0}
variable           new_z         equal     31.313865676466-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0594717206256501*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0594717206256501*-0.0594717206256501+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0594717206256501*-0.0594717206256501+-0.15920629596808*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0594717206256501*-0.0594717206256501+-0.15920629596808*-0.15920629596808+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0594717206256501*-0.0594717206256501+-0.15920629596808*-0.15920629596808+-0.00700264646669879*${new_z})
variable           module        equal     sqrt(-0.0594717206256501*-0.0594717206256501+-0.15920629596808*-0.15920629596808+-0.00700264646669879*-0.00700264646669879)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0594717206256501/${module}
variable           unitx         equal     -0.0594717206256501/0.170095759169912
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.15920629596808/${module}
variable           unity         equal     -0.15920629596808/0.170095759169912
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00700264646669879/${module}
variable           unitz         equal     -0.00700264646669879/0.170095759169912
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.27219947074516e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.27219947074516e-05*-2.27219947074516e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.27219947074516e-05*-2.27219947074516e-05+7.55267870421863e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.27219947074516e-05*-2.27219947074516e-05+7.55267870421863e-06*7.55267870421863e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.27219947074516e-05*-2.27219947074516e-05+7.55267870421863e-06*7.55267870421863e-06+2.46867548546266e-05*${fz})
variable           f_module      equal     sqrt(-2.27219947074516e-05*-2.27219947074516e-05+7.55267870421863e-06*7.55267870421863e-06+2.46867548546266e-05*2.46867548546266e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.349636704147589*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.349636704147589*-0.349636704147589+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.349636704147589*-0.349636704147589+-0.93598039566081*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.349636704147589*-0.349636704147589+-0.93598039566081*-0.93598039566081+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.349636704147589*-0.349636704147589+-0.93598039566081*-0.93598039566081+-0.0411688480704784*${unitz})
variable           dir_module    equal     sqrt(-0.349636704147589*-0.349636704147589+-0.93598039566081*-0.93598039566081+-0.0411688480704784*-0.0411688480704784)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.27219947074516e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.27219947074516e-05*-0.349636704147589+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.27219947074516e-05*-0.349636704147589+7.55267870421863e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.27219947074516e-05*-0.349636704147589+7.55267870421863e-06*-0.93598039566081+${fz}*${unitz}
variable           dot      equal     -2.27219947074516e-05*-0.349636704147589+7.55267870421863e-06*-0.93598039566081+2.46867548546266e-05*${unitz}
variable           dot      equal     -2.27219947074516e-05*-0.349636704147589+7.55267870421863e-06*-0.93598039566081+2.46867548546266e-05*-0.0411688480704784
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.41041120664456e-07/${f_module}*${dir_module}
variable           cos      equal     -1.41041120664456e-07/3.43913923002115e-05*${dir_module}
variable           cos      equal     -1.41041120664456e-07/3.43913923002115e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00410105876008947)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57489739705081/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.2349740171505-90.0)
print              "The dot product: ${dot}"
The dot product: -1.41041120664456e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.2349740171505

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0594717206256501^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0594717206256501^2+-0.15920629596808^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0594717206256501^2+-0.15920629596808^2+-0.00700264646669879^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0594717206256501/${norm}
variable           unit_x        equal     -0.0594717206256501/0.170095759169912
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.15920629596808/${norm}
variable           unit_y        equal     -0.15920629596808/0.170095759169912
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00700264646669879/${norm}
variable           unit_z        equal     -0.00700264646669879/0.170095759169912
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10616459325912+${delta}*${unit_x}
variable           x_new         equal     1.10616459325912+0.03*${unit_x}
variable           x_new         equal     1.10616459325912+0.03*-0.349636704147589
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.86547665929426+${delta}*${unit_y}
variable           y_new         equal     3.86547665929426+0.03*${unit_y}
variable           y_new         equal     3.86547665929426+0.03*-0.93598039566081
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.313865676466+${delta}*${unit_z}
variable           z_new         equal     31.313865676466+0.03*${unit_z}
variable           z_new         equal     31.313865676466+0.03*-0.0411688480704784

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09567549213469  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09567549213469  y  3.83739724742444  z   ${z_new}
set                atom          288751    x  1.09567549213469  y  3.83739724742444  z   31.3126306110239
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0594717206256501  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0594717206256501  -0.15920629596808  ${new_z}
fix                hold    carbon   planeforce   -0.0594717206256501  -0.15920629596808  -0.00700264646669879
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     988   -1152449.3            0   -1152449.3  0.010410609 -0.0024993833 -0.031590813 
    1000   -1152449.3            0   -1152449.3 0.00098537057 -0.00030475045 -0.0014399546 
    1120   -1152449.3            0   -1152449.3 4.4541608e-05 -1.4575625e-05 -4.6901519e-05 
Loop time of 1.55431 on 104 procs for 132 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.26603587  -1152449.26900151  -1152449.26900151
  Force two-norm initial, final = 0.24352868 0.00021116623
  Force max component initial, final = 0.18619869 4.6901519e-05
  Final line search alpha, max atom move = 1.0000000 4.6901519e-05
  Iterations, force evaluations = 132 264

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.40111    | 1.1105     | 1.4677     |  28.5 | 71.45
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026508   | 0.25426    | 0.74952    |  41.6 | 16.36
Output  | 9.6542e-05 | 9.8476e-05 | 0.00016601 |   0.0 |  0.01
Modify  | 1.6418e-05 | 0.0021825  | 0.0046973  |   2.2 |  0.14
Other   |            | 0.1873     |            |       | 12.05

Nlocal:        2776.45 ave        3943 max           0 min
Histogram: 8 4 4 0 4 12 8 2 26 36
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114896 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.09347287127796-${x_0}
variable           new_x         equal     1.09347287127796-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.83836977602858-${y_0}
variable           new_y         equal     3.83836977602858-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3092263231362-${z_0}
variable           new_z         equal     31.3092263231362-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0721634426068101*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0721634426068101*-0.0721634426068101+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0721634426068101*-0.0721634426068101+-0.18631317923376*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0721634426068101*-0.0721634426068101+-0.18631317923376*-0.18631317923376+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0721634426068101*-0.0721634426068101+-0.18631317923376*-0.18631317923376+-0.0116419997964989*${new_z})
variable           module        equal     sqrt(-0.0721634426068101*-0.0721634426068101+-0.18631317923376*-0.18631317923376+-0.0116419997964989*-0.0116419997964989)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0721634426068101/${module}
variable           unitx         equal     -0.0721634426068101/0.20013919996922
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.18631317923376/${module}
variable           unity         equal     -0.18631317923376/0.20013919996922
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0116419997964989/${module}
variable           unitz         equal     -0.0116419997964989/0.20013919996922
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45416076980937e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45416076980937e-05*4.45416076980937e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45416076980937e-05*4.45416076980937e-05+-1.45756251486145e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45416076980937e-05*4.45416076980937e-05+-1.45756251486145e-05*-1.45756251486145e-05+${fz}*${fz})
variable           f_module      equal     sqrt(4.45416076980937e-05*4.45416076980937e-05+-1.45756251486145e-05*-1.45756251486145e-05+-4.69015192272429e-05*${fz})
variable           f_module      equal     sqrt(4.45416076980937e-05*4.45416076980937e-05+-1.45756251486145e-05*-1.45756251486145e-05+-4.69015192272429e-05*-4.69015192272429e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360566258973296*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360566258973296*-0.360566258973296+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360566258973296*-0.360566258973296+-0.930917977399798*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360566258973296*-0.360566258973296+-0.930917977399798*-0.930917977399798+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360566258973296*-0.360566258973296+-0.930917977399798*-0.930917977399798+-0.0581695130103916*${unitz})
variable           dir_module    equal     sqrt(-0.360566258973296*-0.360566258973296+-0.930917977399798*-0.930917977399798+-0.0581695130103916*-0.0581695130103916)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.45416076980937e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.45416076980937e-05*-0.360566258973296+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.45416076980937e-05*-0.360566258973296+-1.45756251486145e-05*${unity}+${fz}*${unitz}
variable           dot      equal     4.45416076980937e-05*-0.360566258973296+-1.45756251486145e-05*-0.930917977399798+${fz}*${unitz}
variable           dot      equal     4.45416076980937e-05*-0.360566258973296+-1.45756251486145e-05*-0.930917977399798+-4.69015192272429e-05*${unitz}
variable           dot      equal     4.45416076980937e-05*-0.360566258973296+-1.45756251486145e-05*-0.930917977399798+-4.69015192272429e-05*-0.0581695130103916
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.36749159224268e-07/${f_module}*${dir_module}
variable           cos      equal     2.36749159224268e-07/6.63035155223857e-05*${dir_module}
variable           cos      equal     2.36749159224268e-07/6.63035155223857e-05*0.999999999999997
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00357068787920205)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56722563132805/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7954142198232-90.0)
print              "The dot product: ${dot}"
The dot product: 2.36749159224268e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7954142198232

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0721634426068101^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0721634426068101^2+-0.18631317923376^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0721634426068101^2+-0.18631317923376^2+-0.0116419997964989^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0721634426068101/${norm}
variable           unit_x        equal     -0.0721634426068101/0.20013919996922
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.18631317923376/${norm}
variable           unit_y        equal     -0.18631317923376/0.20013919996922
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0116419997964989/${norm}
variable           unit_z        equal     -0.0116419997964989/0.20013919996922
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.09347287127796+${delta}*${unit_x}
variable           x_new         equal     1.09347287127796+0.03*${unit_x}
variable           x_new         equal     1.09347287127796+0.03*-0.360566258973296
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.83836977602858+${delta}*${unit_y}
variable           y_new         equal     3.83836977602858+0.03*${unit_y}
variable           y_new         equal     3.83836977602858+0.03*-0.930917977399798
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3092263231362+${delta}*${unit_z}
variable           z_new         equal     31.3092263231362+0.03*${unit_z}
variable           z_new         equal     31.3092263231362+0.03*-0.0581695130103916

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08265588350876  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08265588350876  y  3.81044223670659  z   ${z_new}
set                atom          288751    x  1.08265588350876  y  3.81044223670659  z   31.3074812377459
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0721634426068101  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0721634426068101  -0.18631317923376  ${new_z}
fix                hold    carbon   planeforce   -0.0721634426068101  -0.18631317923376  -0.0116419997964989
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1120   -1152449.2            0   -1152449.2  0.013956784 -0.0033330888 -0.033170524 
    1296   -1152449.2            0   -1152449.2 3.0108841e-05 -9.7940658e-06 -2.9891265e-05 
Loop time of 2.06551 on 104 procs for 176 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.24260241  -1152449.24555275  -1152449.24555275
  Force two-norm initial, final = 0.24464859 0.00017758049
  Force max component initial, final = 0.18963957 4.1923056e-05
  Final line search alpha, max atom move = 1.0000000 4.1923056e-05
  Iterations, force evaluations = 176 352

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53237    | 1.4742     | 1.9536     |  32.8 | 71.37
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034389   | 0.33555    | 0.99621    |  47.8 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1788e-05 | 0.0029039  | 0.006219   |   2.5 |  0.14
Other   |            | 0.2529     |            |       | 12.24

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114486 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.08139143755384-${x_0}
variable           new_x         equal     1.08139143755384-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.81115191800908-${y_0}
variable           new_y         equal     3.81115191800908-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3039615497754-${z_0}
variable           new_z         equal     31.3039615497754-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08424487633093*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08424487633093*-0.08424487633093+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08424487633093*-0.08424487633093+-0.21353103725326*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08424487633093*-0.08424487633093+-0.21353103725326*-0.21353103725326+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08424487633093*-0.08424487633093+-0.21353103725326*-0.21353103725326+-0.0169067731572987*${new_z})
variable           module        equal     sqrt(-0.08424487633093*-0.08424487633093+-0.21353103725326*-0.21353103725326+-0.0169067731572987*-0.0169067731572987)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.08424487633093/${module}
variable           unitx         equal     -0.08424487633093/0.230170680228953
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.21353103725326/${module}
variable           unity         equal     -0.21353103725326/0.230170680228953
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0169067731572987/${module}
variable           unitz         equal     -0.0169067731572987/0.230170680228953
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01088412964585e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01088412964585e-05*3.01088412964585e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01088412964585e-05*3.01088412964585e-05+-9.79406584284817e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.01088412964585e-05*3.01088412964585e-05+-9.79406584284817e-06*-9.79406584284817e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.01088412964585e-05*3.01088412964585e-05+-9.79406584284817e-06*-9.79406584284817e-06+-2.98912645727613e-05*${fz})
variable           f_module      equal     sqrt(3.01088412964585e-05*3.01088412964585e-05+-9.79406584284817e-06*-9.79406584284817e-06+-2.98912645727613e-05*-2.98912645727613e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366010459052086*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366010459052086*-0.366010459052086+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366010459052086*-0.366010459052086+-0.927707373679648*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366010459052086*-0.366010459052086+-0.927707373679648*-0.927707373679648+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.366010459052086*-0.366010459052086+-0.927707373679648*-0.927707373679648+-0.0734532006443278*${unitz})
variable           dir_module    equal     sqrt(-0.366010459052086*-0.366010459052086+-0.927707373679648*-0.927707373679648+-0.0734532006443278*-0.0734532006443278)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.01088412964585e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.01088412964585e-05*-0.366010459052086+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.01088412964585e-05*-0.366010459052086+-9.79406584284817e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.01088412964585e-05*-0.366010459052086+-9.79406584284817e-06*-0.927707373679648+${fz}*${unitz}
variable           dot      equal     3.01088412964585e-05*-0.366010459052086+-9.79406584284817e-06*-0.927707373679648+-2.98912645727613e-05*${unitz}
variable           dot      equal     3.01088412964585e-05*-0.366010459052086+-9.79406584284817e-06*-0.927707373679648+-2.98912645727613e-05*-0.0734532006443278
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.61485330446766e-07/${f_module}*${dir_module}
variable           cos      equal     2.61485330446766e-07/4.35425510013847e-05*${dir_module}
variable           cos      equal     2.61485330446766e-07/4.35425510013847e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00600528275062365)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56479100794851/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.6559205754717-90.0)
print              "The dot product: ${dot}"
The dot product: 2.61485330446766e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.6559205754717

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.08424487633093^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.08424487633093^2+-0.21353103725326^2+${new_z}^2)
variable           norm          equal     sqrt(-0.08424487633093^2+-0.21353103725326^2+-0.0169067731572987^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.08424487633093/${norm}
variable           unit_x        equal     -0.08424487633093/0.230170680228953
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.21353103725326/${norm}
variable           unit_y        equal     -0.21353103725326/0.230170680228953
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0169067731572987/${norm}
variable           unit_z        equal     -0.0169067731572987/0.230170680228953
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.08139143755384+${delta}*${unit_x}
variable           x_new         equal     1.08139143755384+0.03*${unit_x}
variable           x_new         equal     1.08139143755384+0.03*-0.366010459052086
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.81115191800908+${delta}*${unit_y}
variable           y_new         equal     3.81115191800908+0.03*${unit_y}
variable           y_new         equal     3.81115191800908+0.03*-0.927707373679648
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3039615497754+${delta}*${unit_z}
variable           z_new         equal     31.3039615497754+0.03*${unit_z}
variable           z_new         equal     31.3039615497754+0.03*-0.0734532006443278

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07041112378228  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07041112378228  y  3.78332069679869  z   ${z_new}
set                atom          288751    x  1.07041112378228  y  3.78332069679869  z   31.3017579537561
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.08424487633093  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.08424487633093  -0.21353103725326  ${new_z}
fix                hold    carbon   planeforce   -0.08424487633093  -0.21353103725326  -0.0169067731572987
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1296   -1152449.2            0   -1152449.2  0.022272169 -0.0055720215 -0.040606009 
    1473   -1152449.2            0   -1152449.2 -2.3889833e-05 7.1720056e-06 2.8459022e-05 
Loop time of 2.08866 on 104 procs for 177 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.21607353  -1152449.21905695  -1152449.21905695
  Force two-norm initial, final = 0.24726837 0.00014344616
  Force max component initial, final = 0.1934222 2.8459022e-05
  Final line search alpha, max atom move = 1.0000000 2.8459022e-05
  Iterations, force evaluations = 177 354

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53614    | 1.4911     | 1.9737     |  33.1 | 71.39
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030162   | 0.33902    | 1.0023     |  48.2 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1582e-05 | 0.0029201  | 0.006291   |   2.6 |  0.14
Other   |            | 0.2556     |            |       | 12.24

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114488 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07191104634708-${x_0}
variable           new_x         equal     1.07191104634708-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.78321013952373-${y_0}
variable           new_y         equal     3.78321013952373-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2956803078085-${z_0}
variable           new_z         equal     31.2956803078085-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0937252675376901*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0937252675376901*-0.0937252675376901+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0937252675376901*-0.0937252675376901+-0.24147281573861*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0937252675376901*-0.0937252675376901+-0.24147281573861*-0.24147281573861+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0937252675376901*-0.0937252675376901+-0.24147281573861*-0.24147281573861+-0.0251880151242005*${new_z})
variable           module        equal     sqrt(-0.0937252675376901*-0.0937252675376901+-0.24147281573861*-0.24147281573861+-0.0251880151242005*-0.0251880151242005)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0937252675376901/${module}
variable           unitx         equal     -0.0937252675376901/0.260246004045482
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.24147281573861/${module}
variable           unity         equal     -0.24147281573861/0.260246004045482
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0251880151242005/${module}
variable           unitz         equal     -0.0251880151242005/0.260246004045482
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.38898331016023e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.38898331016023e-05*-2.38898331016023e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.38898331016023e-05*-2.38898331016023e-05+7.17200563970318e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.38898331016023e-05*-2.38898331016023e-05+7.17200563970318e-06*7.17200563970318e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.38898331016023e-05*-2.38898331016023e-05+7.17200563970318e-06*7.17200563970318e-06+2.84590221523959e-05*${fz})
variable           f_module      equal     sqrt(-2.38898331016023e-05*-2.38898331016023e-05+7.17200563970318e-06*7.17200563970318e-06+2.84590221523959e-05*2.84590221523959e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360141043784519*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360141043784519*-0.360141043784519+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360141043784519*-0.360141043784519+-0.927863682765361*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360141043784519*-0.360141043784519+-0.927863682765361*-0.927863682765361+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.360141043784519*-0.360141043784519+-0.927863682765361*-0.927863682765361+-0.0967854058569849*${unitz})
variable           dir_module    equal     sqrt(-0.360141043784519*-0.360141043784519+-0.927863682765361*-0.927863682765361+-0.0967854058569849*-0.0967854058569849)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.38898331016023e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.38898331016023e-05*-0.360141043784519+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.38898331016023e-05*-0.360141043784519+7.17200563970318e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.38898331016023e-05*-0.360141043784519+7.17200563970318e-06*-0.927863682765361+${fz}*${unitz}
variable           dot      equal     -2.38898331016023e-05*-0.360141043784519+7.17200563970318e-06*-0.927863682765361+2.84590221523959e-05*${unitz}
variable           dot      equal     -2.38898331016023e-05*-0.360141043784519+7.17200563970318e-06*-0.927863682765361+2.84590221523959e-05*-0.0967854058569849
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.05352145932488e-07/${f_module}*${dir_module}
variable           cos      equal     -8.05352145932488e-07/3.7842802914014e-05*${dir_module}
variable           cos      equal     -8.05352145932488e-07/3.7842802914014e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0212815141564012)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5920794476885/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.2194330020702-90.0)
print              "The dot product: ${dot}"
The dot product: -8.05352145932488e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.2194330020702

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0937252675376901^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0937252675376901^2+-0.24147281573861^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0937252675376901^2+-0.24147281573861^2+-0.0251880151242005^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0937252675376901/${norm}
variable           unit_x        equal     -0.0937252675376901/0.260246004045482
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.24147281573861/${norm}
variable           unit_y        equal     -0.24147281573861/0.260246004045482
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0251880151242005/${norm}
variable           unit_z        equal     -0.0251880151242005/0.260246004045482
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07191104634708+${delta}*${unit_x}
variable           x_new         equal     1.07191104634708+0.03*${unit_x}
variable           x_new         equal     1.07191104634708+0.03*-0.360141043784519
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.78321013952373+${delta}*${unit_y}
variable           y_new         equal     3.78321013952373+0.03*${unit_y}
variable           y_new         equal     3.78321013952373+0.03*-0.927863682765361
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2956803078085+${delta}*${unit_z}
variable           z_new         equal     31.2956803078085+0.03*${unit_z}
variable           z_new         equal     31.2956803078085+0.03*-0.0967854058569849

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06110681503354  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06110681503354  y  3.75537422904077  z   ${z_new}
set                atom          288751    x  1.06110681503354  y  3.75537422904077  z   31.2927767456328
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0937252675376901  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0937252675376901  -0.24147281573861  ${new_z}
fix                hold    carbon   planeforce   -0.0937252675376901  -0.24147281573861  -0.0251880151242005
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1473   -1152449.2            0   -1152449.2  0.036128621 -0.0087558614 -0.050494737 
    1651   -1152449.2            0   -1152449.2 3.8331073e-05 -1.0526982e-05 -4.171071e-05 
Loop time of 2.11096 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.18681416  -1152449.18997672  -1152449.18997672
  Force two-norm initial, final = 0.25203169 0.00015849004
  Force max component initial, final = 0.19843061 4.1710710e-05
  Final line search alpha, max atom move = 1.0000000 4.1710710e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53726    | 1.4943     | 1.989      |  33.2 | 70.79
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033574   | 0.34582    | 1.0133     |  47.9 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2491e-05 | 0.0029368  | 0.0062984  |   2.6 |  0.14
Other   |            | 0.2679     |            |       | 12.69

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06775273577551-${x_0}
variable           new_x         equal     1.06775273577551-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.75370521810929-${y_0}
variable           new_y         equal     3.75370521810929-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2840475968949-${z_0}
variable           new_z         equal     31.2840475968949-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09788357810926*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09788357810926*-0.09788357810926+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09788357810926*-0.09788357810926+-0.27097773715305*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09788357810926*-0.09788357810926+-0.27097773715305*-0.27097773715305+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09788357810926*-0.09788357810926+-0.27097773715305*-0.27097773715305+-0.0368207260377993*${new_z})
variable           module        equal     sqrt(-0.09788357810926*-0.09788357810926+-0.27097773715305*-0.27097773715305+-0.0368207260377993*-0.0368207260377993)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.09788357810926/${module}
variable           unitx         equal     -0.09788357810926/0.290458077460431
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.27097773715305/${module}
variable           unity         equal     -0.27097773715305/0.290458077460431
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0368207260377993/${module}
variable           unitz         equal     -0.0368207260377993/0.290458077460431
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.83310732706744e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.83310732706744e-05*3.83310732706744e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.83310732706744e-05*3.83310732706744e-05+-1.05269824749924e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.83310732706744e-05*3.83310732706744e-05+-1.05269824749924e-05*-1.05269824749924e-05+${fz}*${fz})
variable           f_module      equal     sqrt(3.83310732706744e-05*3.83310732706744e-05+-1.05269824749924e-05*-1.05269824749924e-05+-4.17107101393581e-05*${fz})
variable           f_module      equal     sqrt(3.83310732706744e-05*3.83310732706744e-05+-1.05269824749924e-05*-1.05269824749924e-05+-4.17107101393581e-05*-4.17107101393581e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.336997266404459*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.336997266404459*-0.336997266404459+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.336997266404459*-0.336997266404459+-0.932932351278698*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.336997266404459*-0.336997266404459+-0.932932351278698*-0.932932351278698+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.336997266404459*-0.336997266404459+-0.932932351278698*-0.932932351278698+-0.126767781291313*${unitz})
variable           dir_module    equal     sqrt(-0.336997266404459*-0.336997266404459+-0.932932351278698*-0.932932351278698+-0.126767781291313*-0.126767781291313)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.83310732706744e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.83310732706744e-05*-0.336997266404459+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.83310732706744e-05*-0.336997266404459+-1.05269824749924e-05*${unity}+${fz}*${unitz}
variable           dot      equal     3.83310732706744e-05*-0.336997266404459+-1.05269824749924e-05*-0.932932351278698+${fz}*${unitz}
variable           dot      equal     3.83310732706744e-05*-0.336997266404459+-1.05269824749924e-05*-0.932932351278698+-4.17107101393581e-05*${unitz}
variable           dot      equal     3.83310732706744e-05*-0.336997266404459+-1.05269824749924e-05*-0.932932351278698+-4.17107101393581e-05*-0.126767781291313
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.19106978214951e-06/${f_module}*${dir_module}
variable           cos      equal     2.19106978214951e-06/5.76183293617592e-05*${dir_module}
variable           cos      equal     2.19106978214951e-06/5.76183293617592e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0380273049638906)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53275985080016/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.8206704579509-90.0)
print              "The dot product: ${dot}"
The dot product: 2.19106978214951e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.8206704579509

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09788357810926^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09788357810926^2+-0.27097773715305^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09788357810926^2+-0.27097773715305^2+-0.0368207260377993^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.09788357810926/${norm}
variable           unit_x        equal     -0.09788357810926/0.290458077460431
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.27097773715305/${norm}
variable           unit_y        equal     -0.27097773715305/0.290458077460431
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0368207260377993/${norm}
variable           unit_z        equal     -0.0368207260377993/0.290458077460431
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06775273577551+${delta}*${unit_x}
variable           x_new         equal     1.06775273577551+0.03*${unit_x}
variable           x_new         equal     1.06775273577551+0.03*-0.336997266404459
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.75370521810929+${delta}*${unit_y}
variable           y_new         equal     3.75370521810929+0.03*${unit_y}
variable           y_new         equal     3.75370521810929+0.03*-0.932932351278698
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2840475968949+${delta}*${unit_z}
variable           z_new         equal     31.2840475968949+0.03*${unit_z}
variable           z_new         equal     31.2840475968949+0.03*-0.126767781291313

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05764281778338  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05764281778338  y  3.72571724757093  z   ${z_new}
set                atom          288751    x  1.05764281778338  y  3.72571724757093  z   31.2802445634562
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09788357810926  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09788357810926  -0.27097773715305  ${new_z}
fix                hold    carbon   planeforce   -0.09788357810926  -0.27097773715305  -0.0368207260377993
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1651   -1152449.2            0   -1152449.2  0.052827745  -0.01197236 -0.052327204 
    1836   -1152449.2            0   -1152449.2 -2.4599008e-05 4.8059586e-06 3.0024697e-05 
Loop time of 2.18868 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.15508871  -1152449.15843199  -1152449.15843199
  Force two-norm initial, final = 0.25697732 0.00013541334
  Force max component initial, final = 0.20532098 3.0024697e-05
  Final line search alpha, max atom move = 1.0000000 3.0024697e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55592    | 1.5554     | 2.0717     |  33.8 | 71.06
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.0399     | 0.35805    | 1.0532     |  48.7 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2921e-05 | 0.0030558  | 0.0065271  |   2.6 |  0.14
Other   |            | 0.2722     |            |       | 12.44

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.07 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114492 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06921844830564-${x_0}
variable           new_x         equal     1.06921844830564-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.72274380931513-${y_0}
variable           new_y         equal     3.72274380931513-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2713547723112-${z_0}
variable           new_z         equal     31.2713547723112-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0964178655791301*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0964178655791301*-0.0964178655791301+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0964178655791301*-0.0964178655791301+-0.30193914594721*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0964178655791301*-0.0964178655791301+-0.30193914594721*-0.30193914594721+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0964178655791301*-0.0964178655791301+-0.30193914594721*-0.30193914594721+-0.0495135506215014*${new_z})
variable           module        equal     sqrt(-0.0964178655791301*-0.0964178655791301+-0.30193914594721*-0.30193914594721+-0.0495135506215014*-0.0495135506215014)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0964178655791301/${module}
variable           unitx         equal     -0.0964178655791301/0.320804059128487
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.30193914594721/${module}
variable           unity         equal     -0.30193914594721/0.320804059128487
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0495135506215014/${module}
variable           unitz         equal     -0.0495135506215014/0.320804059128487
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45990081901999e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45990081901999e-05*-2.45990081901999e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45990081901999e-05*-2.45990081901999e-05+4.8059586268464e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45990081901999e-05*-2.45990081901999e-05+4.8059586268464e-06*4.8059586268464e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45990081901999e-05*-2.45990081901999e-05+4.8059586268464e-06*4.8059586268464e-06+3.00246970923803e-05*${fz})
variable           f_module      equal     sqrt(-2.45990081901999e-05*-2.45990081901999e-05+4.8059586268464e-06*4.8059586268464e-06+3.00246970923803e-05*3.00246970923803e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.300550640914781*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.300550640914781*-0.300550640914781+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.300550640914781*-0.300550640914781+-0.941194904975559*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.300550640914781*-0.300550640914781+-0.941194904975559*-0.941194904975559+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.300550640914781*-0.300550640914781+-0.941194904975559*-0.941194904975559+-0.154342032815958*${unitz})
variable           dir_module    equal     sqrt(-0.300550640914781*-0.300550640914781+-0.941194904975559*-0.941194904975559+-0.154342032815958*-0.154342032815958)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45990081901999e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45990081901999e-05*-0.300550640914781+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45990081901999e-05*-0.300550640914781+4.8059586268464e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45990081901999e-05*-0.300550640914781+4.8059586268464e-06*-0.941194904975559+${fz}*${unitz}
variable           dot      equal     -2.45990081901999e-05*-0.300550640914781+4.8059586268464e-06*-0.941194904975559+3.00246970923803e-05*${unitz}
variable           dot      equal     -2.45990081901999e-05*-0.300550640914781+4.8059586268464e-06*-0.941194904975559+3.00246970923803e-05*-0.154342032815958
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.7641688796e-06/${f_module}*${dir_module}
variable           cos      equal     -1.7641688796e-06/3.91112627992714e-05*${dir_module}
variable           cos      equal     -1.7641688796e-06/3.91112627992714e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0451064157312984)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61591805204813/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.5852844213591-90.0)
print              "The dot product: ${dot}"
The dot product: -1.7641688796e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.5852844213591

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0964178655791301^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0964178655791301^2+-0.30193914594721^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0964178655791301^2+-0.30193914594721^2+-0.0495135506215014^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0964178655791301/${norm}
variable           unit_x        equal     -0.0964178655791301/0.320804059128487
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.30193914594721/${norm}
variable           unit_y        equal     -0.30193914594721/0.320804059128487
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0495135506215014/${norm}
variable           unit_z        equal     -0.0495135506215014/0.320804059128487
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06921844830564+${delta}*${unit_x}
variable           x_new         equal     1.06921844830564+0.03*${unit_x}
variable           x_new         equal     1.06921844830564+0.03*-0.300550640914781
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.72274380931513+${delta}*${unit_y}
variable           y_new         equal     3.72274380931513+0.03*${unit_y}
variable           y_new         equal     3.72274380931513+0.03*-0.941194904975559
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2713547723112+${delta}*${unit_z}
variable           z_new         equal     31.2713547723112+0.03*${unit_z}
variable           z_new         equal     31.2713547723112+0.03*-0.154342032815958

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0602019290782  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0602019290782  y  3.69450796216586  z   ${z_new}
set                atom          288751    x  1.0602019290782  y  3.69450796216586  z   31.2667245113267
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0964178655791301  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0964178655791301  -0.30193914594721  ${new_z}
fix                hold    carbon   planeforce   -0.0964178655791301  -0.30193914594721  -0.0495135506215014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1836   -1152449.1            0   -1152449.1  0.065586687 -0.013496954 -0.045411197 
    2000   -1152449.1            0   -1152449.1 6.1588587e-05 -7.9621108e-06 -7.1377777e-05 
    2053   -1152449.1            0   -1152449.1 -9.2441176e-06 1.7609547e-06 7.2625961e-06 
Loop time of 2.56125 on 104 procs for 217 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.12083979  -1152449.12434206  -1152449.12434206
  Force two-norm initial, final = 0.2612331 4.9592029e-05
  Force max component initial, final = 0.21345546 1.2895938e-05
  Final line search alpha, max atom move = 1.0000000 1.2895938e-05
  Iterations, force evaluations = 217 434

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6532     | 1.8209     | 2.423      |  36.6 | 71.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040129   | 0.4178     | 1.2418     |  53.2 | 16.31
Output  | 9.6991e-05 | 9.9861e-05 | 0.00024011 |   0.0 |  0.00
Modify  | 2.7054e-05 | 0.0035778  | 0.0076354  |   2.8 |  0.14
Other   |            | 0.3189     |            |       | 12.45

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114475 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07534012244714-${x_0}
variable           new_x         equal     1.07534012244714-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.69087208801732-${y_0}
variable           new_y         equal     3.69087208801732-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2594178335869-${z_0}
variable           new_z         equal     31.2594178335869-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0902961914376301*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0902961914376301*-0.0902961914376301+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0902961914376301*-0.0902961914376301+-0.33381086724502*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0902961914376301*-0.0902961914376301+-0.33381086724502*-0.33381086724502+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0902961914376301*-0.0902961914376301+-0.33381086724502*-0.33381086724502+-0.0614504893457983*${new_z})
variable           module        equal     sqrt(-0.0902961914376301*-0.0902961914376301+-0.33381086724502*-0.33381086724502+-0.0614504893457983*-0.0614504893457983)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0902961914376301/${module}
variable           unitx         equal     -0.0902961914376301/0.35122536912907
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.33381086724502/${module}
variable           unity         equal     -0.33381086724502/0.35122536912907
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0614504893457983/${module}
variable           unitz         equal     -0.0614504893457983/0.35122536912907
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.24411759659814e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.24411759659814e-06*-9.24411759659814e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.24411759659814e-06*-9.24411759659814e-06+1.76095473104932e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.24411759659814e-06*-9.24411759659814e-06+1.76095473104932e-06*1.76095473104932e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-9.24411759659814e-06*-9.24411759659814e-06+1.76095473104932e-06*1.76095473104932e-06+7.26259611425072e-06*${fz})
variable           f_module      equal     sqrt(-9.24411759659814e-06*-9.24411759659814e-06+1.76095473104932e-06*1.76095473104932e-06+7.26259611425072e-06*7.26259611425072e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.257089035628425*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.257089035628425*-0.257089035628425+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.257089035628425*-0.257089035628425+-0.950417870078028*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.257089035628425*-0.257089035628425+-0.950417870078028*-0.950417870078028+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.257089035628425*-0.257089035628425+-0.950417870078028*-0.950417870078028+-0.174960281195451*${unitz})
variable           dir_module    equal     sqrt(-0.257089035628425*-0.257089035628425+-0.950417870078028*-0.950417870078028+-0.174960281195451*-0.174960281195451)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.24411759659814e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.24411759659814e-06*-0.257089035628425+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.24411759659814e-06*-0.257089035628425+1.76095473104932e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -9.24411759659814e-06*-0.257089035628425+1.76095473104932e-06*-0.950417870078028+${fz}*${unitz}
variable           dot      equal     -9.24411759659814e-06*-0.257089035628425+1.76095473104932e-06*-0.950417870078028+7.26259611425072e-06*${unitz}
variable           dot      equal     -9.24411759659814e-06*-0.257089035628425+1.76095473104932e-06*-0.950417870078028+7.26259611425072e-06*-0.174960281195451
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.67747425000847e-07/${f_module}*${dir_module}
variable           cos      equal     -5.67747425000847e-07/1.18869665610394e-05*${dir_module}
variable           cos      equal     -5.67747425000847e-07/1.18869665610394e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0477621790290628)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61857668387627/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.7376128043907-90.0)
print              "The dot product: ${dot}"
The dot product: -5.67747425000847e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.7376128043907

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0902961914376301^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0902961914376301^2+-0.33381086724502^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0902961914376301^2+-0.33381086724502^2+-0.0614504893457983^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0902961914376301/${norm}
variable           unit_x        equal     -0.0902961914376301/0.35122536912907
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.33381086724502/${norm}
variable           unit_y        equal     -0.33381086724502/0.35122536912907
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0614504893457983/${norm}
variable           unit_z        equal     -0.0614504893457983/0.35122536912907
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07534012244714+${delta}*${unit_x}
variable           x_new         equal     1.07534012244714+0.03*${unit_x}
variable           x_new         equal     1.07534012244714+0.03*-0.257089035628425
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.69087208801732+${delta}*${unit_y}
variable           y_new         equal     3.69087208801732+0.03*${unit_y}
variable           y_new         equal     3.69087208801732+0.03*-0.950417870078028
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2594178335869+${delta}*${unit_z}
variable           z_new         equal     31.2594178335869+0.03*${unit_z}
variable           z_new         equal     31.2594178335869+0.03*-0.174960281195451

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06762745137829  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06762745137829  y  3.66235955191498  z   ${z_new}
set                atom          288751    x  1.06762745137829  y  3.66235955191498  z   31.254169025151
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0902961914376301  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0902961914376301  -0.33381086724502  ${new_z}
fix                hold    carbon   planeforce   -0.0902961914376301  -0.33381086724502  -0.0614504893457983
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2053   -1152449.1            0   -1152449.1  0.073044861 -0.013648293  -0.03319297 
    2289   -1152449.1            0   -1152449.1 4.4074686e-06 -4.8677336e-07 -3.8321483e-06 
Loop time of 2.77805 on 104 procs for 236 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.0839806  -1152449.08757645  -1152449.08757645
  Force two-norm initial, final = 0.26514536 2.1478922e-05
  Force max component initial, final = 0.22210082 5.3097923e-06
  Final line search alpha, max atom move = 1.0000000 5.3097923e-06
  Iterations, force evaluations = 236 472

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.71102    | 1.9818     | 2.6203     |  38.1 | 71.34
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.048922   | 0.45897    | 1.3446     |  55.3 | 16.52
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9052e-05 | 0.00389    | 0.0083529  |   3.0 |  0.14
Other   |            | 0.3334     |            |       | 12.00

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.08457939920472-${x_0}
variable           new_x         equal     1.08457939920472-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.65857678945292-${y_0}
variable           new_y         equal     3.65857678945292-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.249808293267-${z_0}
variable           new_z         equal     31.249808293267-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0810569146800502*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0810569146800502*-0.0810569146800502+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0810569146800502*-0.0810569146800502+-0.36610616580942*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0810569146800502*-0.0810569146800502+-0.36610616580942*-0.36610616580942+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0810569146800502*-0.0810569146800502+-0.36610616580942*-0.36610616580942+-0.0710600296656985*${new_z})
variable           module        equal     sqrt(-0.0810569146800502*-0.0810569146800502+-0.36610616580942*-0.36610616580942+-0.0710600296656985*-0.0710600296656985)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0810569146800502/${module}
variable           unitx         equal     -0.0810569146800502/0.381645746572936
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.36610616580942/${module}
variable           unity         equal     -0.36610616580942/0.381645746572936
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0710600296656985/${module}
variable           unitz         equal     -0.0710600296656985/0.381645746572936
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.40746858308557e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.40746858308557e-06*4.40746858308557e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.40746858308557e-06*4.40746858308557e-06+-4.86773361778692e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.40746858308557e-06*4.40746858308557e-06+-4.86773361778692e-07*-4.86773361778692e-07+${fz}*${fz})
variable           f_module      equal     sqrt(4.40746858308557e-06*4.40746858308557e-06+-4.86773361778692e-07*-4.86773361778692e-07+-3.83214831082621e-06*${fz})
variable           f_module      equal     sqrt(4.40746858308557e-06*4.40746858308557e-06+-4.86773361778692e-07*-4.86773361778692e-07+-3.83214831082621e-06*-3.83214831082621e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.212387837170771*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.212387837170771*-0.212387837170771+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.212387837170771*-0.212387837170771+-0.959282709415586*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.212387837170771*-0.212387837170771+-0.959282709415586*-0.959282709415586+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.212387837170771*-0.212387837170771+-0.959282709415586*-0.959282709415586+-0.186193689576777*${unitz})
variable           dir_module    equal     sqrt(-0.212387837170771*-0.212387837170771+-0.959282709415586*-0.959282709415586+-0.186193689576777*-0.186193689576777)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.40746858308557e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.40746858308557e-06*-0.212387837170771+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.40746858308557e-06*-0.212387837170771+-4.86773361778692e-07*${unity}+${fz}*${unitz}
variable           dot      equal     4.40746858308557e-06*-0.212387837170771+-4.86773361778692e-07*-0.959282709415586+${fz}*${unitz}
variable           dot      equal     4.40746858308557e-06*-0.212387837170771+-4.86773361778692e-07*-0.959282709415586+-3.83214831082621e-06*${unitz}
variable           dot      equal     4.40746858308557e-06*-0.212387837170771+-4.86773361778692e-07*-0.959282709415586+-3.83214831082621e-06*-0.186193689576777
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.44382382596876e-07/${f_module}*${dir_module}
variable           cos      equal     2.44382382596876e-07/5.860724212313e-06*${dir_module}
variable           cos      equal     2.44382382596876e-07/5.860724212313e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.041698324941386)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52908590855968/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.6101690733966-90.0)
print              "The dot product: ${dot}"
The dot product: 2.44382382596876e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.6101690733966

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0810569146800502^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0810569146800502^2+-0.36610616580942^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0810569146800502^2+-0.36610616580942^2+-0.0710600296656985^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0810569146800502/${norm}
variable           unit_x        equal     -0.0810569146800502/0.381645746572936
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.36610616580942/${norm}
variable           unit_y        equal     -0.36610616580942/0.381645746572936
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0710600296656985/${norm}
variable           unit_z        equal     -0.0710600296656985/0.381645746572936
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.08457939920472+${delta}*${unit_x}
variable           x_new         equal     1.08457939920472+0.03*${unit_x}
variable           x_new         equal     1.08457939920472+0.03*-0.212387837170771
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.65857678945292+${delta}*${unit_y}
variable           y_new         equal     3.65857678945292+0.03*${unit_y}
variable           y_new         equal     3.65857678945292+0.03*-0.959282709415586
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.249808293267+${delta}*${unit_z}
variable           z_new         equal     31.249808293267+0.03*${unit_z}
variable           z_new         equal     31.249808293267+0.03*-0.186193689576777

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0782077640896  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0782077640896  y  3.62979830817045  z   ${z_new}
set                atom          288751    x  1.0782077640896  y  3.62979830817045  z   31.2442224825797
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0810569146800502  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0810569146800502  -0.36610616580942  ${new_z}
fix                hold    carbon   planeforce   -0.0810569146800502  -0.36610616580942  -0.0710600296656985
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2289     -1152449            0     -1152449  0.074778723 -0.013325869  -0.01664297 
    2468     -1152449            0     -1152449 -4.080693e-05 2.6648678e-06 3.2818159e-05 
Loop time of 2.10848 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.04437061  -1152449.04799261  -1152449.04799261
  Force two-norm initial, final = 0.26899114 0.00016512213
  Force max component initial, final = 0.23089034 4.0806930e-05
  Final line search alpha, max atom move = 1.0000000 4.0806930e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55149    | 1.5055     | 1.9892     |  32.9 | 71.40
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035759   | 0.34339    | 1.0243     |  48.4 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2206e-05 | 0.0029522  | 0.0063573  |   2.6 |  0.14
Other   |            | 0.2567     |            |       | 12.17

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.09552012589735-${x_0}
variable           new_x         equal     1.09552012589735-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.62581103884213-${y_0}
variable           new_y         equal     3.62581103884213-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.245017264852-${z_0}
variable           new_z         equal     31.245017264852-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0701161879874201*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0701161879874201*-0.0701161879874201+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0701161879874201*-0.0701161879874201+-0.39887191642021*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0701161879874201*-0.0701161879874201+-0.39887191642021*-0.39887191642021+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0701161879874201*-0.0701161879874201+-0.39887191642021*-0.39887191642021+-0.0758510580807013*${new_z})
variable           module        equal     sqrt(-0.0701161879874201*-0.0701161879874201+-0.39887191642021*-0.39887191642021+-0.0758510580807013*-0.0758510580807013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0701161879874201/${module}
variable           unitx         equal     -0.0701161879874201/0.412029693758326
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.39887191642021/${module}
variable           unity         equal     -0.39887191642021/0.412029693758326
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0758510580807013/${module}
variable           unitz         equal     -0.0758510580807013/0.412029693758326
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.08069300624637e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.08069300624637e-05*-4.08069300624637e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.08069300624637e-05*-4.08069300624637e-05+2.66486776115115e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.08069300624637e-05*-4.08069300624637e-05+2.66486776115115e-06*2.66486776115115e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.08069300624637e-05*-4.08069300624637e-05+2.66486776115115e-06*2.66486776115115e-06+3.28181586880971e-05*${fz})
variable           f_module      equal     sqrt(-4.08069300624637e-05*-4.08069300624637e-05+2.66486776115115e-06*2.66486776115115e-06+3.28181586880971e-05*3.28181586880971e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170172657576826*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170172657576826*-0.170172657576826+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170172657576826*-0.170172657576826+-0.968065948795832*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170172657576826*-0.170172657576826+-0.968065948795832*-0.968065948795832+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170172657576826*-0.170172657576826+-0.968065948795832*-0.968065948795832+-0.184091242038472*${unitz})
variable           dir_module    equal     sqrt(-0.170172657576826*-0.170172657576826+-0.968065948795832*-0.968065948795832+-0.184091242038472*-0.184091242038472)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.08069300624637e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.08069300624637e-05*-0.170172657576826+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.08069300624637e-05*-0.170172657576826+2.66486776115115e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.08069300624637e-05*-0.170172657576826+2.66486776115115e-06*-0.968065948795832+${fz}*${unitz}
variable           dot      equal     -4.08069300624637e-05*-0.170172657576826+2.66486776115115e-06*-0.968065948795832+3.28181586880971e-05*${unitz}
variable           dot      equal     -4.08069300624637e-05*-0.170172657576826+2.66486776115115e-06*-0.968065948795832+3.28181586880971e-05*-0.184091242038472
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.67707959564056e-06/${f_module}*${dir_module}
variable           cos      equal     -1.67707959564056e-06/5.24341358371085e-05*${dir_module}
variable           cos      equal     -1.67707959564056e-06/5.24341358371085e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0319844995796357)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60278628228752/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.8328894365387-90.0)
print              "The dot product: ${dot}"
The dot product: -1.67707959564056e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.8328894365387

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0701161879874201^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0701161879874201^2+-0.39887191642021^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0701161879874201^2+-0.39887191642021^2+-0.0758510580807013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0701161879874201/${norm}
variable           unit_x        equal     -0.0701161879874201/0.412029693758326
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.39887191642021/${norm}
variable           unit_y        equal     -0.39887191642021/0.412029693758326
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0758510580807013/${norm}
variable           unit_z        equal     -0.0758510580807013/0.412029693758326
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.09552012589735+${delta}*${unit_x}
variable           x_new         equal     1.09552012589735+0.03*${unit_x}
variable           x_new         equal     1.09552012589735+0.03*-0.170172657576826
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.62581103884213+${delta}*${unit_y}
variable           y_new         equal     3.62581103884213+0.03*${unit_y}
variable           y_new         equal     3.62581103884213+0.03*-0.968065948795832
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.245017264852+${delta}*${unit_z}
variable           z_new         equal     31.245017264852+0.03*${unit_z}
variable           z_new         equal     31.245017264852+0.03*-0.184091242038472

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09041494617005  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09041494617005  y  3.59676906037825  z   ${z_new}
set                atom          288751    x  1.09041494617005  y  3.59676906037825  z   31.2394945275908
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0701161879874201  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0701161879874201  -0.39887191642021  ${new_z}
fix                hold    carbon   planeforce   -0.0701161879874201  -0.39887191642021  -0.0758510580807013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2468     -1152449            0     -1152449  0.072051466 -0.013293689 0.0033025936 
    2614     -1152449            0     -1152449 1.8763231e-05 -6.9009959e-07 -1.3715628e-05 
Loop time of 1.71293 on 104 procs for 146 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.00188144  -1152449.00555829  -1152449.00555829
  Force two-norm initial, final = 0.27398941 0.00016697984
  Force max component initial, final = 0.2402244 2.5637119e-05
  Final line search alpha, max atom move = 1.0000000 2.5637119e-05
  Iterations, force evaluations = 146 292

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.44261    | 1.2249     | 1.6189     |  29.9 | 71.51
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.027762   | 0.27943    | 0.82708    |  43.6 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8219e-05 | 0.0024124  | 0.0051707  |   2.3 |  0.14
Other   |            | 0.2062     |            |       | 12.04

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10691071511341-${x_0}
variable           new_x         equal     1.10691071511341-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.5927348504247-${y_0}
variable           new_y         equal     3.5927348504247-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2454603325596-${z_0}
variable           new_z         equal     31.2454603325596-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05872559877136*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05872559877136*-0.05872559877136+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05872559877136*-0.05872559877136+-0.43194810483764*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05872559877136*-0.05872559877136+-0.43194810483764*-0.43194810483764+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05872559877136*-0.05872559877136+-0.43194810483764*-0.43194810483764+-0.0754079903731011*${new_z})
variable           module        equal     sqrt(-0.05872559877136*-0.05872559877136+-0.43194810483764*-0.43194810483764+-0.0754079903731011*-0.0754079903731011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.05872559877136/${module}
variable           unitx         equal     -0.05872559877136/0.442396006125726
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.43194810483764/${module}
variable           unity         equal     -0.43194810483764/0.442396006125726
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0754079903731011/${module}
variable           unitz         equal     -0.0754079903731011/0.442396006125726
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87632306688293e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87632306688293e-05*1.87632306688293e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87632306688293e-05*1.87632306688293e-05+-6.90099585318015e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87632306688293e-05*1.87632306688293e-05+-6.90099585318015e-07*-6.90099585318015e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.87632306688293e-05*1.87632306688293e-05+-6.90099585318015e-07*-6.90099585318015e-07+-1.37156275870415e-05*${fz})
variable           f_module      equal     sqrt(1.87632306688293e-05*1.87632306688293e-05+-6.90099585318015e-07*-6.90099585318015e-07+-1.37156275870415e-05*-1.37156275870415e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.132744414411984*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.132744414411984*-0.132744414411984+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.132744414411984*-0.132744414411984+-0.976383373395291*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.132744414411984*-0.132744414411984+-0.976383373395291*-0.976383373395291+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.132744414411984*-0.132744414411984+-0.976383373395291*-0.976383373395291+-0.170453596616943*${unitz})
variable           dir_module    equal     sqrt(-0.132744414411984*-0.132744414411984+-0.976383373395291*-0.976383373395291+-0.170453596616943*-0.170453596616943)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.87632306688293e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.87632306688293e-05*-0.132744414411984+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.87632306688293e-05*-0.132744414411984+-6.90099585318015e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.87632306688293e-05*-0.132744414411984+-6.90099585318015e-07*-0.976383373395291+${fz}*${unitz}
variable           dot      equal     1.87632306688293e-05*-0.132744414411984+-6.90099585318015e-07*-0.976383373395291+-1.37156275870415e-05*${unitz}
variable           dot      equal     1.87632306688293e-05*-0.132744414411984+-6.90099585318015e-07*-0.976383373395291+-1.37156275870415e-05*-0.170453596616943
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.20965745550558e-07/${f_module}*${dir_module}
variable           cos      equal     5.20965745550558e-07/2.32519569644313e-05*${dir_module}
variable           cos      equal     5.20965745550558e-07/2.32519569644313e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0224052429800848)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54838920883823/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7161667100312-90.0)
print              "The dot product: ${dot}"
The dot product: 5.20965745550558e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7161667100312

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05872559877136^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05872559877136^2+-0.43194810483764^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05872559877136^2+-0.43194810483764^2+-0.0754079903731011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.05872559877136/${norm}
variable           unit_x        equal     -0.05872559877136/0.442396006125726
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.43194810483764/${norm}
variable           unit_y        equal     -0.43194810483764/0.442396006125726
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0754079903731011/${norm}
variable           unit_z        equal     -0.0754079903731011/0.442396006125726
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10691071511341+${delta}*${unit_x}
variable           x_new         equal     1.10691071511341+0.03*${unit_x}
variable           x_new         equal     1.10691071511341+0.03*-0.132744414411984
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.5927348504247+${delta}*${unit_y}
variable           y_new         equal     3.5927348504247+0.03*${unit_y}
variable           y_new         equal     3.5927348504247+0.03*-0.976383373395291
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2454603325596+${delta}*${unit_z}
variable           z_new         equal     31.2454603325596+0.03*${unit_z}
variable           z_new         equal     31.2454603325596+0.03*-0.170453596616943

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10292838268105  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10292838268105  y  3.56344334922284  z   ${z_new}
set                atom          288751    x  1.10292838268105  y  3.56344334922284  z   31.2403467246611
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.05872559877136  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.05872559877136  -0.43194810483764  ${new_z}
fix                hold    carbon   planeforce   -0.05872559877136  -0.43194810483764  -0.0754079903731011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2614     -1152449            0     -1152449  0.066342276 -0.012490424  0.019881516 
    2737     -1152449            0     -1152449 -1.8034908e-05 -1.5256813e-07 1.4919007e-05 
Loop time of 1.44469 on 104 procs for 123 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.95641479  -1152448.96017222  -1152448.96017222
  Force two-norm initial, final = 0.28071018 0.00015624282
  Force max component initial, final = 0.25004962 2.5585448e-05
  Final line search alpha, max atom move = 1.0000000 2.5585448e-05
  Iterations, force evaluations = 123 246

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.37193    | 1.031      | 1.3663     |  27.5 | 71.36
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026087   | 0.2358     | 0.69746    |  40.1 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6297e-05 | 0.002032   | 0.0043333  |   2.1 |  0.14
Other   |            | 0.1759     |            |       | 12.18

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114447 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.11780333915336-${x_0}
variable           new_x         equal     1.11780333915336-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.55977894121853-${y_0}
variable           new_y         equal     3.55977894121853-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2497528017066-${z_0}
variable           new_z         equal     31.2497528017066-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0478329747314101*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0478329747314101*-0.0478329747314101+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0478329747314101*-0.0478329747314101+-0.46490401404381*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0478329747314101*-0.0478329747314101+-0.46490401404381*-0.46490401404381+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0478329747314101*-0.0478329747314101+-0.46490401404381*-0.46490401404381+-0.0711155212261012*${new_z})
variable           module        equal     sqrt(-0.0478329747314101*-0.0478329747314101+-0.46490401404381*-0.46490401404381+-0.0711155212261012*-0.0711155212261012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0478329747314101/${module}
variable           unitx         equal     -0.0478329747314101/0.472737932796769
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.46490401404381/${module}
variable           unity         equal     -0.46490401404381/0.472737932796769
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0711155212261012/${module}
variable           unitz         equal     -0.0711155212261012/0.472737932796769
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80349083778216e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80349083778216e-05*-1.80349083778216e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80349083778216e-05*-1.80349083778216e-05+-1.52568130117209e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80349083778216e-05*-1.80349083778216e-05+-1.52568130117209e-07*-1.52568130117209e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80349083778216e-05*-1.80349083778216e-05+-1.52568130117209e-07*-1.52568130117209e-07+1.49190066253867e-05*${fz})
variable           f_module      equal     sqrt(-1.80349083778216e-05*-1.80349083778216e-05+-1.52568130117209e-07*-1.52568130117209e-07+1.49190066253867e-05*1.49190066253867e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.101182857166602*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.101182857166602*-0.101182857166602+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.101182857166602*-0.101182857166602+-0.983428622478817*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.101182857166602*-0.101182857166602+-0.983428622478817*-0.983428622478817+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.101182857166602*-0.101182857166602+-0.983428622478817*-0.983428622478817+-0.15043328722401*${unitz})
variable           dir_module    equal     sqrt(-0.101182857166602*-0.101182857166602+-0.983428622478817*-0.983428622478817+-0.15043328722401*-0.15043328722401)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80349083778216e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80349083778216e-05*-0.101182857166602+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80349083778216e-05*-0.101182857166602+-1.52568130117209e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80349083778216e-05*-0.101182857166602+-1.52568130117209e-07*-0.983428622478817+${fz}*${unitz}
variable           dot      equal     -1.80349083778216e-05*-0.101182857166602+-1.52568130117209e-07*-0.983428622478817+1.49190066253867e-05*${unitz}
variable           dot      equal     -1.80349083778216e-05*-0.101182857166602+-1.52568130117209e-07*-0.983428622478817+1.49190066253867e-05*-0.15043328722401
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.69451784332493e-07/${f_module}*${dir_module}
variable           cos      equal     -2.69451784332493e-07/2.34063657136062e-05*${dir_module}
variable           cos      equal     -2.69451784332493e-07/2.34063657136062e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0115119018317252)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58230848290878/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.6595979584212-90.0)
print              "The dot product: ${dot}"
The dot product: -2.69451784332493e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.6595979584212

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0478329747314101^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0478329747314101^2+-0.46490401404381^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0478329747314101^2+-0.46490401404381^2+-0.0711155212261012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0478329747314101/${norm}
variable           unit_x        equal     -0.0478329747314101/0.472737932796769
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.46490401404381/${norm}
variable           unit_y        equal     -0.46490401404381/0.472737932796769
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0711155212261012/${norm}
variable           unit_z        equal     -0.0711155212261012/0.472737932796769
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.11780333915336+${delta}*${unit_x}
variable           x_new         equal     1.11780333915336+0.03*${unit_x}
variable           x_new         equal     1.11780333915336+0.03*-0.101182857166602
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.55977894121853+${delta}*${unit_y}
variable           y_new         equal     3.55977894121853+0.03*${unit_y}
variable           y_new         equal     3.55977894121853+0.03*-0.983428622478817
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2497528017066+${delta}*${unit_z}
variable           z_new         equal     31.2497528017066+0.03*${unit_z}
variable           z_new         equal     31.2497528017066+0.03*-0.15043328722401

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11476785343836  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11476785343836  y  3.53027608254417  z   ${z_new}
set                atom          288751    x  1.11476785343836  y  3.53027608254417  z   31.2452398030899
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0478329747314101  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0478329747314101  -0.46490401404381  ${new_z}
fix                hold    carbon   planeforce   -0.0478329747314101  -0.46490401404381  -0.0711155212261012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2737   -1152448.9            0   -1152448.9  0.058649149 -0.010672921  0.030324189 
    2916   -1152448.9            0   -1152448.9 -9.6477904e-06 -1.8422884e-06 1.8532801e-05 
Loop time of 2.10505 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.90782416  -1152448.91165662  -1152448.91165662
  Force two-norm initial, final = 0.28813116 0.0001148137
  Force max component initial, final = 0.25966997 1.8532801e-05
  Final line search alpha, max atom move = 1.0000000 1.8532801e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54606    | 1.5054     | 1.9897     |  33.0 | 71.52
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031485   | 0.3412     | 1.0144     |  48.4 | 16.21
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2286e-05 | 0.0029514  | 0.0063167  |   2.6 |  0.14
Other   |            | 0.2555     |            |       | 12.14

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114447 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12759697321411-${x_0}
variable           new_x         equal     1.12759697321411-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.52725051999584-${y_0}
variable           new_y         equal     3.52725051999584-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.256389847381-${z_0}
variable           new_z         equal     31.256389847381-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0380393406706601*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0380393406706601*-0.0380393406706601+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0380393406706601*-0.0380393406706601+-0.4974324352665*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0380393406706601*-0.0380393406706601+-0.4974324352665*-0.4974324352665+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0380393406706601*-0.0380393406706601+-0.4974324352665*-0.4974324352665+-0.0644784755516987*${new_z})
variable           module        equal     sqrt(-0.0380393406706601*-0.0380393406706601+-0.4974324352665*-0.4974324352665+-0.0644784755516987*-0.0644784755516987)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0380393406706601/${module}
variable           unitx         equal     -0.0380393406706601/0.50303428601169
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.4974324352665/${module}
variable           unity         equal     -0.4974324352665/0.50303428601169
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0644784755516987/${module}
variable           unitz         equal     -0.0644784755516987/0.50303428601169
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.64779040666556e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.64779040666556e-06*-9.64779040666556e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.64779040666556e-06*-9.64779040666556e-06+-1.84228844899629e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.64779040666556e-06*-9.64779040666556e-06+-1.84228844899629e-06*-1.84228844899629e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-9.64779040666556e-06*-9.64779040666556e-06+-1.84228844899629e-06*-1.84228844899629e-06+1.85328010976962e-05*${fz})
variable           f_module      equal     sqrt(-9.64779040666556e-06*-9.64779040666556e-06+-1.84228844899629e-06*-1.84228844899629e-06+1.85328010976962e-05*1.85328010976962e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0756197772765257*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0756197772765257*-0.0756197772765257+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0756197772765257*-0.0756197772765257+-0.988863878862802*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0756197772765257*-0.0756197772765257+-0.988863878862802*-0.988863878862802+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0756197772765257*-0.0756197772765257+-0.988863878862802*-0.988863878862802+-0.128179087081552*${unitz})
variable           dir_module    equal     sqrt(-0.0756197772765257*-0.0756197772765257+-0.988863878862802*-0.988863878862802+-0.128179087081552*-0.128179087081552)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.64779040666556e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.64779040666556e-06*-0.0756197772765257+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.64779040666556e-06*-0.0756197772765257+-1.84228844899629e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -9.64779040666556e-06*-0.0756197772765257+-1.84228844899629e-06*-0.988863878862802+${fz}*${unitz}
variable           dot      equal     -9.64779040666556e-06*-0.0756197772765257+-1.84228844899629e-06*-0.988863878862802+1.85328010976962e-05*${unitz}
variable           dot      equal     -9.64779040666556e-06*-0.0756197772765257+-1.84228844899629e-06*-0.988863878862802+1.85328010976962e-05*-0.128179087081552
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.75818737654574e-07/${f_module}*${dir_module}
variable           cos      equal     1.75818737654574e-07/2.09747134184718e-05*${dir_module}
variable           cos      equal     1.75818737654574e-07/2.09747134184718e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0083824142979582)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56241381432896/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.519717413986-90.0)
print              "The dot product: ${dot}"
The dot product: 1.75818737654574e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.519717413986

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0380393406706601^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0380393406706601^2+-0.4974324352665^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0380393406706601^2+-0.4974324352665^2+-0.0644784755516987^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0380393406706601/${norm}
variable           unit_x        equal     -0.0380393406706601/0.50303428601169
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.4974324352665/${norm}
variable           unit_y        equal     -0.4974324352665/0.50303428601169
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0644784755516987/${norm}
variable           unit_z        equal     -0.0644784755516987/0.50303428601169
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12759697321411+${delta}*${unit_x}
variable           x_new         equal     1.12759697321411+0.03*${unit_x}
variable           x_new         equal     1.12759697321411+0.03*-0.0756197772765257
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.52725051999584+${delta}*${unit_y}
variable           y_new         equal     3.52725051999584+0.03*${unit_y}
variable           y_new         equal     3.52725051999584+0.03*-0.988863878862802
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.256389847381+${delta}*${unit_z}
variable           z_new         equal     31.256389847381+0.03*${unit_z}
variable           z_new         equal     31.256389847381+0.03*-0.128179087081552

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12532837989581  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12532837989581  y  3.49758460362996  z   ${z_new}
set                atom          288751    x  1.12532837989581  y  3.49758460362996  z   31.2525444747686
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0380393406706601  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0380393406706601  -0.4974324352665  ${new_z}
fix                hold    carbon   planeforce   -0.0380393406706601  -0.4974324352665  -0.0644784755516987
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2916   -1152448.9            0   -1152448.9  0.049944695 -0.008414133  0.035447479 
    3000   -1152448.9            0   -1152448.9 0.00018817657 4.3460291e-07 -0.00011436837 
    3147   -1152448.9            0   -1152448.9 -2.6796702e-06 -2.1473959e-07 3.2375351e-06 
Loop time of 2.73638 on 104 procs for 231 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.85591733  -1152448.85979784  -1152448.85979784
  Force two-norm initial, final = 0.29546839 2.4564852e-05
  Force max component initial, final = 0.2688512 3.2375351e-06
  Final line search alpha, max atom move = 1.0000000 3.2375351e-06
  Iterations, force evaluations = 231 462

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.70076    | 1.9365     | 2.5793     |  37.6 | 70.77
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.047071   | 0.44701    | 1.3149     |  54.3 | 16.34
Output  | 0.00010225 | 0.00010752 | 0.00022853 |   0.0 |  0.00
Modify  | 3.0471e-05 | 0.003811   | 0.0081315  |   2.9 |  0.14
Other   |            | 0.3489     |            |       | 12.75

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.13594040963179-${x_0}
variable           new_x         equal     1.13594040963179-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.49528474825125-${y_0}
variable           new_y         equal     3.49528474825125-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2640265707875-${z_0}
variable           new_z         equal     31.2640265707875-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0296959042529801*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0296959042529801*-0.0296959042529801+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0296959042529801*-0.0296959042529801+-0.52939820701109*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0296959042529801*-0.0296959042529801+-0.52939820701109*-0.52939820701109+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0296959042529801*-0.0296959042529801+-0.52939820701109*-0.52939820701109+-0.0568417521451998*${new_z})
variable           module        equal     sqrt(-0.0296959042529801*-0.0296959042529801+-0.52939820701109*-0.52939820701109+-0.0568417521451998*-0.0568417521451998)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0296959042529801/${module}
variable           unitx         equal     -0.0296959042529801/0.533268500009981
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.52939820701109/${module}
variable           unity         equal     -0.52939820701109/0.533268500009981
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0568417521451998/${module}
variable           unitz         equal     -0.0568417521451998/0.533268500009981
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67967024092237e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67967024092237e-06*-2.67967024092237e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67967024092237e-06*-2.67967024092237e-06+-2.14739594120433e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67967024092237e-06*-2.67967024092237e-06+-2.14739594120433e-07*-2.14739594120433e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67967024092237e-06*-2.67967024092237e-06+-2.14739594120433e-07*-2.14739594120433e-07+3.23753510977885e-06*${fz})
variable           f_module      equal     sqrt(-2.67967024092237e-06*-2.67967024092237e-06+-2.14739594120433e-07*-2.14739594120433e-07+3.23753510977885e-06*3.23753510977885e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0556865898743771*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0556865898743771*-0.0556865898743771+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0556865898743771*-0.0556865898743771+-0.992742318365291*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0556865898743771*-0.0556865898743771+-0.992742318365291*-0.992742318365291+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0556865898743771*-0.0556865898743771+-0.992742318365291*-0.992742318365291+-0.106591242768204*${unitz})
variable           dir_module    equal     sqrt(-0.0556865898743771*-0.0556865898743771+-0.992742318365291*-0.992742318365291+-0.106591242768204*-0.106591242768204)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67967024092237e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67967024092237e-06*-0.0556865898743771+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67967024092237e-06*-0.0556865898743771+-2.14739594120433e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67967024092237e-06*-0.0556865898743771+-2.14739594120433e-07*-0.992742318365291+${fz}*${unitz}
variable           dot      equal     -2.67967024092237e-06*-0.0556865898743771+-2.14739594120433e-07*-0.992742318365291+3.23753510977885e-06*${unitz}
variable           dot      equal     -2.67967024092237e-06*-0.0556865898743771+-2.14739594120433e-07*-0.992742318365291+3.23753510977885e-06*-0.106591242768204
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.73098893597362e-08/${f_module}*${dir_module}
variable           cos      equal     1.73098893597362e-08/4.20813251697457e-06*${dir_module}
variable           cos      equal     1.73098893597362e-08/4.20813251697457e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00411343732401781)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56668287787065/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.764316737398-90.0)
print              "The dot product: ${dot}"
The dot product: 1.73098893597362e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.764316737398

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0296959042529801^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0296959042529801^2+-0.52939820701109^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0296959042529801^2+-0.52939820701109^2+-0.0568417521451998^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0296959042529801/${norm}
variable           unit_x        equal     -0.0296959042529801/0.533268500009981
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.52939820701109/${norm}
variable           unit_y        equal     -0.52939820701109/0.533268500009981
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0568417521451998/${norm}
variable           unit_z        equal     -0.0568417521451998/0.533268500009981
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.13594040963179+${delta}*${unit_x}
variable           x_new         equal     1.13594040963179+0.03*${unit_x}
variable           x_new         equal     1.13594040963179+0.03*-0.0556865898743771
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.49528474825125+${delta}*${unit_y}
variable           y_new         equal     3.49528474825125+0.03*${unit_y}
variable           y_new         equal     3.49528474825125+0.03*-0.992742318365291
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2640265707875+${delta}*${unit_z}
variable           z_new         equal     31.2640265707875+0.03*${unit_z}
variable           z_new         equal     31.2640265707875+0.03*-0.106591242768204

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13426981193556  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13426981193556  y  3.46550247870029  z   ${z_new}
set                atom          288751    x  1.13426981193556  y  3.46550247870029  z   31.2608288335045
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0296959042529801  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0296959042529801  -0.52939820701109  ${new_z}
fix                hold    carbon   planeforce   -0.0296959042529801  -0.52939820701109  -0.0568417521451998
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3147   -1152448.8            0   -1152448.8  0.040862207 -0.0062560764  0.036918557 
    3337   -1152448.8            0   -1152448.8 3.3631907e-06 7.3232625e-07 -8.577589e-06 
Loop time of 2.24499 on 104 procs for 190 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.80054114  -1152448.80442982  -1152448.80442982
  Force two-norm initial, final = 0.30195708 0.0001044274
  Force max component initial, final = 0.2773678 3.1210698e-05
  Final line search alpha, max atom move = 1.0000000 3.1210698e-05
  Iterations, force evaluations = 190 380

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57449    | 1.5981     | 2.1146     |  34.1 | 71.18
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035439   | 0.3683     | 1.0861     |  49.7 | 16.41
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3599e-05 | 0.0031324  | 0.0067069  |   2.6 |  0.14
Other   |            | 0.2755     |            |       | 12.27

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238193
Ave neighs/atom = 28.530440
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14275647876867-${x_0}
variable           new_x         equal     1.14275647876867-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.46384793998374-${y_0}
variable           new_y         equal     3.46384793998374-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2718047545627-${z_0}
variable           new_z         equal     31.2718047545627-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0228798351161001*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0228798351161001*-0.0228798351161001+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0228798351161001*-0.0228798351161001+-0.5608350152786*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0228798351161001*-0.0228798351161001+-0.5608350152786*-0.5608350152786+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0228798351161001*-0.0228798351161001+-0.5608350152786*-0.5608350152786+-0.0490635683699985*${new_z})
variable           module        equal     sqrt(-0.0228798351161001*-0.0228798351161001+-0.5608350152786*-0.5608350152786+-0.0490635683699985*-0.0490635683699985)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0228798351161001/${module}
variable           unitx         equal     -0.0228798351161001/0.563441776014776
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.5608350152786/${module}
variable           unity         equal     -0.5608350152786/0.563441776014776
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0490635683699985/${module}
variable           unitz         equal     -0.0490635683699985/0.563441776014776
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.36319066633363e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.36319066633363e-06*3.36319066633363e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.36319066633363e-06*3.36319066633363e-06+7.32326246515906e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.36319066633363e-06*3.36319066633363e-06+7.32326246515906e-07*7.32326246515906e-07+${fz}*${fz})
variable           f_module      equal     sqrt(3.36319066633363e-06*3.36319066633363e-06+7.32326246515906e-07*7.32326246515906e-07+-8.57758902972873e-06*${fz})
variable           f_module      equal     sqrt(3.36319066633363e-06*3.36319066633363e-06+7.32326246515906e-07*7.32326246515906e-07+-8.57758902972873e-06*-8.57758902972873e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0406072749484946*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0406072749484946*-0.0406072749484946+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0406072749484946*-0.0406072749484946+-0.995373504686476*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0406072749484946*-0.0406072749484946+-0.995373504686476*-0.995373504686476+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0406072749484946*-0.0406072749484946+-0.995373504686476*-0.995373504686476+-0.0870783290458602*${unitz})
variable           dir_module    equal     sqrt(-0.0406072749484946*-0.0406072749484946+-0.995373504686476*-0.995373504686476+-0.0870783290458602*-0.0870783290458602)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.36319066633363e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.36319066633363e-06*-0.0406072749484946+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.36319066633363e-06*-0.0406072749484946+7.32326246515906e-07*${unity}+${fz}*${unitz}
variable           dot      equal     3.36319066633363e-06*-0.0406072749484946+7.32326246515906e-07*-0.995373504686476+${fz}*${unitz}
variable           dot      equal     3.36319066633363e-06*-0.0406072749484946+7.32326246515906e-07*-0.995373504686476+-8.57758902972873e-06*${unitz}
variable           dot      equal     3.36319066633363e-06*-0.0406072749484946+7.32326246515906e-07*-0.995373504686476+-8.57758902972873e-06*-0.0870783290458602
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.18586030709571e-07/${f_module}*${dir_module}
variable           cos      equal     -1.18586030709571e-07/9.24242320781581e-06*${dir_module}
variable           cos      equal     -1.18586030709571e-07/9.24242320781581e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0128306211523932)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5836273000132/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.7351606124542-90.0)
print              "The dot product: ${dot}"
The dot product: -1.18586030709571e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.7351606124542

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0228798351161001^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0228798351161001^2+-0.5608350152786^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0228798351161001^2+-0.5608350152786^2+-0.0490635683699985^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0228798351161001/${norm}
variable           unit_x        equal     -0.0228798351161001/0.563441776014776
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.5608350152786/${norm}
variable           unit_y        equal     -0.5608350152786/0.563441776014776
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0490635683699985/${norm}
variable           unit_z        equal     -0.0490635683699985/0.563441776014776
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14275647876867+${delta}*${unit_x}
variable           x_new         equal     1.14275647876867+0.03*${unit_x}
variable           x_new         equal     1.14275647876867+0.03*-0.0406072749484946
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.46384793998374+${delta}*${unit_y}
variable           y_new         equal     3.46384793998374+0.03*${unit_y}
variable           y_new         equal     3.46384793998374+0.03*-0.995373504686476
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2718047545627+${delta}*${unit_z}
variable           z_new         equal     31.2718047545627+0.03*${unit_z}
variable           z_new         equal     31.2718047545627+0.03*-0.0870783290458602

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14153826052022  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14153826052022  y  3.43398673484315  z   ${z_new}
set                atom          288751    x  1.14153826052022  y  3.43398673484315  z   31.2691924046913
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0228798351161001  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0228798351161001  -0.5608350152786  ${new_z}
fix                hold    carbon   planeforce   -0.0228798351161001  -0.5608350152786  -0.0490635683699985
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3337   -1152448.7            0   -1152448.7  0.032402114 -0.0045401131  0.036786957 
    3522   -1152448.7            0   -1152448.7 -1.7423145e-05 -5.0148337e-07 1.385729e-05 
Loop time of 2.18454 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.74172844  -1152448.74557883  -1152448.74557883
  Force two-norm initial, final = 0.30781704 0.0001317501
  Force max component initial, final = 0.28532948 4.4032138e-05
  Final line search alpha, max atom move = 1.0000000 4.4032138e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56109    | 1.5536     | 2.0658     |  33.7 | 71.12
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034464   | 0.35677    | 1.0554     |  49.1 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3085e-05 | 0.0030563  | 0.0065214  |   2.6 |  0.14
Other   |            | 0.2711     |            |       | 12.41

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14821744868058-${x_0}
variable           new_x         equal     1.14821744868058-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.43281866492687-${y_0}
variable           new_y         equal     3.43281866492687-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2794296500077-${z_0}
variable           new_z         equal     31.2794296500077-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01741886520419*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01741886520419*-0.01741886520419+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01741886520419*-0.01741886520419+-0.59186429033547*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01741886520419*-0.01741886520419+-0.59186429033547*-0.59186429033547+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01741886520419*-0.01741886520419+-0.59186429033547*-0.59186429033547+-0.0414386729250005*${new_z})
variable           module        equal     sqrt(-0.01741886520419*-0.01741886520419+-0.59186429033547*-0.59186429033547+-0.0414386729250005*-0.0414386729250005)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.01741886520419/${module}
variable           unitx         equal     -0.01741886520419/0.593568798584542
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.59186429033547/${module}
variable           unity         equal     -0.59186429033547/0.593568798584542
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0414386729250005/${module}
variable           unitz         equal     -0.0414386729250005/0.593568798584542
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.74231448858319e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.74231448858319e-05*-1.74231448858319e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.74231448858319e-05*-1.74231448858319e-05+-5.01483370250334e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.74231448858319e-05*-1.74231448858319e-05+-5.01483370250334e-07*-5.01483370250334e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.74231448858319e-05*-1.74231448858319e-05+-5.01483370250334e-07*-5.01483370250334e-07+1.38572904129445e-05*${fz})
variable           f_module      equal     sqrt(-1.74231448858319e-05*-1.74231448858319e-05+-5.01483370250334e-07*-5.01483370250334e-07+1.38572904129445e-05*1.38572904129445e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.029345991982274*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.029345991982274*-0.029345991982274+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.029345991982274*-0.029345991982274+-0.997128372897739*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.029345991982274*-0.029345991982274+-0.997128372897739*-0.997128372897739+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.029345991982274*-0.029345991982274+-0.997128372897739*-0.997128372897739+-0.0698127546862597*${unitz})
variable           dir_module    equal     sqrt(-0.029345991982274*-0.029345991982274+-0.997128372897739*-0.997128372897739+-0.0698127546862597*-0.0698127546862597)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.74231448858319e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.74231448858319e-05*-0.029345991982274+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.74231448858319e-05*-0.029345991982274+-5.01483370250334e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.74231448858319e-05*-0.029345991982274+-5.01483370250334e-07*-0.997128372897739+${fz}*${unitz}
variable           dot      equal     -1.74231448858319e-05*-0.029345991982274+-5.01483370250334e-07*-0.997128372897739+1.38572904129445e-05*${unitz}
variable           dot      equal     -1.74231448858319e-05*-0.029345991982274+-5.01483370250334e-07*-0.997128372897739+1.38572904129445e-05*-0.0698127546862597
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.39271509234583e-08/${f_module}*${dir_module}
variable           cos      equal     4.39271509234583e-08/2.22675090854817e-05*${dir_module}
variable           cos      equal     4.39271509234583e-08/2.22675090854817e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00197270160550192)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56882362390991/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.886972450457-90.0)
print              "The dot product: ${dot}"
The dot product: 4.39271509234583e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.886972450457

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01741886520419^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01741886520419^2+-0.59186429033547^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01741886520419^2+-0.59186429033547^2+-0.0414386729250005^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.01741886520419/${norm}
variable           unit_x        equal     -0.01741886520419/0.593568798584542
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.59186429033547/${norm}
variable           unit_y        equal     -0.59186429033547/0.593568798584542
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0414386729250005/${norm}
variable           unit_z        equal     -0.0414386729250005/0.593568798584542
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14821744868058+${delta}*${unit_x}
variable           x_new         equal     1.14821744868058+0.03*${unit_x}
variable           x_new         equal     1.14821744868058+0.03*-0.029345991982274
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.43281866492687+${delta}*${unit_y}
variable           y_new         equal     3.43281866492687+0.03*${unit_y}
variable           y_new         equal     3.43281866492687+0.03*-0.997128372897739
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2794296500077+${delta}*${unit_z}
variable           z_new         equal     31.2794296500077+0.03*${unit_z}
variable           z_new         equal     31.2794296500077+0.03*-0.0698127546862597

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14733706892111  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14733706892111  y  3.40290481373994  z   ${z_new}
set                atom          288751    x  1.14733706892111  y  3.40290481373994  z   31.2773352673671
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01741886520419  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01741886520419  -0.59186429033547  ${new_z}
fix                hold    carbon   planeforce   -0.01741886520419  -0.59186429033547  -0.0414386729250005
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3522   -1152448.7            0   -1152448.7  0.025260209 -0.0033238544  0.036856068 
    3741   -1152448.7            0   -1152448.7 5.6393043e-06 -3.0286288e-06 4.0887095e-05 
Loop time of 2.62273 on 104 procs for 219 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.67996748  -1152448.70531526  -1152448.70531526
  Force two-norm initial, final = 0.31634991 0.00027307935
  Force max component initial, final = 0.29282913 8.0211435e-05
  Final line search alpha, max atom move = 1.0000000 8.0211435e-05
  Iterations, force evaluations = 219 438

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68776    | 1.8523     | 2.436      |  36.2 | 70.62
Neigh   | 1.0456e-05 | 0.0029555  | 0.0042068  |   2.2 |  0.11
Comm    | 0.056717   | 0.43097    | 1.2665     |  52.7 | 16.43
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7048e-05 | 0.0036081  | 0.0077108  |   2.8 |  0.14
Other   |            | 0.3329     |            |       | 12.69

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114455 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1570068984439-${x_0}
variable           new_x         equal     1.1570068984439-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.40107435976368-${y_0}
variable           new_y         equal     3.40107435976368-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2994147120506-${z_0}
variable           new_z         equal     31.2994147120506-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00862941544087015*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00862941544087015*-0.00862941544087015+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00862941544087015*-0.00862941544087015+-0.62360859549866*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00862941544087015*-0.00862941544087015+-0.62360859549866*-0.62360859549866+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00862941544087015*-0.00862941544087015+-0.62360859549866*-0.62360859549866+-0.0214536108821015*${new_z})
variable           module        equal     sqrt(-0.00862941544087015*-0.00862941544087015+-0.62360859549866*-0.62360859549866+-0.0214536108821015*-0.0214536108821015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00862941544087015/${module}
variable           unitx         equal     -0.00862941544087015/0.624037182073747
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.62360859549866/${module}
variable           unity         equal     -0.62360859549866/0.624037182073747
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0214536108821015/${module}
variable           unitz         equal     -0.0214536108821015/0.624037182073747
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.63930425170896e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.63930425170896e-06*5.63930425170896e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.63930425170896e-06*5.63930425170896e-06+-3.0286288263717e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.63930425170896e-06*5.63930425170896e-06+-3.0286288263717e-06*-3.0286288263717e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.63930425170896e-06*5.63930425170896e-06+-3.0286288263717e-06*-3.0286288263717e-06+4.0887095332702e-05*${fz})
variable           f_module      equal     sqrt(5.63930425170896e-06*5.63930425170896e-06+-3.0286288263717e-06*-3.0286288263717e-06+4.0887095332702e-05*4.0887095332702e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0138283674254691*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0138283674254691*-0.0138283674254691+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0138283674254691*-0.0138283674254691+-0.999313203463834*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0138283674254691*-0.0138283674254691+-0.999313203463834*-0.999313203463834+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0138283674254691*-0.0138283674254691+-0.999313203463834*-0.999313203463834+-0.034378738155968*${unitz})
variable           dir_module    equal     sqrt(-0.0138283674254691*-0.0138283674254691+-0.999313203463834*-0.999313203463834+-0.034378738155968*-0.034378738155968)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.63930425170896e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.63930425170896e-06*-0.0138283674254691+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.63930425170896e-06*-0.0138283674254691+-3.0286288263717e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.63930425170896e-06*-0.0138283674254691+-3.0286288263717e-06*-0.999313203463834+${fz}*${unitz}
variable           dot      equal     5.63930425170896e-06*-0.0138283674254691+-3.0286288263717e-06*-0.999313203463834+4.0887095332702e-05*${unitz}
variable           dot      equal     5.63930425170896e-06*-0.0138283674254691+-3.0286288263717e-06*-0.999313203463834+4.0887095332702e-05*-0.034378738155968
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.54291965896671e-06/${f_module}*${dir_module}
variable           cos      equal     1.54291965896671e-06/4.1385129089526e-05*${dir_module}
variable           cos      equal     1.54291965896671e-06/4.1385129089526e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0372819825118584)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5335057022181/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.8634045963427-90.0)
print              "The dot product: ${dot}"
The dot product: 1.54291965896671e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.8634045963427

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00862941544087015^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00862941544087015^2+-0.62360859549866^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00862941544087015^2+-0.62360859549866^2+-0.0214536108821015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00862941544087015/${norm}
variable           unit_x        equal     -0.00862941544087015/0.624037182073747
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.62360859549866/${norm}
variable           unit_y        equal     -0.62360859549866/0.624037182073747
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0214536108821015/${norm}
variable           unit_z        equal     -0.0214536108821015/0.624037182073747
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1570068984439+${delta}*${unit_x}
variable           x_new         equal     1.1570068984439+0.03*${unit_x}
variable           x_new         equal     1.1570068984439+0.03*-0.0138283674254691
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.40107435976368+${delta}*${unit_y}
variable           y_new         equal     3.40107435976368+0.03*${unit_y}
variable           y_new         equal     3.40107435976368+0.03*-0.999313203463834
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2994147120506+${delta}*${unit_z}
variable           z_new         equal     31.2994147120506+0.03*${unit_z}
variable           z_new         equal     31.2994147120506+0.03*-0.034378738155968

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15659204742114  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15659204742114  y  3.37109496365977  z   ${z_new}
set                atom          288751    x  1.15659204742114  y  3.37109496365977  z   31.2983833499059
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00862941544087015  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00862941544087015  -0.62360859549866  ${new_z}
fix                hold    carbon   planeforce   -0.00862941544087015  -0.62360859549866  -0.0214536108821015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3741   -1152448.7            0   -1152448.7  0.019005621  -0.00192987  0.048452269 
    3933   -1152448.7            0   -1152448.7 -5.0891492e-06 2.0701528e-07 -3.9704329e-06 
Loop time of 2.28362 on 104 procs for 192 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.66008671  -1152448.66473978  -1152448.66473978
  Force two-norm initial, final = 0.33528543 0.00012332629
  Force max component initial, final = 0.30452275 4.2203198e-05
  Final line search alpha, max atom move = 1.0000000 4.2203198e-05
  Iterations, force evaluations = 192 384

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58753    | 1.6168     | 2.1423     |  34.3 | 70.80
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036379   | 0.37367    | 1.0998     |  49.6 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3958e-05 | 0.0031789  | 0.0068046  |   2.7 |  0.14
Other   |            | 0.29       |            |       | 12.70

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16146014487423-${x_0}
variable           new_x         equal     1.16146014487423-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.37062423129506-${y_0}
variable           new_y         equal     3.37062423129506-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3101083651065-${z_0}
variable           new_z         equal     31.3101083651065-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00417616901053997*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00417616901053997*-0.00417616901053997+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00417616901053997*-0.00417616901053997+-0.65405872396728*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00417616901053997*-0.00417616901053997+-0.65405872396728*-0.65405872396728+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00417616901053997*-0.00417616901053997+-0.65405872396728*-0.65405872396728+-0.010759957826199*${new_z})
variable           module        equal     sqrt(-0.00417616901053997*-0.00417616901053997+-0.65405872396728*-0.65405872396728+-0.010759957826199*-0.010759957826199)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00417616901053997/${module}
variable           unitx         equal     -0.00417616901053997/0.654160554816425
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.65405872396728/${module}
variable           unity         equal     -0.65405872396728/0.654160554816425
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.010759957826199/${module}
variable           unitz         equal     -0.010759957826199/0.654160554816425
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.08914921613611e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.08914921613611e-06*-5.08914921613611e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.08914921613611e-06*-5.08914921613611e-06+2.07015275706042e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.08914921613611e-06*-5.08914921613611e-06+2.07015275706042e-07*2.07015275706042e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-5.08914921613611e-06*-5.08914921613611e-06+2.07015275706042e-07*2.07015275706042e-07+-3.97043288817353e-06*${fz})
variable           f_module      equal     sqrt(-5.08914921613611e-06*-5.08914921613611e-06+2.07015275706042e-07*2.07015275706042e-07+-3.97043288817353e-06*-3.97043288817353e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00638401227312141*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00638401227312141*-0.00638401227312141+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00638401227312141*-0.00638401227312141+-0.999844333553292*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00638401227312141*-0.00638401227312141+-0.999844333553292*-0.999844333553292+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00638401227312141*-0.00638401227312141+-0.999844333553292*-0.999844333553292+-0.0164484968513862*${unitz})
variable           dir_module    equal     sqrt(-0.00638401227312141*-0.00638401227312141+-0.999844333553292*-0.999844333553292+-0.0164484968513862*-0.0164484968513862)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.08914921613611e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.08914921613611e-06*-0.00638401227312141+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.08914921613611e-06*-0.00638401227312141+2.07015275706042e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -5.08914921613611e-06*-0.00638401227312141+2.07015275706042e-07*-0.999844333553292+${fz}*${unitz}
variable           dot      equal     -5.08914921613611e-06*-0.00638401227312141+2.07015275706042e-07*-0.999844333553292+-3.97043288817353e-06*${unitz}
variable           dot      equal     -5.08914921613611e-06*-0.00638401227312141+2.07015275706042e-07*-0.999844333553292+-3.97043288817353e-06*-0.0164484968513862
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.09186206458337e-07/${f_module}*${dir_module}
variable           cos      equal     -1.09186206458337e-07/6.4580672331561e-06*${dir_module}
variable           cos      equal     -1.09186206458337e-07/6.4580672331561e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0169069479329309)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58770408029223/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.9687429164448-90.0)
print              "The dot product: ${dot}"
The dot product: -1.09186206458337e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.9687429164448

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00417616901053997^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00417616901053997^2+-0.65405872396728^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00417616901053997^2+-0.65405872396728^2+-0.010759957826199^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00417616901053997/${norm}
variable           unit_x        equal     -0.00417616901053997/0.654160554816425
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.65405872396728/${norm}
variable           unit_y        equal     -0.65405872396728/0.654160554816425
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.010759957826199/${norm}
variable           unit_z        equal     -0.010759957826199/0.654160554816425
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16146014487423+${delta}*${unit_x}
variable           x_new         equal     1.16146014487423+0.03*${unit_x}
variable           x_new         equal     1.16146014487423+0.03*-0.00638401227312141
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.37062423129506+${delta}*${unit_y}
variable           y_new         equal     3.37062423129506+0.03*${unit_y}
variable           y_new         equal     3.37062423129506+0.03*-0.999844333553292
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3101083651065+${delta}*${unit_z}
variable           z_new         equal     31.3101083651065+0.03*${unit_z}
variable           z_new         equal     31.3101083651065+0.03*-0.0164484968513862

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16126862450604  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16126862450604  y  3.34062890128846  z   ${z_new}
set                atom          288751    x  1.16126862450604  y  3.34062890128846  z   31.309614910201
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00417616901053997  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00417616901053997  -0.65405872396728  ${new_z}
fix                hold    carbon   planeforce   -0.00417616901053997  -0.65405872396728  -0.010759957826199
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3933   -1152448.6            0   -1152448.6 0.0085632836 -0.00047048892  0.025275718 
    4000   -1152448.6            0   -1152448.6 2.2448808e-06 -2.0180349e-07 1.1395614e-05 
    4068   -1152448.6            0   -1152448.6 -1.1120617e-07 5.4175133e-08 -3.249948e-06 
Loop time of 1.63004 on 104 procs for 135 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.61799891  -1152448.62295299  -1152448.62295299
  Force two-norm initial, final = 0.34236862 0.00029627347
  Force max component initial, final = 0.31125158 0.00010232181
  Final line search alpha, max atom move = 1.0000000 0.00010232181
  Iterations, force evaluations = 135 270

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41266    | 1.141      | 1.5112     |  28.9 | 70.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.028129   | 0.26368    | 0.77508    |  41.9 | 16.18
Output  | 0.00010308 | 0.00011077 | 0.00022186 |   0.0 |  0.01
Modify  | 1.6972e-05 | 0.00223    | 0.0047934  |   2.2 |  0.14
Other   |            | 0.223      |            |       | 13.68

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16369329983443-${x_0}
variable           new_x         equal     1.16369329983443-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.3405124699631-${y_0}
variable           new_y         equal     3.3405124699631-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.315751279054-${z_0}
variable           new_z         equal     31.315751279054-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00194301405034003*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00194301405034003*-0.00194301405034003+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00194301405034003*-0.00194301405034003+-0.68417048529924*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00194301405034003*-0.00194301405034003+-0.68417048529924*-0.68417048529924+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00194301405034003*-0.00194301405034003+-0.68417048529924*-0.68417048529924+-0.00511704387870182*${new_z})
variable           module        equal     sqrt(-0.00194301405034003*-0.00194301405034003+-0.68417048529924*-0.68417048529924+-0.00511704387870182*-0.00511704387870182)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00194301405034003/${module}
variable           unitx         equal     -0.00194301405034003/0.68419237966836
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.68417048529924/${module}
variable           unity         equal     -0.68417048529924/0.68419237966836
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00511704387870182/${module}
variable           unitz         equal     -0.00511704387870182/0.68419237966836
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.11206173021412e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.11206173021412e-07*-1.11206173021412e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.11206173021412e-07*-1.11206173021412e-07+5.41751332486137e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.11206173021412e-07*-1.11206173021412e-07+5.41751332486137e-08*5.41751332486137e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-1.11206173021412e-07*-1.11206173021412e-07+5.41751332486137e-08*5.41751332486137e-08+-3.24994796395483e-06*${fz})
variable           f_module      equal     sqrt(-1.11206173021412e-07*-1.11206173021412e-07+5.41751332486137e-08*5.41751332486137e-08+-3.24994796395483e-06*-3.24994796395483e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00283986508484915*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00283986508484915*-0.00283986508484915+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00283986508484915*-0.00283986508484915+-0.999967999688727*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00283986508484915*-0.00283986508484915+-0.999967999688727*-0.999967999688727+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00283986508484915*-0.00283986508484915+-0.999967999688727*-0.999967999688727+-0.00747895479511499*${unitz})
variable           dir_module    equal     sqrt(-0.00283986508484915*-0.00283986508484915+-0.999967999688727*-0.999967999688727+-0.00747895479511499*-0.00747895479511499)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.11206173021412e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.11206173021412e-07*-0.00283986508484915+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.11206173021412e-07*-0.00283986508484915+5.41751332486137e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -1.11206173021412e-07*-0.00283986508484915+5.41751332486137e-08*-0.999967999688727+${fz}*${unitz}
variable           dot      equal     -1.11206173021412e-07*-0.00283986508484915+5.41751332486137e-08*-0.999967999688727+-3.24994796395483e-06*${unitz}
variable           dot      equal     -1.11206173021412e-07*-0.00283986508484915+5.41751332486137e-08*-0.999967999688727+-3.24994796395483e-06*-0.00747895479511499
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.95513751906091e-08/${f_module}*${dir_module}
variable           cos      equal     -2.95513751906091e-08/3.25230126624129e-06*${dir_module}
variable           cos      equal     -2.95513751906091e-08/3.25230126624129e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0090862969852611)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57988274881345/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.5206136325378-90.0)
print              "The dot product: ${dot}"
The dot product: -2.95513751906091e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.5206136325378

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00194301405034003^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00194301405034003^2+-0.68417048529924^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00194301405034003^2+-0.68417048529924^2+-0.00511704387870182^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00194301405034003/${norm}
variable           unit_x        equal     -0.00194301405034003/0.68419237966836
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.68417048529924/${norm}
variable           unit_y        equal     -0.68417048529924/0.68419237966836
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00511704387870182/${norm}
variable           unit_z        equal     -0.00511704387870182/0.68419237966836
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16369329983443+${delta}*${unit_x}
variable           x_new         equal     1.16369329983443+0.03*${unit_x}
variable           x_new         equal     1.16369329983443+0.03*-0.00283986508484915
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.3405124699631+${delta}*${unit_y}
variable           y_new         equal     3.3405124699631+0.03*${unit_y}
variable           y_new         equal     3.3405124699631+0.03*-0.999967999688727
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.315751279054+${delta}*${unit_z}
variable           z_new         equal     31.315751279054+0.03*${unit_z}
variable           z_new         equal     31.315751279054+0.03*-0.00747895479511499

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16360810388188  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16360810388188  y  3.31051342997244  z   ${z_new}
set                atom          288751    x  1.16360810388188  y  3.31051342997244  z   31.3155269104101
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00194301405034003  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00194301405034003  -0.68417048529924  ${new_z}
fix                hold    carbon   planeforce   -0.00194301405034003  -0.68417048529924  -0.00511704387870182
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4068   -1152448.6            0   -1152448.6 0.0036194521 -0.00010395922  0.012525432 
    4230   -1152448.6            0   -1152448.6 -4.1302537e-07 4.9716532e-09 -5.0789956e-07 
Loop time of 1.90967 on 104 procs for 162 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.57616286  -1152448.58174117  -1152448.58174117
  Force two-norm initial, final = 0.35267841 0.00011140119
  Force max component initial, final = 0.31779676 4.8552541e-05
  Final line search alpha, max atom move = 1.0000000 4.8552541e-05
  Iterations, force evaluations = 162 324

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49494    | 1.3588     | 1.7988     |  31.4 | 71.15
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030955   | 0.31007    | 0.9189     |  45.9 | 16.24
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0552e-05 | 0.0026723  | 0.005723   |   2.4 |  0.14
Other   |            | 0.2381     |            |       | 12.47

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16474856883115-${x_0}
variable           new_x         equal     1.16474856883115-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.31048745366018-${y_0}
variable           new_y         equal     3.31048745366018-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3185670029128-${z_0}
variable           new_z         equal     31.3185670029128-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000887745053619993*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000887745053619993*-0.000887745053619993+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000887745053619993*-0.000887745053619993+-0.71419550160216*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000887745053619993*-0.000887745053619993+-0.71419550160216*-0.71419550160216+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000887745053619993*-0.000887745053619993+-0.71419550160216*-0.71419550160216+-0.00230132001989958*${new_z})
variable           module        equal     sqrt(-0.000887745053619993*-0.000887745053619993+-0.71419550160216*-0.71419550160216+-0.00230132001989958*-0.00230132001989958)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000887745053619993/${module}
variable           unitx         equal     -0.000887745053619993/0.714199761042998
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.71419550160216/${module}
variable           unity         equal     -0.71419550160216/0.714199761042998
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00230132001989958/${module}
variable           unitz         equal     -0.00230132001989958/0.714199761042998
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.1302537483883e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.1302537483883e-07*-4.1302537483883e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.1302537483883e-07*-4.1302537483883e-07+4.97165319213751e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.1302537483883e-07*-4.1302537483883e-07+4.97165319213751e-09*4.97165319213751e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-4.1302537483883e-07*-4.1302537483883e-07+4.97165319213751e-09*4.97165319213751e-09+-5.07899563716645e-07*${fz})
variable           f_module      equal     sqrt(-4.1302537483883e-07*-4.1302537483883e-07+4.97165319213751e-09*4.97165319213751e-09+-5.07899563716645e-07*-5.07899563716645e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00124299265001651*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00124299265001651*-0.00124299265001651+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00124299265001651*-0.00124299265001651+-0.99999403606516*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00124299265001651*-0.00124299265001651+-0.99999403606516*-0.99999403606516+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00124299265001651*-0.00124299265001651+-0.99999403606516*-0.99999403606516+-0.00322223577411843*${unitz})
variable           dir_module    equal     sqrt(-0.00124299265001651*-0.00124299265001651+-0.99999403606516*-0.99999403606516+-0.00322223577411843*-0.00322223577411843)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.1302537483883e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.1302537483883e-07*-0.00124299265001651+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.1302537483883e-07*-0.00124299265001651+4.97165319213751e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -4.1302537483883e-07*-0.00124299265001651+4.97165319213751e-09*-0.99999403606516+${fz}*${unitz}
variable           dot      equal     -4.1302537483883e-07*-0.00124299265001651+4.97165319213751e-09*-0.99999403606516+-5.07899563716645e-07*${unitz}
variable           dot      equal     -4.1302537483883e-07*-0.00124299265001651+4.97165319213751e-09*-0.99999403606516+-5.07899563716645e-07*-0.00322223577411843
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.82166389245993e-09/${f_module}*${dir_module}
variable           cos      equal     -2.82166389245993e-09/6.54657654365835e-07*${dir_module}
variable           cos      equal     -2.82166389245993e-09/6.54657654365835e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00431013656319847)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57510647670331/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.2469533988208-90.0)
print              "The dot product: ${dot}"
The dot product: -2.82166389245993e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.2469533988208

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000887745053619993^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000887745053619993^2+-0.71419550160216^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000887745053619993^2+-0.71419550160216^2+-0.00230132001989958^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.000887745053619993/${norm}
variable           unit_x        equal     -0.000887745053619993/0.714199761042998
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.71419550160216/${norm}
variable           unit_y        equal     -0.71419550160216/0.714199761042998
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00230132001989958/${norm}
variable           unit_z        equal     -0.00230132001989958/0.714199761042998
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16474856883115+${delta}*${unit_x}
variable           x_new         equal     1.16474856883115+0.03*${unit_x}
variable           x_new         equal     1.16474856883115+0.03*-0.00124299265001651
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.31048745366018+${delta}*${unit_y}
variable           y_new         equal     3.31048745366018+0.03*${unit_y}
variable           y_new         equal     3.31048745366018+0.03*-0.99999403606516
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3185670029128+${delta}*${unit_z}
variable           z_new         equal     31.3185670029128+0.03*${unit_z}
variable           z_new         equal     31.3185670029128+0.03*-0.00322223577411843

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16471127905165  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16471127905165  y  3.28048763257822  z   ${z_new}
set                atom          288751    x  1.16471127905165  y  3.28048763257822  z   31.3184703358396
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000887745053619993  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000887745053619993  -0.71419550160216  ${new_z}
fix                hold    carbon   planeforce   -0.000887745053619993  -0.71419550160216  -0.00230132001989958
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4230   -1152448.5            0   -1152448.5 0.0012801082 -1.9457167e-05 0.0055445619 
    4365   -1152448.5            0   -1152448.5 5.8794943e-07 -1.7569359e-08 5.2257002e-06 
Loop time of 1.59279 on 104 procs for 135 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.53419801   -1152448.5386855   -1152448.5386855
  Force two-norm initial, final = 0.35240996 0.0001470109
  Force max component initial, final = 0.32496824 4.2309083e-05
  Final line search alpha, max atom move = 1.0000000 4.2309083e-05
  Iterations, force evaluations = 135 270

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41296    | 1.1369     | 1.5064     |  28.8 | 71.38
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025205   | 0.26237    | 0.77563    |  42.1 | 16.47
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7079e-05 | 0.0022389  | 0.0047858  |   2.2 |  0.14
Other   |            | 0.1912     |            |       | 12.01

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16519496733386-${x_0}
variable           new_x         equal     1.16519496733386-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.28048282512544-${y_0}
variable           new_y         equal     3.28048282512544-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3197757037475-${z_0}
variable           new_z         equal     31.3197757037475-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000441346550910104*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000441346550910104*-0.000441346550910104+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000441346550910104*-0.000441346550910104+-0.7442001301369*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000441346550910104*-0.000441346550910104+-0.7442001301369*-0.7442001301369+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000441346550910104*-0.000441346550910104+-0.7442001301369*-0.7442001301369+-0.00109261918520076*${new_z})
variable           module        equal     sqrt(-0.000441346550910104*-0.000441346550910104+-0.7442001301369*-0.7442001301369+-0.00109261918520076*-0.00109261918520076)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000441346550910104/${module}
variable           unitx         equal     -0.000441346550910104/0.74420106308661
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.7442001301369/${module}
variable           unity         equal     -0.7442001301369/0.74420106308661
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00109261918520076/${module}
variable           unitz         equal     -0.00109261918520076/0.74420106308661
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.8794942516842e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.8794942516842e-07*5.8794942516842e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.8794942516842e-07*5.8794942516842e-07+-1.75693592964815e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.8794942516842e-07*5.8794942516842e-07+-1.75693592964815e-08*-1.75693592964815e-08+${fz}*${fz})
variable           f_module      equal     sqrt(5.8794942516842e-07*5.8794942516842e-07+-1.75693592964815e-08*-1.75693592964815e-08+5.22570016981002e-06*${fz})
variable           f_module      equal     sqrt(5.8794942516842e-07*5.8794942516842e-07+-1.75693592964815e-08*-1.75693592964815e-08+5.22570016981002e-06*5.22570016981002e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000593047460963839*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000593047460963839*-0.000593047460963839+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000593047460963839*-0.000593047460963839+-0.999998746374123*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000593047460963839*-0.000593047460963839+-0.999998746374123*-0.999998746374123+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000593047460963839*-0.000593047460963839+-0.999998746374123*-0.999998746374123+-0.00146817740446254*${unitz})
variable           dir_module    equal     sqrt(-0.000593047460963839*-0.000593047460963839+-0.999998746374123*-0.999998746374123+-0.00146817740446254*-0.00146817740446254)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.8794942516842e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.8794942516842e-07*-0.000593047460963839+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.8794942516842e-07*-0.000593047460963839+-1.75693592964815e-08*${unity}+${fz}*${unitz}
variable           dot      equal     5.8794942516842e-07*-0.000593047460963839+-1.75693592964815e-08*-0.999998746374123+${fz}*${unitz}
variable           dot      equal     5.8794942516842e-07*-0.000593047460963839+-1.75693592964815e-08*-0.999998746374123+5.22570016981002e-06*${unitz}
variable           dot      equal     5.8794942516842e-07*-0.000593047460963839+-1.75693592964815e-08*-0.999998746374123+5.22570016981002e-06*-0.00146817740446254
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     9.54840044549564e-09/${f_module}*${dir_module}
variable           cos      equal     9.54840044549564e-09/5.2587009302388e-06*${dir_module}
variable           cos      equal     9.54840044549564e-09/5.2587009302388e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00181573369015721)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56898059210703/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8959660656697-90.0)
print              "The dot product: ${dot}"
The dot product: 9.54840044549564e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8959660656697

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000441346550910104^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000441346550910104^2+-0.7442001301369^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000441346550910104^2+-0.7442001301369^2+-0.00109261918520076^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.000441346550910104/${norm}
variable           unit_x        equal     -0.000441346550910104/0.74420106308661
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.7442001301369/${norm}
variable           unit_y        equal     -0.7442001301369/0.74420106308661
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00109261918520076/${norm}
variable           unit_z        equal     -0.00109261918520076/0.74420106308661
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16519496733386+${delta}*${unit_x}
variable           x_new         equal     1.16519496733386+0.03*${unit_x}
variable           x_new         equal     1.16519496733386+0.03*-0.000593047460963839
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.28048282512544+${delta}*${unit_y}
variable           y_new         equal     3.28048282512544+0.03*${unit_y}
variable           y_new         equal     3.28048282512544+0.03*-0.999998746374123
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3197757037475+${delta}*${unit_z}
variable           z_new         equal     31.3197757037475+0.03*${unit_z}
variable           z_new         equal     31.3197757037475+0.03*-0.00146817740446254

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16517717591003  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16517717591003  y  3.25048286273422  z   ${z_new}
set                atom          288751    x  1.16517717591003  y  3.25048286273422  z   31.3197316584254
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000441346550910104  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000441346550910104  -0.7442001301369  ${new_z}
fix                hold    carbon   planeforce   -0.000441346550910104  -0.7442001301369  -0.00109261918520076
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4365   -1152448.5            0   -1152448.5 0.00038841044 -3.6595033e-06  0.002335653 
    4522   -1152448.5            0   -1152448.5 -8.6914095e-09 -7.3861438e-09 5.0343297e-06 
Loop time of 1.88393 on 104 procs for 157 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.48661397  -1152448.49147294  -1152448.49147294
  Force two-norm initial, final = 0.36198494 7.5341829e-05
  Force max component initial, final = 0.33147963 3.1412290e-05
  Final line search alpha, max atom move = 1.0000000 3.1412290e-05
  Iterations, force evaluations = 157 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.47616    | 1.3224     | 1.7603     |  30.9 | 70.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031576   | 0.30837    | 0.91401    |  45.0 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9403e-05 | 0.0026008  | 0.0055619  |   2.4 |  0.14
Other   |            | 0.2506     |            |       | 13.30

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16538983167227-${x_0}
variable           new_x         equal     1.16538983167227-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.25048188459379-${y_0}
variable           new_y         equal     3.25048188459379-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3203119862916-${z_0}
variable           new_z         equal     31.3203119862916-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000246482212500121*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000246482212500121*-0.000246482212500121+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000246482212500121*-0.000246482212500121+-0.77420107066855*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000246482212500121*-0.000246482212500121+-0.77420107066855*-0.77420107066855+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000246482212500121*-0.000246482212500121+-0.77420107066855*-0.77420107066855+-0.00055633664110033*${new_z})
variable           module        equal     sqrt(-0.000246482212500121*-0.000246482212500121+-0.77420107066855*-0.77420107066855+-0.00055633664110033*-0.00055633664110033)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000246482212500121/${module}
variable           unitx         equal     -0.000246482212500121/0.774201309794984
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.77420107066855/${module}
variable           unity         equal     -0.77420107066855/0.774201309794984
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00055633664110033/${module}
variable           unitz         equal     -0.00055633664110033/0.774201309794984
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.69140945720303e-09*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.69140945720303e-09*-8.69140945720303e-09+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.69140945720303e-09*-8.69140945720303e-09+-7.38614381181082e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.69140945720303e-09*-8.69140945720303e-09+-7.38614381181082e-09*-7.38614381181082e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-8.69140945720303e-09*-8.69140945720303e-09+-7.38614381181082e-09*-7.38614381181082e-09+5.0343296525118e-06*${fz})
variable           f_module      equal     sqrt(-8.69140945720303e-09*-8.69140945720303e-09+-7.38614381181082e-09*-7.38614381181082e-09+5.0343296525118e-06*5.0343296525118e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000318369666108408*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000318369666108408*-0.000318369666108408+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000318369666108408*-0.000318369666108408+-0.999999691131453*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000318369666108408*-0.000318369666108408+-0.999999691131453*-0.999999691131453+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000318369666108408*-0.000318369666108408+-0.999999691131453*-0.999999691131453+-0.000718594290737707*${unitz})
variable           dir_module    equal     sqrt(-0.000318369666108408*-0.000318369666108408+-0.999999691131453*-0.999999691131453+-0.000718594290737707*-0.000718594290737707)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.69140945720303e-09*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.69140945720303e-09*-0.000318369666108408+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.69140945720303e-09*-0.000318369666108408+-7.38614381181082e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -8.69140945720303e-09*-0.000318369666108408+-7.38614381181082e-09*-0.999999691131453+${fz}*${unitz}
variable           dot      equal     -8.69140945720303e-09*-0.000318369666108408+-7.38614381181082e-09*-0.999999691131453+5.0343296525118e-06*${unitz}
variable           dot      equal     -8.69140945720303e-09*-0.000318369666108408+-7.38614381181082e-09*-0.999999691131453+5.0343296525118e-06*-0.000718594290737707
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.77126806560369e-09/${f_module}*${dir_module}
variable           cos      equal     3.77126806560369e-09/5.03434257335338e-06*${dir_module}
variable           cos      equal     3.77126806560369e-09/5.03434257335338e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00074910835141909)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57004721837342/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9570792490517-90.0)
print              "The dot product: ${dot}"
The dot product: 3.77126806560369e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9570792490517

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000246482212500121^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000246482212500121^2+-0.77420107066855^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000246482212500121^2+-0.77420107066855^2+-0.00055633664110033^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.000246482212500121/${norm}
variable           unit_x        equal     -0.000246482212500121/0.774201309794984
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.77420107066855/${norm}
variable           unit_y        equal     -0.77420107066855/0.774201309794984
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00055633664110033/${norm}
variable           unit_z        equal     -0.00055633664110033/0.774201309794984
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16538983167227+${delta}*${unit_x}
variable           x_new         equal     1.16538983167227+0.03*${unit_x}
variable           x_new         equal     1.16538983167227+0.03*-0.000318369666108408
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.25048188459379+${delta}*${unit_y}
variable           y_new         equal     3.25048188459379+0.03*${unit_y}
variable           y_new         equal     3.25048188459379+0.03*-0.999999691131453
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3203119862916+${delta}*${unit_z}
variable           z_new         equal     31.3203119862916+0.03*${unit_z}
variable           z_new         equal     31.3203119862916+0.03*-0.000718594290737707

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16538028058229  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16538028058229  y  3.22048189385985  z   ${z_new}
set                atom          288751    x  1.16538028058229  y  3.22048189385985  z   31.3202904284629
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000246482212500121  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000246482212500121  -0.77420107066855  ${new_z}
fix                hold    carbon   planeforce   -0.000246482212500121  -0.77420107066855  -0.00055633664110033
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4522   -1152448.4            0   -1152448.4 7.5817376e-05 -7.6566413e-07 0.0010319118 
    4699   -1152448.4            0   -1152448.4 3.6990624e-07 1.7216789e-10 -4.0347475e-07 
Loop time of 2.08708 on 104 procs for 177 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.43441491  -1152448.43956608  -1152448.43956608
  Force two-norm initial, final = 0.37168978 3.9303522e-05
  Force max component initial, final = 0.33811826 1.7854860e-05
  Final line search alpha, max atom move = 1.0000000 1.7854860e-05
  Iterations, force evaluations = 177 354

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54042    | 1.4885     | 1.9722     |  32.8 | 71.32
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036119   | 0.33965    | 1.0018     |  47.9 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2132e-05 | 0.0029221  | 0.0062339  |   2.6 |  0.14
Other   |            | 0.256      |            |       | 12.27

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16547803099185-${x_0}
variable           new_x         equal     1.16547803099185-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.22048166620566-${y_0}
variable           new_y         equal     3.22048166620566-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3205639254176-${z_0}
variable           new_z         equal     31.3205639254176-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000158282892920081*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000158282892920081*-0.000158282892920081+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000158282892920081*-0.000158282892920081+-0.80420128905668*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000158282892920081*-0.000158282892920081+-0.80420128905668*-0.80420128905668+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000158282892920081*-0.000158282892920081+-0.80420128905668*-0.80420128905668+-0.000304397515101584*${new_z})
variable           module        equal     sqrt(-0.000158282892920081*-0.000158282892920081+-0.80420128905668*-0.80420128905668+-0.000304397515101584*-0.000304397515101584)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000158282892920081/${module}
variable           unitx         equal     -0.000158282892920081/0.804201362241912
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.80420128905668/${module}
variable           unity         equal     -0.80420128905668/0.804201362241912
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.000304397515101584/${module}
variable           unitz         equal     -0.000304397515101584/0.804201362241912
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.69906244154317e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.69906244154317e-07*3.69906244154317e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.69906244154317e-07*3.69906244154317e-07+1.7216788987368e-10*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.69906244154317e-07*3.69906244154317e-07+1.7216788987368e-10*1.7216788987368e-10+${fz}*${fz})
variable           f_module      equal     sqrt(3.69906244154317e-07*3.69906244154317e-07+1.7216788987368e-10*1.7216788987368e-10+-4.03474745709346e-07*${fz})
variable           f_module      equal     sqrt(3.69906244154317e-07*3.69906244154317e-07+1.7216788987368e-10*1.7216788987368e-10+-4.03474745709346e-07*-4.03474745709346e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000196819976129894*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000196819976129894*-0.000196819976129894+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000196819976129894*-0.000196819976129894+-0.999999908996384*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000196819976129894*-0.000196819976129894+-0.999999908996384*-0.999999908996384+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000196819976129894*-0.000196819976129894+-0.999999908996384*-0.999999908996384+-0.000378509076698154*${unitz})
variable           dir_module    equal     sqrt(-0.000196819976129894*-0.000196819976129894+-0.999999908996384*-0.999999908996384+-0.000378509076698154*-0.000378509076698154)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.69906244154317e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.69906244154317e-07*-0.000196819976129894+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.69906244154317e-07*-0.000196819976129894+1.7216788987368e-10*${unity}+${fz}*${unitz}
variable           dot      equal     3.69906244154317e-07*-0.000196819976129894+1.7216788987368e-10*-0.999999908996384+${fz}*${unitz}
variable           dot      equal     3.69906244154317e-07*-0.000196819976129894+1.7216788987368e-10*-0.999999908996384+-4.03474745709346e-07*${unitz}
variable           dot      equal     3.69906244154317e-07*-0.000196819976129894+1.7216788987368e-10*-0.999999908996384+-4.03474745709346e-07*-0.000378509076698154
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -9.22539588810639e-11/${f_module}*${dir_module}
variable           cos      equal     -9.22539588810639e-11/5.47377867228258e-07*${dir_module}
variable           cos      equal     -9.22539588810639e-11/5.47377867228258e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.000168537977883921)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57096486477358/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0096565148662-90.0)
print              "The dot product: ${dot}"
The dot product: -9.22539588810639e-11
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0096565148662

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4699   -1152448.4            0   -1152448.4 0.00057707128      1.81142  0.001301273 
    4892   -1152449.3            0   -1152449.3 -4.6033328e-05 1.5761585e-06 2.1414635e-05 
Loop time of 2.27327 on 104 procs for 193 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.43956608  -1152449.34502402  -1152449.34502402
  Force two-norm initial, final = 1.8114206 0.00017848362
  Force max component initial, final = 1.8114200 4.6033328e-05
  Final line search alpha, max atom move = 1.0000000 4.6033328e-05
  Iterations, force evaluations = 193 380

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60104    | 1.6003     | 2.1242     |  33.6 | 70.40
Neigh   | 4.0212e-05 | 0.011848   | 0.017069   |   4.5 |  0.52
Comm    | 0.034213   | 0.36869    | 1.0834     |  49.3 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2331e-05 | 0.0020445  | 0.0052352  |   2.8 |  0.09
Other   |            | 0.2903     |            |       | 12.77

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 4
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563937304366-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563937304366-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563937304366-1.16563631388477)^2+(4.02468206435882-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563937304366-1.16563631388477)^2+(4.02468206435882-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563937304366-1.16563631388477)^2+(4.02468206435882-4.02468295526234)^2+(31.3208608049022-${z_0})^2)
variable                displacement      equal     sqrt((1.16563937304366-1.16563631388477)^2+(4.02468206435882-4.02468295526234)^2+(31.3208608049022-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 4
4
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.348 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.85938 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49401    | 1.328      | 1.7414     |  30.6 | 71.42
Neigh   | 2.9896e-05 | 0.008884   | 0.012856   |   3.9 |  0.48
Comm    | 0.030347   | 0.30307    | 0.89921    |  45.3 | 16.30
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8528e-05 | 0.001694   | 0.0044275  |   2.6 |  0.09
Other   |            | 0.2177     |            |       | 11.71

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,4)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,4)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,4)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.18190294596484
variable                y_1    equal     $y
variable                y_1    equal     4.01077395271984
variable                z_1    equal     $z
variable                z_1    equal     31.3294349981188

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.18190294596484  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.18190294596484  y  4.01077395271984  z  ${z_1}
set                atom        288751    x  1.18190294596484  y  4.01077395271984  z  31.3294349981188
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.18190294596484-${x_0}
variable           vector_x          equal     1.18190294596484-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.01077395271984-${y_0}
variable           vector_y          equal     4.01077395271984-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3294349981188-${z_0}
variable           vector_z          equal     31.3294349981188-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.01626663208007  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.01626663208007  -0.0139090025424995  ${vector_z}
fix                hold    carbon   planeforce   0.01626663208007  -0.0139090025424995  0.0085666751860991
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 -0.020610667 -0.016929995  0.011648252 
     344   -1152449.3            0   -1152449.3 -1.7193742e-05 -4.1278885e-06 2.5945825e-05 
Loop time of 2.16534 on 104 procs for 186 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.34192025  -1152449.34386333  -1152449.34386333
  Force two-norm initial, final = 0.19860719 0.0001250079
  Force max component initial, final = 0.085864855 3.5379949e-05
  Final line search alpha, max atom move = 1.0000000 3.5379949e-05
  Iterations, force evaluations = 186 372

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56863    | 1.561      | 2.0391     |  33.6 | 72.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03294    | 0.3516     | 1.0551     |  49.6 | 16.24
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3361e-05 | 0.0030594  | 0.0065635  |   2.6 |  0.14
Other   |            | 0.2497     |            |       | 11.53

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18106525997909-${x_0}
variable           new_x         equal     1.18106525997909-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.00993916953829-${y_0}
variable           new_y         equal     4.00993916953829-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3296702502196-${z_0}
variable           new_z         equal     31.3296702502196-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01542894609432^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01542894609432^2+-0.0147437857240496^2+${new_z}^2)
variable           norm          equal     sqrt(0.01542894609432^2+-0.0147437857240496^2+0.00880192728689977^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01542894609432/${norm}
variable           unit_x        equal     0.01542894609432/0.0230847464578234
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0147437857240496/${norm}
variable           unit_y        equal     -0.0147437857240496/0.0230847464578234
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00880192728689977/${norm}
variable           unit_z        equal     0.00880192728689977/0.0230847464578234
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18106525997909+${delta}*${unit_x}
variable           x_new         equal     1.18106525997909+0.03*${unit_x}
variable           x_new         equal     1.18106525997909+0.03*0.668361080876898
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.00993916953829+${delta}*${unit_y}
variable           y_new         equal     4.00993916953829+0.03*${unit_y}
variable           y_new         equal     4.00993916953829+0.03*-0.638680860150965
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3296702502196+${delta}*${unit_z}
variable           z_new         equal     31.3296702502196+0.03*${unit_z}
variable           z_new         equal     31.3296702502196+0.03*0.381287587584346

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2011160924054  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2011160924054  y  3.99077874373376  z   ${z_new}
set                atom          288751    x  1.2011160924054  y  3.99077874373376  z   31.3411088778471
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01542894609432  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01542894609432  -0.0147437857240496  ${new_z}
fix                hold    carbon   planeforce   0.01542894609432  -0.0147437857240496  0.00880192728689977
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     344   -1152449.3            0   -1152449.3 -0.029642758 -0.024652231  0.010666904 
     549   -1152449.3            0   -1152449.3 2.1167166e-05 3.7931271e-06 -3.0750312e-05 
Loop time of 2.41457 on 104 procs for 205 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33567269  -1152449.33891132  -1152449.33891132
  Force two-norm initial, final = 0.25606797 0.00010935976
  Force max component initial, final = 0.11234975 3.0750312e-05
  Final line search alpha, max atom move = 1.0000000 3.0750312e-05
  Iterations, force evaluations = 205 410

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63042    | 1.7286     | 2.2822     |  35.4 | 71.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03508    | 0.39567    | 1.1809     |  51.7 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5561e-05 | 0.003375   | 0.0072208  |   2.7 |  0.14
Other   |            | 0.2869     |            |       | 11.88

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115458 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19915370517202-${x_0}
variable           new_x         equal     1.19915370517202-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.98893108509567-${y_0}
variable           new_y         equal     3.98893108509567-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3414538118247-${z_0}
variable           new_z         equal     31.3414538118247-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03351739128725*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03351739128725*0.03351739128725+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03351739128725*0.03351739128725+-0.0357518701666697*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03351739128725*0.03351739128725+-0.0357518701666697*-0.0357518701666697+${new_z}*${new_z})
variable           module        equal     sqrt(0.03351739128725*0.03351739128725+-0.0357518701666697*-0.0357518701666697+0.0205854888919994*${new_z})
variable           module        equal     sqrt(0.03351739128725*0.03351739128725+-0.0357518701666697*-0.0357518701666697+0.0205854888919994*0.0205854888919994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.03351739128725/${module}
variable           unitx         equal     0.03351739128725/0.0531542481090614
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0357518701666697/${module}
variable           unity         equal     -0.0357518701666697/0.0531542481090614
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0205854888919994/${module}
variable           unitz         equal     0.0205854888919994/0.0531542481090614
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11671658224372e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11671658224372e-05*2.11671658224372e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11671658224372e-05*2.11671658224372e-05+3.7931271281204e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11671658224372e-05*2.11671658224372e-05+3.7931271281204e-06*3.7931271281204e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.11671658224372e-05*2.11671658224372e-05+3.7931271281204e-06*3.7931271281204e-06+-3.07503116101433e-05*${fz})
variable           f_module      equal     sqrt(2.11671658224372e-05*2.11671658224372e-05+3.7931271281204e-06*3.7931271281204e-06+-3.07503116101433e-05*-3.07503116101433e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630568439581336*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630568439581336*0.630568439581336+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630568439581336*0.630568439581336+-0.672606074557095*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630568439581336*0.630568439581336+-0.672606074557095*-0.672606074557095+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630568439581336*0.630568439581336+-0.672606074557095*-0.672606074557095+0.387278338501982*${unitz})
variable           dir_module    equal     sqrt(0.630568439581336*0.630568439581336+-0.672606074557095*-0.672606074557095+0.387278338501982*0.387278338501982)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11671658224372e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11671658224372e-05*0.630568439581336+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11671658224372e-05*0.630568439581336+3.7931271281204e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.11671658224372e-05*0.630568439581336+3.7931271281204e-06*-0.672606074557095+${fz}*${unitz}
variable           dot      equal     2.11671658224372e-05*0.630568439581336+3.7931271281204e-06*-0.672606074557095+-3.07503116101433e-05*${unitz}
variable           dot      equal     2.11671658224372e-05*0.630568439581336+3.7931271281204e-06*-0.672606074557095+-3.07503116101433e-05*0.387278338501982
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.11286321372198e-06/${f_module}*${dir_module}
variable           cos      equal     -1.11286321372198e-06/3.75235710785308e-05*${dir_module}
variable           cos      equal     -1.11286321372198e-06/3.75235710785308e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0296577106532035)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60045838689042/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.6995108551369-90.0)
print              "The dot product: ${dot}"
The dot product: -1.11286321372198e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.6995108551369

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.03351739128725^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.03351739128725^2+-0.0357518701666697^2+${new_z}^2)
variable           norm          equal     sqrt(0.03351739128725^2+-0.0357518701666697^2+0.0205854888919994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.03351739128725/${norm}
variable           unit_x        equal     0.03351739128725/0.0531542481090614
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0357518701666697/${norm}
variable           unit_y        equal     -0.0357518701666697/0.0531542481090614
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0205854888919994/${norm}
variable           unit_z        equal     0.0205854888919994/0.0531542481090614
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19915370517202+${delta}*${unit_x}
variable           x_new         equal     1.19915370517202+0.03*${unit_x}
variable           x_new         equal     1.19915370517202+0.03*0.630568439581336
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.98893108509567+${delta}*${unit_y}
variable           y_new         equal     3.98893108509567+0.03*${unit_y}
variable           y_new         equal     3.98893108509567+0.03*-0.672606074557095
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3414538118247+${delta}*${unit_z}
variable           z_new         equal     31.3414538118247+0.03*${unit_z}
variable           z_new         equal     31.3414538118247+0.03*0.387278338501982

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21807075835946  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21807075835946  y  3.96875290285896  z   ${z_new}
set                atom          288751    x  1.21807075835946  y  3.96875290285896  z   31.3530721619798
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.03351739128725  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.03351739128725  -0.0357518701666697  ${new_z}
fix                hold    carbon   planeforce   0.03351739128725  -0.0357518701666697  0.0205854888919994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     549   -1152449.3            0   -1152449.3 -0.029628049 -0.027382584 0.0006837982 
     743   -1152449.3            0   -1152449.3 -2.1168769e-05 -2.2116882e-06 3.0625939e-05 
Loop time of 2.25927 on 104 procs for 194 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32722521  -1152449.33034791  -1152449.33034791
  Force two-norm initial, final = 0.25314854 0.00012414031
  Force max component initial, final = 0.11352992 3.0625939e-05
  Final line search alpha, max atom move = 1.0000000 3.0625939e-05
  Iterations, force evaluations = 194 388

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59904    | 1.6321     | 2.1262     |  34.2 | 72.24
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035048   | 0.36745    | 1.1038     |  50.7 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3581e-05 | 0.0031909  | 0.0068437  |   2.7 |  0.14
Other   |            | 0.2566     |            |       | 11.36

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115428 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21562307669848-${x_0}
variable           new_x         equal     1.21562307669848-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.96587794389735-${y_0}
variable           new_y         equal     3.96587794389735-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3520644008495-${z_0}
variable           new_z         equal     31.3520644008495-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0499867628137098*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0499867628137098*0.0499867628137098+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0499867628137098*0.0499867628137098+-0.0588050113649898*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0499867628137098*0.0499867628137098+-0.0588050113649898*-0.0588050113649898+${new_z}*${new_z})
variable           module        equal     sqrt(0.0499867628137098*0.0499867628137098+-0.0588050113649898*-0.0588050113649898+0.0311960779167997*${new_z})
variable           module        equal     sqrt(0.0499867628137098*0.0499867628137098+-0.0588050113649898*-0.0588050113649898+0.0311960779167997*0.0311960779167997)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0499867628137098/${module}
variable           unitx         equal     0.0499867628137098/0.0832460275065525
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0588050113649898/${module}
variable           unity         equal     -0.0588050113649898/0.0832460275065525
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0311960779167997/${module}
variable           unitz         equal     0.0311960779167997/0.0832460275065525
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.11687693333608e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.11687693333608e-05*-2.11687693333608e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.11687693333608e-05*-2.11687693333608e-05+-2.21168824748163e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.11687693333608e-05*-2.11687693333608e-05+-2.21168824748163e-06*-2.21168824748163e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.11687693333608e-05*-2.11687693333608e-05+-2.21168824748163e-06*-2.21168824748163e-06+3.06259393229806e-05*${fz})
variable           f_module      equal     sqrt(-2.11687693333608e-05*-2.11687693333608e-05+-2.21168824748163e-06*-2.21168824748163e-06+3.06259393229806e-05*3.06259393229806e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.600470248382425*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.600470248382425*0.600470248382425+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.600470248382425*0.600470248382425+-0.706400210633007*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.600470248382425*0.600470248382425+-0.706400210633007*-0.706400210633007+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.600470248382425*0.600470248382425+-0.706400210633007*-0.706400210633007+0.37474554463688*${unitz})
variable           dir_module    equal     sqrt(0.600470248382425*0.600470248382425+-0.706400210633007*-0.706400210633007+0.37474554463688*0.37474554463688)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.11687693333608e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.11687693333608e-05*0.600470248382425+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.11687693333608e-05*0.600470248382425+-2.21168824748163e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.11687693333608e-05*0.600470248382425+-2.21168824748163e-06*-0.706400210633007+${fz}*${unitz}
variable           dot      equal     -2.11687693333608e-05*0.600470248382425+-2.21168824748163e-06*-0.706400210633007+3.06259393229806e-05*${unitz}
variable           dot      equal     -2.11687693333608e-05*0.600470248382425+-2.21168824748163e-06*-0.706400210633007+3.06259393229806e-05*0.37474554463688
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.28055175928555e-07/${f_module}*${dir_module}
variable           cos      equal     3.28055175928555e-07/3.72955294828747e-05*${dir_module}
variable           cos      equal     3.28055175928555e-07/3.72955294828747e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00879609916998741)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56200011419327/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.496014142227-90.0)
print              "The dot product: ${dot}"
The dot product: 3.28055175928555e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.496014142227

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0499867628137098^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0499867628137098^2+-0.0588050113649898^2+${new_z}^2)
variable           norm          equal     sqrt(0.0499867628137098^2+-0.0588050113649898^2+0.0311960779167997^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0499867628137098/${norm}
variable           unit_x        equal     0.0499867628137098/0.0832460275065525
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0588050113649898/${norm}
variable           unit_y        equal     -0.0588050113649898/0.0832460275065525
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0311960779167997/${norm}
variable           unit_z        equal     0.0311960779167997/0.0832460275065525
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21562307669848+${delta}*${unit_x}
variable           x_new         equal     1.21562307669848+0.03*${unit_x}
variable           x_new         equal     1.21562307669848+0.03*0.600470248382425
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.96587794389735+${delta}*${unit_y}
variable           y_new         equal     3.96587794389735+0.03*${unit_y}
variable           y_new         equal     3.96587794389735+0.03*-0.706400210633007
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3520644008495+${delta}*${unit_z}
variable           z_new         equal     31.3520644008495+0.03*${unit_z}
variable           z_new         equal     31.3520644008495+0.03*0.37474554463688

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23363718414995  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23363718414995  y  3.94468593757836  z   ${z_new}
set                atom          288751    x  1.23363718414995  y  3.94468593757836  z   31.3633067671886
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0499867628137098  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0499867628137098  -0.0588050113649898  ${new_z}
fix                hold    carbon   planeforce   0.0499867628137098  -0.0588050113649898  0.0311960779167997
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     743   -1152449.3            0   -1152449.3 -0.028083805 -0.028728037 -0.009152884 
     970   -1152449.3            0   -1152449.3 3.2767624e-06 3.4460961e-07 -4.600898e-06 
Loop time of 2.64959 on 104 procs for 227 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31572856  -1152449.31884334  -1152449.31884334
  Force two-norm initial, final = 0.25154492 3.1309074e-05
  Force max component initial, final = 0.12216958 4.9080805e-06
  Final line search alpha, max atom move = 1.0000000 4.9080805e-06
  Iterations, force evaluations = 227 454

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.69983    | 1.91       | 2.4983     |  37.0 | 72.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042534   | 0.4304     | 1.2876     |  55.0 | 16.24
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7766e-05 | 0.0037332  | 0.0079642  |   2.9 |  0.14
Other   |            | 0.3054     |            |       | 11.53

Nlocal:        2776.45 ave        3957 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.06 ave        5428 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115360 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.23135334611409-${x_0}
variable           new_x         equal     1.23135334611409-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.94117532063802-${y_0}
variable           new_y         equal     3.94117532063802-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3603486966545-${z_0}
variable           new_z         equal     31.3603486966545-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0657170322293199*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0657170322293199*0.0657170322293199+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0657170322293199*0.0657170322293199+-0.0835076346243198*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0657170322293199*0.0657170322293199+-0.0835076346243198*-0.0835076346243198+${new_z}*${new_z})
variable           module        equal     sqrt(0.0657170322293199*0.0657170322293199+-0.0835076346243198*-0.0835076346243198+0.0394803737218012*${new_z})
variable           module        equal     sqrt(0.0657170322293199*0.0657170322293199+-0.0835076346243198*-0.0835076346243198+0.0394803737218012*0.0394803737218012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0657170322293199/${module}
variable           unitx         equal     0.0657170322293199/0.113362045124422
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0835076346243198/${module}
variable           unity         equal     -0.0835076346243198/0.113362045124422
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0394803737218012/${module}
variable           unitz         equal     0.0394803737218012/0.113362045124422
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27676240021376e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27676240021376e-06*3.27676240021376e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27676240021376e-06*3.27676240021376e-06+3.44609607690317e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27676240021376e-06*3.27676240021376e-06+3.44609607690317e-07*3.44609607690317e-07+${fz}*${fz})
variable           f_module      equal     sqrt(3.27676240021376e-06*3.27676240021376e-06+3.44609607690317e-07*3.44609607690317e-07+-4.60089801599635e-06*${fz})
variable           f_module      equal     sqrt(3.27676240021376e-06*3.27676240021376e-06+3.44609607690317e-07*3.44609607690317e-07+-4.60089801599635e-06*-4.60089801599635e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.579709303560917*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.579709303560917*0.579709303560917+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.579709303560917*0.579709303560917+-0.736645448947793*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.579709303560917*0.579709303560917+-0.736645448947793*-0.736645448947793+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.579709303560917*0.579709303560917+-0.736645448947793*-0.736645448947793+0.34826800873669*${unitz})
variable           dir_module    equal     sqrt(0.579709303560917*0.579709303560917+-0.736645448947793*-0.736645448947793+0.34826800873669*0.34826800873669)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.27676240021376e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.27676240021376e-06*0.579709303560917+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.27676240021376e-06*0.579709303560917+3.44609607690317e-07*${unity}+${fz}*${unitz}
variable           dot      equal     3.27676240021376e-06*0.579709303560917+3.44609607690317e-07*-0.736645448947793+${fz}*${unitz}
variable           dot      equal     3.27676240021376e-06*0.579709303560917+3.44609607690317e-07*-0.736645448947793+-4.60089801599635e-06*${unitz}
variable           dot      equal     3.27676240021376e-06*0.579709303560917+3.44609607690317e-07*-0.736645448947793+-4.60089801599635e-06*0.34826800873669
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.33689593621246e-08/${f_module}*${dir_module}
variable           cos      equal     4.33689593621246e-08/5.65899197408569e-06*${dir_module}
variable           cos      equal     4.33689593621246e-08/5.65899197408569e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00766372519359008)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5631325265808/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.5608965927008-90.0)
print              "The dot product: ${dot}"
The dot product: 4.33689593621246e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.5608965927008

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0657170322293199^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0657170322293199^2+-0.0835076346243198^2+${new_z}^2)
variable           norm          equal     sqrt(0.0657170322293199^2+-0.0835076346243198^2+0.0394803737218012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0657170322293199/${norm}
variable           unit_x        equal     0.0657170322293199/0.113362045124422
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0835076346243198/${norm}
variable           unit_y        equal     -0.0835076346243198/0.113362045124422
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0394803737218012/${norm}
variable           unit_z        equal     0.0394803737218012/0.113362045124422
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.23135334611409+${delta}*${unit_x}
variable           x_new         equal     1.23135334611409+0.03*${unit_x}
variable           x_new         equal     1.23135334611409+0.03*0.579709303560917
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.94117532063802+${delta}*${unit_y}
variable           y_new         equal     3.94117532063802+0.03*${unit_y}
variable           y_new         equal     3.94117532063802+0.03*-0.736645448947793
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3603486966545+${delta}*${unit_z}
variable           z_new         equal     31.3603486966545+0.03*${unit_z}
variable           z_new         equal     31.3603486966545+0.03*0.34826800873669

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24874462522092  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24874462522092  y  3.91907595716959  z   ${z_new}
set                atom          288751    x  1.24874462522092  y  3.91907595716959  z   31.3707967369166
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0657170322293199  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0657170322293199  -0.0835076346243198  ${new_z}
fix                hold    carbon   planeforce   0.0657170322293199  -0.0835076346243198  0.0394803737218012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     970   -1152449.3            0   -1152449.3 -0.028082353 -0.028675646 -0.013909353 
    1000   -1152449.3            0   -1152449.3 -0.00069738936 -0.00019599146 0.0007462841 
    1106   -1152449.3            0   -1152449.3 -4.8742965e-05 -8.9466858e-06 6.2211326e-05 
Loop time of 1.57826 on 104 procs for 136 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30131221  -1152449.30439273  -1152449.30439273
  Force two-norm initial, final = 0.24964017 0.00027055648
  Force max component initial, final = 0.13068351 7.0629809e-05
  Final line search alpha, max atom move = 1.0000000 7.0629809e-05
  Iterations, force evaluations = 136 272

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41625    | 1.1455     | 1.4901     |  28.8 | 72.58
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.023497   | 0.25701    | 0.77572    |  42.8 | 16.28
Output  | 0.00010891 | 0.00011142 | 0.00019615 |   0.0 |  0.01
Modify  | 1.6586e-05 | 0.0022417  | 0.0047935  |   2.2 |  0.14
Other   |            | 0.1734     |            |       | 10.99

Nlocal:        2776.45 ave        3952 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115189 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24644583599161-${x_0}
variable           new_x         equal     1.24644583599161-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.91533967945865-${y_0}
variable           new_y         equal     3.91533967945865-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.366720328998-${z_0}
variable           new_z         equal     31.366720328998-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0808095221068399*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0808095221068399*0.0808095221068399+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0808095221068399*0.0808095221068399+-0.10934327580369*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0808095221068399*0.0808095221068399+-0.10934327580369*-0.10934327580369+${new_z}*${new_z})
variable           module        equal     sqrt(0.0808095221068399*0.0808095221068399+-0.10934327580369*-0.10934327580369+0.0458520060652994*${new_z})
variable           module        equal     sqrt(0.0808095221068399*0.0808095221068399+-0.10934327580369*-0.10934327580369+0.0458520060652994*0.0458520060652994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0808095221068399/${module}
variable           unitx         equal     0.0808095221068399/0.143487063134033
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.10934327580369/${module}
variable           unity         equal     -0.10934327580369/0.143487063134033
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0458520060652994/${module}
variable           unitz         equal     0.0458520060652994/0.143487063134033
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.87429647222342e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.87429647222342e-05*-4.87429647222342e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.87429647222342e-05*-4.87429647222342e-05+-8.94668576573845e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.87429647222342e-05*-4.87429647222342e-05+-8.94668576573845e-06*-8.94668576573845e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.87429647222342e-05*-4.87429647222342e-05+-8.94668576573845e-06*-8.94668576573845e-06+6.22113264397764e-05*${fz})
variable           f_module      equal     sqrt(-4.87429647222342e-05*-4.87429647222342e-05+-8.94668576573845e-06*-8.94668576573845e-06+6.22113264397764e-05*6.22113264397764e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563183330551234*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563183330551234*0.563183330551234+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563183330551234*0.563183330551234+-0.762042747376822*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563183330551234*0.563183330551234+-0.762042747376822*-0.762042747376822+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563183330551234*0.563183330551234+-0.762042747376822*-0.762042747376822+0.319554983312109*${unitz})
variable           dir_module    equal     sqrt(0.563183330551234*0.563183330551234+-0.762042747376822*-0.762042747376822+0.319554983312109*0.319554983312109)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.87429647222342e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.87429647222342e-05*0.563183330551234+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.87429647222342e-05*0.563183330551234+-8.94668576573845e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.87429647222342e-05*0.563183330551234+-8.94668576573845e-06*-0.762042747376822+${fz}*${unitz}
variable           dot      equal     -4.87429647222342e-05*0.563183330551234+-8.94668576573845e-06*-0.762042747376822+6.22113264397764e-05*${unitz}
variable           dot      equal     -4.87429647222342e-05*0.563183330551234+-8.94668576573845e-06*-0.762042747376822+6.22113264397764e-05*0.319554983312109
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.53528830081811e-07/${f_module}*${dir_module}
variable           cos      equal     -7.53528830081811e-07/7.95372172853706e-05*${dir_module}
variable           cos      equal     -7.53528830081811e-07/7.95372172853706e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00947391492687296)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58027038344947/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.5428234611749-90.0)
print              "The dot product: ${dot}"
The dot product: -7.53528830081811e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.5428234611749

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0808095221068399^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0808095221068399^2+-0.10934327580369^2+${new_z}^2)
variable           norm          equal     sqrt(0.0808095221068399^2+-0.10934327580369^2+0.0458520060652994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0808095221068399/${norm}
variable           unit_x        equal     0.0808095221068399/0.143487063134033
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.10934327580369/${norm}
variable           unit_y        equal     -0.10934327580369/0.143487063134033
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0458520060652994/${norm}
variable           unit_z        equal     0.0458520060652994/0.143487063134033
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24644583599161+${delta}*${unit_x}
variable           x_new         equal     1.24644583599161+0.03*${unit_x}
variable           x_new         equal     1.24644583599161+0.03*0.563183330551234
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.91533967945865+${delta}*${unit_y}
variable           y_new         equal     3.91533967945865+0.03*${unit_y}
variable           y_new         equal     3.91533967945865+0.03*-0.762042747376822
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.366720328998+${delta}*${unit_z}
variable           z_new         equal     31.366720328998+0.03*${unit_z}
variable           z_new         equal     31.366720328998+0.03*0.319554983312109

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26334133590815  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26334133590815  y  3.89247839703735  z   ${z_new}
set                atom          288751    x  1.26334133590815  y  3.89247839703735  z   31.3763069784974
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0808095221068399  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0808095221068399  -0.10934327580369  ${new_z}
fix                hold    carbon   planeforce   0.0808095221068399  -0.10934327580369  0.0458520060652994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1106   -1152449.3            0   -1152449.3 -0.029208133 -0.027735524 -0.014664524 
    1285   -1152449.3            0   -1152449.3 3.2998297e-05 6.8165889e-06 -4.1900641e-05 
Loop time of 2.09844 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.28379174  -1152449.28685582  -1152449.28685582
  Force two-norm initial, final = 0.24820282 0.0001597786
  Force max component initial, final = 0.13878741 4.2996032e-05
  Final line search alpha, max atom move = 1.0000000 4.2996032e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55121    | 1.5098     | 1.9838     |  33.0 | 71.95
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032423   | 0.34289    | 1.0225     |  48.5 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1785e-05 | 0.0029501  | 0.006304   |   2.6 |  0.14
Other   |            | 0.2428     |            |       | 11.57

Nlocal:        2776.45 ave        3948 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115055 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.26080068933584-${x_0}
variable           new_x         equal     1.26080068933584-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.88871915813861-${y_0}
variable           new_y         equal     3.88871915813861-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3718199543078-${z_0}
variable           new_z         equal     31.3718199543078-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09516437545107*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09516437545107*0.09516437545107+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09516437545107*0.09516437545107+-0.13596379712373*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09516437545107*0.09516437545107+-0.13596379712373*-0.13596379712373+${new_z}*${new_z})
variable           module        equal     sqrt(0.09516437545107*0.09516437545107+-0.13596379712373*-0.13596379712373+0.0509516313750993*${new_z})
variable           module        equal     sqrt(0.09516437545107*0.09516437545107+-0.13596379712373*-0.13596379712373+0.0509516313750993*0.0509516313750993)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.09516437545107/${module}
variable           unitx         equal     0.09516437545107/0.173604381347589
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.13596379712373/${module}
variable           unity         equal     -0.13596379712373/0.173604381347589
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0509516313750993/${module}
variable           unitz         equal     0.0509516313750993/0.173604381347589
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.29982967913737e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.29982967913737e-05*3.29982967913737e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.29982967913737e-05*3.29982967913737e-05+6.81658891630163e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.29982967913737e-05*3.29982967913737e-05+6.81658891630163e-06*6.81658891630163e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.29982967913737e-05*3.29982967913737e-05+6.81658891630163e-06*6.81658891630163e-06+-4.19006407132109e-05*${fz})
variable           f_module      equal     sqrt(3.29982967913737e-05*3.29982967913737e-05+6.81658891630163e-06*6.81658891630163e-06+-4.19006407132109e-05*-4.19006407132109e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.548168051476378*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.548168051476378*0.548168051476378+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.548168051476378*0.548168051476378+-0.783181830252916*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.548168051476378*0.548168051476378+-0.783181830252916*-0.783181830252916+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.548168051476378*0.548168051476378+-0.783181830252916*-0.783181830252916+0.293492773509468*${unitz})
variable           dir_module    equal     sqrt(0.548168051476378*0.548168051476378+-0.783181830252916*-0.783181830252916+0.293492773509468*0.293492773509468)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.29982967913737e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.29982967913737e-05*0.548168051476378+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.29982967913737e-05*0.548168051476378+6.81658891630163e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.29982967913737e-05*0.548168051476378+6.81658891630163e-06*-0.783181830252916+${fz}*${unitz}
variable           dot      equal     3.29982967913737e-05*0.548168051476378+6.81658891630163e-06*-0.783181830252916+-4.19006407132109e-05*${unitz}
variable           dot      equal     3.29982967913737e-05*0.548168051476378+6.81658891630163e-06*-0.783181830252916+-4.19006407132109e-05*0.293492773509468
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.52448215871685e-07/${f_module}*${dir_module}
variable           cos      equal     4.52448215871685e-07/5.37681798814412e-05*${dir_module}
variable           cos      equal     4.52448215871685e-07/5.37681798814412e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0084147950864123)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56238143239843/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.5178620660342-90.0)
print              "The dot product: ${dot}"
The dot product: 4.52448215871685e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.5178620660342

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.09516437545107^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.09516437545107^2+-0.13596379712373^2+${new_z}^2)
variable           norm          equal     sqrt(0.09516437545107^2+-0.13596379712373^2+0.0509516313750993^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.09516437545107/${norm}
variable           unit_x        equal     0.09516437545107/0.173604381347589
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.13596379712373/${norm}
variable           unit_y        equal     -0.13596379712373/0.173604381347589
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0509516313750993/${norm}
variable           unit_z        equal     0.0509516313750993/0.173604381347589
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.26080068933584+${delta}*${unit_x}
variable           x_new         equal     1.26080068933584+0.03*${unit_x}
variable           x_new         equal     1.26080068933584+0.03*0.548168051476378
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.88871915813861+${delta}*${unit_y}
variable           y_new         equal     3.88871915813861+0.03*${unit_y}
variable           y_new         equal     3.88871915813861+0.03*-0.783181830252916
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3718199543078+${delta}*${unit_z}
variable           z_new         equal     31.3718199543078+0.03*${unit_z}
variable           z_new         equal     31.3718199543078+0.03*0.293492773509468

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27724573088013  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27724573088013  y  3.86522370323102  z   ${z_new}
set                atom          288751    x  1.27724573088013  y  3.86522370323102  z   31.3806247375131
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.09516437545107  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.09516437545107  -0.13596379712373  ${new_z}
fix                hold    carbon   planeforce   0.09516437545107  -0.13596379712373  0.0509516313750993
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1285   -1152449.3            0   -1152449.3  -0.03252442 -0.026784949 -0.010728158 
    1415   -1152449.3            0   -1152449.3 -3.7423473e-05 -1.1710436e-05 3.8648147e-05 
Loop time of 1.50352 on 104 procs for 130 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.26310077  -1152449.26613127  -1152449.26613127
  Force two-norm initial, final = 0.24694282 0.00019508467
  Force max component initial, final = 0.14635018 3.8648147e-05
  Final line search alpha, max atom move = 1.0000000 3.8648147e-05
  Iterations, force evaluations = 130 260

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.39835    | 1.092      | 1.4188     |  28.0 | 72.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.022801   | 0.2438     | 0.73799    |  41.8 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6205e-05 | 0.002144   | 0.0045782  |   2.2 |  0.14
Other   |            | 0.1656     |            |       | 11.02

Nlocal:        2776.45 ave        3944 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114945 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27422521623314-${x_0}
variable           new_x         equal     1.27422521623314-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.86142356582002-${y_0}
variable           new_y         equal     3.86142356582002-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3761256524812-${z_0}
variable           new_z         equal     31.3761256524812-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10858890234837*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10858890234837*0.10858890234837+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10858890234837*0.10858890234837+-0.16325938944232*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10858890234837*0.10858890234837+-0.16325938944232*-0.16325938944232+${new_z}*${new_z})
variable           module        equal     sqrt(0.10858890234837*0.10858890234837+-0.16325938944232*-0.16325938944232+0.0552573295484997*${new_z})
variable           module        equal     sqrt(0.10858890234837*0.10858890234837+-0.16325938944232*-0.16325938944232+0.0552573295484997*0.0552573295484997)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10858890234837/${module}
variable           unitx         equal     0.10858890234837/0.203711929997078
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.16325938944232/${module}
variable           unity         equal     -0.16325938944232/0.203711929997078
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0552573295484997/${module}
variable           unitz         equal     0.0552573295484997/0.203711929997078
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.74234731733132e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.74234731733132e-05*-3.74234731733132e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.74234731733132e-05*-3.74234731733132e-05+-1.1710435842746e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.74234731733132e-05*-3.74234731733132e-05+-1.1710435842746e-05*-1.1710435842746e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-3.74234731733132e-05*-3.74234731733132e-05+-1.1710435842746e-05*-1.1710435842746e-05+3.8648146790477e-05*${fz})
variable           f_module      equal     sqrt(-3.74234731733132e-05*-3.74234731733132e-05+-1.1710435842746e-05*-1.1710435842746e-05+3.8648146790477e-05*3.8648146790477e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.533051266805668*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.533051266805668*0.533051266805668+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.533051266805668*0.533051266805668+-0.801422820178778*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.533051266805668*0.533051266805668+-0.801422820178778*-0.801422820178778+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.533051266805668*0.533051266805668+-0.801422820178778*-0.801422820178778+0.271252299996825*${unitz})
variable           dir_module    equal     sqrt(0.533051266805668*0.533051266805668+-0.801422820178778*-0.801422820178778+0.271252299996825*0.271252299996825)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.74234731733132e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.74234731733132e-05*0.533051266805668+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.74234731733132e-05*0.533051266805668+-1.1710435842746e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -3.74234731733132e-05*0.533051266805668+-1.1710435842746e-05*-0.801422820178778+${fz}*${unitz}
variable           dot      equal     -3.74234731733132e-05*0.533051266805668+-1.1710435842746e-05*-0.801422820178778+3.8648146790477e-05*${unitz}
variable           dot      equal     -3.74234731733132e-05*0.533051266805668+-1.1710435842746e-05*-0.801422820178778+3.8648146790477e-05*0.271252299996825
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.02205571545924e-08/${f_module}*${dir_module}
variable           cos      equal     -8.02205571545924e-08/5.5057514494563e-05*${dir_module}
variable           cos      equal     -8.02205571545924e-08/5.5057514494563e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00145703193998186)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57225335925041/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0834818103145-90.0)
print              "The dot product: ${dot}"
The dot product: -8.02205571545924e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0834818103145

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10858890234837^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10858890234837^2+-0.16325938944232^2+${new_z}^2)
variable           norm          equal     sqrt(0.10858890234837^2+-0.16325938944232^2+0.0552573295484997^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10858890234837/${norm}
variable           unit_x        equal     0.10858890234837/0.203711929997078
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.16325938944232/${norm}
variable           unit_y        equal     -0.16325938944232/0.203711929997078
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0552573295484997/${norm}
variable           unit_z        equal     0.0552573295484997/0.203711929997078
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27422521623314+${delta}*${unit_x}
variable           x_new         equal     1.27422521623314+0.03*${unit_x}
variable           x_new         equal     1.27422521623314+0.03*0.533051266805668
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.86142356582002+${delta}*${unit_y}
variable           y_new         equal     3.86142356582002+0.03*${unit_y}
variable           y_new         equal     3.86142356582002+0.03*-0.801422820178778
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3761256524812+${delta}*${unit_z}
variable           z_new         equal     31.3761256524812+0.03*${unit_z}
variable           z_new         equal     31.3761256524812+0.03*0.271252299996825

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29021675423731  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29021675423731  y  3.83738088121466  z   ${z_new}
set                atom          288751    x  1.29021675423731  y  3.83738088121466  z   31.3842632214811
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10858890234837  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10858890234837  -0.16325938944232  ${new_z}
fix                hold    carbon   planeforce   0.10858890234837  -0.16325938944232  0.0552573295484997
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1415   -1152449.2            0   -1152449.2 -0.040001767 -0.026618814 -3.6616941e-05 
    1553   -1152449.2            0   -1152449.2 -2.9074022e-05 -6.6623576e-06 3.7450665e-05 
Loop time of 1.60978 on 104 procs for 138 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.23926414  -1152449.24225694  -1152449.24225694
  Force two-norm initial, final = 0.24685487 0.00017208416
  Force max component initial, final = 0.15366118 3.7450665e-05
  Final line search alpha, max atom move = 1.0000000 3.7450665e-05
  Iterations, force evaluations = 138 276

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.42293    | 1.1627     | 1.5157     |  29.0 | 72.23
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.023697   | 0.26295    | 0.78611    |  42.7 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7044e-05 | 0.0022758  | 0.0048886  |   2.3 |  0.14
Other   |            | 0.1819     |            |       | 11.30

Nlocal:        2776.45 ave        3940 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114816 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28555754840484-${x_0}
variable           new_x         equal     1.28555754840484-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.83330043973888-${y_0}
variable           new_y         equal     3.83330043973888-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3813634733726-${z_0}
variable           new_z         equal     31.3813634733726-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11992123452007*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11992123452007*0.11992123452007+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11992123452007*0.11992123452007+-0.19138251552346*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11992123452007*0.11992123452007+-0.19138251552346*-0.19138251552346+${new_z}*${new_z})
variable           module        equal     sqrt(0.11992123452007*0.11992123452007+-0.19138251552346*-0.19138251552346+0.0604951504398983*${new_z})
variable           module        equal     sqrt(0.11992123452007*0.11992123452007+-0.19138251552346*-0.19138251552346+0.0604951504398983*0.0604951504398983)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.11992123452007/${module}
variable           unitx         equal     0.11992123452007/0.233811960694168
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.19138251552346/${module}
variable           unity         equal     -0.19138251552346/0.233811960694168
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0604951504398983/${module}
variable           unitz         equal     0.0604951504398983/0.233811960694168
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.90740220899155e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.90740220899155e-05*-2.90740220899155e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.90740220899155e-05*-2.90740220899155e-05+-6.66235756083562e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.90740220899155e-05*-2.90740220899155e-05+-6.66235756083562e-06*-6.66235756083562e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.90740220899155e-05*-2.90740220899155e-05+-6.66235756083562e-06*-6.66235756083562e-06+3.74506646419019e-05*${fz})
variable           f_module      equal     sqrt(-2.90740220899155e-05*-2.90740220899155e-05+-6.66235756083562e-06*-6.66235756083562e-06+3.74506646419019e-05*3.74506646419019e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.512896064701027*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.512896064701027*0.512896064701027+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.512896064701027*0.512896064701027+-0.818531759261851*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.512896064701027*0.512896064701027+-0.818531759261851*-0.818531759261851+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.512896064701027*0.512896064701027+-0.818531759261851*-0.818531759261851+0.25873419931253*${unitz})
variable           dir_module    equal     sqrt(0.512896064701027*0.512896064701027+-0.818531759261851*-0.818531759261851+0.25873419931253*0.25873419931253)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.90740220899155e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.90740220899155e-05*0.512896064701027+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.90740220899155e-05*0.512896064701027+-6.66235756083562e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.90740220899155e-05*0.512896064701027+-6.66235756083562e-06*-0.818531759261851+${fz}*${unitz}
variable           dot      equal     -2.90740220899155e-05*0.512896064701027+-6.66235756083562e-06*-0.818531759261851+3.74506646419019e-05*${unitz}
variable           dot      equal     -2.90740220899155e-05*0.512896064701027+-6.66235756083562e-06*-0.818531759261851+3.74506646419019e-05*0.25873419931253
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.31167469998452e-07/${f_module}*${dir_module}
variable           cos      equal     2.31167469998452e-07/4.78773229292691e-05*${dir_module}
variable           cos      equal     2.31167469998452e-07/4.78773229292691e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00482832906802169)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5659679789664/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.723356047406-90.0)
print              "The dot product: ${dot}"
The dot product: 2.31167469998452e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.723356047406

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11992123452007^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11992123452007^2+-0.19138251552346^2+${new_z}^2)
variable           norm          equal     sqrt(0.11992123452007^2+-0.19138251552346^2+0.0604951504398983^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.11992123452007/${norm}
variable           unit_x        equal     0.11992123452007/0.233811960694168
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.19138251552346/${norm}
variable           unit_y        equal     -0.19138251552346/0.233811960694168
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0604951504398983/${norm}
variable           unit_z        equal     0.0604951504398983/0.233811960694168
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28555754840484+${delta}*${unit_x}
variable           x_new         equal     1.28555754840484+0.03*${unit_x}
variable           x_new         equal     1.28555754840484+0.03*0.512896064701027
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.83330043973888+${delta}*${unit_y}
variable           y_new         equal     3.83330043973888+0.03*${unit_y}
variable           y_new         equal     3.83330043973888+0.03*-0.818531759261851
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3813634733726+${delta}*${unit_z}
variable           z_new         equal     31.3813634733726+0.03*${unit_z}
variable           z_new         equal     31.3813634733726+0.03*0.25873419931253

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30094443034587  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30094443034587  y  3.80874448696102  z   ${z_new}
set                atom          288751    x  1.30094443034587  y  3.80874448696102  z   31.389125499352
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11992123452007  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11992123452007  -0.19138251552346  ${new_z}
fix                hold    carbon   planeforce   0.11992123452007  -0.19138251552346  0.0604951504398983
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1553   -1152449.2            0   -1152449.2 -0.049691809 -0.026548489  0.014516642 
    1688   -1152449.2            0   -1152449.2 4.1530812e-05 1.2098279e-05 -4.4053567e-05 
Loop time of 1.56573 on 104 procs for 135 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.21249073  -1152449.21555976  -1152449.21555976
  Force two-norm initial, final = 0.24884698 0.00021351571
  Force max component initial, final = 0.16124072 5.9720390e-05
  Final line search alpha, max atom move = 1.0000000 5.9720390e-05
  Iterations, force evaluations = 135 270

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41534    | 1.1358     | 1.4764     |  28.6 | 72.54
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025419   | 0.25457    | 0.76622    |  42.5 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6643e-05 | 0.0022216  | 0.0047524  |   2.2 |  0.14
Other   |            | 0.1731     |            |       | 11.06

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114493 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29360981789288-${x_0}
variable           new_x         equal     1.29360981789288-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.8042672691504-${y_0}
variable           new_y         equal     3.8042672691504-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3895009769359-${z_0}
variable           new_z         equal     31.3895009769359-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12797350400811*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12797350400811*0.12797350400811+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12797350400811*0.12797350400811+-0.22041568611194*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12797350400811*0.12797350400811+-0.22041568611194*-0.22041568611194+${new_z}*${new_z})
variable           module        equal     sqrt(0.12797350400811*0.12797350400811+-0.22041568611194*-0.22041568611194+0.0686326540031992*${new_z})
variable           module        equal     sqrt(0.12797350400811*0.12797350400811+-0.22041568611194*-0.22041568611194+0.0686326540031992*0.0686326540031992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12797350400811/${module}
variable           unitx         equal     0.12797350400811/0.263952142646795
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.22041568611194/${module}
variable           unity         equal     -0.22041568611194/0.263952142646795
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0686326540031992/${module}
variable           unitz         equal     0.0686326540031992/0.263952142646795
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.15308116113651e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.15308116113651e-05*4.15308116113651e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.15308116113651e-05*4.15308116113651e-05+1.20982789479571e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.15308116113651e-05*4.15308116113651e-05+1.20982789479571e-05*1.20982789479571e-05+${fz}*${fz})
variable           f_module      equal     sqrt(4.15308116113651e-05*4.15308116113651e-05+1.20982789479571e-05*1.20982789479571e-05+-4.40535666278019e-05*${fz})
variable           f_module      equal     sqrt(4.15308116113651e-05*4.15308116113651e-05+1.20982789479571e-05*1.20982789479571e-05+-4.40535666278019e-05*-4.40535666278019e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484836011274046*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484836011274046*0.484836011274046+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484836011274046*0.484836011274046+-0.835059279692558*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484836011274046*0.484836011274046+-0.835059279692558*-0.835059279692558+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484836011274046*0.484836011274046+-0.835059279692558*-0.835059279692558+0.26001930999681*${unitz})
variable           dir_module    equal     sqrt(0.484836011274046*0.484836011274046+-0.835059279692558*-0.835059279692558+0.26001930999681*0.26001930999681)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.15308116113651e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.15308116113651e-05*0.484836011274046+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.15308116113651e-05*0.484836011274046+1.20982789479571e-05*${unity}+${fz}*${unitz}
variable           dot      equal     4.15308116113651e-05*0.484836011274046+1.20982789479571e-05*-0.835059279692558+${fz}*${unitz}
variable           dot      equal     4.15308116113651e-05*0.484836011274046+1.20982789479571e-05*-0.835059279692558+-4.40535666278019e-05*${unitz}
variable           dot      equal     4.15308116113651e-05*0.484836011274046+1.20982789479571e-05*-0.835059279692558+-4.40535666278019e-05*0.26001930999681
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.42192505463215e-06/${f_module}*${dir_module}
variable           cos      equal     -1.42192505463215e-06/6.1740532871295e-05*${dir_module}
variable           cos      equal     -1.42192505463215e-06/6.1740532871295e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0230306573089725)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59382902054298/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.3196761425825-90.0)
print              "The dot product: ${dot}"
The dot product: -1.42192505463215e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.3196761425825

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12797350400811^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12797350400811^2+-0.22041568611194^2+${new_z}^2)
variable           norm          equal     sqrt(0.12797350400811^2+-0.22041568611194^2+0.0686326540031992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12797350400811/${norm}
variable           unit_x        equal     0.12797350400811/0.263952142646795
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.22041568611194/${norm}
variable           unit_y        equal     -0.22041568611194/0.263952142646795
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0686326540031992/${norm}
variable           unit_z        equal     0.0686326540031992/0.263952142646795
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29360981789288+${delta}*${unit_x}
variable           x_new         equal     1.29360981789288+0.03*${unit_x}
variable           x_new         equal     1.29360981789288+0.03*0.484836011274046
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.8042672691504+${delta}*${unit_y}
variable           y_new         equal     3.8042672691504+0.03*${unit_y}
variable           y_new         equal     3.8042672691504+0.03*-0.835059279692558
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3895009769359+${delta}*${unit_z}
variable           z_new         equal     31.3895009769359+0.03*${unit_z}
variable           z_new         equal     31.3895009769359+0.03*0.26001930999681

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.3081548982311  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.3081548982311  y  3.77921549075962  z   ${z_new}
set                atom          288751    x  1.3081548982311  y  3.77921549075962  z   31.3973015562358
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12797350400811  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12797350400811  -0.22041568611194  ${new_z}
fix                hold    carbon   planeforce   0.12797350400811  -0.22041568611194  0.0686326540031992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1688   -1152449.2            0   -1152449.2 -0.056106747 -0.025115784  0.023957463 
    1896   -1152449.2            0   -1152449.2 -9.9319406e-06 -1.3554302e-06 1.4166248e-05 
Loop time of 2.43409 on 104 procs for 208 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.18297732  -1152449.18608746  -1152449.18608746
  Force two-norm initial, final = 0.25044774 6.2371733e-05
  Force max component initial, final = 0.16919964 1.4166248e-05
  Final line search alpha, max atom move = 1.0000000 1.4166248e-05
  Iterations, force evaluations = 208 416

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63861    | 1.7554     | 2.296      |  35.6 | 72.12
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039457   | 0.40321    | 1.1951     |  51.8 | 16.57
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5637e-05 | 0.003425   | 0.0073469  |   2.8 |  0.14
Other   |            | 0.2721     |            |       | 11.18

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114495 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29919549453781-${x_0}
variable           new_x         equal     1.29919549453781-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.77473222729687-${y_0}
variable           new_y         equal     3.77473222729687-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3996092725056-${z_0}
variable           new_z         equal     31.3996092725056-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13355918065304*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13355918065304*0.13355918065304+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13355918065304*0.13355918065304+-0.24995072796547*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13355918065304*0.13355918065304+-0.24995072796547*-0.24995072796547+${new_z}*${new_z})
variable           module        equal     sqrt(0.13355918065304*0.13355918065304+-0.24995072796547*-0.24995072796547+0.0787409495729001*${new_z})
variable           module        equal     sqrt(0.13355918065304*0.13355918065304+-0.24995072796547*-0.24995072796547+0.0787409495729001*0.0787409495729001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13355918065304/${module}
variable           unitx         equal     0.13355918065304/0.294131872273002
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.24995072796547/${module}
variable           unity         equal     -0.24995072796547/0.294131872273002
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0787409495729001/${module}
variable           unitz         equal     0.0787409495729001/0.294131872273002
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.93194062605795e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.93194062605795e-06*-9.93194062605795e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.93194062605795e-06*-9.93194062605795e-06+-1.35543017213626e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.93194062605795e-06*-9.93194062605795e-06+-1.35543017213626e-06*-1.35543017213626e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-9.93194062605795e-06*-9.93194062605795e-06+-1.35543017213626e-06*-1.35543017213626e-06+1.41662476305049e-05*${fz})
variable           f_module      equal     sqrt(-9.93194062605795e-06*-9.93194062605795e-06+-1.35543017213626e-06*-1.35543017213626e-06+1.41662476305049e-05*1.41662476305049e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.454079252346633*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.454079252346633*0.454079252346633+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.454079252346633*0.454079252346633+-0.849791374303956*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.454079252346633*0.454079252346633+-0.849791374303956*-0.849791374303956+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.454079252346633*0.454079252346633+-0.849791374303956*-0.849791374303956+0.267706280738647*${unitz})
variable           dir_module    equal     sqrt(0.454079252346633*0.454079252346633+-0.849791374303956*-0.849791374303956+0.267706280738647*0.267706280738647)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.93194062605795e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.93194062605795e-06*0.454079252346633+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.93194062605795e-06*0.454079252346633+-1.35543017213626e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -9.93194062605795e-06*0.454079252346633+-1.35543017213626e-06*-0.849791374303956+${fz}*${unitz}
variable           dot      equal     -9.93194062605795e-06*0.454079252346633+-1.35543017213626e-06*-0.849791374303956+1.41662476305049e-05*${unitz}
variable           dot      equal     -9.93194062605795e-06*0.454079252346633+-1.35543017213626e-06*-0.849791374303956+1.41662476305049e-05*0.267706280738647
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.34338160106313e-07/${f_module}*${dir_module}
variable           cos      equal     4.34338160106313e-07/1.73540544968564e-05*${dir_module}
variable           cos      equal     4.34338160106313e-07/1.73540544968564e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0250280509482664)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54576566216739/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.5658485584365-90.0)
print              "The dot product: ${dot}"
The dot product: 4.34338160106313e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.5658485584365

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13355918065304^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13355918065304^2+-0.24995072796547^2+${new_z}^2)
variable           norm          equal     sqrt(0.13355918065304^2+-0.24995072796547^2+0.0787409495729001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13355918065304/${norm}
variable           unit_x        equal     0.13355918065304/0.294131872273002
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.24995072796547/${norm}
variable           unit_y        equal     -0.24995072796547/0.294131872273002
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0787409495729001/${norm}
variable           unit_z        equal     0.0787409495729001/0.294131872273002
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29919549453781+${delta}*${unit_x}
variable           x_new         equal     1.29919549453781+0.03*${unit_x}
variable           x_new         equal     1.29919549453781+0.03*0.454079252346633
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.77473222729687+${delta}*${unit_y}
variable           y_new         equal     3.77473222729687+0.03*${unit_y}
variable           y_new         equal     3.77473222729687+0.03*-0.849791374303956
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3996092725056+${delta}*${unit_z}
variable           z_new         equal     31.3996092725056+0.03*${unit_z}
variable           z_new         equal     31.3996092725056+0.03*0.267706280738647

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31281787210821  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31281787210821  y  3.74923848606775  z   ${z_new}
set                atom          288751    x  1.31281787210821  y  3.74923848606775  z   31.4076404609278
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13355918065304  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13355918065304  -0.24995072796547  ${new_z}
fix                hold    carbon   planeforce   0.13355918065304  -0.24995072796547  0.0787409495729001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1896   -1152449.2            0   -1152449.2 -0.058934784 -0.022614104  0.028179362 
    2000   -1152449.2            0   -1152449.2 -0.00013423507 -3.9332639e-05 0.0001028322 
    2110   -1152449.2            0   -1152449.2 -1.099735e-05 -4.3374249e-06 4.8850638e-06 
Loop time of 2.47524 on 104 procs for 214 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.15052787  -1152449.15368579  -1152449.15368579
  Force two-norm initial, final = 0.25204615 5.5811405e-05
  Force max component initial, final = 0.17705655 1.1197556e-05
  Final line search alpha, max atom move = 1.0000000 1.1197556e-05
  Iterations, force evaluations = 214 428

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.65558    | 1.7987     | 2.3351     |  36.0 | 72.67
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040645   | 0.40546    | 1.2196     |  53.7 | 16.38
Output  | 0.00010933 | 0.00011188 | 0.00023428 |   0.0 |  0.00
Modify  | 2.6382e-05 | 0.003522   | 0.0075462  |   2.8 |  0.14
Other   |            | 0.2674     |            |       | 10.80

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114495 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30280836090232-${x_0}
variable           new_x         equal     1.30280836090232-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.74486842901046-${y_0}
variable           new_y         equal     3.74486842901046-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4107463819762-${z_0}
variable           new_z         equal     31.4107463819762-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13717204701755*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13717204701755*0.13717204701755+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13717204701755*0.13717204701755+-0.27981452625188*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13717204701755*0.13717204701755+-0.27981452625188*-0.27981452625188+${new_z}*${new_z})
variable           module        equal     sqrt(0.13717204701755*0.13717204701755+-0.27981452625188*-0.27981452625188+0.0898780590434995*${new_z})
variable           module        equal     sqrt(0.13717204701755*0.13717204701755+-0.27981452625188*-0.27981452625188+0.0898780590434995*0.0898780590434995)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13717204701755/${module}
variable           unitx         equal     0.13717204701755/0.324330703267476
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.27981452625188/${module}
variable           unity         equal     -0.27981452625188/0.324330703267476
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0898780590434995/${module}
variable           unitz         equal     0.0898780590434995/0.324330703267476
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.09973501122298e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.09973501122298e-05*-1.09973501122298e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.09973501122298e-05*-1.09973501122298e-05+-4.3374248886978e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.09973501122298e-05*-1.09973501122298e-05+-4.3374248886978e-06*-4.3374248886978e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.09973501122298e-05*-1.09973501122298e-05+-4.3374248886978e-06*-4.3374248886978e-06+4.88506379417468e-06*${fz})
variable           f_module      equal     sqrt(-1.09973501122298e-05*-1.09973501122298e-05+-4.3374248886978e-06*-4.3374248886978e-06+4.88506379417468e-06*4.88506379417468e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.42293882643736*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.42293882643736*0.42293882643736+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.42293882643736*0.42293882643736+-0.86274448713268*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.42293882643736*0.42293882643736+-0.86274448713268*-0.86274448713268+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.42293882643736*0.42293882643736+-0.86274448713268*-0.86274448713268+0.27711856490311*${unitz})
variable           dir_module    equal     sqrt(0.42293882643736*0.42293882643736+-0.86274448713268*-0.86274448713268+0.27711856490311*0.27711856490311)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.09973501122298e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.09973501122298e-05*0.42293882643736+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.09973501122298e-05*0.42293882643736+-4.3374248886978e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.09973501122298e-05*0.42293882643736+-4.3374248886978e-06*-0.86274448713268+${fz}*${unitz}
variable           dot      equal     -1.09973501122298e-05*0.42293882643736+-4.3374248886978e-06*-0.86274448713268+4.88506379417468e-06*${unitz}
variable           dot      equal     -1.09973501122298e-05*0.42293882643736+-4.3374248886978e-06*-0.86274448713268+4.88506379417468e-06*0.27711856490311
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.44624928790694e-07/${f_module}*${dir_module}
variable           cos      equal     4.44624928790694e-07/1.27913569424519e-05*${dir_module}
variable           cos      equal     4.44624928790694e-07/1.27913569424519e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0347597937256426)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53602952954629/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.0080092504678-90.0)
print              "The dot product: ${dot}"
The dot product: 4.44624928790694e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.0080092504678

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13717204701755^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13717204701755^2+-0.27981452625188^2+${new_z}^2)
variable           norm          equal     sqrt(0.13717204701755^2+-0.27981452625188^2+0.0898780590434995^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13717204701755/${norm}
variable           unit_x        equal     0.13717204701755/0.324330703267476
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.27981452625188/${norm}
variable           unit_y        equal     -0.27981452625188/0.324330703267476
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0898780590434995/${norm}
variable           unit_z        equal     0.0898780590434995/0.324330703267476
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30280836090232+${delta}*${unit_x}
variable           x_new         equal     1.30280836090232+0.03*${unit_x}
variable           x_new         equal     1.30280836090232+0.03*0.42293882643736
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.74486842901046+${delta}*${unit_y}
variable           y_new         equal     3.74486842901046+0.03*${unit_y}
variable           y_new         equal     3.74486842901046+0.03*-0.86274448713268
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4107463819762+${delta}*${unit_z}
variable           z_new         equal     31.4107463819762+0.03*${unit_z}
variable           z_new         equal     31.4107463819762+0.03*0.27711856490311

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31549652569544  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31549652569544  y  3.71898609439648  z   ${z_new}
set                atom          288751    x  1.31549652569544  y  3.71898609439648  z   31.4190599389233
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13717204701755  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13717204701755  -0.27981452625188  ${new_z}
fix                hold    carbon   planeforce   0.13717204701755  -0.27981452625188  0.0898780590434995
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2110   -1152449.1            0   -1152449.1  -0.06103059 -0.020726606  0.028617502 
    2288   -1152449.1            0   -1152449.1 -3.2074323e-05 -7.553124e-06 2.5436983e-05 
Loop time of 2.06027 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.11501655  -1152449.11825935  -1152449.11825935
  Force two-norm initial, final = 0.25426825 0.00019296967
  Force max component initial, final = 0.18471325 3.4117612e-05
  Final line search alpha, max atom move = 1.0000000 3.4117612e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54542    | 1.498      | 1.9464     |  32.9 | 72.71
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032338   | 0.33694    | 1.0104     |  48.6 | 16.35
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2201e-05 | 0.0029292  | 0.0062605  |   2.6 |  0.14
Other   |            | 0.2224     |            |       | 10.80

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114496 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30351950362354-${x_0}
variable           new_x         equal     1.30351950362354-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.71405483125527-${y_0}
variable           new_y         equal     3.71405483125527-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4219869444442-${z_0}
variable           new_z         equal     31.4219869444442-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13788318973877*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13788318973877*0.13788318973877+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13788318973877*0.13788318973877+-0.31062812400707*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13788318973877*0.13788318973877+-0.31062812400707*-0.31062812400707+${new_z}*${new_z})
variable           module        equal     sqrt(0.13788318973877*0.13788318973877+-0.31062812400707*-0.31062812400707+0.1011186215115*${new_z})
variable           module        equal     sqrt(0.13788318973877*0.13788318973877+-0.31062812400707*-0.31062812400707+0.1011186215115*0.1011186215115)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13788318973877/${module}
variable           unitx         equal     0.13788318973877/0.354579442513346
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.31062812400707/${module}
variable           unity         equal     -0.31062812400707/0.354579442513346
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1011186215115/${module}
variable           unitz         equal     0.1011186215115/0.354579442513346
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.20743226012048e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.20743226012048e-05*-3.20743226012048e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.20743226012048e-05*-3.20743226012048e-05+-7.55312399386334e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.20743226012048e-05*-3.20743226012048e-05+-7.55312399386334e-06*-7.55312399386334e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.20743226012048e-05*-3.20743226012048e-05+-7.55312399386334e-06*-7.55312399386334e-06+2.54369831759761e-05*${fz})
variable           f_module      equal     sqrt(-3.20743226012048e-05*-3.20743226012048e-05+-7.55312399386334e-06*-7.55312399386334e-06+2.54369831759761e-05*2.54369831759761e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.388864026525114*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.388864026525114*0.388864026525114+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.388864026525114*0.388864026525114+-0.876046625278842*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.388864026525114*0.388864026525114+-0.876046625278842*-0.876046625278842+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.388864026525114*0.388864026525114+-0.876046625278842*-0.876046625278842+0.28517903010605*${unitz})
variable           dir_module    equal     sqrt(0.388864026525114*0.388864026525114+-0.876046625278842*-0.876046625278842+0.28517903010605*0.28517903010605)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.20743226012048e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.20743226012048e-05*0.388864026525114+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.20743226012048e-05*0.388864026525114+-7.55312399386334e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.20743226012048e-05*0.388864026525114+-7.55312399386334e-06*-0.876046625278842+${fz}*${unitz}
variable           dot      equal     -3.20743226012048e-05*0.388864026525114+-7.55312399386334e-06*-0.876046625278842+2.54369831759761e-05*${unitz}
variable           dot      equal     -3.20743226012048e-05*0.388864026525114+-7.55312399386334e-06*-0.876046625278842+2.54369831759761e-05*0.28517903010605
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.39843274131544e-06/${f_module}*${dir_module}
variable           cos      equal     1.39843274131544e-06/4.16275385470691e-05*${dir_module}
variable           cos      equal     1.39843274131544e-06/4.16275385470691e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0335939330098561)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53719607182199/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.074847199489-90.0)
print              "The dot product: ${dot}"
The dot product: 1.39843274131544e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.074847199489

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13788318973877^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13788318973877^2+-0.31062812400707^2+${new_z}^2)
variable           norm          equal     sqrt(0.13788318973877^2+-0.31062812400707^2+0.1011186215115^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13788318973877/${norm}
variable           unit_x        equal     0.13788318973877/0.354579442513346
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.31062812400707/${norm}
variable           unit_y        equal     -0.31062812400707/0.354579442513346
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1011186215115/${norm}
variable           unit_z        equal     0.1011186215115/0.354579442513346
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30351950362354+${delta}*${unit_x}
variable           x_new         equal     1.30351950362354+0.03*${unit_x}
variable           x_new         equal     1.30351950362354+0.03*0.388864026525114
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.71405483125527+${delta}*${unit_y}
variable           y_new         equal     3.71405483125527+0.03*${unit_y}
variable           y_new         equal     3.71405483125527+0.03*-0.876046625278842
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4219869444442+${delta}*${unit_z}
variable           z_new         equal     31.4219869444442+0.03*${unit_z}
variable           z_new         equal     31.4219869444442+0.03*0.28517903010605

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31518542441929  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31518542441929  y  3.6877734324969  z   ${z_new}
set                atom          288751    x  1.31518542441929  y  3.6877734324969  z   31.4305423153474
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13788318973877  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13788318973877  -0.31062812400707  ${new_z}
fix                hold    carbon   planeforce   0.13788318973877  -0.31062812400707  0.1011186215115
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2288   -1152449.1            0   -1152449.1 -0.067996671 -0.021806857  0.025729928 
    2479   -1152449.1            0   -1152449.1 2.0410527e-05 1.8430041e-06 -2.2169801e-05 
Loop time of 2.21632 on 104 procs for 191 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.07642902  -1152449.07994257  -1152449.07994257
  Force two-norm initial, final = 0.25859267 0.00011918192
  Force max component initial, final = 0.19299425 2.2169801e-05
  Final line search alpha, max atom move = 1.0000000 2.2169801e-05
  Iterations, force evaluations = 191 382

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58523    | 1.6079     | 2.0882     |  34.1 | 72.55
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034032   | 0.36207    | 1.0895     |  50.7 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3481e-05 | 0.003144   | 0.0067581  |   2.7 |  0.14
Other   |            | 0.2432     |            |       | 10.97

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114490 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29805097030653-${x_0}
variable           new_x         equal     1.29805097030653-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.68060590812511-${y_0}
variable           new_y         equal     3.68060590812511-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4318884426597-${z_0}
variable           new_z         equal     31.4318884426597-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13241465642176*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13241465642176*0.13241465642176+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13241465642176*0.13241465642176+-0.34407704713723*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13241465642176*0.13241465642176+-0.34407704713723*-0.34407704713723+${new_z}*${new_z})
variable           module        equal     sqrt(0.13241465642176*0.13241465642176+-0.34407704713723*-0.34407704713723+0.111020119727002*${new_z})
variable           module        equal     sqrt(0.13241465642176*0.13241465642176+-0.34407704713723*-0.34407704713723+0.111020119727002*0.111020119727002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13241465642176/${module}
variable           unitx         equal     0.13241465642176/0.385030028161657
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.34407704713723/${module}
variable           unity         equal     -0.34407704713723/0.385030028161657
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.111020119727002/${module}
variable           unitz         equal     0.111020119727002/0.385030028161657
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.04105271283521e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.04105271283521e-05*2.04105271283521e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.04105271283521e-05*2.04105271283521e-05+1.84300407765657e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.04105271283521e-05*2.04105271283521e-05+1.84300407765657e-06*1.84300407765657e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.04105271283521e-05*2.04105271283521e-05+1.84300407765657e-06*1.84300407765657e-06+-2.21698006947639e-05*${fz})
variable           f_module      equal     sqrt(2.04105271283521e-05*2.04105271283521e-05+1.84300407765657e-06*1.84300407765657e-06+-2.21698006947639e-05*-2.21698006947639e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.343907349392928*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.343907349392928*0.343907349392928+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.343907349392928*0.343907349392928+-0.89363691652841*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.343907349392928*0.343907349392928+-0.89363691652841*-0.89363691652841+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.343907349392928*0.343907349392928+-0.89363691652841*-0.89363691652841+0.288341458085938*${unitz})
variable           dir_module    equal     sqrt(0.343907349392928*0.343907349392928+-0.89363691652841*-0.89363691652841+0.288341458085938*0.288341458085938)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.04105271283521e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.04105271283521e-05*0.343907349392928+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.04105271283521e-05*0.343907349392928+1.84300407765657e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.04105271283521e-05*0.343907349392928+1.84300407765657e-06*-0.89363691652841+${fz}*${unitz}
variable           dot      equal     2.04105271283521e-05*0.343907349392928+1.84300407765657e-06*-0.89363691652841+-2.21698006947639e-05*${unitz}
variable           dot      equal     2.04105271283521e-05*0.343907349392928+1.84300407765657e-06*-0.89363691652841+-2.21698006947639e-05*0.288341458085938
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.02011885448515e-06/${f_module}*${dir_module}
variable           cos      equal     -1.02011885448515e-06/3.01908321272039e-05*${dir_module}
variable           cos      equal     -1.02011885448515e-06/3.01908321272039e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.033789027416901)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60459178699689/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.9363372362766-90.0)
print              "The dot product: ${dot}"
The dot product: -1.02011885448515e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.9363372362766

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13241465642176^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13241465642176^2+-0.34407704713723^2+${new_z}^2)
variable           norm          equal     sqrt(0.13241465642176^2+-0.34407704713723^2+0.111020119727002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13241465642176/${norm}
variable           unit_x        equal     0.13241465642176/0.385030028161657
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.34407704713723/${norm}
variable           unit_y        equal     -0.34407704713723/0.385030028161657
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.111020119727002/${norm}
variable           unit_z        equal     0.111020119727002/0.385030028161657
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29805097030653+${delta}*${unit_x}
variable           x_new         equal     1.29805097030653+0.03*${unit_x}
variable           x_new         equal     1.29805097030653+0.03*0.343907349392928
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.68060590812511+${delta}*${unit_y}
variable           y_new         equal     3.68060590812511+0.03*${unit_y}
variable           y_new         equal     3.68060590812511+0.03*-0.89363691652841
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4318884426597+${delta}*${unit_z}
variable           z_new         equal     31.4318884426597+0.03*${unit_z}
variable           z_new         equal     31.4318884426597+0.03*0.288341458085938

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30836819078832  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30836819078832  y  3.65379680062926  z   ${z_new}
set                atom          288751    x  1.30836819078832  y  3.65379680062926  z   31.4405386864023
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13241465642176  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13241465642176  -0.34407704713723  ${new_z}
fix                hold    carbon   planeforce   0.13241465642176  -0.34407704713723  0.111020119727002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2479     -1152449            0     -1152449  -0.08439462 -0.026701295  0.017904698 
    2658     -1152449            0     -1152449 2.0967779e-05 1.6889396e-06 -1.9774037e-05 
Loop time of 2.132 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.03507345  -1152449.03898155  -1152449.03898155
  Force two-norm initial, final = 0.26701696 0.00017438011
  Force max component initial, final = 0.20371996 2.8374391e-05
  Final line search alpha, max atom move = 1.0000000 2.8374391e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54525    | 1.513      | 1.9968     |  33.2 | 70.97
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032994   | 0.34804    | 1.0338     |  48.4 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1784e-05 | 0.0029535  | 0.0063862  |   2.6 |  0.14
Other   |            | 0.268      |            |       | 12.57

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114490 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28717772239431-${x_0}
variable           new_x         equal     1.28717772239431-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.64534260664032-${y_0}
variable           new_y         equal     3.64534260664032-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4396112372863-${z_0}
variable           new_z         equal     31.4396112372863-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12154140850954*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12154140850954*0.12154140850954+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12154140850954*0.12154140850954+-0.37934034862202*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12154140850954*0.12154140850954+-0.37934034862202*-0.37934034862202+${new_z}*${new_z})
variable           module        equal     sqrt(0.12154140850954*0.12154140850954+-0.37934034862202*-0.37934034862202+0.1187429143536*${new_z})
variable           module        equal     sqrt(0.12154140850954*0.12154140850954+-0.37934034862202*-0.37934034862202+0.1187429143536*0.1187429143536)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12154140850954/${module}
variable           unitx         equal     0.12154140850954/0.415657664171304
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.37934034862202/${module}
variable           unity         equal     -0.37934034862202/0.415657664171304
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1187429143536/${module}
variable           unitz         equal     0.1187429143536/0.415657664171304
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.09677793714656e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.09677793714656e-05*2.09677793714656e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.09677793714656e-05*2.09677793714656e-05+1.6889395523485e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.09677793714656e-05*2.09677793714656e-05+1.6889395523485e-06*1.6889395523485e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.09677793714656e-05*2.09677793714656e-05+1.6889395523485e-06*1.6889395523485e-06+-1.97740371105172e-05*${fz})
variable           f_module      equal     sqrt(2.09677793714656e-05*2.09677793714656e-05+1.6889395523485e-06*1.6889395523485e-06+-1.97740371105172e-05*-1.97740371105172e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292407476118254*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292407476118254*0.292407476118254+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292407476118254*0.292407476118254+-0.912626859361081*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292407476118254*0.292407476118254+-0.912626859361081*-0.912626859361081+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292407476118254*0.292407476118254+-0.912626859361081*-0.912626859361081+0.285674786221824*${unitz})
variable           dir_module    equal     sqrt(0.292407476118254*0.292407476118254+-0.912626859361081*-0.912626859361081+0.285674786221824*0.285674786221824)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.09677793714656e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.09677793714656e-05*0.292407476118254+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.09677793714656e-05*0.292407476118254+1.6889395523485e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.09677793714656e-05*0.292407476118254+1.6889395523485e-06*-0.912626859361081+${fz}*${unitz}
variable           dot      equal     2.09677793714656e-05*0.292407476118254+1.6889395523485e-06*-0.912626859361081+-1.97740371105172e-05*${unitz}
variable           dot      equal     2.09677793714656e-05*0.292407476118254+1.6889395523485e-06*-0.912626859361081+-1.97740371105172e-05*0.285674786221824
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.05917997778529e-06/${f_module}*${dir_module}
variable           cos      equal     -1.05917997778529e-06/2.88706223041703e-05*${dir_module}
variable           cos      equal     -1.05917997778529e-06/2.88706223041703e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0366871197519111)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60749168134147/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.1024889432548-90.0)
print              "The dot product: ${dot}"
The dot product: -1.05917997778529e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.1024889432548

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12154140850954^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12154140850954^2+-0.37934034862202^2+${new_z}^2)
variable           norm          equal     sqrt(0.12154140850954^2+-0.37934034862202^2+0.1187429143536^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12154140850954/${norm}
variable           unit_x        equal     0.12154140850954/0.415657664171304
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.37934034862202/${norm}
variable           unit_y        equal     -0.37934034862202/0.415657664171304
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1187429143536/${norm}
variable           unit_z        equal     0.1187429143536/0.415657664171304
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28717772239431+${delta}*${unit_x}
variable           x_new         equal     1.28717772239431+0.03*${unit_x}
variable           x_new         equal     1.28717772239431+0.03*0.292407476118254
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.64534260664032+${delta}*${unit_y}
variable           y_new         equal     3.64534260664032+0.03*${unit_y}
variable           y_new         equal     3.64534260664032+0.03*-0.912626859361081
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4396112372863+${delta}*${unit_z}
variable           z_new         equal     31.4396112372863+0.03*${unit_z}
variable           z_new         equal     31.4396112372863+0.03*0.285674786221824

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29594994667786  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29594994667786  y  3.61796380085949  z   ${z_new}
set                atom          288751    x  1.29594994667786  y  3.61796380085949  z   31.448181480873
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12154140850954  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12154140850954  -0.37934034862202  ${new_z}
fix                hold    carbon   planeforce   0.12154140850954  -0.37934034862202  0.1187429143536
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2658     -1152449            0     -1152449 -0.094425098 -0.027634422 0.0083685685 
    2844     -1152449            0     -1152449 -2.728458e-05 -9.5325956e-07 2.4882297e-05 
Loop time of 2.14662 on 104 procs for 186 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.99108447  -1152448.99524508  -1152448.99524508
  Force two-norm initial, final = 0.27500237 0.00011939929
  Force max component initial, final = 0.21566099 3.0011719e-05
  Final line search alpha, max atom move = 1.0000000 3.0011719e-05
  Iterations, force evaluations = 186 372

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56803    | 1.5609     | 2.0264     |  33.6 | 72.72
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032579   | 0.34914    | 1.0534     |  49.8 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2761e-05 | 0.0030593  | 0.006569   |   2.6 |  0.14
Other   |            | 0.2335     |            |       | 10.88

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114490 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27314740241894-${x_0}
variable           new_x         equal     1.27314740241894-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.60961752893583-${y_0}
variable           new_y         equal     3.60961752893583-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4448581301152-${z_0}
variable           new_z         equal     31.4448581301152-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10751108853417*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10751108853417*0.10751108853417+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10751108853417*0.10751108853417+-0.41506542632651*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10751108853417*0.10751108853417+-0.41506542632651*-0.41506542632651+${new_z}*${new_z})
variable           module        equal     sqrt(0.10751108853417*0.10751108853417+-0.41506542632651*-0.41506542632651+0.1239898071825*${new_z})
variable           module        equal     sqrt(0.10751108853417*0.10751108853417+-0.41506542632651*-0.41506542632651+0.1239898071825*0.1239898071825)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10751108853417/${module}
variable           unitx         equal     0.10751108853417/0.446331059388167
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.41506542632651/${module}
variable           unity         equal     -0.41506542632651/0.446331059388167
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1239898071825/${module}
variable           unitz         equal     0.1239898071825/0.446331059388167
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72845798487288e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72845798487288e-05*-2.72845798487288e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72845798487288e-05*-2.72845798487288e-05+-9.53259561064441e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72845798487288e-05*-2.72845798487288e-05+-9.53259561064441e-07*-9.53259561064441e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72845798487288e-05*-2.72845798487288e-05+-9.53259561064441e-07*-9.53259561064441e-07+2.48822969118473e-05*${fz})
variable           f_module      equal     sqrt(-2.72845798487288e-05*-2.72845798487288e-05+-9.53259561064441e-07*-9.53259561064441e-07+2.48822969118473e-05*2.48822969118473e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.240877452448742*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.240877452448742*0.240877452448742+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.240877452448742*0.240877452448742+-0.92994968106294*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.240877452448742*0.240877452448742+-0.92994968106294*-0.92994968106294+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.240877452448742*0.240877452448742+-0.92994968106294*-0.92994968106294+0.277797846630853*${unitz})
variable           dir_module    equal     sqrt(0.240877452448742*0.240877452448742+-0.92994968106294*-0.92994968106294+0.277797846630853*0.277797846630853)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72845798487288e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72845798487288e-05*0.240877452448742+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72845798487288e-05*0.240877452448742+-9.53259561064441e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72845798487288e-05*0.240877452448742+-9.53259561064441e-07*-0.92994968106294+${fz}*${unitz}
variable           dot      equal     -2.72845798487288e-05*0.240877452448742+-9.53259561064441e-07*-0.92994968106294+2.48822969118473e-05*${unitz}
variable           dot      equal     -2.72845798487288e-05*0.240877452448742+-9.53259561064441e-07*-0.92994968106294+2.48822969118473e-05*0.277797846630853
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.2264918410267e-06/${f_module}*${dir_module}
variable           cos      equal     1.2264918410267e-06/3.69389455848667e-05*${dir_module}
variable           cos      equal     1.2264918410267e-06/3.69389455848667e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0332032174066488)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53758700552493/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.0972460507369-90.0)
print              "The dot product: ${dot}"
The dot product: 1.2264918410267e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.0972460507369

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10751108853417^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10751108853417^2+-0.41506542632651^2+${new_z}^2)
variable           norm          equal     sqrt(0.10751108853417^2+-0.41506542632651^2+0.1239898071825^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10751108853417/${norm}
variable           unit_x        equal     0.10751108853417/0.446331059388167
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.41506542632651/${norm}
variable           unit_y        equal     -0.41506542632651/0.446331059388167
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1239898071825/${norm}
variable           unit_z        equal     0.1239898071825/0.446331059388167
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27314740241894+${delta}*${unit_x}
variable           x_new         equal     1.27314740241894+0.03*${unit_x}
variable           x_new         equal     1.27314740241894+0.03*0.240877452448742
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.60961752893583+${delta}*${unit_y}
variable           y_new         equal     3.60961752893583+0.03*${unit_y}
variable           y_new         equal     3.60961752893583+0.03*-0.92994968106294
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4448581301152+${delta}*${unit_z}
variable           z_new         equal     31.4448581301152+0.03*${unit_z}
variable           z_new         equal     31.4448581301152+0.03*0.277797846630853

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2803737259924  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2803737259924  y  3.58171903850394  z   ${z_new}
set                atom          288751    x  1.2803737259924  y  3.58171903850394  z   31.4531920655141
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10751108853417  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10751108853417  -0.41506542632651  ${new_z}
fix                hold    carbon   planeforce   0.10751108853417  -0.41506542632651  0.1239898071825
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2844   -1152448.9            0   -1152448.9 -0.095674703  -0.02588062 -0.0036781986 
    2980   -1152448.9            0   -1152448.9 -3.8336535e-05 -1.9624069e-06 2.6672155e-05 
Loop time of 1.63117 on 104 procs for 136 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.94423327  -1152448.94849407  -1152448.94849407
  Force two-norm initial, final = 0.28150729 0.00018407476
  Force max component initial, final = 0.22765271 3.8336535e-05
  Final line search alpha, max atom move = 1.0000000 3.8336535e-05
  Iterations, force evaluations = 136 272

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41574    | 1.1522     | 1.5065     |  29.0 | 70.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.023428   | 0.26476    | 0.77962    |  42.0 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6854e-05 | 0.0022445  | 0.0047776  |   2.2 |  0.14
Other   |            | 0.212      |            |       | 13.00

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238193
Ave neighs/atom = 28.530440
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25797782346354-${x_0}
variable           new_x         equal     1.25797782346354-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.57398465564291-${y_0}
variable           new_y         equal     3.57398465564291-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4467200249627-${z_0}
variable           new_z         equal     31.4467200249627-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0923415095787699*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0923415095787699*0.0923415095787699+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0923415095787699*0.0923415095787699+-0.45069829961943*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0923415095787699*0.0923415095787699+-0.45069829961943*-0.45069829961943+${new_z}*${new_z})
variable           module        equal     sqrt(0.0923415095787699*0.0923415095787699+-0.45069829961943*-0.45069829961943+0.125851702030001*${new_z})
variable           module        equal     sqrt(0.0923415095787699*0.0923415095787699+-0.45069829961943*-0.45069829961943+0.125851702030001*0.125851702030001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0923415095787699/${module}
variable           unitx         equal     0.0923415095787699/0.476963900704214
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.45069829961943/${module}
variable           unity         equal     -0.45069829961943/0.476963900704214
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.125851702030001/${module}
variable           unitz         equal     0.125851702030001/0.476963900704214
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.83365352949417e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.83365352949417e-05*-3.83365352949417e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.83365352949417e-05*-3.83365352949417e-05+-1.96240686910618e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.83365352949417e-05*-3.83365352949417e-05+-1.96240686910618e-06*-1.96240686910618e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.83365352949417e-05*-3.83365352949417e-05+-1.96240686910618e-06*-1.96240686910618e-06+2.66721553284914e-05*${fz})
variable           f_module      equal     sqrt(-3.83365352949417e-05*-3.83365352949417e-05+-1.96240686910618e-06*-1.96240686910618e-06+2.66721553284914e-05*2.66721553284914e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.193602722223699*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.193602722223699*0.193602722223699+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.193602722223699*0.193602722223699+-0.94493167921932*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.193602722223699*0.193602722223699+-0.94493167921932*-0.94493167921932+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.193602722223699*0.193602722223699+-0.94493167921932*-0.94493167921932+0.263860015074908*${unitz})
variable           dir_module    equal     sqrt(0.193602722223699*0.193602722223699+-0.94493167921932*-0.94493167921932+0.263860015074908*0.263860015074908)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.83365352949417e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.83365352949417e-05*0.193602722223699+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.83365352949417e-05*0.193602722223699+-1.96240686910618e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.83365352949417e-05*0.193602722223699+-1.96240686910618e-06*-0.94493167921932+${fz}*${unitz}
variable           dot      equal     -3.83365352949417e-05*0.193602722223699+-1.96240686910618e-06*-0.94493167921932+2.66721553284914e-05*${unitz}
variable           dot      equal     -3.83365352949417e-05*0.193602722223699+-1.96240686910618e-06*-0.94493167921932+2.66721553284914e-05*0.263860015074908
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.46999813146643e-06/${f_module}*${dir_module}
variable           cos      equal     1.46999813146643e-06/4.67433936402504e-05*${dir_module}
variable           cos      equal     1.46999813146643e-06/4.67433936402504e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0314482543304392)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53934288647379/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.197850618434-90.0)
print              "The dot product: ${dot}"
The dot product: 1.46999813146643e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.197850618434

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0923415095787699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0923415095787699^2+-0.45069829961943^2+${new_z}^2)
variable           norm          equal     sqrt(0.0923415095787699^2+-0.45069829961943^2+0.125851702030001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0923415095787699/${norm}
variable           unit_x        equal     0.0923415095787699/0.476963900704214
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.45069829961943/${norm}
variable           unit_y        equal     -0.45069829961943/0.476963900704214
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.125851702030001/${norm}
variable           unit_z        equal     0.125851702030001/0.476963900704214
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25797782346354+${delta}*${unit_x}
variable           x_new         equal     1.25797782346354+0.03*${unit_x}
variable           x_new         equal     1.25797782346354+0.03*0.193602722223699
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.57398465564291+${delta}*${unit_y}
variable           y_new         equal     3.57398465564291+0.03*${unit_y}
variable           y_new         equal     3.57398465564291+0.03*-0.94493167921932
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4467200249627+${delta}*${unit_z}
variable           z_new         equal     31.4467200249627+0.03*${unit_z}
variable           z_new         equal     31.4467200249627+0.03*0.263860015074908

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26378590513025  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26378590513025  y  3.54563670526633  z   ${z_new}
set                atom          288751    x  1.26378590513025  y  3.54563670526633  z   31.4546358254149
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0923415095787699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0923415095787699  -0.45069829961943  ${new_z}
fix                hold    carbon   planeforce   0.0923415095787699  -0.45069829961943  0.125851702030001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2980   -1152448.9            0   -1152448.9 -0.090371256 -0.024157025 -0.020202444 
    3000   -1152448.9            0   -1152448.9 -0.0019856011 2.2802328e-05 0.0015385599 
    3120   -1152448.9            0   -1152448.9 -1.4496732e-05 -9.3626517e-08 1.0301433e-05 
Loop time of 1.61869 on 104 procs for 140 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.89427181  -1152448.89873571  -1152448.89873571
  Force two-norm initial, final = 0.28808563 0.00011081327
  Force max component initial, final = 0.23942388 3.0235290e-05
  Final line search alpha, max atom move = 1.0000000 3.0235290e-05
  Iterations, force evaluations = 140 280

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.42514    | 1.1757     | 1.5276     |  29.2 | 72.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.024749   | 0.26436    | 0.79889    |  43.2 | 16.33
Output  | 9.2792e-05 | 0.00010539 | 0.00019098 |   0.0 |  0.01
Modify  | 1.7722e-05 | 0.002311   | 0.0049347  |   2.3 |  0.14
Other   |            | 0.1762     |            |       | 10.89

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114488 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238193
Ave neighs/atom = 28.530440
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24248921731988-${x_0}
variable           new_x         equal     1.24248921731988-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.53762326793712-${y_0}
variable           new_y         equal     3.53762326793712-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4415642955873-${z_0}
variable           new_z         equal     31.4415642955873-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07685290343511*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07685290343511*0.07685290343511+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07685290343511*0.07685290343511+-0.48705968732522*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07685290343511*0.07685290343511+-0.48705968732522*-0.48705968732522+${new_z}*${new_z})
variable           module        equal     sqrt(0.07685290343511*0.07685290343511+-0.48705968732522*-0.48705968732522+0.120695972654598*${new_z})
variable           module        equal     sqrt(0.07685290343511*0.07685290343511+-0.48705968732522*-0.48705968732522+0.120695972654598*0.120695972654598)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.07685290343511/${module}
variable           unitx         equal     0.07685290343511/0.50764261601917
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.48705968732522/${module}
variable           unity         equal     -0.48705968732522/0.50764261601917
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.120695972654598/${module}
variable           unitz         equal     0.120695972654598/0.50764261601917
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44967321273328e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44967321273328e-05*-1.44967321273328e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44967321273328e-05*-1.44967321273328e-05+-9.36265168526339e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44967321273328e-05*-1.44967321273328e-05+-9.36265168526339e-08*-9.36265168526339e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44967321273328e-05*-1.44967321273328e-05+-9.36265168526339e-08*-9.36265168526339e-08+1.03014325253739e-05*${fz})
variable           f_module      equal     sqrt(-1.44967321273328e-05*-1.44967321273328e-05+-9.36265168526339e-08*-9.36265168526339e-08+1.03014325253739e-05*1.03014325253739e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.151391748860202*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.151391748860202*0.151391748860202+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.151391748860202*0.151391748860202+-0.959453899171513*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.151391748860202*0.151391748860202+-0.959453899171513*-0.959453899171513+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.151391748860202*0.151391748860202+-0.959453899171513*-0.959453899171513+0.237757762736847*${unitz})
variable           dir_module    equal     sqrt(0.151391748860202*0.151391748860202+-0.959453899171513*-0.959453899171513+0.237757762736847*0.237757762736847)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44967321273328e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44967321273328e-05*0.151391748860202+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44967321273328e-05*0.151391748860202+-9.36265168526339e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44967321273328e-05*0.151391748860202+-9.36265168526339e-08*-0.959453899171513+${fz}*${unitz}
variable           dot      equal     -1.44967321273328e-05*0.151391748860202+-9.36265168526339e-08*-0.959453899171513+1.03014325253739e-05*${unitz}
variable           dot      equal     -1.44967321273328e-05*0.151391748860202+-9.36265168526339e-08*-0.959453899171513+1.03014325253739e-05*0.237757762736847
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.44390247362804e-07/${f_module}*${dir_module}
variable           cos      equal     3.44390247362804e-07/1.77843616801709e-05*${dir_module}
variable           cos      equal     3.44390247362804e-07/1.77843616801709e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0193647797742884)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55143033653471/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.8904104919999-90.0)
print              "The dot product: ${dot}"
The dot product: 3.44390247362804e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.8904104919999

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.07685290343511^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.07685290343511^2+-0.48705968732522^2+${new_z}^2)
variable           norm          equal     sqrt(0.07685290343511^2+-0.48705968732522^2+0.120695972654598^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.07685290343511/${norm}
variable           unit_x        equal     0.07685290343511/0.50764261601917
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.48705968732522/${norm}
variable           unit_y        equal     -0.48705968732522/0.50764261601917
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.120695972654598/${norm}
variable           unit_z        equal     0.120695972654598/0.50764261601917
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24248921731988+${delta}*${unit_x}
variable           x_new         equal     1.24248921731988+0.03*${unit_x}
variable           x_new         equal     1.24248921731988+0.03*0.151391748860202
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.53762326793712+${delta}*${unit_y}
variable           y_new         equal     3.53762326793712+0.03*${unit_y}
variable           y_new         equal     3.53762326793712+0.03*-0.959453899171513
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4415642955873+${delta}*${unit_z}
variable           z_new         equal     31.4415642955873+0.03*${unit_z}
variable           z_new         equal     31.4415642955873+0.03*0.237757762736847

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24703096978569  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24703096978569  y  3.50883965096197  z   ${z_new}
set                atom          288751    x  1.24703096978569  y  3.50883965096197  z   31.4486970284694
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.07685290343511  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.07685290343511  -0.48705968732522  ${new_z}
fix                hold    carbon   planeforce   0.07685290343511  -0.48705968732522  0.120695972654598
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3120   -1152448.8            0   -1152448.8 -0.083141238  -0.02414168 -0.044481959 
    3274   -1152448.8            0   -1152448.8 3.1054329e-06 6.5895929e-06 2.4614438e-05 
Loop time of 1.79097 on 104 procs for 154 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.84132523  -1152448.84604829  -1152448.84604829
  Force two-norm initial, final = 0.29824101 0.00018808351
  Force max component initial, final = 0.25287009 2.9803178e-05
  Final line search alpha, max atom move = 1.0000000 2.9803178e-05
  Iterations, force evaluations = 154 308

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46809    | 1.2979     | 1.6818     |  30.7 | 72.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.028818   | 0.29403    | 0.88054    |  45.2 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8998e-05 | 0.0025425  | 0.0054818  |   2.4 |  0.14
Other   |            | 0.1965     |            |       | 10.97

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22785489584787-${x_0}
variable           new_x         equal     1.22785489584787-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.50155909522016-${y_0}
variable           new_y         equal     3.50155909522016-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4315272074806-${z_0}
variable           new_z         equal     31.4315272074806-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0622185819631*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0622185819631*0.0622185819631+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0622185819631*0.0622185819631+-0.52312386004218*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0622185819631*0.0622185819631+-0.52312386004218*-0.52312386004218+${new_z}*${new_z})
variable           module        equal     sqrt(0.0622185819631*0.0622185819631+-0.52312386004218*-0.52312386004218+0.110658884547899*${new_z})
variable           module        equal     sqrt(0.0622185819631*0.0622185819631+-0.52312386004218*-0.52312386004218+0.110658884547899*0.110658884547899)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0622185819631/${module}
variable           unitx         equal     0.0622185819631/0.538307638452507
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.52312386004218/${module}
variable           unity         equal     -0.52312386004218/0.538307638452507
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.110658884547899/${module}
variable           unitz         equal     0.110658884547899/0.538307638452507
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.10543294410396e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.10543294410396e-06*3.10543294410396e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.10543294410396e-06*3.10543294410396e-06+6.5895929346447e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.10543294410396e-06*3.10543294410396e-06+6.5895929346447e-06*6.5895929346447e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.10543294410396e-06*3.10543294410396e-06+6.5895929346447e-06*6.5895929346447e-06+2.46144380040651e-05*${fz})
variable           f_module      equal     sqrt(3.10543294410396e-06*3.10543294410396e-06+6.5895929346447e-06*6.5895929346447e-06+2.46144380040651e-05*2.46144380040651e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.115581830014454*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.115581830014454*0.115581830014454+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.115581830014454*0.115581830014454+-0.971793492557571*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.115581830014454*0.115581830014454+-0.971793492557571*-0.971793492557571+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.115581830014454*0.115581830014454+-0.971793492557571*-0.971793492557571+0.205568111323878*${unitz})
variable           dir_module    equal     sqrt(0.115581830014454*0.115581830014454+-0.971793492557571*-0.971793492557571+0.205568111323878*0.205568111323878)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.10543294410396e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.10543294410396e-06*0.115581830014454+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.10543294410396e-06*0.115581830014454+6.5895929346447e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.10543294410396e-06*0.115581830014454+6.5895929346447e-06*-0.971793492557571+${fz}*${unitz}
variable           dot      equal     3.10543294410396e-06*0.115581830014454+6.5895929346447e-06*-0.971793492557571+2.46144380040651e-05*${unitz}
variable           dot      equal     3.10543294410396e-06*0.115581830014454+6.5895929346447e-06*-0.971793492557571+2.46144380040651e-05*0.205568111323878
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -9.84848378030009e-07/${f_module}*${dir_module}
variable           cos      equal     -9.84848378030009e-07/2.56697683485966e-05*${dir_module}
variable           cos      equal     -9.84848378030009e-07/2.56697683485966e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.038366079687815)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60917182491995/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.1987540792778-90.0)
print              "The dot product: ${dot}"
The dot product: -9.84848378030009e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.1987540792778

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0622185819631^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0622185819631^2+-0.52312386004218^2+${new_z}^2)
variable           norm          equal     sqrt(0.0622185819631^2+-0.52312386004218^2+0.110658884547899^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0622185819631/${norm}
variable           unit_x        equal     0.0622185819631/0.538307638452507
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.52312386004218/${norm}
variable           unit_y        equal     -0.52312386004218/0.538307638452507
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.110658884547899/${norm}
variable           unit_z        equal     0.110658884547899/0.538307638452507
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22785489584787+${delta}*${unit_x}
variable           x_new         equal     1.22785489584787+0.03*${unit_x}
variable           x_new         equal     1.22785489584787+0.03*0.115581830014454
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.50155909522016+${delta}*${unit_y}
variable           y_new         equal     3.50155909522016+0.03*${unit_y}
variable           y_new         equal     3.50155909522016+0.03*-0.971793492557571
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4315272074806+${delta}*${unit_z}
variable           z_new         equal     31.4315272074806+0.03*${unit_z}
variable           z_new         equal     31.4315272074806+0.03*0.205568111323878

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2313223507483  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2313223507483  y  3.47240529044343  z   ${z_new}
set                atom          288751    x  1.2313223507483  y  3.47240529044343  z   31.4376942508203
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0622185819631  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0622185819631  -0.52312386004218  ${new_z}
fix                hold    carbon   planeforce   0.0622185819631  -0.52312386004218  0.110658884547899
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3274   -1152448.8            0   -1152448.8 -0.073504036 -0.020983761 -0.057869633 
    3471   -1152448.8            0   -1152448.8 4.5904557e-06 -8.698938e-07 -6.6933066e-06 
Loop time of 2.2998 on 104 procs for 197 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.7853189  -1152448.79011304  -1152448.79011304
  Force two-norm initial, final = 0.30706884 0.00011438791
  Force max component initial, final = 0.26576044 2.9436142e-05
  Final line search alpha, max atom move = 1.0000000 2.9436142e-05
  Iterations, force evaluations = 197 394

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59988    | 1.6555     | 2.1639     |  34.7 | 71.99
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038792   | 0.37529    | 1.1176     |  51.0 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4266e-05 | 0.0032428  | 0.0069399  |   2.7 |  0.14
Other   |            | 0.2658     |            |       | 11.56

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238194
Ave neighs/atom = 28.530443
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21486739166237-${x_0}
variable           new_x         equal     1.21486739166237-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.46645620227167-${y_0}
variable           new_y         equal     3.46645620227167-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4188226911069-${z_0}
variable           new_z         equal     31.4188226911069-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0492310777775999*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0492310777775999*0.0492310777775999+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0492310777775999*0.0492310777775999+-0.55822675299067*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0492310777775999*0.0492310777775999+-0.55822675299067*-0.55822675299067+${new_z}*${new_z})
variable           module        equal     sqrt(0.0492310777775999*0.0492310777775999+-0.55822675299067*-0.55822675299067+0.0979543681742001*${new_z})
variable           module        equal     sqrt(0.0492310777775999*0.0492310777775999+-0.55822675299067*-0.55822675299067+0.0979543681742001*0.0979543681742001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0492310777775999/${module}
variable           unitx         equal     0.0492310777775999/0.568890028931829
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.55822675299067/${module}
variable           unity         equal     -0.55822675299067/0.568890028931829
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0979543681742001/${module}
variable           unitz         equal     0.0979543681742001/0.568890028931829
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.59045566554424e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.59045566554424e-06*4.59045566554424e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.59045566554424e-06*4.59045566554424e-06+-8.69893799472689e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.59045566554424e-06*4.59045566554424e-06+-8.69893799472689e-07*-8.69893799472689e-07+${fz}*${fz})
variable           f_module      equal     sqrt(4.59045566554424e-06*4.59045566554424e-06+-8.69893799472689e-07*-8.69893799472689e-07+-6.69330661795947e-06*${fz})
variable           f_module      equal     sqrt(4.59045566554424e-06*4.59045566554424e-06+-8.69893799472689e-07*-8.69893799472689e-07+-6.69330661795947e-06*-6.69330661795947e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.086538830483702*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.086538830483702*0.086538830483702+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.086538830483702*0.086538830483702+-0.981255997822319*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.086538830483702*0.086538830483702+-0.981255997822319*-0.981255997822319+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.086538830483702*0.086538830483702+-0.981255997822319*-0.981255997822319+0.172185067750481*${unitz})
variable           dir_module    equal     sqrt(0.086538830483702*0.086538830483702+-0.981255997822319*-0.981255997822319+0.172185067750481*0.172185067750481)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.59045566554424e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.59045566554424e-06*0.086538830483702+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.59045566554424e-06*0.086538830483702+-8.69893799472689e-07*${unity}+${fz}*${unitz}
variable           dot      equal     4.59045566554424e-06*0.086538830483702+-8.69893799472689e-07*-0.981255997822319+${fz}*${unitz}
variable           dot      equal     4.59045566554424e-06*0.086538830483702+-8.69893799472689e-07*-0.981255997822319+-6.69330661795947e-06*${unitz}
variable           dot      equal     4.59045566554424e-06*0.086538830483702+-8.69893799472689e-07*-0.981255997822319+-6.69330661795947e-06*0.172185067750481
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     9.83537193964099e-08/${f_module}*${dir_module}
variable           cos      equal     9.83537193964099e-08/8.16268043731398e-06*${dir_module}
variable           cos      equal     9.83537193964099e-08/8.16268043731398e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0120491939077765)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55874684131157/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.3096153365012-90.0)
print              "The dot product: ${dot}"
The dot product: 9.83537193964099e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.3096153365012

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0492310777775999^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0492310777775999^2+-0.55822675299067^2+${new_z}^2)
variable           norm          equal     sqrt(0.0492310777775999^2+-0.55822675299067^2+0.0979543681742001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0492310777775999/${norm}
variable           unit_x        equal     0.0492310777775999/0.568890028931829
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.55822675299067/${norm}
variable           unit_y        equal     -0.55822675299067/0.568890028931829
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0979543681742001/${norm}
variable           unit_z        equal     0.0979543681742001/0.568890028931829
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21486739166237+${delta}*${unit_x}
variable           x_new         equal     1.21486739166237+0.03*${unit_x}
variable           x_new         equal     1.21486739166237+0.03*0.086538830483702
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.46645620227167+${delta}*${unit_y}
variable           y_new         equal     3.46645620227167+0.03*${unit_y}
variable           y_new         equal     3.46645620227167+0.03*-0.981255997822319
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4188226911069+${delta}*${unit_z}
variable           z_new         equal     31.4188226911069+0.03*${unit_z}
variable           z_new         equal     31.4188226911069+0.03*0.172185067750481

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21746355657688  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21746355657688  y  3.437018522337  z   ${z_new}
set                atom          288751    x  1.21746355657688  y  3.437018522337  z   31.4239882431394
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0492310777775999  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0492310777775999  -0.55822675299067  ${new_z}
fix                hold    carbon   planeforce   0.0492310777775999  -0.55822675299067  0.0979543681742001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3471   -1152448.7            0   -1152448.7  -0.06248234 -0.016923097 -0.065038986 
    3657   -1152448.7            0   -1152448.7 -2.4533623e-05 -2.0598177e-06 5.9181983e-07 
Loop time of 2.1539 on 104 procs for 186 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.72609761   -1152448.7308122   -1152448.7308122
  Force two-norm initial, final = 0.31396885 0.00016662056
  Force max component initial, final = 0.277452 2.9588132e-05
  Final line search alpha, max atom move = 1.0000000 2.9588132e-05
  Iterations, force evaluations = 186 372

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56984    | 1.5654     | 2.0305     |  33.7 | 72.68
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033145   | 0.3519     | 1.0554     |  49.8 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2656e-05 | 0.0030606  | 0.0065478  |   2.6 |  0.14
Other   |            | 0.2336     |            |       | 10.84

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238197
Ave neighs/atom = 28.530454
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20376954310313-${x_0}
variable           new_x         equal     1.20376954310313-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.4324599995954-${y_0}
variable           new_y         equal     3.4324599995954-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4048924300502-${z_0}
variable           new_z         equal     31.4048924300502-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0381332292183598*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0381332292183598*0.0381332292183598+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0381332292183598*0.0381332292183598+-0.59222295566694*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0381332292183598*0.0381332292183598+-0.59222295566694*-0.59222295566694+${new_z}*${new_z})
variable           module        equal     sqrt(0.0381332292183598*0.0381332292183598+-0.59222295566694*-0.59222295566694+0.0840241071175001*${new_z})
variable           module        equal     sqrt(0.0381332292183598*0.0381332292183598+-0.59222295566694*-0.59222295566694+0.0840241071175001*0.0840241071175001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0381332292183598/${module}
variable           unitx         equal     0.0381332292183598/0.599368186481731
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.59222295566694/${module}
variable           unity         equal     -0.59222295566694/0.599368186481731
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0840241071175001/${module}
variable           unitz         equal     0.0840241071175001/0.599368186481731
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45336227859192e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45336227859192e-05*-2.45336227859192e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45336227859192e-05*-2.45336227859192e-05+-2.05981771420591e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45336227859192e-05*-2.45336227859192e-05+-2.05981771420591e-06*-2.05981771420591e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.45336227859192e-05*-2.45336227859192e-05+-2.05981771420591e-06*-2.05981771420591e-06+5.918198267962e-07*${fz})
variable           f_module      equal     sqrt(-2.45336227859192e-05*-2.45336227859192e-05+-2.05981771420591e-06*-2.05981771420591e-06+5.918198267962e-07*5.918198267962e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0636223778278931*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0636223778278931*0.0636223778278931+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0636223778278931*0.0636223778278931+-0.988078728607981*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0636223778278931*0.0636223778278931+-0.988078728607981*-0.988078728607981+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0636223778278931*0.0636223778278931+-0.988078728607981*-0.988078728607981+0.140187799440472*${unitz})
variable           dir_module    equal     sqrt(0.0636223778278931*0.0636223778278931+-0.988078728607981*-0.988078728607981+0.140187799440472*0.140187799440472)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45336227859192e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45336227859192e-05*0.0636223778278931+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45336227859192e-05*0.0636223778278931+-2.05981771420591e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.45336227859192e-05*0.0636223778278931+-2.05981771420591e-06*-0.988078728607981+${fz}*${unitz}
variable           dot      equal     -2.45336227859192e-05*0.0636223778278931+-2.05981771420591e-06*-0.988078728607981+5.918198267962e-07*${unitz}
variable           dot      equal     -2.45336227859192e-05*0.0636223778278931+-2.05981771420591e-06*-0.988078728607981+5.918198267962e-07*0.140187799440472
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.57340569027815e-07/${f_module}*${dir_module}
variable           cos      equal     5.57340569027815e-07/2.46270531474011e-05*${dir_module}
variable           cos      equal     5.57340569027815e-07/2.46270531474011e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0226312326404603)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54816316185917/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7032151721594-90.0)
print              "The dot product: ${dot}"
The dot product: 5.57340569027815e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7032151721594

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0381332292183598^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0381332292183598^2+-0.59222295566694^2+${new_z}^2)
variable           norm          equal     sqrt(0.0381332292183598^2+-0.59222295566694^2+0.0840241071175001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0381332292183598/${norm}
variable           unit_x        equal     0.0381332292183598/0.599368186481731
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.59222295566694/${norm}
variable           unit_y        equal     -0.59222295566694/0.599368186481731
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0840241071175001/${norm}
variable           unit_z        equal     0.0840241071175001/0.599368186481731
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20376954310313+${delta}*${unit_x}
variable           x_new         equal     1.20376954310313+0.03*${unit_x}
variable           x_new         equal     1.20376954310313+0.03*0.0636223778278931
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.4324599995954+${delta}*${unit_y}
variable           y_new         equal     3.4324599995954+0.03*${unit_y}
variable           y_new         equal     3.4324599995954+0.03*-0.988078728607981
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4048924300502+${delta}*${unit_z}
variable           z_new         equal     31.4048924300502+0.03*${unit_z}
variable           z_new         equal     31.4048924300502+0.03*0.140187799440472

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20567821443797  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20567821443797  y  3.40281763773716  z   ${z_new}
set                atom          288751    x  1.20567821443797  y  3.40281763773716  z   31.4090980640334
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0381332292183598  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0381332292183598  -0.59222295566694  ${new_z}
fix                hold    carbon   planeforce   0.0381332292183598  -0.59222295566694  0.0840241071175001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3657   -1152448.7            0   -1152448.7 -0.051410326   -0.0131733 -0.069516819 
    3946   -1152448.7            0   -1152448.7 7.8723637e-07 -2.7789014e-07 -2.3159161e-06 
Loop time of 3.36574 on 104 procs for 289 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.66406913  -1152448.69355558  -1152448.69355558
  Force two-norm initial, final = 0.32311783 2.3532657e-05
  Force max component initial, final = 0.2881582 7.7452870e-06
  Final line search alpha, max atom move = 1.0000000 7.7452870e-06
  Iterations, force evaluations = 289 578

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.88228    | 2.4321     | 3.1491     |  41.9 | 72.26
Neigh   | 1.0304e-05 | 0.0029532  | 0.0042289  |   2.2 |  0.09
Comm    | 0.05788    | 0.54763    | 1.6485     |  62.3 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.536e-05  | 0.0047499  | 0.01018    |   3.2 |  0.14
Other   |            | 0.3783     |            |       | 11.24

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114488 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238209
Ave neighs/atom = 28.530495
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18463971722253-${x_0}
variable           new_x         equal     1.18463971722253-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.39516663366253-${y_0}
variable           new_y         equal     3.39516663366253-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3647199142611-${z_0}
variable           new_z         equal     31.3647199142611-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01900340333776*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01900340333776*0.01900340333776+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01900340333776*0.01900340333776+-0.62951632159981*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01900340333776*0.01900340333776+-0.62951632159981*-0.62951632159981+${new_z}*${new_z})
variable           module        equal     sqrt(0.01900340333776*0.01900340333776+-0.62951632159981*-0.62951632159981+0.0438515913284014*${new_z})
variable           module        equal     sqrt(0.01900340333776*0.01900340333776+-0.62951632159981*-0.62951632159981+0.0438515913284014*0.0438515913284014)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.01900340333776/${module}
variable           unitx         equal     0.01900340333776/0.631327878808632
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.62951632159981/${module}
variable           unity         equal     -0.62951632159981/0.631327878808632
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0438515913284014/${module}
variable           unitz         equal     0.0438515913284014/0.631327878808632
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.87236370882444e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.87236370882444e-07*7.87236370882444e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.87236370882444e-07*7.87236370882444e-07+-2.77890136568562e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.87236370882444e-07*7.87236370882444e-07+-2.77890136568562e-07*-2.77890136568562e-07+${fz}*${fz})
variable           f_module      equal     sqrt(7.87236370882444e-07*7.87236370882444e-07+-2.77890136568562e-07*-2.77890136568562e-07+-2.31591610695152e-06*${fz})
variable           f_module      equal     sqrt(7.87236370882444e-07*7.87236370882444e-07+-2.77890136568562e-07*-2.77890136568562e-07+-2.31591610695152e-06*-2.31591610695152e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0301006877339569*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0301006877339569*0.0301006877339569+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0301006877339569*0.0301006877339569+-0.997130560411429*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0301006877339569*0.0301006877339569+-0.997130560411429*-0.997130560411429+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0301006877339569*0.0301006877339569+-0.997130560411429*-0.997130560411429+0.069459298092701*${unitz})
variable           dir_module    equal     sqrt(0.0301006877339569*0.0301006877339569+-0.997130560411429*-0.997130560411429+0.069459298092701*0.069459298092701)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.87236370882444e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.87236370882444e-07*0.0301006877339569+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.87236370882444e-07*0.0301006877339569+-2.77890136568562e-07*${unity}+${fz}*${unitz}
variable           dot      equal     7.87236370882444e-07*0.0301006877339569+-2.77890136568562e-07*-0.997130560411429+${fz}*${unitz}
variable           dot      equal     7.87236370882444e-07*0.0301006877339569+-2.77890136568562e-07*-0.997130560411429+-2.31591610695152e-06*${unitz}
variable           dot      equal     7.87236370882444e-07*0.0301006877339569+-2.77890136568562e-07*-0.997130560411429+-2.31591610695152e-06*0.069459298092701
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.39927196551731e-07/${f_module}*${dir_module}
variable           cos      equal     1.39927196551731e-07/2.46179435495326e-06*${dir_module}
variable           cos      equal     1.39927196551731e-07/2.46179435495326e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0568395147507711)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.51392616193812/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.7415795734935-90.0)
print              "The dot product: ${dot}"
The dot product: 1.39927196551731e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.7415795734935

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01900340333776^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01900340333776^2+-0.62951632159981^2+${new_z}^2)
variable           norm          equal     sqrt(0.01900340333776^2+-0.62951632159981^2+0.0438515913284014^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01900340333776/${norm}
variable           unit_x        equal     0.01900340333776/0.631327878808632
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.62951632159981/${norm}
variable           unit_y        equal     -0.62951632159981/0.631327878808632
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0438515913284014/${norm}
variable           unit_z        equal     0.0438515913284014/0.631327878808632
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18463971722253+${delta}*${unit_x}
variable           x_new         equal     1.18463971722253+0.03*${unit_x}
variable           x_new         equal     1.18463971722253+0.03*0.0301006877339569
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.39516663366253+${delta}*${unit_y}
variable           y_new         equal     3.39516663366253+0.03*${unit_y}
variable           y_new         equal     3.39516663366253+0.03*-0.997130560411429
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3647199142611+${delta}*${unit_z}
variable           z_new         equal     31.3647199142611+0.03*${unit_z}
variable           z_new         equal     31.3647199142611+0.03*0.069459298092701

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18554273785455  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18554273785455  y  3.36525271685019  z   ${z_new}
set                atom          288751    x  1.18554273785455  y  3.36525271685019  z   31.3668036932039
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01900340333776  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01900340333776  -0.62951632159981  ${new_z}
fix                hold    carbon   planeforce   0.01900340333776  -0.62951632159981  0.0438515913284014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3946   -1152448.6            0   -1152448.6 -0.041318496 -0.008085531 -0.098167058 
    4000   -1152448.7            0   -1152448.7 0.00015540866 6.3903669e-06 2.4390147e-05 
    4159   -1152448.7            0   -1152448.7 -8.7304356e-06 -4.985932e-07 -3.3742121e-06 
Loop time of 2.53634 on 104 procs for 213 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.64764442  -1152448.65353026  -1152448.65353026
  Force two-norm initial, final = 0.34900678 0.00010022414
  Force max component initial, final = 0.30464291 3.8429320e-05
  Final line search alpha, max atom move = 1.0000000 3.8429320e-05
  Iterations, force evaluations = 213 426

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64834    | 1.798      | 2.3726     |  36.3 | 70.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038662   | 0.41806    | 1.2265     |  51.8 | 16.48
Output  | 0.00015839 | 0.00016057 | 0.00027081 |   0.0 |  0.01
Modify  | 2.6098e-05 | 0.003515   | 0.0075221  |   2.8 |  0.14
Other   |            | 0.3166     |            |       | 12.48

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17478201220515-${x_0}
variable           new_x         equal     1.17478201220515-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.36325107094158-${y_0}
variable           new_y         equal     3.36325107094158-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3427320842179-${z_0}
variable           new_z         equal     31.3427320842179-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00914569832037992*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00914569832037992*0.00914569832037992+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00914569832037992*0.00914569832037992+-0.66143188432076*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00914569832037992*0.00914569832037992+-0.66143188432076*-0.66143188432076+${new_z}*${new_z})
variable           module        equal     sqrt(0.00914569832037992*0.00914569832037992+-0.66143188432076*-0.66143188432076+0.0218637612852*${new_z})
variable           module        equal     sqrt(0.00914569832037992*0.00914569832037992+-0.66143188432076*-0.66143188432076+0.0218637612852*0.0218637612852)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00914569832037992/${module}
variable           unitx         equal     0.00914569832037992/0.661856332938966
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.66143188432076/${module}
variable           unity         equal     -0.66143188432076/0.661856332938966
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0218637612852/${module}
variable           unitz         equal     0.0218637612852/0.661856332938966
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.73043557767027e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.73043557767027e-06*-8.73043557767027e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.73043557767027e-06*-8.73043557767027e-06+-4.98593198774761e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.73043557767027e-06*-8.73043557767027e-06+-4.98593198774761e-07*-4.98593198774761e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-8.73043557767027e-06*-8.73043557767027e-06+-4.98593198774761e-07*-4.98593198774761e-07+-3.3742120511037e-06*${fz})
variable           f_module      equal     sqrt(-8.73043557767027e-06*-8.73043557767027e-06+-4.98593198774761e-07*-4.98593198774761e-07+-3.3742120511037e-06*-3.3742120511037e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0138182530939434*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0138182530939434*0.0138182530939434+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0138182530939434*0.0138182530939434+-0.999358699770506*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0138182530939434*0.0138182530939434+-0.999358699770506*-0.999358699770506+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0138182530939434*0.0138182530939434+-0.999358699770506*-0.999358699770506+0.0330339987654333*${unitz})
variable           dir_module    equal     sqrt(0.0138182530939434*0.0138182530939434+-0.999358699770506*-0.999358699770506+0.0330339987654333*0.0330339987654333)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.73043557767027e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.73043557767027e-06*0.0138182530939434+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.73043557767027e-06*0.0138182530939434+-4.98593198774761e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -8.73043557767027e-06*0.0138182530939434+-4.98593198774761e-07*-0.999358699770506+${fz}*${unitz}
variable           dot      equal     -8.73043557767027e-06*0.0138182530939434+-4.98593198774761e-07*-0.999358699770506+-3.3742120511037e-06*${unitz}
variable           dot      equal     -8.73043557767027e-06*0.0138182530939434+-4.98593198774761e-07*-0.999358699770506+-3.3742120511037e-06*0.0330339987654333
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.66170365678877e-07/${f_module}*${dir_module}
variable           cos      equal     2.66170365678877e-07/9.37306820200988e-06*${dir_module}
variable           cos      equal     2.66170365678877e-07/9.37306820200988e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0283973571878845)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5423951515697/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.3727325263847-90.0)
print              "The dot product: ${dot}"
The dot product: 2.66170365678877e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.3727325263847

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00914569832037992^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00914569832037992^2+-0.66143188432076^2+${new_z}^2)
variable           norm          equal     sqrt(0.00914569832037992^2+-0.66143188432076^2+0.0218637612852^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00914569832037992/${norm}
variable           unit_x        equal     0.00914569832037992/0.661856332938966
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.66143188432076/${norm}
variable           unit_y        equal     -0.66143188432076/0.661856332938966
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0218637612852/${norm}
variable           unit_z        equal     0.0218637612852/0.661856332938966
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17478201220515+${delta}*${unit_x}
variable           x_new         equal     1.17478201220515+0.03*${unit_x}
variable           x_new         equal     1.17478201220515+0.03*0.0138182530939434
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.36325107094158+${delta}*${unit_y}
variable           y_new         equal     3.36325107094158+0.03*${unit_y}
variable           y_new         equal     3.36325107094158+0.03*-0.999358699770506
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3427320842179+${delta}*${unit_z}
variable           z_new         equal     31.3427320842179+0.03*${unit_z}
variable           z_new         equal     31.3427320842179+0.03*0.0330339987654333

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17519655979797  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17519655979797  y  3.33327030994846  z   ${z_new}
set                atom          288751    x  1.17519655979797  y  3.33327030994846  z   31.3437231041809
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00914569832037992  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00914569832037992  -0.66143188432076  ${new_z}
fix                hold    carbon   planeforce   0.00914569832037992  -0.66143188432076  0.0218637612852
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4159   -1152448.6            0   -1152448.6 -0.018563959 -0.0019614568 -0.051573454 
    4314   -1152448.6            0   -1152448.6 2.2731118e-06 -2.5010447e-07 -8.5171194e-06 
Loop time of 1.79532 on 104 procs for 155 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.60650725  -1152448.61203101  -1152448.61203101
  Force two-norm initial, final = 0.34807051 0.00025918107
  Force max component initial, final = 0.31247206 0.0001000772
  Final line search alpha, max atom move = 1.0000000 0.0001000772
  Iterations, force evaluations = 155 310

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.47001    | 1.3006     | 1.6884     |  30.7 | 72.44
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030282   | 0.29174    | 0.87905    |  45.6 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9119e-05 | 0.0025596  | 0.0054575  |   2.4 |  0.14
Other   |            | 0.2004     |            |       | 11.16

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114480 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16981893906079-${x_0}
variable           new_x         equal     1.16981893906079-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.33277654163679-${y_0}
variable           new_y         equal     3.33277654163679-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3310348935748-${z_0}
variable           new_z         equal     31.3310348935748-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00418262517601997*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00418262517601997*0.00418262517601997+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00418262517601997*0.00418262517601997+-0.69190641362555*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00418262517601997*0.00418262517601997+-0.69190641362555*-0.69190641362555+${new_z}*${new_z})
variable           module        equal     sqrt(0.00418262517601997*0.00418262517601997+-0.69190641362555*-0.69190641362555+0.0101665706420988*${new_z})
variable           module        equal     sqrt(0.00418262517601997*0.00418262517601997+-0.69190641362555*-0.69190641362555+0.0101665706420988*0.0101665706420988)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00418262517601997/${module}
variable           unitx         equal     0.00418262517601997/0.691993741827305
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.69190641362555/${module}
variable           unity         equal     -0.69190641362555/0.691993741827305
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0101665706420988/${module}
variable           unitz         equal     0.0101665706420988/0.691993741827305
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.27311182439151e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.27311182439151e-06*2.27311182439151e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.27311182439151e-06*2.27311182439151e-06+-2.50104469219992e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.27311182439151e-06*2.27311182439151e-06+-2.50104469219992e-07*-2.50104469219992e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.27311182439151e-06*2.27311182439151e-06+-2.50104469219992e-07*-2.50104469219992e-07+-8.51711939613275e-06*${fz})
variable           f_module      equal     sqrt(2.27311182439151e-06*2.27311182439151e-06+-2.50104469219992e-07*-2.50104469219992e-07+-8.51711939613275e-06*-8.51711939613275e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00604431069705222*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00604431069705222*0.00604431069705222+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00604431069705222*0.00604431069705222+-0.999873802035371*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00604431069705222*0.00604431069705222+-0.999873802035371*-0.999873802035371+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00604431069705222*0.00604431069705222+-0.999873802035371*-0.999873802035371+0.0146917089383678*${unitz})
variable           dir_module    equal     sqrt(0.00604431069705222*0.00604431069705222+-0.999873802035371*-0.999873802035371+0.0146917089383678*0.0146917089383678)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.27311182439151e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.27311182439151e-06*0.00604431069705222+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.27311182439151e-06*0.00604431069705222+-2.50104469219992e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.27311182439151e-06*0.00604431069705222+-2.50104469219992e-07*-0.999873802035371+${fz}*${unitz}
variable           dot      equal     2.27311182439151e-06*0.00604431069705222+-2.50104469219992e-07*-0.999873802035371+-8.51711939613275e-06*${unitz}
variable           dot      equal     2.27311182439151e-06*0.00604431069705222+-2.50104469219992e-07*-0.999873802035371+-8.51711939613275e-06*0.0146917089383678
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.38681261499488e-07/${f_module}*${dir_module}
variable           cos      equal     1.38681261499488e-07/8.8187817990748e-06*${dir_module}
variable           cos      equal     1.38681261499488e-07/8.8187817990748e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0157256710347497)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55507000753684/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.098948279238-90.0)
print              "The dot product: ${dot}"
The dot product: 1.38681261499488e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.098948279238

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00418262517601997^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00418262517601997^2+-0.69190641362555^2+${new_z}^2)
variable           norm          equal     sqrt(0.00418262517601997^2+-0.69190641362555^2+0.0101665706420988^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00418262517601997/${norm}
variable           unit_x        equal     0.00418262517601997/0.691993741827305
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.69190641362555/${norm}
variable           unit_y        equal     -0.69190641362555/0.691993741827305
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0101665706420988/${norm}
variable           unit_z        equal     0.0101665706420988/0.691993741827305
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16981893906079+${delta}*${unit_x}
variable           x_new         equal     1.16981893906079+0.03*${unit_x}
variable           x_new         equal     1.16981893906079+0.03*0.00604431069705222
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.33277654163679+${delta}*${unit_y}
variable           y_new         equal     3.33277654163679+0.03*${unit_y}
variable           y_new         equal     3.33277654163679+0.03*-0.999873802035371
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3310348935748+${delta}*${unit_z}
variable           z_new         equal     31.3310348935748+0.03*${unit_z}
variable           z_new         equal     31.3310348935748+0.03*0.0146917089383678

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1700002683817  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1700002683817  y  3.30278032757573  z   ${z_new}
set                atom          288751    x  1.1700002683817  y  3.30278032757573  z   31.3314756448429
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00418262517601997  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00418262517601997  -0.69190641362555  ${new_z}
fix                hold    carbon   planeforce   0.00418262517601997  -0.69190641362555  0.0101665706420988
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4314   -1152448.6            0   -1152448.6 -0.0076277778 -0.00041509007 -0.025111649 
    4517   -1152448.6            0   -1152448.6 2.268177e-06 3.2141219e-08 1.2542855e-06 
Loop time of 2.39014 on 104 procs for 203 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.56557151  -1152448.57081998  -1152448.57081998
  Force two-norm initial, final = 0.35458915 6.4066338e-05
  Force max component initial, final = 0.31956627 2.4302344e-05
  Final line search alpha, max atom move = 1.0000000 2.4302344e-05
  Iterations, force evaluations = 203 406

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61515    | 1.7108     | 2.2608     |  35.4 | 71.58
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035537   | 0.39731    | 1.1769     |  51.2 | 16.62
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4923e-05 | 0.0033521  | 0.0071926  |   2.7 |  0.14
Other   |            | 0.2787     |            |       | 11.66

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114474 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16757357599607-${x_0}
variable           new_x         equal     1.16757357599607-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.30267719130742-${y_0}
variable           new_y         equal     3.30267719130742-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3254548633212-${z_0}
variable           new_z         equal     31.3254548633212-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00193726211129985*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00193726211129985*0.00193726211129985+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00193726211129985*0.00193726211129985+-0.72200576395492*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00193726211129985*0.00193726211129985+-0.72200576395492*-0.72200576395492+${new_z}*${new_z})
variable           module        equal     sqrt(0.00193726211129985*0.00193726211129985+-0.72200576395492*-0.72200576395492+0.0045865403885017*${new_z})
variable           module        equal     sqrt(0.00193726211129985*0.00193726211129985+-0.72200576395492*-0.72200576395492+0.0045865403885017*0.0045865403885017)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00193726211129985/${module}
variable           unitx         equal     0.00193726211129985/0.722022930744828
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.72200576395492/${module}
variable           unity         equal     -0.72200576395492/0.722022930744828
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0045865403885017/${module}
variable           unitz         equal     0.0045865403885017/0.722022930744828
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.26817700386127e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.26817700386127e-06*2.26817700386127e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.26817700386127e-06*2.26817700386127e-06+3.21412194102473e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.26817700386127e-06*2.26817700386127e-06+3.21412194102473e-08*3.21412194102473e-08+${fz}*${fz})
variable           f_module      equal     sqrt(2.26817700386127e-06*2.26817700386127e-06+3.21412194102473e-08*3.21412194102473e-08+1.25428547394159e-06*${fz})
variable           f_module      equal     sqrt(2.26817700386127e-06*2.26817700386127e-06+3.21412194102473e-08*3.21412194102473e-08+1.25428547394159e-06*1.25428547394159e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00268310330435267*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00268310330435267*0.00268310330435267+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00268310330435267*0.00268310330435267+-0.999976224037801*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00268310330435267*0.00268310330435267+-0.999976224037801*-0.999976224037801+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00268310330435267*0.00268310330435267+-0.999976224037801*-0.999976224037801+0.00635234726377775*${unitz})
variable           dir_module    equal     sqrt(0.00268310330435267*0.00268310330435267+-0.999976224037801*-0.999976224037801+0.00635234726377775*0.00635234726377775)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.26817700386127e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.26817700386127e-06*0.00268310330435267+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.26817700386127e-06*0.00268310330435267+3.21412194102473e-08*${unity}+${fz}*${unitz}
variable           dot      equal     2.26817700386127e-06*0.00268310330435267+3.21412194102473e-08*-0.999976224037801+${fz}*${unitz}
variable           dot      equal     2.26817700386127e-06*0.00268310330435267+3.21412194102473e-08*-0.999976224037801+1.25428547394159e-06*${unitz}
variable           dot      equal     2.26817700386127e-06*0.00268310330435267+3.21412194102473e-08*-0.999976224037801+1.25428547394159e-06*0.00635234726377775
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.80870451095236e-08/${f_module}*${dir_module}
variable           cos      equal     -1.80870451095236e-08/2.59208256600193e-06*${dir_module}
variable           cos      equal     -1.80870451095236e-08/2.59208256600193e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00697780439047563)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57777418781121/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.3998019862636-90.0)
print              "The dot product: ${dot}"
The dot product: -1.80870451095236e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.3998019862636

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00193726211129985^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00193726211129985^2+-0.72200576395492^2+${new_z}^2)
variable           norm          equal     sqrt(0.00193726211129985^2+-0.72200576395492^2+0.0045865403885017^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00193726211129985/${norm}
variable           unit_x        equal     0.00193726211129985/0.722022930744828
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.72200576395492/${norm}
variable           unit_y        equal     -0.72200576395492/0.722022930744828
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0045865403885017/${norm}
variable           unit_z        equal     0.0045865403885017/0.722022930744828
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16757357599607+${delta}*${unit_x}
variable           x_new         equal     1.16757357599607+0.03*${unit_x}
variable           x_new         equal     1.16757357599607+0.03*0.00268310330435267
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.30267719130742+${delta}*${unit_y}
variable           y_new         equal     3.30267719130742+0.03*${unit_y}
variable           y_new         equal     3.30267719130742+0.03*-0.999976224037801
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3254548633212+${delta}*${unit_z}
variable           z_new         equal     31.3254548633212+0.03*${unit_z}
variable           z_new         equal     31.3254548633212+0.03*0.00635234726377775

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1676540690952  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1676540690952  y  3.27267790458629  z   ${z_new}
set                atom          288751    x  1.1676540690952  y  3.27267790458629  z   31.3256454337391
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00193726211129985  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00193726211129985  -0.72200576395492  ${new_z}
fix                hold    carbon   planeforce   0.00193726211129985  -0.72200576395492  0.0045865403885017
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4517   -1152448.5            0   -1152448.5 -0.0025885482 -7.5823339e-05 -0.010842637 
    4683   -1152448.5            0   -1152448.5 -5.3973445e-07 -6.3372969e-09 -7.6963404e-07 
Loop time of 1.94134 on 104 procs for 166 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.52220837  -1152448.52679444  -1152448.52679444
  Force two-norm initial, final = 0.35456547 0.00011632737
  Force max component initial, final = 0.32661595 4.2412597e-05
  Final line search alpha, max atom move = 1.0000000 4.2412597e-05
  Iterations, force evaluations = 166 332

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.50885    | 1.3958     | 1.8105     |  31.7 | 71.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02977    | 0.31424    | 0.94863    |  47.1 | 16.19
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0818e-05 | 0.0027302  | 0.0058362  |   2.5 |  0.14
Other   |            | 0.2286     |            |       | 11.77

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114464 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16662408691597-${x_0}
variable           new_x         equal     1.16662408691597-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.27265873173907-${y_0}
variable           new_y         equal     3.27265873173907-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3230623188674-${z_0}
variable           new_z         equal     31.3230623188674-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000987773031200012*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000987773031200012*0.000987773031200012+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000987773031200012*0.000987773031200012+-0.75202422352327*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000987773031200012*0.000987773031200012+-0.75202422352327*-0.75202422352327+${new_z}*${new_z})
variable           module        equal     sqrt(0.000987773031200012*0.000987773031200012+-0.75202422352327*-0.75202422352327+0.00219399593470015*${new_z})
variable           module        equal     sqrt(0.000987773031200012*0.000987773031200012+-0.75202422352327*-0.75202422352327+0.00219399593470015*0.00219399593470015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000987773031200012/${module}
variable           unitx         equal     0.000987773031200012/0.752028072667171
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.75202422352327/${module}
variable           unity         equal     -0.75202422352327/0.752028072667171
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00219399593470015/${module}
variable           unitz         equal     0.00219399593470015/0.752028072667171
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.39734445017174e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.39734445017174e-07*-5.39734445017174e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.39734445017174e-07*-5.39734445017174e-07+-6.33729686943762e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.39734445017174e-07*-5.39734445017174e-07+-6.33729686943762e-09*-6.33729686943762e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-5.39734445017174e-07*-5.39734445017174e-07+-6.33729686943762e-09*-6.33729686943762e-09+-7.69634043783647e-07*${fz})
variable           f_module      equal     sqrt(-5.39734445017174e-07*-5.39734445017174e-07+-6.33729686943762e-09*-6.33729686943762e-09+-7.69634043783647e-07*-7.69634043783647e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00131347893396684*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00131347893396684*0.00131347893396684+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00131347893396684*0.00131347893396684+-0.99999488164865*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00131347893396684*0.00131347893396684+-0.99999488164865*-0.99999488164865+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00131347893396684*0.00131347893396684+-0.99999488164865*-0.99999488164865+0.00291743887554469*${unitz})
variable           dir_module    equal     sqrt(0.00131347893396684*0.00131347893396684+-0.99999488164865*-0.99999488164865+0.00291743887554469*0.00291743887554469)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.39734445017174e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.39734445017174e-07*0.00131347893396684+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.39734445017174e-07*0.00131347893396684+-6.33729686943762e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -5.39734445017174e-07*0.00131347893396684+-6.33729686943762e-09*-0.99999488164865+${fz}*${unitz}
variable           dot      equal     -5.39734445017174e-07*0.00131347893396684+-6.33729686943762e-09*-0.99999488164865+-7.69634043783647e-07*${unitz}
variable           dot      equal     -5.39734445017174e-07*0.00131347893396684+-6.33729686943762e-09*-0.99999488164865+-7.69634043783647e-07*0.00291743887554469
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.38297433018222e-09/${f_module}*${dir_module}
variable           cos      equal     3.38297433018222e-09/9.400478678346e-07*${dir_module}
variable           cos      equal     3.38297433018222e-09/9.400478678346e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00359872560317051)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56719759342394/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7938077662513-90.0)
print              "The dot product: ${dot}"
The dot product: 3.38297433018222e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7938077662513

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000987773031200012^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000987773031200012^2+-0.75202422352327^2+${new_z}^2)
variable           norm          equal     sqrt(0.000987773031200012^2+-0.75202422352327^2+0.00219399593470015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000987773031200012/${norm}
variable           unit_x        equal     0.000987773031200012/0.752028072667171
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.75202422352327/${norm}
variable           unit_y        equal     -0.75202422352327/0.752028072667171
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00219399593470015/${norm}
variable           unit_z        equal     0.00219399593470015/0.752028072667171
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16662408691597+${delta}*${unit_x}
variable           x_new         equal     1.16662408691597+0.03*${unit_x}
variable           x_new         equal     1.16662408691597+0.03*0.00131347893396684
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.27265873173907+${delta}*${unit_y}
variable           y_new         equal     3.27265873173907+0.03*${unit_y}
variable           y_new         equal     3.27265873173907+0.03*-0.99999488164865
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3230623188674+${delta}*${unit_z}
variable           z_new         equal     31.3230623188674+0.03*${unit_z}
variable           z_new         equal     31.3230623188674+0.03*0.00291743887554469

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16666349128399  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16666349128399  y  3.24265888528961  z   ${z_new}
set                atom          288751    x  1.16666349128399  y  3.24265888528961  z   31.3231498420337
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000987773031200012  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000987773031200012  -0.75202422352327  ${new_z}
fix                hold    carbon   planeforce   0.000987773031200012  -0.75202422352327  0.00219399593470015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4683   -1152448.5            0   -1152448.5 -0.00076500532 -1.4443203e-05 -0.0046062013 
    4811   -1152448.5            0   -1152448.5 4.7318039e-06 -9.7387119e-10 -2.4641445e-06 
Loop time of 1.48907 on 104 procs for 128 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.47344532  -1152448.47839264  -1152448.47839264
  Force two-norm initial, final = 0.36468728 0.00030938791
  Force max component initial, final = 0.33328031 0.00015281104
  Final line search alpha, max atom move = 1.0000000 0.00015281104
  Iterations, force evaluations = 128 256

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.38951    | 1.0797     | 1.4047     |  28.0 | 72.51
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02295    | 0.24448    | 0.73355    |  41.5 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6106e-05 | 0.002112   | 0.0045087  |   2.2 |  0.14
Other   |            | 0.1628     |            |       | 10.93

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114464 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16620633062274-${x_0}
variable           new_x         equal     1.16620633062274-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.24265491947172-${y_0}
variable           new_y         equal     3.24265491947172-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3219963211221-${z_0}
variable           new_z         equal     31.3219963211221-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000570016737969858*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000570016737969858*0.000570016737969858+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000570016737969858*0.000570016737969858+-0.78202803579062*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000570016737969858*0.000570016737969858+-0.78202803579062*-0.78202803579062+${new_z}*${new_z})
variable           module        equal     sqrt(0.000570016737969858*0.000570016737969858+-0.78202803579062*-0.78202803579062+0.0011279981893999*${new_z})
variable           module        equal     sqrt(0.000570016737969858*0.000570016737969858+-0.78202803579062*-0.78202803579062+0.0011279981893999*0.0011279981893999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000570016737969858/${module}
variable           unitx         equal     0.000570016737969858/0.782029057044259
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.78202803579062/${module}
variable           unity         equal     -0.78202803579062/0.782029057044259
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0011279981893999/${module}
variable           unitz         equal     0.0011279981893999/0.782029057044259
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.73180385085188e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.73180385085188e-06*4.73180385085188e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.73180385085188e-06*4.73180385085188e-06+-9.73871187940292e-10*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.73180385085188e-06*4.73180385085188e-06+-9.73871187940292e-10*-9.73871187940292e-10+${fz}*${fz})
variable           f_module      equal     sqrt(4.73180385085188e-06*4.73180385085188e-06+-9.73871187940292e-10*-9.73871187940292e-10+-2.46414452756712e-06*${fz})
variable           f_module      equal     sqrt(4.73180385085188e-06*4.73180385085188e-06+-9.73871187940292e-10*-9.73871187940292e-10+-2.46414452756712e-06*-2.46414452756712e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000728894576020336*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000728894576020336*0.000728894576020336+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000728894576020336*0.000728894576020336+-0.999998694097579*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000728894576020336*0.000728894576020336+-0.999998694097579*-0.999998694097579+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000728894576020336*0.000728894576020336+-0.999998694097579*-0.999998694097579+0.00144239933189089*${unitz})
variable           dir_module    equal     sqrt(0.000728894576020336*0.000728894576020336+-0.999998694097579*-0.999998694097579+0.00144239933189089*0.00144239933189089)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.73180385085188e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.73180385085188e-06*0.000728894576020336+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.73180385085188e-06*0.000728894576020336+-9.73871187940292e-10*${unity}+${fz}*${unitz}
variable           dot      equal     4.73180385085188e-06*0.000728894576020336+-9.73871187940292e-10*-0.999998694097579+${fz}*${unitz}
variable           dot      equal     4.73180385085188e-06*0.000728894576020336+-9.73871187940292e-10*-0.999998694097579+-2.46414452756712e-06*${unitz}
variable           dot      equal     4.73180385085188e-06*0.000728894576020336+-9.73871187940292e-10*-0.999998694097579+-2.46414452756712e-06*0.00144239933189089
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.68575657592217e-10/${f_module}*${dir_module}
variable           cos      equal     8.68575657592217e-10/5.33497674635052e-06*${dir_module}
variable           cos      equal     8.68575657592217e-10/5.33497674635052e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000162807768222491)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57063351902595/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9906718019674-90.0)
print              "The dot product: ${dot}"
The dot product: 8.68575657592217e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9906718019674

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4811   -1152448.5            0   -1152448.5 -0.0022171535    1.6915946 -0.0049376133 
    5000   -1152449.3            0   -1152449.3 5.3056951e-06 4.6201101e-07 -4.8500548e-06 
    5031   -1152449.3            0   -1152449.3 -4.2800911e-06 -7.4287803e-07 3.8729849e-06 
Loop time of 2.53169 on 104 procs for 220 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.47839264  -1152449.34502404  -1152449.34502404
  Force two-norm initial, final = 1.6916033 6.3637944e-05
  Force max component initial, final = 1.6915946 1.0194165e-05
  Final line search alpha, max atom move = 1.0000000 1.0194165e-05
  Iterations, force evaluations = 220 434

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.67734    | 1.8272     | 2.3723     |  36.0 | 72.17
Neigh   | 4.0152e-05 | 0.011873   | 0.017106   |   4.5 |  0.47
Comm    | 0.039799   | 0.41195    | 1.2363     |  53.4 | 16.27
Output  | 0.00012968 | 0.00013608 | 0.00029431 |   0.0 |  0.01
Modify  | 2.4681e-05 | 0.00232    | 0.0059577  |   3.0 |  0.09
Other   |            | 0.2783     |            |       | 10.99

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 4
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.165637757201-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.165637757201-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.165637757201-1.16563631388477)^2+(4.02468210225705-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.165637757201-1.16563631388477)^2+(4.02468210225705-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.165637757201-1.16563631388477)^2+(4.02468210225705-4.02468295526234)^2+(31.3208786802755-${z_0})^2)
variable                displacement      equal     sqrt((1.165637757201-1.16563631388477)^2+(4.02468210225705-4.02468295526234)^2+(31.3208786802755-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 5
5
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.342 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.85178 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49589    | 1.3243     | 1.7254     |  30.5 | 71.52
Neigh   | 3.0242e-05 | 0.0088682  | 0.012861   |   3.9 |  0.48
Comm    | 0.034154   | 0.29865    | 0.89031    |  45.6 | 16.13
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9258e-05 | 0.0016843  | 0.0043286  |   2.6 |  0.09
Other   |            | 0.2182     |            |       | 11.79

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,5)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,5)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,5)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.18725087019733
variable                y_1    equal     $y
variable                y_1    equal     4.02340194654194
variable                z_1    equal     $z
variable                z_1    equal     31.3502252901434

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.18725087019733  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.18725087019733  y  4.02340194654194  z  ${z_1}
set                atom        288751    x  1.18725087019733  y  4.02340194654194  z  31.3502252901434
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.18725087019733-${x_0}
variable           vector_x          equal     1.18725087019733-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.02340194654194-${y_0}
variable           vector_y          equal     4.02340194654194-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3502252901434-${z_0}
variable           vector_z          equal     31.3502252901434-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.02161455631256  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.02161455631256  -0.00128100872040005  ${vector_z}
fix                hold    carbon   planeforce   0.02161455631256  -0.00128100872040005  0.029356967210699
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3   0.01781762 -0.0018006357 -0.013197092 
     350   -1152449.3            0   -1152449.3 6.8176888e-06 3.8448755e-06 -4.8518635e-06 
Loop time of 2.21777 on 104 procs for 192 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33694242   -1152449.3420793   -1152449.3420793
  Force two-norm initial, final = 0.31793127 0.00021976808
  Force max component initial, final = 0.18650731 4.9757017e-05
  Final line search alpha, max atom move = 1.0000000 4.9757017e-05
  Iterations, force evaluations = 192 384

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58221    | 1.6083     | 2.0952     |  34.2 | 72.52
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034982   | 0.36307    | 1.0939     |  50.9 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3835e-05 | 0.0031692  | 0.0067955  |   2.7 |  0.14
Other   |            | 0.2432     |            |       | 10.97

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18692944259234-${x_0}
variable           new_x         equal     1.18692944259234-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.02327010831765-${y_0}
variable           new_y         equal     4.02327010831765-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3504561937345-${z_0}
variable           new_z         equal     31.3504561937345-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0212931287075699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0212931287075699^2+-0.00141284694468968^2+${new_z}^2)
variable           norm          equal     sqrt(0.0212931287075699^2+-0.00141284694468968^2+0.0295878708018016^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0212931287075699/${norm}
variable           unit_x        equal     0.0212931287075699/0.036480619035734
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00141284694468968/${norm}
variable           unit_y        equal     -0.00141284694468968/0.036480619035734
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0295878708018016/${norm}
variable           unit_z        equal     0.0295878708018016/0.036480619035734
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18692944259234+${delta}*${unit_x}
variable           x_new         equal     1.18692944259234+0.03*${unit_x}
variable           x_new         equal     1.18692944259234+0.03*0.583683316522468
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.02327010831765+${delta}*${unit_y}
variable           y_new         equal     4.02327010831765+0.03*${unit_y}
variable           y_new         equal     4.02327010831765+0.03*-0.0387286998421202
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3504561937345+${delta}*${unit_z}
variable           z_new         equal     31.3504561937345+0.03*${unit_z}
variable           z_new         equal     31.3504561937345+0.03*0.811057256808589

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20443994208801  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20443994208801  y  4.02210824732239  z   ${z_new}
set                atom          288751    x  1.20443994208801  y  4.02210824732239  z   31.3747879114388
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0212931287075699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0212931287075699  -0.00141284694468968  ${new_z}
fix                hold    carbon   planeforce   0.0212931287075699  -0.00141284694468968  0.0295878708018016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     350   -1152449.3            0   -1152449.3  0.014178803 -0.0021469935 -0.010306401 
     778   -1152449.3            0   -1152449.3 9.4703687e-09 -1.5166494e-10 -6.8226626e-09 
Loop time of 4.99572 on 104 procs for 428 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33176102  -1152449.33523525  -1152449.33523525
  Force two-norm initial, final = 0.26227483 2.9623761e-08
  Force max component initial, final = 0.15792224 9.4703687e-09
  Final line search alpha, max atom move = 1.0000000 9.4703687e-09
  Iterations, force evaluations = 428 856

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 1.2945     | 3.5883     | 4.7137     |  51.3 | 71.83
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.079378   | 0.81099    | 2.4285     |  75.2 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 5.3923e-05 | 0.0070306  | 0.015016   |   4.0 |  0.14
Other   |            | 0.5894     |            |       | 11.80

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115490 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20404243444812-${x_0}
variable           new_x         equal     1.20404243444812-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.02179319323985-${y_0}
variable           new_y         equal     4.02179319323985-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3750589366232-${z_0}
variable           new_z         equal     31.3750589366232-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0384061205633499*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0384061205633499*0.0384061205633499+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0384061205633499*0.0384061205633499+-0.00288976202249014*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0384061205633499*0.0384061205633499+-0.00288976202249014*-0.00288976202249014+${new_z}*${new_z})
variable           module        equal     sqrt(0.0384061205633499*0.0384061205633499+-0.00288976202249014*-0.00288976202249014+0.0541906136905013*${new_z})
variable           module        equal     sqrt(0.0384061205633499*0.0384061205633499+-0.00288976202249014*-0.00288976202249014+0.0541906136905013*0.0541906136905013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0384061205633499/${module}
variable           unitx         equal     0.0384061205633499/0.0664831063761791
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.00288976202249014/${module}
variable           unity         equal     -0.00288976202249014/0.0664831063761791
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0541906136905013/${module}
variable           unitz         equal     0.0541906136905013/0.0664831063761791
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.47036867990578e-09*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.47036867990578e-09*9.47036867990578e-09+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.47036867990578e-09*9.47036867990578e-09+-1.51664939584386e-10*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.47036867990578e-09*9.47036867990578e-09+-1.51664939584386e-10*-1.51664939584386e-10+${fz}*${fz})
variable           f_module      equal     sqrt(9.47036867990578e-09*9.47036867990578e-09+-1.51664939584386e-10*-1.51664939584386e-10+-6.82266257084949e-09*${fz})
variable           f_module      equal     sqrt(9.47036867990578e-09*9.47036867990578e-09+-1.51664939584386e-10*-1.51664939584386e-10+-6.82266257084949e-09*-6.82266257084949e-09)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.577682401692211*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.577682401692211*0.577682401692211+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.577682401692211*0.577682401692211+-0.0434661101143364*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.577682401692211*0.577682401692211+-0.0434661101143364*-0.0434661101143364+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.577682401692211*0.577682401692211+-0.0434661101143364*-0.0434661101143364+0.815103514927182*${unitz})
variable           dir_module    equal     sqrt(0.577682401692211*0.577682401692211+-0.0434661101143364*-0.0434661101143364+0.815103514927182*0.815103514927182)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.47036867990578e-09*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.47036867990578e-09*0.577682401692211+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.47036867990578e-09*0.577682401692211+-1.51664939584386e-10*${unity}+${fz}*${unitz}
variable           dot      equal     9.47036867990578e-09*0.577682401692211+-1.51664939584386e-10*-0.0434661101143364+${fz}*${unitz}
variable           dot      equal     9.47036867990578e-09*0.577682401692211+-1.51664939584386e-10*-0.0434661101143364+-6.82266257084949e-09*${unitz}
variable           dot      equal     9.47036867990578e-09*0.577682401692211+-1.51664939584386e-10*-0.0434661101143364+-6.82266257084949e-09*0.815103514927182
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.37186337784197e-11/${f_module}*${dir_module}
variable           cos      equal     -8.37186337784197e-11/1.16730291588306e-08*${dir_module}
variable           cos      equal     -8.37186337784197e-11/1.16730291588306e-08*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00717197161416211)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57796835989481/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.4109272271532-90.0)
print              "The dot product: ${dot}"
The dot product: -8.37186337784197e-11
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.4109272271532

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     778   -1152449.3            0   -1152449.3  -0.17205853  0.011416471  -0.23908398 
    1000   -1152449.3            0   -1152449.3 -1.4046626e-05 4.091757e-07 -8.3408903e-06 
    1004   -1152449.3            0   -1152449.3 1.6790621e-05 -1.8968151e-07 -2.5060397e-05 
Loop time of 2.62447 on 104 procs for 226 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33523524  -1152449.34502405  -1152449.34502405
  Force two-norm initial, final = 0.29478064 8.0438481e-05
  Force max component initial, final = 0.23908398 2.5060397e-05
  Final line search alpha, max atom move = 1.0000000 2.5060397e-05
  Iterations, force evaluations = 226 452

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68519    | 1.8945     | 2.473      |  37.2 | 72.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044556   | 0.43292    | 1.2912     |  54.6 | 16.50
Output  | 9.8144e-05 | 0.00010539 | 0.00026187 |   0.0 |  0.00
Modify  | 2.6086e-05 | 0.0024223  | 0.0062527  |   3.1 |  0.09
Other   |            | 0.2945     |            |       | 11.22

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115473 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563343786128-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563343786128-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563343786128-1.16563631388477)^2+(4.02468267445809-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563343786128-1.16563631388477)^2+(4.02468267445809-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563343786128-1.16563631388477)^2+(4.02468267445809-4.02468295526234)^2+(31.32086954101-${z_0})^2)
variable                displacement      equal     sqrt((1.16563343786128-1.16563631388477)^2+(4.02468267445809-4.02468295526234)^2+(31.32086954101-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 6
6
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.340 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.84962 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48769    | 1.3223     | 1.7366     |  30.7 | 71.49
Neigh   | 3.0004e-05 | 0.0088804  | 0.012929   |   3.9 |  0.48
Comm    | 0.03081    | 0.29978    | 0.88817    |  45.4 | 16.21
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8328e-05 | 0.0016824  | 0.0043053  |   2.6 |  0.09
Other   |            | 0.217      |            |       | 11.73

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,6)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,6)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,6)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.19371648880771
variable                y_1    equal     $y
variable                y_1    equal     4.00356384229389
variable                z_1    equal     $z
variable                z_1    equal     31.2936868024706

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.19371648880771  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.19371648880771  y  4.00356384229389  z  ${z_1}
set                atom        288751    x  1.19371648880771  y  4.00356384229389  z  31.2936868024706
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.19371648880771-${x_0}
variable           vector_x          equal     1.19371648880771-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.00356384229389-${y_0}
variable           vector_y          equal     4.00356384229389-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.2936868024706-${z_0}
variable           vector_z          equal     31.2936868024706-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.02808017492294  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.02808017492294  -0.0211191129684494  ${vector_z}
fix                hold    carbon   planeforce   0.02808017492294  -0.0211191129684494  -0.0271815204621007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 -0.032585276 -0.089890799  0.036179495 
     459   -1152449.3            0   -1152449.3 1.2278816e-07 1.4545098e-07 1.383724e-08 
Loop time of 3.51042 on 104 procs for 301 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.3304775  -1152449.34052613  -1152449.34052613
  Force two-norm initial, final = 0.47951409 2.8658555e-06
  Force max component initial, final = 0.25877808 1.6586492e-07
  Final line search alpha, max atom move = 1.0000000 1.6586492e-07
  Iterations, force evaluations = 301 602

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.91362    | 2.5233     | 3.3039     |  42.8 | 71.88
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.055473   | 0.56881    | 1.7092     |  63.0 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.7223e-05 | 0.0049527  | 0.01058    |   3.3 |  0.14
Other   |            | 0.4134     |            |       | 11.78

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19230106006899-${x_0}
variable           new_x         equal     1.19230106006899-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.0013306902843-${y_0}
variable           new_y         equal     4.0013306902843-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2939596607532-${z_0}
variable           new_z         equal     31.2939596607532-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02666474618422^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02666474618422^2+-0.0233522649780395^2+${new_z}^2)
variable           norm          equal     sqrt(0.02666474618422^2+-0.0233522649780395^2+-0.0269086621795012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.02666474618422/${norm}
variable           unit_x        equal     0.02666474618422/0.0445018321978316
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0233522649780395/${norm}
variable           unit_y        equal     -0.0233522649780395/0.0445018321978316
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0269086621795012/${norm}
variable           unit_z        equal     -0.0269086621795012/0.0445018321978316
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19230106006899+${delta}*${unit_x}
variable           x_new         equal     1.19230106006899+0.03*${unit_x}
variable           x_new         equal     1.19230106006899+0.03*0.599183109263516
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.0013306902843+${delta}*${unit_y}
variable           y_new         equal     4.0013306902843+0.03*${unit_y}
variable           y_new         equal     4.0013306902843+0.03*-0.524748394048759
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2939596607532+${delta}*${unit_z}
variable           z_new         equal     31.2939596607532+0.03*${unit_z}
variable           z_new         equal     31.2939596607532+0.03*-0.604664141913967

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2102765533469  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2102765533469  y  3.98558823846284  z   ${z_new}
set                atom          288751    x  1.2102765533469  y  3.98558823846284  z   31.2758197364958
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02666474618422  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02666474618422  -0.0233522649780395  ${new_z}
fix                hold    carbon   planeforce   0.02666474618422  -0.0233522649780395  -0.0269086621795012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     459   -1152449.3            0   -1152449.3 -0.032821221 -0.074284418   0.03194287 
     668   -1152449.3            0   -1152449.3 5.4014057e-06 8.9392142e-06 -2.4053142e-06 
Loop time of 2.45801 on 104 procs for 209 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32795921  -1152449.33245849  -1152449.33245849
  Force two-norm initial, final = 0.323273 6.4363390e-05
  Force max component initial, final = 0.17015766 8.9392142e-06
  Final line search alpha, max atom move = 1.0000000 8.9392142e-06
  Iterations, force evaluations = 209 418

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6401     | 1.76       | 2.3243     |  35.8 | 71.60
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037383   | 0.4012     | 1.1876     |  52.0 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5578e-05 | 0.0034342  | 0.007332   |   2.8 |  0.14
Other   |            | 0.2933     |            |       | 11.93

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20783963895249-${x_0}
variable           new_x         equal     1.20783963895249-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.98151119406826-${y_0}
variable           new_y         equal     3.98151119406826-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2769431114532-${z_0}
variable           new_z         equal     31.2769431114532-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0422033250677198*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0422033250677198*0.0422033250677198+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0422033250677198*0.0422033250677198+-0.0431717611940798*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0422033250677198*0.0422033250677198+-0.0431717611940798*-0.0431717611940798+${new_z}*${new_z})
variable           module        equal     sqrt(0.0422033250677198*0.0422033250677198+-0.0431717611940798*-0.0431717611940798+-0.0439252114795003*${new_z})
variable           module        equal     sqrt(0.0422033250677198*0.0422033250677198+-0.0431717611940798*-0.0431717611940798+-0.0439252114795003*-0.0439252114795003)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0422033250677198/${module}
variable           unitx         equal     0.0422033250677198/0.0746615417392991
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0431717611940798/${module}
variable           unity         equal     -0.0431717611940798/0.0746615417392991
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0439252114795003/${module}
variable           unitz         equal     -0.0439252114795003/0.0746615417392991
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.40140566773551e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.40140566773551e-06*5.40140566773551e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.40140566773551e-06*5.40140566773551e-06+8.9392141991434e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.40140566773551e-06*5.40140566773551e-06+8.9392141991434e-06*8.9392141991434e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.40140566773551e-06*5.40140566773551e-06+8.9392141991434e-06*8.9392141991434e-06+-2.4053142097729e-06*${fz})
variable           f_module      equal     sqrt(5.40140566773551e-06*5.40140566773551e-06+8.9392141991434e-06*8.9392141991434e-06+-2.4053142097729e-06*-2.4053142097729e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.565261901704148*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.565261901704148*0.565261901704148+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.565261901704148*0.565261901704148+-0.578232918693611*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.565261901704148*0.565261901704148+-0.578232918693611*-0.578232918693611+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.565261901704148*0.565261901704148+-0.578232918693611*-0.578232918693611+-0.588324463388086*${unitz})
variable           dir_module    equal     sqrt(0.565261901704148*0.565261901704148+-0.578232918693611*-0.578232918693611+-0.588324463388086*-0.588324463388086)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.40140566773551e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.40140566773551e-06*0.565261901704148+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.40140566773551e-06*0.565261901704148+8.9392141991434e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.40140566773551e-06*0.565261901704148+8.9392141991434e-06*-0.578232918693611+${fz}*${unitz}
variable           dot      equal     5.40140566773551e-06*0.565261901704148+8.9392141991434e-06*-0.578232918693611+-2.4053142097729e-06*${unitz}
variable           dot      equal     5.40140566773551e-06*0.565261901704148+8.9392141991434e-06*-0.578232918693611+-2.4053142097729e-06*-0.588324463388086
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.00633885833942e-07/${f_module}*${dir_module}
variable           cos      equal     -7.00633885833942e-07/1.07177549017202e-05*${dir_module}
variable           cos      equal     -7.00633885833942e-07/1.07177549017202e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0653713293743534)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.63621430569015/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.7481740949739-90.0)
print              "The dot product: ${dot}"
The dot product: -7.00633885833942e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.7481740949739

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0422033250677198^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0422033250677198^2+-0.0431717611940798^2+${new_z}^2)
variable           norm          equal     sqrt(0.0422033250677198^2+-0.0431717611940798^2+-0.0439252114795003^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0422033250677198/${norm}
variable           unit_x        equal     0.0422033250677198/0.0746615417392991
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0431717611940798/${norm}
variable           unit_y        equal     -0.0431717611940798/0.0746615417392991
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0439252114795003/${norm}
variable           unit_z        equal     -0.0439252114795003/0.0746615417392991
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20783963895249+${delta}*${unit_x}
variable           x_new         equal     1.20783963895249+0.03*${unit_x}
variable           x_new         equal     1.20783963895249+0.03*0.565261901704148
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.98151119406826+${delta}*${unit_y}
variable           y_new         equal     3.98151119406826+0.03*${unit_y}
variable           y_new         equal     3.98151119406826+0.03*-0.578232918693611
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2769431114532+${delta}*${unit_z}
variable           z_new         equal     31.2769431114532+0.03*${unit_z}
variable           z_new         equal     31.2769431114532+0.03*-0.588324463388086

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22479749600361  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22479749600361  y  3.96416420650745  z   ${z_new}
set                atom          288751    x  1.22479749600361  y  3.96416420650745  z   31.2592933775516
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0422033250677198  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0422033250677198  -0.0431717611940798  ${new_z}
fix                hold    carbon   planeforce   0.0422033250677198  -0.0431717611940798  -0.0439252114795003
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     668   -1152449.3            0   -1152449.3 -0.037130418    -0.086857   0.04969225 
     910   -1152449.3            0   -1152449.3 2.1733449e-06 2.354687e-06 -2.2614817e-07 
Loop time of 2.88241 on 104 procs for 242 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31622289  -1152449.32065551  -1152449.32065551
  Force two-norm initial, final = 0.32354752 1.3203678e-05
  Force max component initial, final = 0.16513113 2.3546870e-06
  Final line search alpha, max atom move = 1.0000000 2.3546870e-06
  Iterations, force evaluations = 242 484

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.74617    | 2.0439     | 2.6989     |  38.5 | 70.91
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042619   | 0.46581    | 1.3884     |  55.7 | 16.16
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.0172e-05 | 0.0039938  | 0.0086219  |   3.0 |  0.14
Other   |            | 0.3687     |            |       | 12.79

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.07 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115433 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22257366823726-${x_0}
variable           new_x         equal     1.22257366823726-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.95718549468644-${y_0}
variable           new_y         equal     3.95718549468644-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2640157305482-${z_0}
variable           new_z         equal     31.2640157305482-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05693735435249*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05693735435249*0.05693735435249+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05693735435249*0.05693735435249+-0.0674974605758996*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05693735435249*0.05693735435249+-0.0674974605758996*-0.0674974605758996+${new_z}*${new_z})
variable           module        equal     sqrt(0.05693735435249*0.05693735435249+-0.0674974605758996*-0.0674974605758996+-0.0568525923845016*${new_z})
variable           module        equal     sqrt(0.05693735435249*0.05693735435249+-0.0674974605758996*-0.0674974605758996+-0.0568525923845016*-0.0568525923845016)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.05693735435249/${module}
variable           unitx         equal     0.05693735435249/0.105023743818693
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0674974605758996/${module}
variable           unity         equal     -0.0674974605758996/0.105023743818693
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0568525923845016/${module}
variable           unitz         equal     -0.0568525923845016/0.105023743818693
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.17334486197688e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.17334486197688e-06*2.17334486197688e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.17334486197688e-06*2.17334486197688e-06+2.35468702165099e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.17334486197688e-06*2.17334486197688e-06+2.35468702165099e-06*2.35468702165099e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.17334486197688e-06*2.17334486197688e-06+2.35468702165099e-06*2.35468702165099e-06+-2.26148167809705e-07*${fz})
variable           f_module      equal     sqrt(2.17334486197688e-06*2.17334486197688e-06+2.35468702165099e-06*2.35468702165099e-06+-2.26148167809705e-07*-2.26148167809705e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.542137923123207*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.542137923123207*0.542137923123207+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.542137923123207*0.542137923123207+-0.642687625880328*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.542137923123207*0.542137923123207+-0.642687625880328*-0.642687625880328+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.542137923123207*0.542137923123207+-0.642687625880328*-0.642687625880328+-0.541330848790238*${unitz})
variable           dir_module    equal     sqrt(0.542137923123207*0.542137923123207+-0.642687625880328*-0.642687625880328+-0.541330848790238*-0.541330848790238)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.17334486197688e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.17334486197688e-06*0.542137923123207+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.17334486197688e-06*0.542137923123207+2.35468702165099e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.17334486197688e-06*0.542137923123207+2.35468702165099e-06*-0.642687625880328+${fz}*${unitz}
variable           dot      equal     2.17334486197688e-06*0.542137923123207+2.35468702165099e-06*-0.642687625880328+-2.26148167809705e-07*${unitz}
variable           dot      equal     2.17334486197688e-06*0.542137923123207+2.35468702165099e-06*-0.642687625880328+-2.26148167809705e-07*-0.541330848790238
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.12654562300672e-07/${f_module}*${dir_module}
variable           cos      equal     -2.12654562300672e-07/3.21233900029505e-06*${dir_module}
variable           cos      equal     -2.12654562300672e-07/3.21233900029505e-06*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0661992903865811)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.63704406414897/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.7957157526796-90.0)
print              "The dot product: ${dot}"
The dot product: -2.12654562300672e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.7957157526796

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05693735435249^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05693735435249^2+-0.0674974605758996^2+${new_z}^2)
variable           norm          equal     sqrt(0.05693735435249^2+-0.0674974605758996^2+-0.0568525923845016^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.05693735435249/${norm}
variable           unit_x        equal     0.05693735435249/0.105023743818693
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0674974605758996/${norm}
variable           unit_y        equal     -0.0674974605758996/0.105023743818693
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0568525923845016/${norm}
variable           unit_z        equal     -0.0568525923845016/0.105023743818693
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22257366823726+${delta}*${unit_x}
variable           x_new         equal     1.22257366823726+0.03*${unit_x}
variable           x_new         equal     1.22257366823726+0.03*0.542137923123207
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.95718549468644+${delta}*${unit_y}
variable           y_new         equal     3.95718549468644+0.03*${unit_y}
variable           y_new         equal     3.95718549468644+0.03*-0.642687625880328
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2640157305482+${delta}*${unit_z}
variable           z_new         equal     31.2640157305482+0.03*${unit_z}
variable           z_new         equal     31.2640157305482+0.03*-0.541330848790238

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23883780593096  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23883780593096  y  3.93790486591003  z   ${z_new}
set                atom          288751    x  1.23883780593096  y  3.93790486591003  z   31.2477758050845
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05693735435249  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05693735435249  -0.0674974605758996  ${new_z}
fix                hold    carbon   planeforce   0.05693735435249  -0.0674974605758996  -0.0568525923845016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     910   -1152449.3            0   -1152449.3 -0.038202687 -0.096570222  0.076392029 
    1000   -1152449.3            0   -1152449.3 -0.00010835065 -0.00013082657 4.6809852e-05 
    1096   -1152449.3            0   -1152449.3 8.6937853e-06 1.9333839e-05 -1.4247088e-05 
Loop time of 2.1744 on 104 procs for 186 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30130548  -1152449.30579321  -1152449.30579321
  Force two-norm initial, final = 0.32438529 0.00011415925
  Force max component initial, final = 0.15576418 1.9333839e-05
  Final line search alpha, max atom move = 1.0000000 1.9333839e-05
  Iterations, force evaluations = 186 372

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56963    | 1.5649     | 2.0559     |  33.8 | 71.97
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033326   | 0.35491    | 1.0568     |  49.5 | 16.32
Output  | 0.00013521 | 0.00014505 | 0.0002736  |   0.0 |  0.01
Modify  | 2.2972e-05 | 0.0030673  | 0.0065441  |   2.6 |  0.14
Other   |            | 0.2514     |            |       | 11.56

Nlocal:        2776.45 ave        3959 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115396 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.23742287161869-${x_0}
variable           new_x         equal     1.23742287161869-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.92837196925113-${y_0}
variable           new_y         equal     3.92837196925113-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2576765620505-${z_0}
variable           new_z         equal     31.2576765620505-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0717865577339198*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0717865577339198*0.0717865577339198+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0717865577339198*0.0717865577339198+-0.0963109860112099*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0717865577339198*0.0717865577339198+-0.0963109860112099*-0.0963109860112099+${new_z}*${new_z})
variable           module        equal     sqrt(0.0717865577339198*0.0717865577339198+-0.0963109860112099*-0.0963109860112099+-0.0631917608822015*${new_z})
variable           module        equal     sqrt(0.0717865577339198*0.0717865577339198+-0.0963109860112099*-0.0963109860112099+-0.0631917608822015*-0.0631917608822015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0717865577339198/${module}
variable           unitx         equal     0.0717865577339198/0.135728827229628
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0963109860112099/${module}
variable           unity         equal     -0.0963109860112099/0.135728827229628
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0631917608822015/${module}
variable           unitz         equal     -0.0631917608822015/0.135728827229628
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.6937852961712e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.6937852961712e-06*8.6937852961712e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.6937852961712e-06*8.6937852961712e-06+1.93338391219251e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.6937852961712e-06*8.6937852961712e-06+1.93338391219251e-05*1.93338391219251e-05+${fz}*${fz})
variable           f_module      equal     sqrt(8.6937852961712e-06*8.6937852961712e-06+1.93338391219251e-05*1.93338391219251e-05+-1.42470884065575e-05*${fz})
variable           f_module      equal     sqrt(8.6937852961712e-06*8.6937852961712e-06+1.93338391219251e-05*1.93338391219251e-05+-1.42470884065575e-05*-1.42470884065575e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.52889691305201*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.52889691305201*0.52889691305201+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.52889691305201*0.52889691305201+-0.70958386642706*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.52889691305201*0.52889691305201+-0.70958386642706*-0.70958386642706+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.52889691305201*0.52889691305201+-0.70958386642706*-0.70958386642706+-0.465573615951848*${unitz})
variable           dir_module    equal     sqrt(0.52889691305201*0.52889691305201+-0.70958386642706*-0.70958386642706+-0.465573615951848*-0.465573615951848)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.6937852961712e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.6937852961712e-06*0.52889691305201+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.6937852961712e-06*0.52889691305201+1.93338391219251e-05*${unity}+${fz}*${unitz}
variable           dot      equal     8.6937852961712e-06*0.52889691305201+1.93338391219251e-05*-0.70958386642706+${fz}*${unitz}
variable           dot      equal     8.6937852961712e-06*0.52889691305201+1.93338391219251e-05*-0.70958386642706+-1.42470884065575e-05*${unitz}
variable           dot      equal     8.6937852961712e-06*0.52889691305201+1.93338391219251e-05*-0.70958386642706+-1.42470884065575e-05*-0.465573615951848
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.48779564490584e-06/${f_module}*${dir_module}
variable           cos      equal     -2.48779564490584e-06/2.55413148845683e-05*${dir_module}
variable           cos      equal     -2.48779564490584e-06/2.55413148845683e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0974028023282752)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.66835380542524/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(95.5896317854564-90.0)
print              "The dot product: ${dot}"
The dot product: -2.48779564490584e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 95.5896317854564

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0717865577339198^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0717865577339198^2+-0.0963109860112099^2+${new_z}^2)
variable           norm          equal     sqrt(0.0717865577339198^2+-0.0963109860112099^2+-0.0631917608822015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0717865577339198/${norm}
variable           unit_x        equal     0.0717865577339198/0.135728827229628
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0963109860112099/${norm}
variable           unit_y        equal     -0.0963109860112099/0.135728827229628
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0631917608822015/${norm}
variable           unit_z        equal     -0.0631917608822015/0.135728827229628
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.23742287161869+${delta}*${unit_x}
variable           x_new         equal     1.23742287161869+0.03*${unit_x}
variable           x_new         equal     1.23742287161869+0.03*0.52889691305201
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.92837196925113+${delta}*${unit_y}
variable           y_new         equal     3.92837196925113+0.03*${unit_y}
variable           y_new         equal     3.92837196925113+0.03*-0.70958386642706
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2576765620505+${delta}*${unit_z}
variable           z_new         equal     31.2576765620505+0.03*${unit_z}
variable           z_new         equal     31.2576765620505+0.03*-0.465573615951848

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25328977901025  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25328977901025  y  3.90708445325832  z   ${z_new}
set                atom          288751    x  1.25328977901025  y  3.90708445325832  z   31.2437093535719
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0717865577339198  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0717865577339198  -0.0963109860112099  ${new_z}
fix                hold    carbon   planeforce   0.0717865577339198  -0.0963109860112099  -0.0631917608822015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1096   -1152449.3            0   -1152449.3 -0.040816976 -0.096446504   0.10062621 
    1225   -1152449.3            0   -1152449.3 -1.2212326e-05 -6.9381812e-06 -3.2988126e-06 
Loop time of 1.51333 on 104 procs for 129 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.28360112  -1152449.28810764  -1152449.28810764
  Force two-norm initial, final = 0.32220485 0.00013263
  Force max component initial, final = 0.14171241 1.2212326e-05
  Final line search alpha, max atom move = 1.0000000 1.2212326e-05
  Iterations, force evaluations = 129 258

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.39495    | 1.086      | 1.4307     |  28.1 | 71.77
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02352    | 0.24695    | 0.73219    |  41.0 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6154e-05 | 0.0021284  | 0.0045475  |   2.2 |  0.14
Other   |            | 0.1782     |            |       | 11.78

Nlocal:        2776.45 ave        3953 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115199 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25184044970994-${x_0}
variable           new_x         equal     1.25184044970994-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.89681314547127-${y_0}
variable           new_y         equal     3.89681314547127-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2577174680278-${z_0}
variable           new_z         equal     31.2577174680278-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0862041358251699*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0862041358251699*0.0862041358251699+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0862041358251699*0.0862041358251699+-0.12786980979107*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0862041358251699*0.0862041358251699+-0.12786980979107*-0.12786980979107+${new_z}*${new_z})
variable           module        equal     sqrt(0.0862041358251699*0.0862041358251699+-0.12786980979107*-0.12786980979107+-0.0631508549049009*${new_z})
variable           module        equal     sqrt(0.0862041358251699*0.0862041358251699+-0.12786980979107*-0.12786980979107+-0.0631508549049009*-0.0631508549049009)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0862041358251699/${module}
variable           unitx         equal     0.0862041358251699/0.166642946939223
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.12786980979107/${module}
variable           unity         equal     -0.12786980979107/0.166642946939223
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0631508549049009/${module}
variable           unitz         equal     -0.0631508549049009/0.166642946939223
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.2212326072234e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.2212326072234e-05*-1.2212326072234e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.2212326072234e-05*-1.2212326072234e-05+-6.93818121488142e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.2212326072234e-05*-1.2212326072234e-05+-6.93818121488142e-06*-6.93818121488142e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.2212326072234e-05*-1.2212326072234e-05+-6.93818121488142e-06*-6.93818121488142e-06+-3.29881259532666e-06*${fz})
variable           f_module      equal     sqrt(-1.2212326072234e-05*-1.2212326072234e-05+-6.93818121488142e-06*-6.93818121488142e-06+-3.29881259532666e-06*-3.29881259532666e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.517298436018476*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.517298436018476*0.517298436018476+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.517298436018476*0.517298436018476+-0.767328063621594*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.517298436018476*0.517298436018476+-0.767328063621594*-0.767328063621594+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.517298436018476*0.517298436018476+-0.767328063621594*-0.767328063621594+-0.378959062263421*${unitz})
variable           dir_module    equal     sqrt(0.517298436018476*0.517298436018476+-0.767328063621594*-0.767328063621594+-0.378959062263421*-0.378959062263421)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.2212326072234e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.2212326072234e-05*0.517298436018476+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.2212326072234e-05*0.517298436018476+-6.93818121488142e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.2212326072234e-05*0.517298436018476+-6.93818121488142e-06*-0.767328063621594+${fz}*${unitz}
variable           dot      equal     -1.2212326072234e-05*0.517298436018476+-6.93818121488142e-06*-0.767328063621594+-3.29881259532666e-06*${unitz}
variable           dot      equal     -1.2212326072234e-05*0.517298436018476+-6.93818121488142e-06*-0.767328063621594+-3.29881259532666e-06*-0.378959062263421
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.56558907064125e-07/${f_module}*${dir_module}
variable           cos      equal     2.56558907064125e-07/1.44278006364167e-05*${dir_module}
variable           cos      equal     2.56558907064125e-07/1.44278006364167e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0177822603409527)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55301312916942/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.9810978298131-90.0)
print              "The dot product: ${dot}"
The dot product: 2.56558907064125e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.9810978298131

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0862041358251699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0862041358251699^2+-0.12786980979107^2+${new_z}^2)
variable           norm          equal     sqrt(0.0862041358251699^2+-0.12786980979107^2+-0.0631508549049009^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0862041358251699/${norm}
variable           unit_x        equal     0.0862041358251699/0.166642946939223
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.12786980979107/${norm}
variable           unit_y        equal     -0.12786980979107/0.166642946939223
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0631508549049009/${norm}
variable           unit_z        equal     -0.0631508549049009/0.166642946939223
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25184044970994+${delta}*${unit_x}
variable           x_new         equal     1.25184044970994+0.03*${unit_x}
variable           x_new         equal     1.25184044970994+0.03*0.517298436018476
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.89681314547127+${delta}*${unit_y}
variable           y_new         equal     3.89681314547127+0.03*${unit_y}
variable           y_new         equal     3.89681314547127+0.03*-0.767328063621594
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2577174680278+${delta}*${unit_z}
variable           z_new         equal     31.2577174680278+0.03*${unit_z}
variable           z_new         equal     31.2577174680278+0.03*-0.378959062263421

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26735940279049  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26735940279049  y  3.87379330356262  z   ${z_new}
set                atom          288751    x  1.26735940279049  y  3.87379330356262  z   31.2463486961599
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0862041358251699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0862041358251699  -0.12786980979107  ${new_z}
fix                hold    carbon   planeforce   0.0862041358251699  -0.12786980979107  -0.0631508549049009
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1225   -1152449.3            0   -1152449.3 -0.047371141 -0.086968119   0.11143172 
    1462   -1152449.3            0   -1152449.3 -3.8156965e-06 -4.8178217e-06 4.5466546e-06 
Loop time of 2.74902 on 104 procs for 237 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.26316868  -1152449.26756362  -1152449.26756362
  Force two-norm initial, final = 0.31466601 2.1714801e-05
  Force max component initial, final = 0.14447809 5.6120081e-06
  Final line search alpha, max atom move = 1.0000000 5.6120081e-06
  Iterations, force evaluations = 237 474

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.72045    | 1.9892     | 2.5923     |  38.1 | 72.36
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043567   | 0.44834    | 1.346      |  56.3 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.8848e-05 | 0.0039017  | 0.0083383  |   2.9 |  0.14
Other   |            | 0.3076     |            |       | 11.19

Nlocal:        2776.45 ave        3949 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115065 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.2651166879962-${x_0}
variable           new_x         equal     1.2651166879962-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.86423711890044-${y_0}
variable           new_y         equal     3.86423711890044-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2626369352644-${z_0}
variable           new_z         equal     31.2626369352644-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0994803741114298*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0994803741114298*0.0994803741114298+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0994803741114298*0.0994803741114298+-0.1604458363619*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0994803741114298*0.0994803741114298+-0.1604458363619*-0.1604458363619+${new_z}*${new_z})
variable           module        equal     sqrt(0.0994803741114298*0.0994803741114298+-0.1604458363619*-0.1604458363619+-0.0582313876683003*${new_z})
variable           module        equal     sqrt(0.0994803741114298*0.0994803741114298+-0.1604458363619*-0.1604458363619+-0.0582313876683003*-0.0582313876683003)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0994803741114298/${module}
variable           unitx         equal     0.0994803741114298/0.197560385069972
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.1604458363619/${module}
variable           unity         equal     -0.1604458363619/0.197560385069972
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0582313876683003/${module}
variable           unitz         equal     -0.0582313876683003/0.197560385069972
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.81569651173152e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.81569651173152e-06*-3.81569651173152e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.81569651173152e-06*-3.81569651173152e-06+-4.81782168575797e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.81569651173152e-06*-3.81569651173152e-06+-4.81782168575797e-06*-4.81782168575797e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.81569651173152e-06*-3.81569651173152e-06+-4.81782168575797e-06*-4.81782168575797e-06+4.54665455669657e-06*${fz})
variable           f_module      equal     sqrt(-3.81569651173152e-06*-3.81569651173152e-06+-4.81782168575797e-06*-4.81782168575797e-06+4.54665455669657e-06*4.54665455669657e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.503544139561157*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.503544139561157*0.503544139561157+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.503544139561157*0.503544139561157+-0.812135673379424*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.503544139561157*0.503544139561157+-0.812135673379424*-0.812135673379424+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.503544139561157*0.503544139561157+-0.812135673379424*-0.812135673379424+-0.294752349504056*${unitz})
variable           dir_module    equal     sqrt(0.503544139561157*0.503544139561157+-0.812135673379424*-0.812135673379424+-0.294752349504056*-0.294752349504056)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.81569651173152e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.81569651173152e-06*0.503544139561157+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.81569651173152e-06*0.503544139561157+-4.81782168575797e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.81569651173152e-06*0.503544139561157+-4.81782168575797e-06*-0.812135673379424+${fz}*${unitz}
variable           dot      equal     -3.81569651173152e-06*0.503544139561157+-4.81782168575797e-06*-0.812135673379424+4.54665455669657e-06*${unitz}
variable           dot      equal     -3.81569651173152e-06*0.503544139561157+-4.81782168575797e-06*-0.812135673379424+4.54665455669657e-06*-0.294752349504056
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.51216129189048e-07/${f_module}*${dir_module}
variable           cos      equal     6.51216129189048e-07/7.64480302711126e-06*${dir_module}
variable           cos      equal     6.51216129189048e-07/7.64480302711126e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0851841606486913)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.48550880739693/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(85.1133850933564-90.0)
print              "The dot product: ${dot}"
The dot product: 6.51216129189048e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 85.1133850933564

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0994803741114298^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0994803741114298^2+-0.1604458363619^2+${new_z}^2)
variable           norm          equal     sqrt(0.0994803741114298^2+-0.1604458363619^2+-0.0582313876683003^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0994803741114298/${norm}
variable           unit_x        equal     0.0994803741114298/0.197560385069972
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.1604458363619/${norm}
variable           unit_y        equal     -0.1604458363619/0.197560385069972
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0582313876683003/${norm}
variable           unit_z        equal     -0.0582313876683003/0.197560385069972
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.2651166879962+${delta}*${unit_x}
variable           x_new         equal     1.2651166879962+0.03*${unit_x}
variable           x_new         equal     1.2651166879962+0.03*0.503544139561157
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.86423711890044+${delta}*${unit_y}
variable           y_new         equal     3.86423711890044+0.03*${unit_y}
variable           y_new         equal     3.86423711890044+0.03*-0.812135673379424
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2626369352644+${delta}*${unit_z}
variable           z_new         equal     31.2626369352644+0.03*${unit_z}
variable           z_new         equal     31.2626369352644+0.03*-0.294752349504056

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28022301218303  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28022301218303  y  3.83987304869906  z   ${z_new}
set                atom          288751    x  1.28022301218303  y  3.83987304869906  z   31.2537943647793
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0994803741114298  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0994803741114298  -0.1604458363619  ${new_z}
fix                hold    carbon   planeforce   0.0994803741114298  -0.1604458363619  -0.0582313876683003
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1462   -1152449.2            0   -1152449.2 -0.055252913 -0.072840264   0.10630584 
    1649   -1152449.2            0   -1152449.2 8.2587733e-06 1.1573899e-05 -1.7780756e-05 
Loop time of 2.19476 on 104 procs for 187 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.23994119  -1152449.24408176  -1152449.24408176
  Force two-norm initial, final = 0.30248667 0.00013367145
  Force max component initial, final = 0.15818544 1.7780756e-05
  Final line search alpha, max atom move = 1.0000000 1.7780756e-05
  Iterations, force evaluations = 187 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57108    | 1.5744     | 2.0684     |  33.8 | 71.73
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03961    | 0.35807    | 1.065      |  49.5 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3536e-05 | 0.0030797  | 0.0065555  |   2.6 |  0.14
Other   |            | 0.2592     |            |       | 11.81

Nlocal:        2776.45 ave        3943 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114887 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27628926677302-${x_0}
variable           new_x         equal     1.27628926677302-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.83163287325589-${y_0}
variable           new_y         equal     3.83163287325589-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2697783798093-${z_0}
variable           new_z         equal     31.2697783798093-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11065295288825*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11065295288825*0.11065295288825+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11065295288825*0.11065295288825+-0.19305008200645*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11065295288825*0.11065295288825+-0.19305008200645*-0.19305008200645+${new_z}*${new_z})
variable           module        equal     sqrt(0.11065295288825*0.11065295288825+-0.19305008200645*-0.19305008200645+-0.0510899431234009*${new_z})
variable           module        equal     sqrt(0.11065295288825*0.11065295288825+-0.19305008200645*-0.19305008200645+-0.0510899431234009*-0.0510899431234009)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.11065295288825/${module}
variable           unitx         equal     0.11065295288825/0.228303728471391
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.19305008200645/${module}
variable           unity         equal     -0.19305008200645/0.228303728471391
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0510899431234009/${module}
variable           unitz         equal     -0.0510899431234009/0.228303728471391
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.25877328645529e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.25877328645529e-06*8.25877328645529e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.25877328645529e-06*8.25877328645529e-06+1.15738992193113e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.25877328645529e-06*8.25877328645529e-06+1.15738992193113e-05*1.15738992193113e-05+${fz}*${fz})
variable           f_module      equal     sqrt(8.25877328645529e-06*8.25877328645529e-06+1.15738992193113e-05*1.15738992193113e-05+-1.77807557989093e-05*${fz})
variable           f_module      equal     sqrt(8.25877328645529e-06*8.25877328645529e-06+1.15738992193113e-05*1.15738992193113e-05+-1.77807557989093e-05*-1.77807557989093e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484674313595873*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484674313595873*0.484674313595873+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484674313595873*0.484674313595873+-0.845584447082919*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484674313595873*0.484674313595873+-0.845584447082919*-0.845584447082919+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.484674313595873*0.484674313595873+-0.845584447082919*-0.845584447082919+-0.223780590292913*${unitz})
variable           dir_module    equal     sqrt(0.484674313595873*0.484674313595873+-0.845584447082919*-0.845584447082919+-0.223780590292913*-0.223780590292913)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.25877328645529e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.25877328645529e-06*0.484674313595873+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.25877328645529e-06*0.484674313595873+1.15738992193113e-05*${unity}+${fz}*${unitz}
variable           dot      equal     8.25877328645529e-06*0.484674313595873+1.15738992193113e-05*-0.845584447082919+${fz}*${unitz}
variable           dot      equal     8.25877328645529e-06*0.484674313595873+1.15738992193113e-05*-0.845584447082919+-1.77807557989093e-05*${unitz}
variable           dot      equal     8.25877328645529e-06*0.484674313595873+1.15738992193113e-05*-0.845584447082919+-1.77807557989093e-05*-0.223780590292913
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.80490586966407e-06/${f_module}*${dir_module}
variable           cos      equal     -1.80490586966407e-06/2.27665929843771e-05*${dir_module}
variable           cos      equal     -1.80490586966407e-06/2.27665929843771e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0792786988770183)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.65015830735142/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(94.5471065396881-90.0)
print              "The dot product: ${dot}"
The dot product: -1.80490586966407e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 94.5471065396881

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11065295288825^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11065295288825^2+-0.19305008200645^2+${new_z}^2)
variable           norm          equal     sqrt(0.11065295288825^2+-0.19305008200645^2+-0.0510899431234009^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.11065295288825/${norm}
variable           unit_x        equal     0.11065295288825/0.228303728471391
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.19305008200645/${norm}
variable           unit_y        equal     -0.19305008200645/0.228303728471391
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0510899431234009/${norm}
variable           unit_z        equal     -0.0510899431234009/0.228303728471391
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27628926677302+${delta}*${unit_x}
variable           x_new         equal     1.27628926677302+0.03*${unit_x}
variable           x_new         equal     1.27628926677302+0.03*0.484674313595873
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.83163287325589+${delta}*${unit_y}
variable           y_new         equal     3.83163287325589+0.03*${unit_y}
variable           y_new         equal     3.83163287325589+0.03*-0.845584447082919
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2697783798093+${delta}*${unit_z}
variable           z_new         equal     31.2697783798093+0.03*${unit_z}
variable           z_new         equal     31.2697783798093+0.03*-0.223780590292913

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2908294961809  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2908294961809  y  3.8062653398434  z   ${z_new}
set                atom          288751    x  1.2908294961809  y  3.8062653398434  z   31.2630649621005
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11065295288825  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11065295288825  -0.19305008200645  ${new_z}
fix                hold    carbon   planeforce   0.11065295288825  -0.19305008200645  -0.0510899431234009
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1649   -1152449.2            0   -1152449.2 -0.062122153 -0.059304562  0.089543082 
    1852   -1152449.2            0   -1152449.2 -4.1216336e-06 -1.484983e-06 -3.31562e-06 
Loop time of 2.36989 on 104 procs for 203 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.2137992  -1152449.21766888  -1152449.21766888
  Force two-norm initial, final = 0.28936588 9.7646017e-05
  Force max component initial, final = 0.16985493 6.8020133e-06
  Final line search alpha, max atom move = 1.0000000 6.8020133e-06
  Iterations, force evaluations = 203 406

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61963    | 1.705      | 2.2412     |  35.2 | 71.95
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036688   | 0.38848    | 1.1585     |  51.4 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5109e-05 | 0.0033474  | 0.0071702  |   2.7 |  0.14
Other   |            | 0.273      |            |       | 11.52

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114481 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28422335548373-${x_0}
variable           new_x         equal     1.28422335548373-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.79914598916747-${y_0}
variable           new_y         equal     3.79914598916747-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2756584828039-${z_0}
variable           new_z         equal     31.2756584828039-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11858704159896*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11858704159896*0.11858704159896+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11858704159896*0.11858704159896+-0.22553696609487*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11858704159896*0.11858704159896+-0.22553696609487*-0.22553696609487+${new_z}*${new_z})
variable           module        equal     sqrt(0.11858704159896*0.11858704159896+-0.22553696609487*-0.22553696609487+-0.0452098401287984*${new_z})
variable           module        equal     sqrt(0.11858704159896*0.11858704159896+-0.22553696609487*-0.22553696609487+-0.0452098401287984*-0.0452098401287984)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.11858704159896/${module}
variable           unitx         equal     0.11858704159896/0.25879284989146
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.22553696609487/${module}
variable           unity         equal     -0.22553696609487/0.25879284989146
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0452098401287984/${module}
variable           unitz         equal     -0.0452098401287984/0.25879284989146
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.12163358123838e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.12163358123838e-06*-4.12163358123838e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.12163358123838e-06*-4.12163358123838e-06+-1.4849829913371e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.12163358123838e-06*-4.12163358123838e-06+-1.4849829913371e-06*-1.4849829913371e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.12163358123838e-06*-4.12163358123838e-06+-1.4849829913371e-06*-1.4849829913371e-06+-3.31562002043625e-06*${fz})
variable           f_module      equal     sqrt(-4.12163358123838e-06*-4.12163358123838e-06+-1.4849829913371e-06*-1.4849829913371e-06+-3.31562002043625e-06*-3.31562002043625e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.4582315224269*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.4582315224269*0.4582315224269+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.4582315224269*0.4582315224269+-0.871496125914847*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.4582315224269*0.4582315224269+-0.871496125914847*-0.871496125914847+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.4582315224269*0.4582315224269+-0.871496125914847*-0.871496125914847+-0.174695089712717*${unitz})
variable           dir_module    equal     sqrt(0.4582315224269*0.4582315224269+-0.871496125914847*-0.871496125914847+-0.174695089712717*-0.174695089712717)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.12163358123838e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.12163358123838e-06*0.4582315224269+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.12163358123838e-06*0.4582315224269+-1.4849829913371e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.12163358123838e-06*0.4582315224269+-1.4849829913371e-06*-0.871496125914847+${fz}*${unitz}
variable           dot      equal     -4.12163358123838e-06*0.4582315224269+-1.4849829913371e-06*-0.871496125914847+-3.31562002043625e-06*${unitz}
variable           dot      equal     -4.12163358123838e-06*0.4582315224269+-1.4849829913371e-06*-0.871496125914847+-3.31562002043625e-06*-0.174695089712717
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.52829698935841e-08/${f_module}*${dir_module}
variable           cos      equal     -1.52829698935841e-08/5.49421277186005e-06*${dir_module}
variable           cos      equal     -1.52829698935841e-08/5.49421277186005e-06*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00278164871441811)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57357797909653/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.1593769369564-90.0)
print              "The dot product: ${dot}"
The dot product: -1.52829698935841e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.1593769369564

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11858704159896^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11858704159896^2+-0.22553696609487^2+${new_z}^2)
variable           norm          equal     sqrt(0.11858704159896^2+-0.22553696609487^2+-0.0452098401287984^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.11858704159896/${norm}
variable           unit_x        equal     0.11858704159896/0.25879284989146
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.22553696609487/${norm}
variable           unit_y        equal     -0.22553696609487/0.25879284989146
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0452098401287984/${norm}
variable           unit_z        equal     -0.0452098401287984/0.25879284989146
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28422335548373+${delta}*${unit_x}
variable           x_new         equal     1.28422335548373+0.03*${unit_x}
variable           x_new         equal     1.28422335548373+0.03*0.4582315224269
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.79914598916747+${delta}*${unit_y}
variable           y_new         equal     3.79914598916747+0.03*${unit_y}
variable           y_new         equal     3.79914598916747+0.03*-0.871496125914847
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2756584828039+${delta}*${unit_z}
variable           z_new         equal     31.2756584828039+0.03*${unit_z}
variable           z_new         equal     31.2756584828039+0.03*-0.174695089712717

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29797030115654  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29797030115654  y  3.77300110539002  z   ${z_new}
set                atom          288751    x  1.29797030115654  y  3.77300110539002  z   31.2704176301125
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11858704159896  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11858704159896  -0.22553696609487  ${new_z}
fix                hold    carbon   planeforce   0.11858704159896  -0.22553696609487  -0.0452098401287984
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1852   -1152449.2            0   -1152449.2 -0.068206682 -0.049567832  0.068368961 
    2000   -1152449.2            0   -1152449.2 -1.6397575e-05 -1.2162582e-05 1.7663675e-05 
    2093   -1152449.2            0   -1152449.2 1.3946043e-06 1.0847734e-06 -1.7534789e-06 
Loop time of 2.80126 on 104 procs for 241 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.18471989  -1152449.18836733  -1152449.18836733
  Force two-norm initial, final = 0.27881552 1.3355442e-05
  Force max component initial, final = 0.17994589 2.4017118e-06
  Final line search alpha, max atom move = 1.0000000 2.4017118e-06
  Iterations, force evaluations = 241 482

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.73808    | 2.0264     | 2.6459     |  38.2 | 72.34
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043148   | 0.45587    | 1.3701     |  56.5 | 16.27
Output  | 0.00013737 | 0.00014585 | 0.00029489 |   0.0 |  0.01
Modify  | 3.0485e-05 | 0.0039726  | 0.0085148  |   3.0 |  0.14
Other   |            | 0.3149     |            |       | 11.24

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114472 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28841801628579-${x_0}
variable           new_x         equal     1.28841801628579-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.76626947012289-${y_0}
variable           new_y         equal     3.76626947012289-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2789435481562-${z_0}
variable           new_z         equal     31.2789435481562-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12278170240102*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12278170240102*0.12278170240102+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12278170240102*0.12278170240102+-0.25841348513945*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12278170240102*0.12278170240102+-0.25841348513945*-0.25841348513945+${new_z}*${new_z})
variable           module        equal     sqrt(0.12278170240102*0.12278170240102+-0.25841348513945*-0.25841348513945+-0.0419247747765006*${new_z})
variable           module        equal     sqrt(0.12278170240102*0.12278170240102+-0.25841348513945*-0.25841348513945+-0.0419247747765006*-0.0419247747765006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12278170240102/${module}
variable           unitx         equal     0.12278170240102/0.289154910880776
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.25841348513945/${module}
variable           unity         equal     -0.25841348513945/0.289154910880776
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0419247747765006/${module}
variable           unitz         equal     -0.0419247747765006/0.289154910880776
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39460433432445e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39460433432445e-06*1.39460433432445e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39460433432445e-06*1.39460433432445e-06+1.08477340046016e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39460433432445e-06*1.39460433432445e-06+1.08477340046016e-06*1.08477340046016e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.39460433432445e-06*1.39460433432445e-06+1.08477340046016e-06*1.08477340046016e-06+-1.75347887078796e-06*${fz})
variable           f_module      equal     sqrt(1.39460433432445e-06*1.39460433432445e-06+1.08477340046016e-06*1.08477340046016e-06+-1.75347887078796e-06*-1.75347887078796e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.424622573509205*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.424622573509205*0.424622573509205+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.424622573509205*0.424622573509205+-0.893685271857612*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.424622573509205*0.424622573509205+-0.893685271857612*-0.893685271857612+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.424622573509205*0.424622573509205+-0.893685271857612*-0.893685271857612+-0.144990706361501*${unitz})
variable           dir_module    equal     sqrt(0.424622573509205*0.424622573509205+-0.893685271857612*-0.893685271857612+-0.144990706361501*-0.144990706361501)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.39460433432445e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.39460433432445e-06*0.424622573509205+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.39460433432445e-06*0.424622573509205+1.08477340046016e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.39460433432445e-06*0.424622573509205+1.08477340046016e-06*-0.893685271857612+${fz}*${unitz}
variable           dot      equal     1.39460433432445e-06*0.424622573509205+1.08477340046016e-06*-0.893685271857612+-1.75347887078796e-06*${unitz}
variable           dot      equal     1.39460433432445e-06*0.424622573509205+1.08477340046016e-06*-0.893685271857612+-1.75347887078796e-06*-0.144990706361501
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.23027389760691e-07/${f_module}*${dir_module}
variable           cos      equal     -1.23027389760691e-07/2.48924541376745e-06*${dir_module}
variable           cos      equal     -1.23027389760691e-07/2.48924541376745e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0494235679134948)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62024003792604/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.8329159712785-90.0)
print              "The dot product: ${dot}"
The dot product: -1.23027389760691e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.8329159712785

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12278170240102^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12278170240102^2+-0.25841348513945^2+${new_z}^2)
variable           norm          equal     sqrt(0.12278170240102^2+-0.25841348513945^2+-0.0419247747765006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12278170240102/${norm}
variable           unit_x        equal     0.12278170240102/0.289154910880776
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.25841348513945/${norm}
variable           unit_y        equal     -0.25841348513945/0.289154910880776
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0419247747765006/${norm}
variable           unit_z        equal     -0.0419247747765006/0.289154910880776
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28841801628579+${delta}*${unit_x}
variable           x_new         equal     1.28841801628579+0.03*${unit_x}
variable           x_new         equal     1.28841801628579+0.03*0.424622573509205
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.76626947012289+${delta}*${unit_y}
variable           y_new         equal     3.76626947012289+0.03*${unit_y}
variable           y_new         equal     3.76626947012289+0.03*-0.893685271857612
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2789435481562+${delta}*${unit_z}
variable           z_new         equal     31.2789435481562+0.03*${unit_z}
variable           z_new         equal     31.2789435481562+0.03*-0.144990706361501

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30115669349107  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30115669349107  y  3.73945891196716  z   ${z_new}
set                atom          288751    x  1.30115669349107  y  3.73945891196716  z   31.2745938269654
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12278170240102  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12278170240102  -0.25841348513945  ${new_z}
fix                hold    carbon   planeforce   0.12278170240102  -0.25841348513945  -0.0419247747765006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2093   -1152449.2            0   -1152449.2 -0.077520135 -0.044494406  0.047225071 
    2337   -1152449.2            0   -1152449.2 -1.0819216e-06 -8.0285382e-07 1.7800472e-06 
Loop time of 2.85255 on 104 procs for 244 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.15261948  -1152449.15626939  -1152449.15626939
  Force two-norm initial, final = 0.273923 1.2084278e-05
  Force max component initial, final = 0.18992969 1.7800472e-06
  Final line search alpha, max atom move = 1.0000000 1.7800472e-06
  Iterations, force evaluations = 244 488

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.74548    | 2.0508     | 2.6939     |  38.6 | 71.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.04769    | 0.46547    | 1.3854     |  56.4 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.1544e-05 | 0.004012   | 0.0085937  |   3.0 |  0.14
Other   |            | 0.3323     |            |       | 11.65

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114472 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28583562744963-${x_0}
variable           new_x         equal     1.28583562744963-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.73146241608954-${y_0}
variable           new_y         equal     3.73146241608954-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2790125936352-${z_0}
variable           new_z         equal     31.2790125936352-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12019931356486*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12019931356486*0.12019931356486+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12019931356486*0.12019931356486+-0.2932205391728*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12019931356486*0.12019931356486+-0.2932205391728*-0.2932205391728+${new_z}*${new_z})
variable           module        equal     sqrt(0.12019931356486*0.12019931356486+-0.2932205391728*-0.2932205391728+-0.0418557292974988*${new_z})
variable           module        equal     sqrt(0.12019931356486*0.12019931356486+-0.2932205391728*-0.2932205391728+-0.0418557292974988*-0.0418557292974988)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12019931356486/${module}
variable           unitx         equal     0.12019931356486/0.319653033223958
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.2932205391728/${module}
variable           unity         equal     -0.2932205391728/0.319653033223958
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0418557292974988/${module}
variable           unitz         equal     -0.0418557292974988/0.319653033223958
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.08192158794398e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.08192158794398e-06*-1.08192158794398e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.08192158794398e-06*-1.08192158794398e-06+-8.02853821296567e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.08192158794398e-06*-1.08192158794398e-06+-8.02853821296567e-07*-8.02853821296567e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.08192158794398e-06*-1.08192158794398e-06+-8.02853821296567e-07*-8.02853821296567e-07+1.78004723703643e-06*${fz})
variable           f_module      equal     sqrt(-1.08192158794398e-06*-1.08192158794398e-06+-8.02853821296567e-07*-8.02853821296567e-07+1.78004723703643e-06*1.78004723703643e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.376030574002547*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.376030574002547*0.376030574002547+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.376030574002547*0.376030574002547+-0.917308796401633*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.376030574002547*0.376030574002547+-0.917308796401633*-0.917308796401633+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.376030574002547*0.376030574002547+-0.917308796401633*-0.917308796401633+-0.130941129747308*${unitz})
variable           dir_module    equal     sqrt(0.376030574002547*0.376030574002547+-0.917308796401633*-0.917308796401633+-0.130941129747308*-0.130941129747308)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.08192158794398e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.08192158794398e-06*0.376030574002547+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.08192158794398e-06*0.376030574002547+-8.02853821296567e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.08192158794398e-06*0.376030574002547+-8.02853821296567e-07*-0.917308796401633+${fz}*${unitz}
variable           dot      equal     -1.08192158794398e-06*0.376030574002547+-8.02853821296567e-07*-0.917308796401633+1.78004723703643e-06*${unitz}
variable           dot      equal     -1.08192158794398e-06*0.376030574002547+-8.02853821296567e-07*-0.917308796401633+1.78004723703643e-06*-0.130941129747308
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     9.65478805385594e-08/${f_module}*${dir_module}
variable           cos      equal     9.65478805385594e-08/2.23241948273857e-06*${dir_module}
variable           cos      equal     9.65478805385594e-08/2.23241948273857e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0432480908203334)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52753474276204/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.5212938198668-90.0)
print              "The dot product: ${dot}"
The dot product: 9.65478805385594e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.5212938198668

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12019931356486^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12019931356486^2+-0.2932205391728^2+${new_z}^2)
variable           norm          equal     sqrt(0.12019931356486^2+-0.2932205391728^2+-0.0418557292974988^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12019931356486/${norm}
variable           unit_x        equal     0.12019931356486/0.319653033223958
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.2932205391728/${norm}
variable           unit_y        equal     -0.2932205391728/0.319653033223958
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0418557292974988/${norm}
variable           unit_z        equal     -0.0418557292974988/0.319653033223958
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28583562744963+${delta}*${unit_x}
variable           x_new         equal     1.28583562744963+0.03*${unit_x}
variable           x_new         equal     1.28583562744963+0.03*0.376030574002547
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.73146241608954+${delta}*${unit_y}
variable           y_new         equal     3.73146241608954+0.03*${unit_y}
variable           y_new         equal     3.73146241608954+0.03*-0.917308796401633
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2790125936352+${delta}*${unit_z}
variable           z_new         equal     31.2790125936352+0.03*${unit_z}
variable           z_new         equal     31.2790125936352+0.03*-0.130941129747308

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29711654466971  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29711654466971  y  3.70394315219749  z   ${z_new}
set                atom          288751    x  1.29711654466971  y  3.70394315219749  z   31.2750843597428
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12019931356486  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12019931356486  -0.2932205391728  ${new_z}
fix                hold    carbon   planeforce   0.12019931356486  -0.2932205391728  -0.0418557292974988
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2337   -1152449.1            0   -1152449.1 -0.098469513   -0.0447264  0.030550926 
    2472   -1152449.1            0   -1152449.1 9.4192107e-06 5.688884e-06 -1.2803862e-05 
Loop time of 1.56968 on 104 procs for 135 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.11778013  -1152449.12178959  -1152449.12178959
  Force two-norm initial, final = 0.27825753 8.7621235e-05
  Force max component initial, final = 0.20201993 1.3918244e-05
  Final line search alpha, max atom move = 1.0000000 1.3918244e-05
  Iterations, force evaluations = 135 270

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4158     | 1.1364     | 1.4772     |  28.5 | 72.40
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.023726   | 0.25589    | 0.77406    |  42.2 | 16.30
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7191e-05 | 0.0022308  | 0.0047565  |   2.2 |  0.14
Other   |            | 0.1751     |            |       | 11.16

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27558528070436-${x_0}
variable           new_x         equal     1.27558528070436-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.69484872528122-${y_0}
variable           new_y         equal     3.69484872528122-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2769629464112-${z_0}
variable           new_z         equal     31.2769629464112-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10994896681959*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10994896681959*0.10994896681959+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10994896681959*0.10994896681959+-0.32983422998112*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10994896681959*0.10994896681959+-0.32983422998112*-0.32983422998112+${new_z}*${new_z})
variable           module        equal     sqrt(0.10994896681959*0.10994896681959+-0.32983422998112*-0.32983422998112+-0.0439053765215007*${new_z})
variable           module        equal     sqrt(0.10994896681959*0.10994896681959+-0.32983422998112*-0.32983422998112+-0.0439053765215007*-0.0439053765215007)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10994896681959/${module}
variable           unitx         equal     0.10994896681959/0.350438406370404
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.32983422998112/${module}
variable           unity         equal     -0.32983422998112/0.350438406370404
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0439053765215007/${module}
variable           unitz         equal     -0.0439053765215007/0.350438406370404
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.41921070275294e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.41921070275294e-06*9.41921070275294e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.41921070275294e-06*9.41921070275294e-06+5.68888402616713e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.41921070275294e-06*9.41921070275294e-06+5.68888402616713e-06*5.68888402616713e-06+${fz}*${fz})
variable           f_module      equal     sqrt(9.41921070275294e-06*9.41921070275294e-06+5.68888402616713e-06*5.68888402616713e-06+-1.28038619703502e-05*${fz})
variable           f_module      equal     sqrt(9.41921070275294e-06*9.41921070275294e-06+5.68888402616713e-06*5.68888402616713e-06+-1.28038619703502e-05*-1.28038619703502e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313746909074164*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313746909074164*0.313746909074164+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313746909074164*0.313746909074164+-0.941204571146503*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313746909074164*0.313746909074164+-0.941204571146503*-0.941204571146503+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313746909074164*0.313746909074164+-0.941204571146503*-0.941204571146503+-0.125286999721982*${unitz})
variable           dir_module    equal     sqrt(0.313746909074164*0.313746909074164+-0.941204571146503*-0.941204571146503+-0.125286999721982*-0.125286999721982)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.41921070275294e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.41921070275294e-06*0.313746909074164+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.41921070275294e-06*0.313746909074164+5.68888402616713e-06*${unity}+${fz}*${unitz}
variable           dot      equal     9.41921070275294e-06*0.313746909074164+5.68888402616713e-06*-0.941204571146503+${fz}*${unitz}
variable           dot      equal     9.41921070275294e-06*0.313746909074164+5.68888402616713e-06*-0.941204571146503+-1.28038619703502e-05*${unitz}
variable           dot      equal     9.41921070275294e-06*0.313746909074164+5.68888402616713e-06*-0.941204571146503+-1.28038619703502e-05*-0.125286999721982
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.94997955124244e-07/${f_module}*${dir_module}
variable           cos      equal     -7.94997955124244e-07/1.68826482840168e-05*${dir_module}
variable           cos      equal     -7.94997955124244e-07/1.68826482840168e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0470896474149075)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61790339463619/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.6990361725426-90.0)
print              "The dot product: ${dot}"
The dot product: -7.94997955124244e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.6990361725426

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10994896681959^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10994896681959^2+-0.32983422998112^2+${new_z}^2)
variable           norm          equal     sqrt(0.10994896681959^2+-0.32983422998112^2+-0.0439053765215007^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10994896681959/${norm}
variable           unit_x        equal     0.10994896681959/0.350438406370404
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.32983422998112/${norm}
variable           unit_y        equal     -0.32983422998112/0.350438406370404
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0439053765215007/${norm}
variable           unit_z        equal     -0.0439053765215007/0.350438406370404
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27558528070436+${delta}*${unit_x}
variable           x_new         equal     1.27558528070436+0.03*${unit_x}
variable           x_new         equal     1.27558528070436+0.03*0.313746909074164
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.69484872528122+${delta}*${unit_y}
variable           y_new         equal     3.69484872528122+0.03*${unit_y}
variable           y_new         equal     3.69484872528122+0.03*-0.941204571146503
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2769629464112+${delta}*${unit_z}
variable           z_new         equal     31.2769629464112+0.03*${unit_z}
variable           z_new         equal     31.2769629464112+0.03*-0.125286999721982

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28499768797658  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28499768797658  y  3.66661258814682  z   ${z_new}
set                atom          288751    x  1.28499768797658  y  3.66661258814682  z   31.2732043364195
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10994896681959  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10994896681959  -0.32983422998112  ${new_z}
fix                hold    carbon   planeforce   0.10994896681959  -0.32983422998112  -0.0439053765215007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2472   -1152449.1            0   -1152449.1  -0.11607146 -0.041951404  0.024486108 
    2643   -1152449.1            0   -1152449.1 3.6316288e-06 1.711133e-06 -3.7602773e-06 
Loop time of 1.99894 on 104 procs for 171 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.08071093  -1152449.08514758  -1152449.08514758
  Force two-norm initial, final = 0.28607453 2.2289947e-05
  Force max component initial, final = 0.2161401 3.7602773e-06
  Final line search alpha, max atom move = 1.0000000 3.7602773e-06
  Iterations, force evaluations = 171 342

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5198     | 1.4382     | 1.8861     |  32.5 | 71.95
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.029637   | 0.3277     | 0.97444    |  47.3 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0949e-05 | 0.0028163  | 0.0060283  |   2.5 |  0.14
Other   |            | 0.2302     |            |       | 11.52

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25948435518435-${x_0}
variable           new_x         equal     1.25948435518435-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.65749091994257-${y_0}
variable           new_y         equal     3.65749091994257-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2778387079661-${z_0}
variable           new_z         equal     31.2778387079661-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0938480412995799*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0938480412995799*0.0938480412995799+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0938480412995799*0.0938480412995799+-0.36719203531977*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0938480412995799*0.0938480412995799+-0.36719203531977*-0.36719203531977+${new_z}*${new_z})
variable           module        equal     sqrt(0.0938480412995799*0.0938480412995799+-0.36719203531977*-0.36719203531977+-0.0430296149665992*${new_z})
variable           module        equal     sqrt(0.0938480412995799*0.0938480412995799+-0.36719203531977*-0.36719203531977+-0.0430296149665992*-0.0430296149665992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0938480412995799/${module}
variable           unitx         equal     0.0938480412995799/0.381430194691265
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.36719203531977/${module}
variable           unity         equal     -0.36719203531977/0.381430194691265
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0430296149665992/${module}
variable           unitz         equal     -0.0430296149665992/0.381430194691265
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.63162880536773e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.63162880536773e-06*3.63162880536773e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.63162880536773e-06*3.63162880536773e-06+1.71113296462409e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.63162880536773e-06*3.63162880536773e-06+1.71113296462409e-06*1.71113296462409e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.63162880536773e-06*3.63162880536773e-06+1.71113296462409e-06*1.71113296462409e-06+-3.76027725303709e-06*${fz})
variable           f_module      equal     sqrt(3.63162880536773e-06*3.63162880536773e-06+1.71113296462409e-06*1.71113296462409e-06+-3.76027725303709e-06*-3.76027725303709e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.246042506874795*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.246042506874795*0.246042506874795+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.246042506874795*0.246042506874795+-0.9626716511444*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.246042506874795*0.246042506874795+-0.9626716511444*-0.9626716511444+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.246042506874795*0.246042506874795+-0.9626716511444*-0.9626716511444+-0.112811244535656*${unitz})
variable           dir_module    equal     sqrt(0.246042506874795*0.246042506874795+-0.9626716511444*-0.9626716511444+-0.112811244535656*-0.112811244535656)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.63162880536773e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.63162880536773e-06*0.246042506874795+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.63162880536773e-06*0.246042506874795+1.71113296462409e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.63162880536773e-06*0.246042506874795+1.71113296462409e-06*-0.9626716511444+${fz}*${unitz}
variable           dot      equal     3.63162880536773e-06*0.246042506874795+1.71113296462409e-06*-0.9626716511444+-3.76027725303709e-06*${unitz}
variable           dot      equal     3.63162880536773e-06*0.246042506874795+1.71113296462409e-06*-0.9626716511444+-3.76027725303709e-06*-0.112811244535656
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.2952258435666e-07/${f_module}*${dir_module}
variable           cos      equal     -3.2952258435666e-07/5.50058077136479e-06*${dir_module}
variable           cos      equal     -3.2952258435666e-07/5.50058077136479e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0599068713020461)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.63073908871806/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.4344672705548-90.0)
print              "The dot product: ${dot}"
The dot product: -3.2952258435666e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.4344672705548

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0938480412995799^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0938480412995799^2+-0.36719203531977^2+${new_z}^2)
variable           norm          equal     sqrt(0.0938480412995799^2+-0.36719203531977^2+-0.0430296149665992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0938480412995799/${norm}
variable           unit_x        equal     0.0938480412995799/0.381430194691265
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.36719203531977/${norm}
variable           unit_y        equal     -0.36719203531977/0.381430194691265
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0430296149665992/${norm}
variable           unit_z        equal     -0.0430296149665992/0.381430194691265
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25948435518435+${delta}*${unit_x}
variable           x_new         equal     1.25948435518435+0.03*${unit_x}
variable           x_new         equal     1.25948435518435+0.03*0.246042506874795
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.65749091994257+${delta}*${unit_y}
variable           y_new         equal     3.65749091994257+0.03*${unit_y}
variable           y_new         equal     3.65749091994257+0.03*-0.9626716511444
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2778387079661+${delta}*${unit_z}
variable           z_new         equal     31.2778387079661+0.03*${unit_z}
variable           z_new         equal     31.2778387079661+0.03*-0.112811244535656

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26686563039059  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26686563039059  y  3.62861077040824  z   ${z_new}
set                atom          288751    x  1.26686563039059  y  3.62861077040824  z   31.27445437063
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0938480412995799  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0938480412995799  -0.36719203531977  ${new_z}
fix                hold    carbon   planeforce   0.0938480412995799  -0.36719203531977  -0.0430296149665992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2643     -1152449            0     -1152449  -0.12151144 -0.034816457  0.032087545 
    2837     -1152449            0     -1152449 -8.8116331e-06 -3.0206494e-06 6.5583639e-06 
Loop time of 2.28357 on 104 procs for 194 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.04166978  -1152449.04629071  -1152449.04629071
  Force two-norm initial, final = 0.29270691 4.7520120e-05
  Force max component initial, final = 0.23161504 8.8116331e-06
  Final line search alpha, max atom move = 1.0000000 8.8116331e-06
  Iterations, force evaluations = 194 388

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59424    | 1.636      | 2.1359     |  34.3 | 71.64
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042515   | 0.37292    | 1.1149     |  50.3 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3953e-05 | 0.0032002  | 0.0068256  |   2.7 |  0.14
Other   |            | 0.2714     |            |       | 11.89

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24115242514145-${x_0}
variable           new_x         equal     1.24115242514145-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.62120032141345-${y_0}
variable           new_y         equal     3.62120032141345-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2816104630343-${z_0}
variable           new_z         equal     31.2816104630343-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07551611125668*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07551611125668*0.07551611125668+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07551611125668*0.07551611125668+-0.40348263384889*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07551611125668*0.07551611125668+-0.40348263384889*-0.40348263384889+${new_z}*${new_z})
variable           module        equal     sqrt(0.07551611125668*0.07551611125668+-0.40348263384889*-0.40348263384889+-0.0392578598983988*${new_z})
variable           module        equal     sqrt(0.07551611125668*0.07551611125668+-0.40348263384889*-0.40348263384889+-0.0392578598983988*-0.0392578598983988)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.07551611125668/${module}
variable           unitx         equal     0.07551611125668/0.412361611259791
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.40348263384889/${module}
variable           unity         equal     -0.40348263384889/0.412361611259791
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0392578598983988/${module}
variable           unitz         equal     -0.0392578598983988/0.412361611259791
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81163313938228e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81163313938228e-06*-8.81163313938228e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81163313938228e-06*-8.81163313938228e-06+-3.02064935618818e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81163313938228e-06*-8.81163313938228e-06+-3.02064935618818e-06*-3.02064935618818e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-8.81163313938228e-06*-8.81163313938228e-06+-3.02064935618818e-06*-3.02064935618818e-06+6.55836391719037e-06*${fz})
variable           f_module      equal     sqrt(-8.81163313938228e-06*-8.81163313938228e-06+-3.02064935618818e-06*-3.02064935618818e-06+6.55836391719037e-06*6.55836391719037e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.183130798781132*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.183130798781132*0.183130798781132+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.183130798781132*0.183130798781132+-0.978467982546253*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.183130798781132*0.183130798781132+-0.978467982546253*-0.978467982546253+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.183130798781132*0.183130798781132+-0.978467982546253*-0.978467982546253+-0.0952025087361152*${unitz})
variable           dir_module    equal     sqrt(0.183130798781132*0.183130798781132+-0.978467982546253*-0.978467982546253+-0.0952025087361152*-0.0952025087361152)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81163313938228e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81163313938228e-06*0.183130798781132+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81163313938228e-06*0.183130798781132+-3.02064935618818e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -8.81163313938228e-06*0.183130798781132+-3.02064935618818e-06*-0.978467982546253+${fz}*${unitz}
variable           dot      equal     -8.81163313938228e-06*0.183130798781132+-3.02064935618818e-06*-0.978467982546253+6.55836391719037e-06*${unitz}
variable           dot      equal     -8.81163313938228e-06*0.183130798781132+-3.02064935618818e-06*-0.978467982546253+6.55836391719037e-06*-0.0952025087361152
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.17554568026777e-07/${f_module}*${dir_module}
variable           cos      equal     7.17554568026777e-07/1.13921612693292e-05*${dir_module}
variable           cos      equal     7.17554568026777e-07/1.13921612693292e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0629866933115342)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.50776791085468/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.3887377772305-90.0)
print              "The dot product: ${dot}"
The dot product: 7.17554568026777e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.3887377772305

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.07551611125668^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.07551611125668^2+-0.40348263384889^2+${new_z}^2)
variable           norm          equal     sqrt(0.07551611125668^2+-0.40348263384889^2+-0.0392578598983988^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.07551611125668/${norm}
variable           unit_x        equal     0.07551611125668/0.412361611259791
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.40348263384889/${norm}
variable           unit_y        equal     -0.40348263384889/0.412361611259791
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0392578598983988/${norm}
variable           unit_z        equal     -0.0392578598983988/0.412361611259791
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24115242514145+${delta}*${unit_x}
variable           x_new         equal     1.24115242514145+0.03*${unit_x}
variable           x_new         equal     1.24115242514145+0.03*0.183130798781132
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.62120032141345+${delta}*${unit_y}
variable           y_new         equal     3.62120032141345+0.03*${unit_y}
variable           y_new         equal     3.62120032141345+0.03*-0.978467982546253
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2816104630343+${delta}*${unit_z}
variable           z_new         equal     31.2816104630343+0.03*${unit_z}
variable           z_new         equal     31.2816104630343+0.03*-0.0952025087361152

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24664634910488  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24664634910488  y  3.59184628193706  z   ${z_new}
set                atom          288751    x  1.24664634910488  y  3.59184628193706  z   31.2787543877722
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.07551611125668  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.07551611125668  -0.40348263384889  ${new_z}
fix                hold    carbon   planeforce   0.07551611125668  -0.40348263384889  -0.0392578598983988
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2837     -1152449            0     -1152449  -0.11251829 -0.024393492  0.034271006 
    2981     -1152449            0     -1152449 -1.6230093e-05 -4.707737e-06 1.7164885e-05 
Loop time of 1.66831 on 104 procs for 144 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.00024848  -1152449.00465863  -1152449.00465863
  Force two-norm initial, final = 0.29430891 0.00016730379
  Force max component initial, final = 0.24524504 1.7471379e-05
  Final line search alpha, max atom move = 1.0000000 1.7471379e-05
  Iterations, force evaluations = 144 288

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.44113    | 1.2116     | 1.5764     |  29.6 | 72.62
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025835   | 0.27251    | 0.81993    |  44.1 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7616e-05 | 0.0023738  | 0.0050732  |   2.3 |  0.14
Other   |            | 0.1819     |            |       | 10.90

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22380995934539-${x_0}
variable           new_x         equal     1.22380995934539-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.58680851520135-${y_0}
variable           new_y         equal     3.58680851520135-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2866034157703-${z_0}
variable           new_z         equal     31.2866034157703-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0581736454606199*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0581736454606199*0.0581736454606199+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0581736454606199*0.0581736454606199+-0.43787444006099*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0581736454606199*0.0581736454606199+-0.43787444006099*-0.43787444006099+${new_z}*${new_z})
variable           module        equal     sqrt(0.0581736454606199*0.0581736454606199+-0.43787444006099*-0.43787444006099+-0.0342649071623988*${new_z})
variable           module        equal     sqrt(0.0581736454606199*0.0581736454606199+-0.43787444006099*-0.43787444006099+-0.0342649071623988*-0.0342649071623988)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0581736454606199/${module}
variable           unitx         equal     0.0581736454606199/0.443048848489364
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.43787444006099/${module}
variable           unity         equal     -0.43787444006099/0.443048848489364
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0342649071623988/${module}
variable           unitz         equal     -0.0342649071623988/0.443048848489364
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.62300926345798e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.62300926345798e-05*-1.62300926345798e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.62300926345798e-05*-1.62300926345798e-05+-4.70773700830804e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.62300926345798e-05*-1.62300926345798e-05+-4.70773700830804e-06*-4.70773700830804e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.62300926345798e-05*-1.62300926345798e-05+-4.70773700830804e-06*-4.70773700830804e-06+1.71648848991111e-05*${fz})
variable           f_module      equal     sqrt(-1.62300926345798e-05*-1.62300926345798e-05+-4.70773700830804e-06*-4.70773700830804e-06+1.71648848991111e-05*1.71648848991111e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.131303005659468*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.131303005659468*0.131303005659468+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.131303005659468*0.131303005659468+-0.988320907624482*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.131303005659468*0.131303005659468+-0.988320907624482*-0.988320907624482+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.131303005659468*0.131303005659468+-0.988320907624482*-0.988320907624482+-0.0773388922671387*${unitz})
variable           dir_module    equal     sqrt(0.131303005659468*0.131303005659468+-0.988320907624482*-0.988320907624482+-0.0773388922671387*-0.0773388922671387)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.62300926345798e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.62300926345798e-05*0.131303005659468+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.62300926345798e-05*0.131303005659468+-4.70773700830804e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.62300926345798e-05*0.131303005659468+-4.70773700830804e-06*-0.988320907624482+${fz}*${unitz}
variable           dot      equal     -1.62300926345798e-05*0.131303005659468+-4.70773700830804e-06*-0.988320907624482+1.71648848991111e-05*${unitz}
variable           dot      equal     -1.62300926345798e-05*0.131303005659468+-4.70773700830804e-06*-0.988320907624482+1.71648848991111e-05*-0.0773388922671387
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.19418178386625e-06/${f_module}*${dir_module}
variable           cos      equal     1.19418178386625e-06/2.4087589507175e-05*${dir_module}
variable           cos      equal     1.19418178386625e-06/2.4087589507175e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0495766412621129)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52119935443487/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.1583028071435-90.0)
print              "The dot product: ${dot}"
The dot product: 1.19418178386625e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.1583028071435

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0581736454606199^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0581736454606199^2+-0.43787444006099^2+${new_z}^2)
variable           norm          equal     sqrt(0.0581736454606199^2+-0.43787444006099^2+-0.0342649071623988^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0581736454606199/${norm}
variable           unit_x        equal     0.0581736454606199/0.443048848489364
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.43787444006099/${norm}
variable           unit_y        equal     -0.43787444006099/0.443048848489364
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0342649071623988/${norm}
variable           unit_z        equal     -0.0342649071623988/0.443048848489364
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22380995934539+${delta}*${unit_x}
variable           x_new         equal     1.22380995934539+0.03*${unit_x}
variable           x_new         equal     1.22380995934539+0.03*0.131303005659468
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.58680851520135+${delta}*${unit_y}
variable           y_new         equal     3.58680851520135+0.03*${unit_y}
variable           y_new         equal     3.58680851520135+0.03*-0.988320907624482
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2866034157703+${delta}*${unit_z}
variable           z_new         equal     31.2866034157703+0.03*${unit_z}
variable           z_new         equal     31.2866034157703+0.03*-0.0773388922671387

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22774904951517  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22774904951517  y  3.55715888797262  z   ${z_new}
set                atom          288751    x  1.22774904951517  y  3.55715888797262  z   31.2842832490023
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0581736454606199  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0581736454606199  -0.43787444006099  ${new_z}
fix                hold    carbon   planeforce   0.0581736454606199  -0.43787444006099  -0.0342649071623988
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2981     -1152449            0     -1152449 -0.095150316 -0.015119497  0.031670906 
    3000     -1152449            0     -1152449 0.0019453519 0.00038831566 -0.0016595782 
    3139     -1152449            0     -1152449 -5.0564203e-05 -9.8285126e-06 3.9753512e-05 
Loop time of 1.88249 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
        -1152448.95573  -1152448.95983293  -1152448.95983293
  Force two-norm initial, final = 0.29420243 0.0002954556
  Force max component initial, final = 0.25642605 8.0231579e-05
  Final line search alpha, max atom move = 1.0000000 8.0231579e-05
  Iterations, force evaluations = 158 316

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48227    | 1.336      | 1.757      |  31.3 | 70.97
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.029357   | 0.30695    | 0.90195    |  45.0 | 16.31
Output  | 0.00015192 | 0.00015411 | 0.00022948 |   0.0 |  0.01
Modify  | 1.9599e-05 | 0.002611   | 0.0055723  |   2.4 |  0.14
Other   |            | 0.2368     |            |       | 12.58

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20897758408896-${x_0}
variable           new_x         equal     1.20897758408896-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.55407775933096-${y_0}
variable           new_y         equal     3.55407775933096-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2917878047001-${z_0}
variable           new_z         equal     31.2917878047001-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04334127020419*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04334127020419*0.04334127020419+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04334127020419*0.04334127020419+-0.47060519593138*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04334127020419*0.04334127020419+-0.47060519593138*-0.47060519593138+${new_z}*${new_z})
variable           module        equal     sqrt(0.04334127020419*0.04334127020419+-0.47060519593138*-0.47060519593138+-0.0290805182326004*${new_z})
variable           module        equal     sqrt(0.04334127020419*0.04334127020419+-0.47060519593138*-0.47060519593138+-0.0290805182326004*-0.0290805182326004)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.04334127020419/${module}
variable           unitx         equal     0.04334127020419/0.473490646878269
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.47060519593138/${module}
variable           unity         equal     -0.47060519593138/0.473490646878269
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0290805182326004/${module}
variable           unitz         equal     -0.0290805182326004/0.473490646878269
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.05642031084556e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.05642031084556e-05*-5.05642031084556e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.05642031084556e-05*-5.05642031084556e-05+-9.82851256922626e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.05642031084556e-05*-5.05642031084556e-05+-9.82851256922626e-06*-9.82851256922626e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-5.05642031084556e-05*-5.05642031084556e-05+-9.82851256922626e-06*-9.82851256922626e-06+3.97535124443836e-05*${fz})
variable           f_module      equal     sqrt(-5.05642031084556e-05*-5.05642031084556e-05+-9.82851256922626e-06*-9.82851256922626e-06+3.97535124443836e-05*3.97535124443836e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0915356417068418*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0915356417068418*0.0915356417068418+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0915356417068418*0.0915356417068418+-0.993906002228528*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0915356417068418*0.0915356417068418+-0.993906002228528*-0.993906002228528+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0915356417068418*0.0915356417068418+-0.993906002228528*-0.993906002228528+-0.0614173023782596*${unitz})
variable           dir_module    equal     sqrt(0.0915356417068418*0.0915356417068418+-0.993906002228528*-0.993906002228528+-0.0614173023782596*-0.0614173023782596)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.05642031084556e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.05642031084556e-05*0.0915356417068418+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.05642031084556e-05*0.0915356417068418+-9.82851256922626e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -5.05642031084556e-05*0.0915356417068418+-9.82851256922626e-06*-0.993906002228528+${fz}*${unitz}
variable           dot      equal     -5.05642031084556e-05*0.0915356417068418+-9.82851256922626e-06*-0.993906002228528+3.97535124443836e-05*${unitz}
variable           dot      equal     -5.05642031084556e-05*0.0915356417068418+-9.82851256922626e-06*-0.993906002228528+3.97535124443836e-05*-0.0614173023782596
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.69863736221033e-06/${f_module}*${dir_module}
variable           cos      equal     2.69863736221033e-06/6.50667353336738e-05*${dir_module}
variable           cos      equal     2.69863736221033e-06/6.50667353336738e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0414749156903483)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52930951124936/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.622980563803-90.0)
print              "The dot product: ${dot}"
The dot product: 2.69863736221033e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.622980563803

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.04334127020419^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.04334127020419^2+-0.47060519593138^2+${new_z}^2)
variable           norm          equal     sqrt(0.04334127020419^2+-0.47060519593138^2+-0.0290805182326004^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.04334127020419/${norm}
variable           unit_x        equal     0.04334127020419/0.473490646878269
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.47060519593138/${norm}
variable           unit_y        equal     -0.47060519593138/0.473490646878269
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0290805182326004/${norm}
variable           unit_z        equal     -0.0290805182326004/0.473490646878269
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20897758408896+${delta}*${unit_x}
variable           x_new         equal     1.20897758408896+0.03*${unit_x}
variable           x_new         equal     1.20897758408896+0.03*0.0915356417068418
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.55407775933096+${delta}*${unit_y}
variable           y_new         equal     3.55407775933096+0.03*${unit_y}
variable           y_new         equal     3.55407775933096+0.03*-0.993906002228528
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2917878047001+${delta}*${unit_z}
variable           z_new         equal     31.2917878047001+0.03*${unit_z}
variable           z_new         equal     31.2917878047001+0.03*-0.0614173023782596

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21172365334017  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21172365334017  y  3.5242605792641  z   ${z_new}
set                atom          288751    x  1.21172365334017  y  3.5242605792641  z   31.2899452856288
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.04334127020419  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.04334127020419  -0.47060519593138  ${new_z}
fix                hold    carbon   planeforce   0.04334127020419  -0.47060519593138  -0.0290805182326004
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3139   -1152448.9            0   -1152448.9 -0.075963944 -0.0086859876  0.027348107 
    3383   -1152448.9            0   -1152448.9 -1.8493494e-06 -2.9983855e-07 2.0959883e-06 
Loop time of 2.85433 on 104 procs for 244 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.90771855  -1152448.91158859  -1152448.91158859
  Force two-norm initial, final = 0.29548319 1.3144464e-05
  Force max component initial, final = 0.2657857 2.0959883e-06
  Final line search alpha, max atom move = 1.0000000 2.0959883e-06
  Iterations, force evaluations = 244 488

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.75153    | 2.0529     | 2.692      |  38.5 | 71.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.046827   | 0.46808    | 1.3973     |  56.4 | 16.40
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.0171e-05 | 0.0040116  | 0.0085817  |   3.0 |  0.14
Other   |            | 0.3293     |            |       | 11.54

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19712458405946-${x_0}
variable           new_x         equal     1.19712458405946-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.5225051915821-${y_0}
variable           new_y         equal     3.5225051915821-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2965941478022-${z_0}
variable           new_z         equal     31.2965941478022-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0314882701746899*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0314882701746899*0.0314882701746899+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0314882701746899*0.0314882701746899+-0.50217776368024*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0314882701746899*0.0314882701746899+-0.50217776368024*-0.50217776368024+${new_z}*${new_z})
variable           module        equal     sqrt(0.0314882701746899*0.0314882701746899+-0.50217776368024*-0.50217776368024+-0.0242741751305005*${new_z})
variable           module        equal     sqrt(0.0314882701746899*0.0314882701746899+-0.50217776368024*-0.50217776368024+-0.0242741751305005*-0.0242741751305005)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0314882701746899/${module}
variable           unitx         equal     0.0314882701746899/0.503749196596627
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.50217776368024/${module}
variable           unity         equal     -0.50217776368024/0.503749196596627
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0242741751305005/${module}
variable           unitz         equal     -0.0242741751305005/0.503749196596627
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.84934940656967e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.84934940656967e-06*-1.84934940656967e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.84934940656967e-06*-1.84934940656967e-06+-2.99838548922203e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.84934940656967e-06*-1.84934940656967e-06+-2.99838548922203e-07*-2.99838548922203e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.84934940656967e-06*-1.84934940656967e-06+-2.99838548922203e-07*-2.99838548922203e-07+2.09598832927464e-06*${fz})
variable           f_module      equal     sqrt(-1.84934940656967e-06*-1.84934940656967e-06+-2.99838548922203e-07*-2.99838548922203e-07+2.09598832927464e-06*2.09598832927464e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0625078320470333*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0625078320470333*0.0625078320470333+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0625078320470333*0.0625078320470333+-0.996880525215715*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0625078320470333*0.0625078320470333+-0.996880525215715*-0.996880525215715+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0625078320470333*0.0625078320470333+-0.996880525215715*-0.996880525215715+-0.0481870250007324*${unitz})
variable           dir_module    equal     sqrt(0.0625078320470333*0.0625078320470333+-0.996880525215715*-0.996880525215715+-0.0481870250007324*-0.0481870250007324)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.84934940656967e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.84934940656967e-06*0.0625078320470333+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.84934940656967e-06*0.0625078320470333+-2.99838548922203e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.84934940656967e-06*0.0625078320470333+-2.99838548922203e-07*-0.996880525215715+${fz}*${unitz}
variable           dot      equal     -1.84934940656967e-06*0.0625078320470333+-2.99838548922203e-07*-0.996880525215715+2.09598832927464e-06*${unitz}
variable           dot      equal     -1.84934940656967e-06*0.0625078320470333+-2.99838548922203e-07*-0.996880525215715+2.09598832927464e-06*-0.0481870250007324
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.23049460033455e-08/${f_module}*${dir_module}
variable           cos      equal     8.23049460033455e-08/2.81125656236759e-06*${dir_module}
variable           cos      equal     8.23049460033455e-08/2.81125656236759e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0292769244561691)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54151521832913/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.3223160654468-90.0)
print              "The dot product: ${dot}"
The dot product: 8.23049460033455e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.3223160654468

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0314882701746899^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0314882701746899^2+-0.50217776368024^2+${new_z}^2)
variable           norm          equal     sqrt(0.0314882701746899^2+-0.50217776368024^2+-0.0242741751305005^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0314882701746899/${norm}
variable           unit_x        equal     0.0314882701746899/0.503749196596627
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.50217776368024/${norm}
variable           unit_y        equal     -0.50217776368024/0.503749196596627
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0242741751305005/${norm}
variable           unit_z        equal     -0.0242741751305005/0.503749196596627
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19712458405946+${delta}*${unit_x}
variable           x_new         equal     1.19712458405946+0.03*${unit_x}
variable           x_new         equal     1.19712458405946+0.03*0.0625078320470333
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.5225051915821+${delta}*${unit_y}
variable           y_new         equal     3.5225051915821+0.03*${unit_y}
variable           y_new         equal     3.5225051915821+0.03*-0.996880525215715
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2965941478022+${delta}*${unit_z}
variable           z_new         equal     31.2965941478022+0.03*${unit_z}
variable           z_new         equal     31.2965941478022+0.03*-0.0481870250007324

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19899981902087  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19899981902087  y  3.49259877582563  z   ${z_new}
set                atom          288751    x  1.19899981902087  y  3.49259877582563  z   31.2951485370522
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0314882701746899  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0314882701746899  -0.50217776368024  ${new_z}
fix                hold    carbon   planeforce   0.0314882701746899  -0.50217776368024  -0.0242741751305005
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3383   -1152448.9            0   -1152448.9 -0.057866417 -0.004730181  0.022792878 
    3531   -1152448.9            0   -1152448.9 6.9496479e-06 1.0909542e-06 -1.3554346e-05 
Loop time of 1.72892 on 104 procs for 148 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.8560392  -1152448.85978409  -1152448.85978409
  Force two-norm initial, final = 0.29842615 0.00017877097
  Force max component initial, final = 0.2737457 2.5994268e-05
  Final line search alpha, max atom move = 1.0000000 2.5994268e-05
  Iterations, force evaluations = 148 296

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.45424    | 1.2457     | 1.6342     |  30.0 | 72.05
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026899   | 0.28239    | 0.84194    |  44.1 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8566e-05 | 0.0024401  | 0.0052163  |   2.3 |  0.14
Other   |            | 0.1984     |            |       | 11.48

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18810485791292-${x_0}
variable           new_x         equal     1.18810485791292-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.49164548832647-${y_0}
variable           new_y         equal     3.49164548832647-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3007370402586-${z_0}
variable           new_z         equal     31.3007370402586-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02246854402815*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02246854402815*0.02246854402815+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02246854402815*0.02246854402815+-0.53303746693587*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02246854402815*0.02246854402815+-0.53303746693587*-0.53303746693587+${new_z}*${new_z})
variable           module        equal     sqrt(0.02246854402815*0.02246854402815+-0.53303746693587*-0.53303746693587+-0.0201312826741002*${new_z})
variable           module        equal     sqrt(0.02246854402815*0.02246854402815+-0.53303746693587*-0.53303746693587+-0.0201312826741002*-0.0201312826741002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.02246854402815/${module}
variable           unitx         equal     0.02246854402815/0.533890480501627
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.53303746693587/${module}
variable           unity         equal     -0.53303746693587/0.533890480501627
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0201312826741002/${module}
variable           unitz         equal     -0.0201312826741002/0.533890480501627
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94964785921155e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94964785921155e-06*6.94964785921155e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94964785921155e-06*6.94964785921155e-06+1.09095422052583e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94964785921155e-06*6.94964785921155e-06+1.09095422052583e-06*1.09095422052583e-06+${fz}*${fz})
variable           f_module      equal     sqrt(6.94964785921155e-06*6.94964785921155e-06+1.09095422052583e-06*1.09095422052583e-06+-1.35543457004046e-05*${fz})
variable           f_module      equal     sqrt(6.94964785921155e-06*6.94964785921155e-06+1.09095422052583e-06*1.09095422052583e-06+-1.35543457004046e-05*-1.35543457004046e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0420845563813748*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0420845563813748*0.0420845563813748+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0420845563813748*0.0420845563813748+-0.998402268635778*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0420845563813748*0.0420845563813748+-0.998402268635778*-0.998402268635778+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0420845563813748*0.0420845563813748+-0.998402268635778*-0.998402268635778+-0.0377067646068262*${unitz})
variable           dir_module    equal     sqrt(0.0420845563813748*0.0420845563813748+-0.998402268635778*-0.998402268635778+-0.0377067646068262*-0.0377067646068262)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.94964785921155e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.94964785921155e-06*0.0420845563813748+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.94964785921155e-06*0.0420845563813748+1.09095422052583e-06*${unity}+${fz}*${unitz}
variable           dot      equal     6.94964785921155e-06*0.0420845563813748+1.09095422052583e-06*-0.998402268635778+${fz}*${unitz}
variable           dot      equal     6.94964785921155e-06*0.0420845563813748+1.09095422052583e-06*-0.998402268635778+-1.35543457004046e-05*${unitz}
variable           dot      equal     6.94964785921155e-06*0.0420845563813748+1.09095422052583e-06*-0.998402268635778+-1.35543457004046e-05*-0.0377067646068262
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.85647798864373e-07/${f_module}*${dir_module}
variable           cos      equal     -2.85647798864373e-07/1.52711516869031e-05*${dir_module}
variable           cos      equal     -2.85647798864373e-07/1.52711516869031e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0187050593642751)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58950247708295/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.0717834624429-90.0)
print              "The dot product: ${dot}"
The dot product: -2.85647798864373e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.0717834624429

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02246854402815^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02246854402815^2+-0.53303746693587^2+${new_z}^2)
variable           norm          equal     sqrt(0.02246854402815^2+-0.53303746693587^2+-0.0201312826741002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.02246854402815/${norm}
variable           unit_x        equal     0.02246854402815/0.533890480501627
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.53303746693587/${norm}
variable           unit_y        equal     -0.53303746693587/0.533890480501627
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0201312826741002/${norm}
variable           unit_z        equal     -0.0201312826741002/0.533890480501627
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18810485791292+${delta}*${unit_x}
variable           x_new         equal     1.18810485791292+0.03*${unit_x}
variable           x_new         equal     1.18810485791292+0.03*0.0420845563813748
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.49164548832647+${delta}*${unit_y}
variable           y_new         equal     3.49164548832647+0.03*${unit_y}
variable           y_new         equal     3.49164548832647+0.03*-0.998402268635778
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3007370402586+${delta}*${unit_z}
variable           z_new         equal     31.3007370402586+0.03*${unit_z}
variable           z_new         equal     31.3007370402586+0.03*-0.0377067646068262

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18936739460436  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18936739460436  y  3.4616934202674  z   ${z_new}
set                atom          288751    x  1.18936739460436  y  3.4616934202674  z   31.2996058373204
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02246854402815  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02246854402815  -0.53303746693587  ${new_z}
fix                hold    carbon   planeforce   0.02246854402815  -0.53303746693587  -0.0201312826741002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3531   -1152448.8            0   -1152448.8 -0.042519129 -0.0025025821  0.018807897 
    3713   -1152448.8            0   -1152448.8 1.9580276e-05 1.6500585e-06 -2.1836796e-05 
Loop time of 2.14813 on 104 procs for 182 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.80067756  -1152448.80436275  -1152448.80436275
  Force two-norm initial, final = 0.30247228 0.00012015188
  Force max component initial, final = 0.28098305 2.1836796e-05
  Final line search alpha, max atom move = 1.0000000 2.1836796e-05
  Iterations, force evaluations = 182 364

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5555     | 1.532      | 2.0057     |  33.3 | 71.32
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037456   | 0.34973    | 1.0436     |  48.9 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2684e-05 | 0.0029954  | 0.0064262  |   2.6 |  0.14
Other   |            | 0.2634     |            |       | 12.26

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114455 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238196
Ave neighs/atom = 28.530450
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18146746018782-${x_0}
variable           new_x         equal     1.18146746018782-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.46118368000289-${y_0}
variable           new_y         equal     3.46118368000289-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3042856501708-${z_0}
variable           new_z         equal     31.3042856501708-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0158311463030498*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0158311463030498*0.0158311463030498+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0158311463030498*0.0158311463030498+-0.56349927525945*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0158311463030498*0.0158311463030498+-0.56349927525945*-0.56349927525945+${new_z}*${new_z})
variable           module        equal     sqrt(0.0158311463030498*0.0158311463030498+-0.56349927525945*-0.56349927525945+-0.0165826727618992*${new_z})
variable           module        equal     sqrt(0.0158311463030498*0.0158311463030498+-0.56349927525945*-0.56349927525945+-0.0165826727618992*-0.0165826727618992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0158311463030498/${module}
variable           unitx         equal     0.0158311463030498/0.563965462991416
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.56349927525945/${module}
variable           unity         equal     -0.56349927525945/0.563965462991416
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0165826727618992/${module}
variable           unitz         equal     -0.0165826727618992/0.563965462991416
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.95802755905634e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.95802755905634e-05*1.95802755905634e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.95802755905634e-05*1.95802755905634e-05+1.65005848122237e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.95802755905634e-05*1.95802755905634e-05+1.65005848122237e-06*1.65005848122237e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.95802755905634e-05*1.95802755905634e-05+1.65005848122237e-06*1.65005848122237e-06+-2.1836795783216e-05*${fz})
variable           f_module      equal     sqrt(1.95802755905634e-05*1.95802755905634e-05+1.65005848122237e-06*1.65005848122237e-06+-2.1836795783216e-05*-2.1836795783216e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.028071127297543*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.028071127297543*0.028071127297543+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.028071127297543*0.028071127297543+-0.999173375388107*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.028071127297543*0.028071127297543+-0.999173375388107*-0.999173375388107+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.028071127297543*0.028071127297543+-0.999173375388107*-0.999173375388107+-0.0294037026202642*${unitz})
variable           dir_module    equal     sqrt(0.028071127297543*0.028071127297543+-0.999173375388107*-0.999173375388107+-0.0294037026202642*-0.0294037026202642)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.95802755905634e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.95802755905634e-05*0.028071127297543+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.95802755905634e-05*0.028071127297543+1.65005848122237e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.95802755905634e-05*0.028071127297543+1.65005848122237e-06*-0.999173375388107+${fz}*${unitz}
variable           dot      equal     1.95802755905634e-05*0.028071127297543+1.65005848122237e-06*-0.999173375388107+-2.1836795783216e-05*${unitz}
variable           dot      equal     1.95802755905634e-05*0.028071127297543+1.65005848122237e-06*-0.999173375388107+-2.1836795783216e-05*-0.0294037026202642
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.56971444257927e-07/${f_module}*${dir_module}
variable           cos      equal     -4.56971444257927e-07/2.93761048349121e-05*${dir_module}
variable           cos      equal     -4.56971444257927e-07/2.93761048349121e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0155558896193357)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58635284386637/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8913227721187-90.0)
print              "The dot product: ${dot}"
The dot product: -4.56971444257927e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8913227721187

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0158311463030498^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0158311463030498^2+-0.56349927525945^2+${new_z}^2)
variable           norm          equal     sqrt(0.0158311463030498^2+-0.56349927525945^2+-0.0165826727618992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0158311463030498/${norm}
variable           unit_x        equal     0.0158311463030498/0.563965462991416
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.56349927525945/${norm}
variable           unit_y        equal     -0.56349927525945/0.563965462991416
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0165826727618992/${norm}
variable           unit_z        equal     -0.0165826727618992/0.563965462991416
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18146746018782+${delta}*${unit_x}
variable           x_new         equal     1.18146746018782+0.03*${unit_x}
variable           x_new         equal     1.18146746018782+0.03*0.028071127297543
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.46118368000289+${delta}*${unit_y}
variable           y_new         equal     3.46118368000289+0.03*${unit_y}
variable           y_new         equal     3.46118368000289+0.03*-0.999173375388107
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3042856501708+${delta}*${unit_z}
variable           z_new         equal     31.3042856501708+0.03*${unit_z}
variable           z_new         equal     31.3042856501708+0.03*-0.0294037026202642

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18230959400675  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18230959400675  y  3.43120847874125  z   ${z_new}
set                atom          288751    x  1.18230959400675  y  3.43120847874125  z   31.3034035390922
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0158311463030498  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0158311463030498  -0.56349927525945  ${new_z}
fix                hold    carbon   planeforce   0.0158311463030498  -0.56349927525945  -0.0165826727618992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3713   -1152448.7            0   -1152448.7 -0.030468577 -0.0013364919   0.01632787 
    3854   -1152448.7            0   -1152448.7 7.8984565e-06 3.8784495e-07 -5.6389419e-06 
Loop time of 1.63844 on 104 procs for 141 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.74179711  -1152448.74543731  -1152448.74543731
  Force two-norm initial, final = 0.30729747 0.00013948995
  Force max component initial, final = 0.28788143 4.4096638e-05
  Final line search alpha, max atom move = 1.0000000 4.4096638e-05
  Iterations, force evaluations = 141 282

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4303     | 1.1866     | 1.5466     |  29.3 | 72.42
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025474   | 0.26726    | 0.80223    |  43.2 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.727e-05  | 0.0023249  | 0.0049693  |   2.3 |  0.14
Other   |            | 0.1823     |            |       | 11.13

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17666432451065-${x_0}
variable           new_x         equal     1.17666432451065-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.43093363994033-${y_0}
variable           new_y         equal     3.43093363994033-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3073534679552-${z_0}
variable           new_z         equal     31.3073534679552-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01102801062588*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01102801062588*0.01102801062588+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01102801062588*0.01102801062588+-0.59374931532201*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01102801062588*0.01102801062588+-0.59374931532201*-0.59374931532201+${new_z}*${new_z})
variable           module        equal     sqrt(0.01102801062588*0.01102801062588+-0.59374931532201*-0.59374931532201+-0.013514854977501*${new_z})
variable           module        equal     sqrt(0.01102801062588*0.01102801062588+-0.59374931532201*-0.59374931532201+-0.013514854977501*-0.013514854977501)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.01102801062588/${module}
variable           unitx         equal     0.01102801062588/0.594005486312023
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.59374931532201/${module}
variable           unity         equal     -0.59374931532201/0.594005486312023
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.013514854977501/${module}
variable           unitz         equal     -0.013514854977501/0.594005486312023
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.89845654675512e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.89845654675512e-06*7.89845654675512e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.89845654675512e-06*7.89845654675512e-06+3.87844952452179e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.89845654675512e-06*7.89845654675512e-06+3.87844952452179e-07*3.87844952452179e-07+${fz}*${fz})
variable           f_module      equal     sqrt(7.89845654675512e-06*7.89845654675512e-06+3.87844952452179e-07*3.87844952452179e-07+-5.63894192360732e-06*${fz})
variable           f_module      equal     sqrt(7.89845654675512e-06*7.89845654675512e-06+3.87844952452179e-07*3.87844952452179e-07+-5.63894192360732e-06*-5.63894192360732e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0185655029793566*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0185655029793566*0.0185655029793566+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0185655029793566*0.0185655029793566+-0.999568739690262*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0185655029793566*0.0185655029793566+-0.999568739690262*-0.999568739690262+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0185655029793566*0.0185655029793566+-0.999568739690262*-0.999568739690262+-0.0227520709638729*${unitz})
variable           dir_module    equal     sqrt(0.0185655029793566*0.0185655029793566+-0.999568739690262*-0.999568739690262+-0.0227520709638729*-0.0227520709638729)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.89845654675512e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.89845654675512e-06*0.0185655029793566+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.89845654675512e-06*0.0185655029793566+3.87844952452179e-07*${unity}+${fz}*${unitz}
variable           dot      equal     7.89845654675512e-06*0.0185655029793566+3.87844952452179e-07*-0.999568739690262+${fz}*${unitz}
variable           dot      equal     7.89845654675512e-06*0.0185655029793566+3.87844952452179e-07*-0.999568739690262+-5.63894192360732e-06*${unitz}
variable           dot      equal     7.89845654675512e-06*0.0185655029793566+3.87844952452179e-07*-0.999568739690262+-5.63894192360732e-06*-0.0227520709638729
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.12741264959682e-07/${f_module}*${dir_module}
variable           cos      equal     -1.12741264959682e-07/9.71255401765867e-06*${dir_module}
variable           cos      equal     -1.12741264959682e-07/9.71255401765867e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0116077876894897)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58240437517383/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.6650921804966-90.0)
print              "The dot product: ${dot}"
The dot product: -1.12741264959682e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.6650921804966

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01102801062588^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01102801062588^2+-0.59374931532201^2+${new_z}^2)
variable           norm          equal     sqrt(0.01102801062588^2+-0.59374931532201^2+-0.013514854977501^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01102801062588/${norm}
variable           unit_x        equal     0.01102801062588/0.594005486312023
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.59374931532201/${norm}
variable           unit_y        equal     -0.59374931532201/0.594005486312023
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.013514854977501/${norm}
variable           unit_z        equal     -0.013514854977501/0.594005486312023
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17666432451065+${delta}*${unit_x}
variable           x_new         equal     1.17666432451065+0.03*${unit_x}
variable           x_new         equal     1.17666432451065+0.03*0.0185655029793566
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.43093363994033+${delta}*${unit_y}
variable           y_new         equal     3.43093363994033+0.03*${unit_y}
variable           y_new         equal     3.43093363994033+0.03*-0.999568739690262
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3073534679552+${delta}*${unit_z}
variable           z_new         equal     31.3073534679552+0.03*${unit_z}
variable           z_new         equal     31.3073534679552+0.03*-0.0227520709638729

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17722128960003  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17722128960003  y  3.40094657774962  z   ${z_new}
set                atom          288751    x  1.17722128960003  y  3.40094657774962  z   31.3066709058263
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01102801062588  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01102801062588  -0.59374931532201  ${new_z}
fix                hold    carbon   planeforce   0.01102801062588  -0.59374931532201  -0.013514854977501
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3854   -1152448.7            0   -1152448.7 -0.021700721 -0.00073421876  0.014548887 
    4000   -1152448.7            0   -1152448.7 1.5092195e-06 1.1673272e-07 -3.8969183e-06 
    4122   -1152448.7            0   -1152448.7 4.6594907e-07 1.2406322e-08 -1.6483745e-07 
Loop time of 3.13247 on 104 procs for 268 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.67998642  -1152448.70576505  -1152448.70576505
  Force two-norm initial, final = 0.31576492 5.3692221e-05
  Force max component initial, final = 0.29458177 2.0818097e-05
  Final line search alpha, max atom move = 1.0000000 2.0818097e-05
  Iterations, force evaluations = 268 536

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.82852    | 2.2551     | 2.9405     |  40.3 | 71.99
Neigh   | 1.0252e-05 | 0.0029566  | 0.0042331  |   2.2 |  0.09
Comm    | 0.049604   | 0.51306    | 1.5298     |  59.1 | 16.38
Output  | 0.00013519 | 0.00014372 | 0.00030519 |   0.0 |  0.00
Modify  | 3.2714e-05 | 0.0044068  | 0.0094076  |   3.1 |  0.14
Other   |            | 0.3568     |            |       | 11.39

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.6 ave      114456 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238213
Ave neighs/atom = 28.530509
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17069020644154-${x_0}
variable           new_x         equal     1.17069020644154-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.40065682313198-${y_0}
variable           new_y         equal     3.40065682313198-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3140714107901-${z_0}
variable           new_z         equal     31.3140714107901-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00505389255677002*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00505389255677002*0.00505389255677002+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00505389255677002*0.00505389255677002+-0.62402613213036*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00505389255677002*0.00505389255677002+-0.62402613213036*-0.62402613213036+${new_z}*${new_z})
variable           module        equal     sqrt(0.00505389255677002*0.00505389255677002+-0.62402613213036*-0.62402613213036+-0.00679691214260103*${new_z})
variable           module        equal     sqrt(0.00505389255677002*0.00505389255677002+-0.62402613213036*-0.62402613213036+-0.00679691214260103*-0.00679691214260103)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00505389255677002/${module}
variable           unitx         equal     0.00505389255677002/0.624083610925834
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.62402613213036/${module}
variable           unity         equal     -0.62402613213036/0.624083610925834
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00679691214260103/${module}
variable           unitz         equal     -0.00679691214260103/0.624083610925834
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.65949067846794e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.65949067846794e-07*4.65949067846794e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.65949067846794e-07*4.65949067846794e-07+1.24063223137655e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.65949067846794e-07*4.65949067846794e-07+1.24063223137655e-08*1.24063223137655e-08+${fz}*${fz})
variable           f_module      equal     sqrt(4.65949067846794e-07*4.65949067846794e-07+1.24063223137655e-08*1.24063223137655e-08+-1.64837446505224e-07*${fz})
variable           f_module      equal     sqrt(4.65949067846794e-07*4.65949067846794e-07+1.24063223137655e-08*1.24063223137655e-08+-1.64837446505224e-07*-1.64837446505224e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00809810170991756*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00809810170991756*0.00809810170991756+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00809810170991756*0.00809810170991756+-0.999907898886515*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00809810170991756*0.00809810170991756+-0.999907898886515*-0.999907898886515+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00809810170991756*0.00809810170991756+-0.999907898886515*-0.999907898886515+-0.0108910280988115*${unitz})
variable           dir_module    equal     sqrt(0.00809810170991756*0.00809810170991756+-0.999907898886515*-0.999907898886515+-0.0108910280988115*-0.0108910280988115)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.65949067846794e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.65949067846794e-07*0.00809810170991756+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.65949067846794e-07*0.00809810170991756+1.24063223137655e-08*${unity}+${fz}*${unitz}
variable           dot      equal     4.65949067846794e-07*0.00809810170991756+1.24063223137655e-08*-0.999907898886515+${fz}*${unitz}
variable           dot      equal     4.65949067846794e-07*0.00809810170991756+1.24063223137655e-08*-0.999907898886515+-1.64837446505224e-07*${unitz}
variable           dot      equal     4.65949067846794e-07*0.00809810170991756+1.24063223137655e-08*-0.999907898886515+-1.64837446505224e-07*-0.0108910280988115
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.8366274729768e-09/${f_module}*${dir_module}
variable           cos      equal     -6.8366274729768e-09/4.94402502452214e-07*${dir_module}
variable           cos      equal     -6.8366274729768e-09/4.94402502452214e-07*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0138280600099462)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58462482753208/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.7923147292342-90.0)
print              "The dot product: ${dot}"
The dot product: -6.8366274729768e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.7923147292342

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00505389255677002^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00505389255677002^2+-0.62402613213036^2+${new_z}^2)
variable           norm          equal     sqrt(0.00505389255677002^2+-0.62402613213036^2+-0.00679691214260103^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00505389255677002/${norm}
variable           unit_x        equal     0.00505389255677002/0.624083610925834
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.62402613213036/${norm}
variable           unit_y        equal     -0.62402613213036/0.624083610925834
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00679691214260103/${norm}
variable           unit_z        equal     -0.00679691214260103/0.624083610925834
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17069020644154+${delta}*${unit_x}
variable           x_new         equal     1.17069020644154+0.03*${unit_x}
variable           x_new         equal     1.17069020644154+0.03*0.00809810170991756
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.40065682313198+${delta}*${unit_y}
variable           y_new         equal     3.40065682313198+0.03*${unit_y}
variable           y_new         equal     3.40065682313198+0.03*-0.999907898886515
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3140714107901+${delta}*${unit_z}
variable           z_new         equal     31.3140714107901+0.03*${unit_z}
variable           z_new         equal     31.3140714107901+0.03*-0.0108910280988115

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17093314949284  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17093314949284  y  3.37065958616538  z   ${z_new}
set                atom          288751    x  1.17093314949284  y  3.37065958616538  z   31.3137446799471
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00505389255677002  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00505389255677002  -0.62402613213036  ${new_z}
fix                hold    carbon   planeforce   0.00505389255677002  -0.62402613213036  -0.00679691214260103
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4122   -1152448.7            0   -1152448.7 -0.013964016 -0.0002941925   0.01662684 
    4257   -1152448.7            0   -1152448.7 4.7770659e-06 7.4306618e-08 -3.2700869e-06 
Loop time of 1.58564 on 104 procs for 135 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.66059664  -1152448.66495629  -1152448.66495629
  Force two-norm initial, final = 0.33227193 0.00018752711
  Force max component initial, final = 0.30499351 6.4540957e-05
  Final line search alpha, max atom move = 1.0000000 6.4540957e-05
  Iterations, force evaluations = 135 270

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41346    | 1.1396     | 1.4768     |  28.6 | 71.87
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026968   | 0.25838    | 0.76853    |  41.9 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6733e-05 | 0.0022255  | 0.004736   |   2.2 |  0.14
Other   |            | 0.1854     |            |       | 11.69

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16789033642529-${x_0}
variable           new_x         equal     1.16789033642529-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.37059394120102-${y_0}
variable           new_y         equal     3.37059394120102-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3175090544716-${z_0}
variable           new_z         equal     31.3175090544716-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00225402254051987*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00225402254051987*0.00225402254051987+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00225402254051987*0.00225402254051987+-0.65408901406132*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00225402254051987*0.00225402254051987+-0.65408901406132*-0.65408901406132+${new_z}*${new_z})
variable           module        equal     sqrt(0.00225402254051987*0.00225402254051987+-0.65408901406132*-0.65408901406132+-0.00335926846110013*${new_z})
variable           module        equal     sqrt(0.00225402254051987*0.00225402254051987+-0.65408901406132*-0.65408901406132+-0.00335926846110013*-0.00335926846110013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00225402254051987/${module}
variable           unitx         equal     0.00225402254051987/0.654101523937926
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.65408901406132/${module}
variable           unity         equal     -0.65408901406132/0.654101523937926
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00335926846110013/${module}
variable           unitz         equal     -0.00335926846110013/0.654101523937926
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.77706593578847e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.77706593578847e-06*4.77706593578847e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.77706593578847e-06*4.77706593578847e-06+7.43066181793883e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.77706593578847e-06*4.77706593578847e-06+7.43066181793883e-08*7.43066181793883e-08+${fz}*${fz})
variable           f_module      equal     sqrt(4.77706593578847e-06*4.77706593578847e-06+7.43066181793883e-08*7.43066181793883e-08+-3.27008691496504e-06*${fz})
variable           f_module      equal     sqrt(4.77706593578847e-06*4.77706593578847e-06+7.43066181793883e-08*7.43066181793883e-08+-3.27008691496504e-06*-3.27008691496504e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00344598270762289*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00344598270762289*0.00344598270762289+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00344598270762289*0.00344598270762289+-0.99998087471723*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00344598270762289*0.00344598270762289+-0.99998087471723*-0.99998087471723+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00344598270762289*0.00344598270762289+-0.99998087471723*-0.99998087471723+-0.00513569887572823*${unitz})
variable           dir_module    equal     sqrt(0.00344598270762289*0.00344598270762289+-0.99998087471723*-0.99998087471723+-0.00513569887572823*-0.00513569887572823)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.77706593578847e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.77706593578847e-06*0.00344598270762289+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.77706593578847e-06*0.00344598270762289+7.43066181793883e-08*${unity}+${fz}*${unitz}
variable           dot      equal     4.77706593578847e-06*0.00344598270762289+7.43066181793883e-08*-0.99998087471723+${fz}*${unitz}
variable           dot      equal     4.77706593578847e-06*0.00344598270762289+7.43066181793883e-08*-0.99998087471723+-3.27008691496504e-06*${unitz}
variable           dot      equal     4.77706593578847e-06*0.00344598270762289+7.43066181793883e-08*-0.99998087471723+-3.27008691496504e-06*-0.00513569887572823
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.10493287436829e-08/${f_module}*${dir_module}
variable           cos      equal     -4.10493287436829e-08/5.78958969701666e-06*${dir_module}
variable           cos      equal     -4.10493287436829e-08/5.78958969701666e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0070901965237425)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57788658272506/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.406241740466-90.0)
print              "The dot product: ${dot}"
The dot product: -4.10493287436829e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.406241740466

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00225402254051987^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00225402254051987^2+-0.65408901406132^2+${new_z}^2)
variable           norm          equal     sqrt(0.00225402254051987^2+-0.65408901406132^2+-0.00335926846110013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00225402254051987/${norm}
variable           unit_x        equal     0.00225402254051987/0.654101523937926
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.65408901406132/${norm}
variable           unit_y        equal     -0.65408901406132/0.654101523937926
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00335926846110013/${norm}
variable           unit_z        equal     -0.00335926846110013/0.654101523937926
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16789033642529+${delta}*${unit_x}
variable           x_new         equal     1.16789033642529+0.03*${unit_x}
variable           x_new         equal     1.16789033642529+0.03*0.00344598270762289
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.37059394120102+${delta}*${unit_y}
variable           y_new         equal     3.37059394120102+0.03*${unit_y}
variable           y_new         equal     3.37059394120102+0.03*-0.99998087471723
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3175090544716+${delta}*${unit_z}
variable           z_new         equal     31.3175090544716+0.03*${unit_z}
variable           z_new         equal     31.3175090544716+0.03*-0.00513569887572823

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16799371590652  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16799371590652  y  3.3405945149595  z   ${z_new}
set                atom          288751    x  1.16799371590652  y  3.3405945149595  z   31.3173549835053
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00225402254051987  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00225402254051987  -0.65408901406132  ${new_z}
fix                hold    carbon   planeforce   0.00225402254051987  -0.65408901406132  -0.00335926846110013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4257   -1152448.6            0   -1152448.6 -0.0061507993 -6.4251351e-05 0.0083833915 
    4381   -1152448.6            0   -1152448.6 -6.1768277e-06 -2.3458183e-08 4.2301796e-07 
Loop time of 1.43696 on 104 procs for 124 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.61823564  -1152448.62310596  -1152448.62310596
  Force two-norm initial, final = 0.34147057 0.00021475233
  Force max component initial, final = 0.31122308 9.1378367e-05
  Final line search alpha, max atom move = 1.0000000 9.1378367e-05
  Iterations, force evaluations = 124 248

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.37804    | 1.0425     | 1.3554     |  27.5 | 72.55
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.023771   | 0.23333    | 0.70335    |  40.9 | 16.24
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5501e-05 | 0.0020448  | 0.0043401  |   2.1 |  0.14
Other   |            | 0.1591     |            |       | 11.07

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16658945846389-${x_0}
variable           new_x         equal     1.16658945846389-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.34057969758439-${y_0}
variable           new_y         equal     3.34057969758439-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3192978631408-${z_0}
variable           new_z         equal     31.3192978631408-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000953144579119991*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000953144579119991*0.000953144579119991+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000953144579119991*0.000953144579119991+-0.68410325767795*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000953144579119991*0.000953144579119991+-0.68410325767795*-0.68410325767795+${new_z}*${new_z})
variable           module        equal     sqrt(0.000953144579119991*0.000953144579119991+-0.68410325767795*-0.68410325767795+-0.00157045979189974*${new_z})
variable           module        equal     sqrt(0.000953144579119991*0.000953144579119991+-0.68410325767795*-0.68410325767795+-0.00157045979189974*-0.00157045979189974)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000953144579119991/${module}
variable           unitx         equal     0.000953144579119991/0.684105724281072
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.68410325767795/${module}
variable           unity         equal     -0.68410325767795/0.684105724281072
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00157045979189974/${module}
variable           unitz         equal     -0.00157045979189974/0.684105724281072
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.17682769962722e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.17682769962722e-06*-6.17682769962722e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.17682769962722e-06*-6.17682769962722e-06+-2.34581831444308e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.17682769962722e-06*-6.17682769962722e-06+-2.34581831444308e-08*-2.34581831444308e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-6.17682769962722e-06*-6.17682769962722e-06+-2.34581831444308e-08*-2.34581831444308e-08+4.23017959753028e-07*${fz})
variable           f_module      equal     sqrt(-6.17682769962722e-06*-6.17682769962722e-06+-2.34581831444308e-08*-2.34581831444308e-08+4.23017959753028e-07*4.23017959753028e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00139327087216183*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00139327087216183*0.00139327087216183+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00139327087216183*0.00139327087216183+-0.999996394412392*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00139327087216183*0.00139327087216183+-0.999996394412392*-0.999996394412392+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00139327087216183*0.00139327087216183+-0.999996394412392*-0.999996394412392+-0.00229563901625021*${unitz})
variable           dir_module    equal     sqrt(0.00139327087216183*0.00139327087216183+-0.999996394412392*-0.999996394412392+-0.00229563901625021*-0.00229563901625021)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.17682769962722e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.17682769962722e-06*0.00139327087216183+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.17682769962722e-06*0.00139327087216183+-2.34581831444308e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -6.17682769962722e-06*0.00139327087216183+-2.34581831444308e-08*-0.999996394412392+${fz}*${unitz}
variable           dot      equal     -6.17682769962722e-06*0.00139327087216183+-2.34581831444308e-08*-0.999996394412392+4.23017959753028e-07*${unitz}
variable           dot      equal     -6.17682769962722e-06*0.00139327087216183+-2.34581831444308e-08*-0.999996394412392+4.23017959753028e-07*-0.00229563901625021
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.38810079146598e-08/${f_module}*${dir_module}
variable           cos      equal     1.38810079146598e-08/6.19134031624108e-06*${dir_module}
variable           cos      equal     1.38810079146598e-08/6.19134031624108e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00224200370285691)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56855432121377/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8715425425567-90.0)
print              "The dot product: ${dot}"
The dot product: 1.38810079146598e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8715425425567

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000953144579119991^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000953144579119991^2+-0.68410325767795^2+${new_z}^2)
variable           norm          equal     sqrt(0.000953144579119991^2+-0.68410325767795^2+-0.00157045979189974^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000953144579119991/${norm}
variable           unit_x        equal     0.000953144579119991/0.684105724281072
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.68410325767795/${norm}
variable           unit_y        equal     -0.68410325767795/0.684105724281072
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00157045979189974/${norm}
variable           unit_z        equal     -0.00157045979189974/0.684105724281072
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16658945846389+${delta}*${unit_x}
variable           x_new         equal     1.16658945846389+0.03*${unit_x}
variable           x_new         equal     1.16658945846389+0.03*0.00139327087216183
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.34057969758439+${delta}*${unit_y}
variable           y_new         equal     3.34057969758439+0.03*${unit_y}
variable           y_new         equal     3.34057969758439+0.03*-0.999996394412392
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3192978631408+${delta}*${unit_z}
variable           z_new         equal     31.3192978631408+0.03*${unit_z}
variable           z_new         equal     31.3192978631408+0.03*-0.00229563901625021

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16663125659005  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16663125659005  y  3.31057980575202  z   ${z_new}
set                atom          288751    x  1.16663125659005  y  3.31057980575202  z   31.3192289939703
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000953144579119991  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000953144579119991  -0.68410325767795  ${new_z}
fix                hold    carbon   planeforce   0.000953144579119991  -0.68410325767795  -0.00157045979189974
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4381   -1152448.6            0   -1152448.6 -0.0026006133 -1.3090615e-05 0.0041239973 
    4478   -1152448.6            0   -1152448.6 7.6534176e-07 9.7683606e-10 3.8985214e-08 
Loop time of 1.13592 on 104 procs for 97 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.57631528   -1152448.5818767   -1152448.5818767
  Force two-norm initial, final = 0.35260091 0.00018515233
  Force max component initial, final = 0.31799932 6.5293805e-05
  Final line search alpha, max atom move = 1.0000000 6.5293805e-05
  Iterations, force evaluations = 97 194

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.297      | 0.81925    | 1.074      |  24.4 | 72.12
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018148   | 0.18558    | 0.55342    |  35.8 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.1942e-05 | 0.001604   | 0.0034121  |   1.9 |  0.14
Other   |            | 0.1295     |            |       | 11.40

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16602310401333-${x_0}
variable           new_x         equal     1.16602310401333-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.31057682943704-${y_0}
variable           new_y         equal     3.31057682943704-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.320156397183-${z_0}
variable           new_z         equal     31.320156397183-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000386790128559911*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000386790128559911*0.000386790128559911+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000386790128559911*0.000386790128559911+-0.7141061258253*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000386790128559911*0.000386790128559911+-0.7141061258253*-0.7141061258253+${new_z}*${new_z})
variable           module        equal     sqrt(0.000386790128559911*0.000386790128559911+-0.7141061258253*-0.7141061258253+-0.000711925749701692*${new_z})
variable           module        equal     sqrt(0.000386790128559911*0.000386790128559911+-0.7141061258253*-0.7141061258253+-0.000711925749701692*-0.000711925749701692)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000386790128559911/${module}
variable           unitx         equal     0.000386790128559911/0.714106585452127
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.7141061258253/${module}
variable           unity         equal     -0.7141061258253/0.714106585452127
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.000711925749701692/${module}
variable           unitz         equal     -0.000711925749701692/0.714106585452127
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.65341761855065e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.65341761855065e-07*7.65341761855065e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.65341761855065e-07*7.65341761855065e-07+9.76836055031178e-10*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.65341761855065e-07*7.65341761855065e-07+9.76836055031178e-10*9.76836055031178e-10+${fz}*${fz})
variable           f_module      equal     sqrt(7.65341761855065e-07*7.65341761855065e-07+9.76836055031178e-10*9.76836055031178e-10+3.89852136591301e-08*${fz})
variable           f_module      equal     sqrt(7.65341761855065e-07*7.65341761855065e-07+9.76836055031178e-10*9.76836055031178e-10+3.89852136591301e-08*3.89852136591301e-08)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000541642013166732*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000541642013166732*0.000541642013166732+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000541642013166732*0.000541642013166732+-0.99999935636103*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000541642013166732*0.000541642013166732+-0.99999935636103*-0.99999935636103+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000541642013166732*0.000541642013166732+-0.99999935636103*-0.99999935636103+-0.000996946064082221*${unitz})
variable           dir_module    equal     sqrt(0.000541642013166732*0.000541642013166732+-0.99999935636103*-0.99999935636103+-0.000996946064082221*-0.000996946064082221)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.65341761855065e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.65341761855065e-07*0.000541642013166732+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.65341761855065e-07*0.000541642013166732+9.76836055031178e-10*${unity}+${fz}*${unitz}
variable           dot      equal     7.65341761855065e-07*0.000541642013166732+9.76836055031178e-10*-0.99999935636103+${fz}*${unitz}
variable           dot      equal     7.65341761855065e-07*0.000541642013166732+9.76836055031178e-10*-0.99999935636103+3.89852136591301e-08*${unitz}
variable           dot      equal     7.65341761855065e-07*0.000541642013166732+9.76836055031178e-10*-0.99999935636103+3.89852136591301e-08*-0.000996946064082221
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.01160328964549e-10/${f_module}*${dir_module}
variable           cos      equal     -6.01160328964549e-10/7.66334661575569e-07*${dir_module}
variable           cos      equal     -6.01160328964549e-10/7.66334661575569e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.000784461879524769)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57158078875488/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0449463594956-90.0)
print              "The dot product: ${dot}"
The dot product: -6.01160328964549e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0449463594956

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4478   -1152448.6            0   -1152448.6 -0.0019239701     1.381446 0.0031713518 
    4685   -1152449.3            0   -1152449.3 -1.0511524e-05 6.4634887e-07 9.6937406e-06 
Loop time of 2.44938 on 104 procs for 207 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.5818767  -1152449.34502404  -1152449.34502404
  Force two-norm initial, final = 1.3814510 8.6950490e-05
  Force max component initial, final = 1.3814460 2.0213887e-05
  Final line search alpha, max atom move = 1.0000000 2.0213887e-05
  Iterations, force evaluations = 207 409

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.65013    | 1.7295     | 2.2667     |  35.0 | 70.61
Neigh   | 3.9896e-05 | 0.011858   | 0.017172   |   4.5 |  0.48
Comm    | 0.040264   | 0.40149    | 1.1666     |  50.5 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3054e-05 | 0.0021915  | 0.0056092  |   2.9 |  0.09
Other   |            | 0.3044     |            |       | 12.43

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      114464 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238174
Ave neighs/atom = 28.530374
Neighbor list builds = 4
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563796925182-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563796925182-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563796925182-1.16563631388477)^2+(4.02468231568909-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563796925182-1.16563631388477)^2+(4.02468231568909-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563796925182-1.16563631388477)^2+(4.02468231568909-4.02468295526234)^2+(31.3208536526153-${z_0})^2)
variable                displacement      equal     sqrt((1.16563796925182-1.16563631388477)^2+(4.02468231568909-4.02468295526234)^2+(31.3208536526153-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 7
7
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.342 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.82827 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48731    | 1.3169     | 1.7064     |  30.6 | 72.03
Neigh   | 2.9941e-05 | 0.0088797  | 0.013078   |   3.9 |  0.49
Comm    | 0.030073   | 0.29773    | 0.88729    |  45.3 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8381e-05 | 0.0016886  | 0.0043172  |   2.6 |  0.09
Other   |            | 0.2031     |            |       | 11.11

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,7)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,7)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,7)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.1862324139767
variable                y_1    equal     $y
variable                y_1    equal     4.03219551872936
variable                z_1    equal     $z
variable                z_1    equal     31.3313011289477

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.1862324139767  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.1862324139767  y  4.03219551872936  z  ${z_1}
set                atom        288751    x  1.1862324139767  y  4.03219551872936  z  31.3313011289477
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.1862324139767-${x_0}
variable           vector_x          equal     1.1862324139767-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.03219551872936-${y_0}
variable           vector_y          equal     4.03219551872936-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3313011289477-${z_0}
variable           vector_z          equal     31.3313011289477-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.0205961000919299  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.0205961000919299  0.00751256346701989  ${vector_z}
fix                hold    carbon   planeforce   0.0205961000919299  0.00751256346701989  0.0104328060150003
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 -0.015589098  0.013388804  0.021134331 
     341   -1152449.3            0   -1152449.3 1.2021264e-05 -3.407821e-06 -2.1278042e-05 
Loop time of 2.12674 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.34142435  -1152449.34370178  -1152449.34370178
  Force two-norm initial, final = 0.21738464 0.00014632945
  Force max component initial, final = 0.10454613 2.1278042e-05
  Final line search alpha, max atom move = 1.0000000 2.1278042e-05
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55934    | 1.534      | 2.0031     |  33.3 | 72.13
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032828   | 0.34407    | 1.0372     |  49.3 | 16.18
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3936e-05 | 0.0030115  | 0.0064358  |   2.6 |  0.14
Other   |            | 0.2456     |            |       | 11.55

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18570624688401-${x_0}
variable           new_x         equal     1.18570624688401-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.03284968917093-${y_0}
variable           new_y         equal     4.03284968917093-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3318688087394-${z_0}
variable           new_z         equal     31.3318688087394-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02006993299924^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02006993299924^2+0.00816673390859002^2+${new_z}^2)
variable           norm          equal     sqrt(0.02006993299924^2+0.00816673390859002^2+0.0110004858067008^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.02006993299924/${norm}
variable           unit_x        equal     0.02006993299924/0.0243003794478836
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.00816673390859002/${norm}
variable           unit_y        equal     0.00816673390859002/0.0243003794478836
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0110004858067008/${norm}
variable           unit_z        equal     0.0110004858067008/0.0243003794478836
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18570624688401+${delta}*${unit_x}
variable           x_new         equal     1.18570624688401+0.03*${unit_x}
variable           x_new         equal     1.18570624688401+0.03*0.825910271989105
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.03284968917093+${delta}*${unit_y}
variable           y_new         equal     4.03284968917093+0.03*${unit_y}
variable           y_new         equal     4.03284968917093+0.03*0.336074336868073
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3318688087394+${delta}*${unit_z}
variable           z_new         equal     31.3318688087394+0.03*${unit_z}
variable           z_new         equal     31.3318688087394+0.03*0.452687820381293

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21048355504368  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21048355504368  y  4.04293191927697  z   ${z_new}
set                atom          288751    x  1.21048355504368  y  4.04293191927697  z   31.3454494433508
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02006993299924  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02006993299924  0.00816673390859002  ${new_z}
fix                hold    carbon   planeforce   0.02006993299924  0.00816673390859002  0.0110004858067008
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     341   -1152449.3            0   -1152449.3 -0.021503837  0.020220788     0.024221 
     520   -1152449.3            0   -1152449.3 4.0751968e-05 -4.2948382e-06 -7.1161809e-05 
Loop time of 2.06887 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33499333  -1152449.33843929  -1152449.33843929
  Force two-norm initial, final = 0.26664357 0.00024331019
  Force max component initial, final = 0.13416629 7.1463729e-05
  Final line search alpha, max atom move = 1.0000000 7.1463729e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53989    | 1.4994     | 1.9523     |  33.1 | 72.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033539   | 0.33632    | 1.0088     |  48.7 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2099e-05 | 0.0029427  | 0.0062925  |   2.6 |  0.14
Other   |            | 0.2302     |            |       | 11.13

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20929009583614-${x_0}
variable           new_x         equal     1.20929009583614-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.04442691218008-${y_0}
variable           new_y         equal     4.04442691218008-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3465169813946-${z_0}
variable           new_z         equal     31.3465169813946-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04365378195137*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04365378195137*0.04365378195137+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04365378195137*0.04365378195137+0.0197439569177407*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04365378195137*0.04365378195137+0.0197439569177407*0.0197439569177407+${new_z}*${new_z})
variable           module        equal     sqrt(0.04365378195137*0.04365378195137+0.0197439569177407*0.0197439569177407+0.0256486584619005*${new_z})
variable           module        equal     sqrt(0.04365378195137*0.04365378195137+0.0197439569177407*0.0197439569177407+0.0256486584619005*0.0256486584619005)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.04365378195137/${module}
variable           unitx         equal     0.04365378195137/0.0543445507325489
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0197439569177407/${module}
variable           unity         equal     0.0197439569177407/0.0543445507325489
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0256486584619005/${module}
variable           unitz         equal     0.0256486584619005/0.0543445507325489
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07519680162411e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07519680162411e-05*4.07519680162411e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07519680162411e-05*4.07519680162411e-05+-4.29483823843989e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07519680162411e-05*4.07519680162411e-05+-4.29483823843989e-06*-4.29483823843989e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.07519680162411e-05*4.07519680162411e-05+-4.29483823843989e-06*-4.29483823843989e-06+-7.11618087013465e-05*${fz})
variable           f_module      equal     sqrt(4.07519680162411e-05*4.07519680162411e-05+-4.29483823843989e-06*-4.29483823843989e-06+-7.11618087013465e-05*-7.11618087013465e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.803277998675665*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.803277998675665*0.803277998675665+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.803277998675665*0.803277998675665+0.363310702758563*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.803277998675665*0.803277998675665+0.363310702758563*0.363310702758563+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.803277998675665*0.803277998675665+0.363310702758563*0.363310702758563+0.471963759312828*${unitz})
variable           dir_module    equal     sqrt(0.803277998675665*0.803277998675665+0.363310702758563*0.363310702758563+0.471963759312828*0.471963759312828)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07519680162411e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07519680162411e-05*0.803277998675665+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07519680162411e-05*0.803277998675665+-4.29483823843989e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.07519680162411e-05*0.803277998675665+-4.29483823843989e-06*0.363310702758563+${fz}*${unitz}
variable           dot      equal     4.07519680162411e-05*0.803277998675665+-4.29483823843989e-06*0.363310702758563+-7.11618087013465e-05*${unitz}
variable           dot      equal     4.07519680162411e-05*0.803277998675665+-4.29483823843989e-06*0.363310702758563+-7.11618087013465e-05*0.471963759312828
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.41099614264889e-06/${f_module}*${dir_module}
variable           cos      equal     -2.41099614264889e-06/8.21168164893047e-05*${dir_module}
variable           cos      equal     -2.41099614264889e-06/8.21168164893047e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0293605651768406)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60016111195286/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.6824782558597-90.0)
print              "The dot product: ${dot}"
The dot product: -2.41099614264889e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.6824782558597

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.04365378195137^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.04365378195137^2+0.0197439569177407^2+${new_z}^2)
variable           norm          equal     sqrt(0.04365378195137^2+0.0197439569177407^2+0.0256486584619005^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.04365378195137/${norm}
variable           unit_x        equal     0.04365378195137/0.0543445507325489
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0197439569177407/${norm}
variable           unit_y        equal     0.0197439569177407/0.0543445507325489
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0256486584619005/${norm}
variable           unit_z        equal     0.0256486584619005/0.0543445507325489
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20929009583614+${delta}*${unit_x}
variable           x_new         equal     1.20929009583614+0.03*${unit_x}
variable           x_new         equal     1.20929009583614+0.03*0.803277998675665
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.04442691218008+${delta}*${unit_y}
variable           y_new         equal     4.04442691218008+0.03*${unit_y}
variable           y_new         equal     4.04442691218008+0.03*0.363310702758563
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3465169813946+${delta}*${unit_z}
variable           z_new         equal     31.3465169813946+0.03*${unit_z}
variable           z_new         equal     31.3465169813946+0.03*0.471963759312828

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23338843579641  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23338843579641  y  4.05532623326284  z   ${z_new}
set                atom          288751    x  1.23338843579641  y  4.05532623326284  z   31.360675894174
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.04365378195137  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.04365378195137  0.0197439569177407  ${new_z}
fix                hold    carbon   planeforce   0.04365378195137  0.0197439569177407  0.0256486584619005
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     520   -1152449.3            0   -1152449.3  -0.02400768  0.029099688  0.018460343 
     729   -1152449.3            0   -1152449.3 1.7894548e-05 -2.5962292e-06 -2.8457818e-05 
Loop time of 2.42832 on 104 procs for 209 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32591034  -1152449.32928159  -1152449.32928159
  Force two-norm initial, final = 0.26437324 9.0033186e-05
  Force max component initial, final = 0.13805042 2.8457818e-05
  Final line search alpha, max atom move = 1.0000000 2.8457818e-05
  Iterations, force evaluations = 209 418

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63297    | 1.7511     | 2.2961     |  35.8 | 72.11
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039355   | 0.39565    | 1.177      |  52.3 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6588e-05 | 0.003438   | 0.0073842  |   2.8 |  0.14
Other   |            | 0.2781     |            |       | 11.45

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5427 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115494 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.23153281226426-${x_0}
variable           new_x         equal     1.23153281226426-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.05837870256223-${y_0}
variable           new_y         equal     4.05837870256223-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3614844028431-${z_0}
variable           new_z         equal     31.3614844028431-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0658964983794899*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0658964983794899*0.0658964983794899+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0658964983794899*0.0658964983794899+0.0336957472998902*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0658964983794899*0.0658964983794899+0.0336957472998902*0.0336957472998902+${new_z}*${new_z})
variable           module        equal     sqrt(0.0658964983794899*0.0658964983794899+0.0336957472998902*0.0336957472998902+0.0406160799104001*${new_z})
variable           module        equal     sqrt(0.0658964983794899*0.0658964983794899+0.0336957472998902*0.0336957472998902+0.0406160799104001*0.0406160799104001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0658964983794899/${module}
variable           unitx         equal     0.0658964983794899/0.0844240358669507
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0336957472998902/${module}
variable           unity         equal     0.0336957472998902/0.0844240358669507
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0406160799104001/${module}
variable           unitz         equal     0.0406160799104001/0.0844240358669507
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.78945478586513e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.78945478586513e-05*1.78945478586513e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.78945478586513e-05*1.78945478586513e-05+-2.59622919894993e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.78945478586513e-05*1.78945478586513e-05+-2.59622919894993e-06*-2.59622919894993e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.78945478586513e-05*1.78945478586513e-05+-2.59622919894993e-06*-2.59622919894993e-06+-2.84578179389657e-05*${fz})
variable           f_module      equal     sqrt(1.78945478586513e-05*1.78945478586513e-05+-2.59622919894993e-06*-2.59622919894993e-06+-2.84578179389657e-05*-2.84578179389657e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.780541912060926*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.780541912060926*0.780541912060926+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.780541912060926*0.780541912060926+0.399125047196198*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.780541912060926*0.780541912060926+0.399125047196198*0.399125047196198+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.780541912060926*0.780541912060926+0.399125047196198*0.399125047196198+0.481096165248598*${unitz})
variable           dir_module    equal     sqrt(0.780541912060926*0.780541912060926+0.399125047196198*0.399125047196198+0.481096165248598*0.481096165248598)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.78945478586513e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.78945478586513e-05*0.780541912060926+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.78945478586513e-05*0.780541912060926+-2.59622919894993e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.78945478586513e-05*0.780541912060926+-2.59622919894993e-06*0.399125047196198+${fz}*${unitz}
variable           dot      equal     1.78945478586513e-05*0.780541912060926+-2.59622919894993e-06*0.399125047196198+-2.84578179389657e-05*${unitz}
variable           dot      equal     1.78945478586513e-05*0.780541912060926+-2.59622919894993e-06*0.399125047196198+-2.84578179389657e-05*0.481096165248598
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.59722582284762e-07/${f_module}*${dir_module}
variable           cos      equal     -7.59722582284762e-07/3.37165041332336e-05*${dir_module}
variable           cos      equal     -7.59722582284762e-07/3.37165041332336e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0225326617279969)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59333089567567/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.2911356900152-90.0)
print              "The dot product: ${dot}"
The dot product: -7.59722582284762e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.2911356900152

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0658964983794899^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0658964983794899^2+0.0336957472998902^2+${new_z}^2)
variable           norm          equal     sqrt(0.0658964983794899^2+0.0336957472998902^2+0.0406160799104001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0658964983794899/${norm}
variable           unit_x        equal     0.0658964983794899/0.0844240358669507
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0336957472998902/${norm}
variable           unit_y        equal     0.0336957472998902/0.0844240358669507
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0406160799104001/${norm}
variable           unit_z        equal     0.0406160799104001/0.0844240358669507
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.23153281226426+${delta}*${unit_x}
variable           x_new         equal     1.23153281226426+0.03*${unit_x}
variable           x_new         equal     1.23153281226426+0.03*0.780541912060926
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.05837870256223+${delta}*${unit_y}
variable           y_new         equal     4.05837870256223+0.03*${unit_y}
variable           y_new         equal     4.05837870256223+0.03*0.399125047196198
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3614844028431+${delta}*${unit_z}
variable           z_new         equal     31.3614844028431+0.03*${unit_z}
variable           z_new         equal     31.3614844028431+0.03*0.481096165248598

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25494906962609  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25494906962609  y  4.07035245397812  z   ${z_new}
set                atom          288751    x  1.25494906962609  y  4.07035245397812  z   31.3759172878006
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0658964983794899  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0658964983794899  0.0336957472998902  ${new_z}
fix                hold    carbon   planeforce   0.0658964983794899  0.0336957472998902  0.0406160799104001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     729   -1152449.3            0   -1152449.3 -0.025967515  0.042277156 0.0070565133 
     983   -1152449.3            0   -1152449.3 -1.3682816e-06 2.186104e-07  2.03857e-06 
Loop time of 2.93972 on 104 procs for 254 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31352593  -1152449.31688402  -1152449.31688402
  Force two-norm initial, final = 0.26400345 7.9442124e-06
  Force max component initial, final = 0.14009837 2.0385700e-06
  Final line search alpha, max atom move = 1.0000000 2.0385700e-06
  Iterations, force evaluations = 254 508

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.77048    | 2.1294     | 2.7773     |  39.4 | 72.43
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.046579   | 0.4757     | 1.4354     |  57.8 | 16.18
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.1765e-05 | 0.0041833  | 0.0089193  |   3.0 |  0.14
Other   |            | 0.3305     |            |       | 11.24

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115497 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25258656460329-${x_0}
variable           new_x         equal     1.25258656460329-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.07638640719821-${y_0}
variable           new_y         equal     4.07638640719821-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3747444086204-${z_0}
variable           new_z         equal     31.3747444086204-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08695025071852*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08695025071852*0.08695025071852+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08695025071852*0.08695025071852+0.0517034519358699*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08695025071852*0.08695025071852+0.0517034519358699*0.0517034519358699+${new_z}*${new_z})
variable           module        equal     sqrt(0.08695025071852*0.08695025071852+0.0517034519358699*0.0517034519358699+0.0538760856877012*${new_z})
variable           module        equal     sqrt(0.08695025071852*0.08695025071852+0.0517034519358699*0.0517034519358699+0.0538760856877012*0.0538760856877012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.08695025071852/${module}
variable           unitx         equal     0.08695025071852/0.114613374660756
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0517034519358699/${module}
variable           unity         equal     0.0517034519358699/0.114613374660756
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0538760856877012/${module}
variable           unitz         equal     0.0538760856877012/0.114613374660756
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36828155587655e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36828155587655e-06*-1.36828155587655e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36828155587655e-06*-1.36828155587655e-06+2.18610398562629e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36828155587655e-06*-1.36828155587655e-06+2.18610398562629e-07*2.18610398562629e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36828155587655e-06*-1.36828155587655e-06+2.18610398562629e-07*2.18610398562629e-07+2.03857001393307e-06*${fz})
variable           f_module      equal     sqrt(-1.36828155587655e-06*-1.36828155587655e-06+2.18610398562629e-07*2.18610398562629e-07+2.03857001393307e-06*2.03857001393307e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.758639652447927*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.758639652447927*0.758639652447927+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.758639652447927*0.758639652447927+0.451111853995285*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.758639652447927*0.758639652447927+0.451111853995285*0.451111853995285+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.758639652447927*0.758639652447927+0.451111853995285*0.451111853995285+0.470068051369825*${unitz})
variable           dir_module    equal     sqrt(0.758639652447927*0.758639652447927+0.451111853995285*0.451111853995285+0.470068051369825*0.470068051369825)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36828155587655e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36828155587655e-06*0.758639652447927+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36828155587655e-06*0.758639652447927+2.18610398562629e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36828155587655e-06*0.758639652447927+2.18610398562629e-07*0.451111853995285+${fz}*${unitz}
variable           dot      equal     -1.36828155587655e-06*0.758639652447927+2.18610398562629e-07*0.451111853995285+2.03857001393307e-06*${unitz}
variable           dot      equal     -1.36828155587655e-06*0.758639652447927+2.18610398562629e-07*0.451111853995285+2.03857001393307e-06*0.470068051369825
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.88517322276164e-08/${f_module}*${dir_module}
variable           cos      equal     1.88517322276164e-08/2.4649041815492e-06*${dir_module}
variable           cos      equal     1.88517322276164e-08/2.4649041815492e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00764805884493572)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5631481933886/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.5617942346662-90.0)
print              "The dot product: ${dot}"
The dot product: 1.88517322276164e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.5617942346662

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08695025071852^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08695025071852^2+0.0517034519358699^2+${new_z}^2)
variable           norm          equal     sqrt(0.08695025071852^2+0.0517034519358699^2+0.0538760856877012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.08695025071852/${norm}
variable           unit_x        equal     0.08695025071852/0.114613374660756
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0517034519358699/${norm}
variable           unit_y        equal     0.0517034519358699/0.114613374660756
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0538760856877012/${norm}
variable           unit_z        equal     0.0538760856877012/0.114613374660756
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25258656460329+${delta}*${unit_x}
variable           x_new         equal     1.25258656460329+0.03*${unit_x}
variable           x_new         equal     1.25258656460329+0.03*0.758639652447927
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.07638640719821+${delta}*${unit_y}
variable           y_new         equal     4.07638640719821+0.03*${unit_y}
variable           y_new         equal     4.07638640719821+0.03*0.451111853995285
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3747444086204+${delta}*${unit_z}
variable           z_new         equal     31.3747444086204+0.03*${unit_z}
variable           z_new         equal     31.3747444086204+0.03*0.470068051369825

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27534575417673  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27534575417673  y  4.08991976281807  z   ${z_new}
set                atom          288751    x  1.27534575417673  y  4.08991976281807  z   31.3888464501615
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08695025071852  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08695025071852  0.0517034519358699  ${new_z}
fix                hold    carbon   planeforce   0.08695025071852  0.0517034519358699  0.0538760856877012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     983   -1152449.3            0   -1152449.3 -0.030430207  0.052885342 -0.0016415558 
    1000   -1152449.3            0   -1152449.3 0.00082361077 -0.00047625474 -0.0008721708 
    1164   -1152449.3            0   -1152449.3 1.8548213e-05 -2.1670861e-06 -2.785514e-05 
Loop time of 2.1241 on 104 procs for 181 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.2982494  -1152449.30161327  -1152449.30161327
  Force two-norm initial, final = 0.26317499 0.00014856928
  Force max component initial, final = 0.13862845 2.7855140e-05
  Final line search alpha, max atom move = 1.0000000 2.7855140e-05
  Iterations, force evaluations = 181 362

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54657    | 1.5186     | 2.0028     |  33.4 | 71.49
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036622   | 0.34702    | 1.0297     |  48.4 | 16.34
Output  | 9.6376e-05 | 0.00010296 | 0.0001897  |   0.0 |  0.00
Modify  | 2.3377e-05 | 0.002987   | 0.006415   |   2.6 |  0.14
Other   |            | 0.2554     |            |       | 12.02

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27223711883946-${x_0}
variable           new_x         equal     1.27223711883946-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.0981229429232-${y_0}
variable           new_y         equal     4.0981229429232-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3859910811356-${z_0}
variable           new_z         equal     31.3859910811356-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10660080495469*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10660080495469*0.10660080495469+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10660080495469*0.10660080495469+0.0734399876608602*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10660080495469*0.10660080495469+0.0734399876608602*0.0734399876608602+${new_z}*${new_z})
variable           module        equal     sqrt(0.10660080495469*0.10660080495469+0.0734399876608602*0.0734399876608602+0.0651227582029001*${new_z})
variable           module        equal     sqrt(0.10660080495469*0.10660080495469+0.0734399876608602*0.0734399876608602+0.0651227582029001*0.0651227582029001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10660080495469/${module}
variable           unitx         equal     0.10660080495469/0.144907339498621
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0734399876608602/${module}
variable           unity         equal     0.0734399876608602/0.144907339498621
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0651227582029001/${module}
variable           unitz         equal     0.0651227582029001/0.144907339498621
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85482125799465e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85482125799465e-05*1.85482125799465e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85482125799465e-05*1.85482125799465e-05+-2.16708614049156e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.85482125799465e-05*1.85482125799465e-05+-2.16708614049156e-06*-2.16708614049156e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.85482125799465e-05*1.85482125799465e-05+-2.16708614049156e-06*-2.16708614049156e-06+-2.78551398255328e-05*${fz})
variable           f_module      equal     sqrt(1.85482125799465e-05*1.85482125799465e-05+-2.16708614049156e-06*-2.16708614049156e-06+-2.78551398255328e-05*-2.78551398255328e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735648072233805*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735648072233805*0.735648072233805+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735648072233805*0.735648072233805+0.506806542132113*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735648072233805*0.735648072233805+0.506806542132113*0.506806542132113+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735648072233805*0.735648072233805+0.506806542132113*0.506806542132113+0.449409660188536*${unitz})
variable           dir_module    equal     sqrt(0.735648072233805*0.735648072233805+0.506806542132113*0.506806542132113+0.449409660188536*0.449409660188536)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.85482125799465e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.85482125799465e-05*0.735648072233805+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.85482125799465e-05*0.735648072233805+-2.16708614049156e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.85482125799465e-05*0.735648072233805+-2.16708614049156e-06*0.506806542132113+${fz}*${unitz}
variable           dot      equal     1.85482125799465e-05*0.735648072233805+-2.16708614049156e-06*0.506806542132113+-2.78551398255328e-05*${unitz}
variable           dot      equal     1.85482125799465e-05*0.735648072233805+-2.16708614049156e-06*0.506806542132113+-2.78551398255328e-05*0.449409660188536
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.82944709586497e-08/${f_module}*${dir_module}
variable           cos      equal     2.82944709586497e-08/3.35356715595674e-05*${dir_module}
variable           cos      equal     2.82944709586497e-08/3.35356715595674e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000843712669012514)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56995261402578/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9516588192083-90.0)
print              "The dot product: ${dot}"
The dot product: 2.82944709586497e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9516588192083

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10660080495469^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10660080495469^2+0.0734399876608602^2+${new_z}^2)
variable           norm          equal     sqrt(0.10660080495469^2+0.0734399876608602^2+0.0651227582029001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10660080495469/${norm}
variable           unit_x        equal     0.10660080495469/0.144907339498621
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0734399876608602/${norm}
variable           unit_y        equal     0.0734399876608602/0.144907339498621
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0651227582029001/${norm}
variable           unit_z        equal     0.0651227582029001/0.144907339498621
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27223711883946+${delta}*${unit_x}
variable           x_new         equal     1.27223711883946+0.03*${unit_x}
variable           x_new         equal     1.27223711883946+0.03*0.735648072233805
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.0981229429232+${delta}*${unit_y}
variable           y_new         equal     4.0981229429232+0.03*${unit_y}
variable           y_new         equal     4.0981229429232+0.03*0.506806542132113
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3859910811356+${delta}*${unit_z}
variable           z_new         equal     31.3859910811356+0.03*${unit_z}
variable           z_new         equal     31.3859910811356+0.03*0.449409660188536

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29430656100647  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29430656100647  y  4.11332713918716  z   ${z_new}
set                atom          288751    x  1.29430656100647  y  4.11332713918716  z   31.3994733709413
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10660080495469  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10660080495469  0.0734399876608602  ${new_z}
fix                hold    carbon   planeforce   0.10660080495469  0.0734399876608602  0.0651227582029001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1164   -1152449.3            0   -1152449.3 -0.042516159  0.062373105 -0.00074356952 
    1374   -1152449.3            0   -1152449.3 -4.6902324e-06 8.0651378e-07 6.7680209e-06 
Loop time of 2.42492 on 104 procs for 210 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
       -1152449.280176  -1152449.28355556  -1152449.28355556
  Force two-norm initial, final = 0.26348799 5.4012721e-05
  Force max component initial, final = 0.13464495 7.3091781e-06
  Final line search alpha, max atom move = 1.0000000 7.3091781e-06
  Iterations, force evaluations = 210 420

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63666    | 1.7595     | 2.2879     |  35.7 | 72.56
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037058   | 0.39887    | 1.1962     |  52.4 | 16.45
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5562e-05 | 0.0034649  | 0.0073722  |   2.8 |  0.14
Other   |            | 0.2631     |            |       | 10.85

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.00 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28852670125191-${x_0}
variable           new_x         equal     1.28852670125191-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.1237776271475-${y_0}
variable           new_y         equal     4.1237776271475-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3971493599706-${z_0}
variable           new_z         equal     31.3971493599706-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12289038736714*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12289038736714*0.12289038736714+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12289038736714*0.12289038736714+0.09909467188516*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12289038736714*0.12289038736714+0.09909467188516*0.09909467188516+${new_z}*${new_z})
variable           module        equal     sqrt(0.12289038736714*0.12289038736714+0.09909467188516*0.09909467188516+0.0762810370379015*${new_z})
variable           module        equal     sqrt(0.12289038736714*0.12289038736714+0.09909467188516*0.09909467188516+0.0762810370379015*0.0762810370379015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12289038736714/${module}
variable           unitx         equal     0.12289038736714/0.175329968672931
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.09909467188516/${module}
variable           unity         equal     0.09909467188516/0.175329968672931
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0762810370379015/${module}
variable           unitz         equal     0.0762810370379015/0.175329968672931
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.69023244392912e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.69023244392912e-06*-4.69023244392912e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.69023244392912e-06*-4.69023244392912e-06+8.06513781472843e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.69023244392912e-06*-4.69023244392912e-06+8.06513781472843e-07*8.06513781472843e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-4.69023244392912e-06*-4.69023244392912e-06+8.06513781472843e-07*8.06513781472843e-07+6.76802094892889e-06*${fz})
variable           f_module      equal     sqrt(-4.69023244392912e-06*-4.69023244392912e-06+8.06513781472843e-07*8.06513781472843e-07+6.76802094892889e-06*6.76802094892889e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.700909195942342*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.700909195942342*0.700909195942342+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.700909195942342*0.700909195942342+0.56518958301998*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.700909195942342*0.700909195942342+0.56518958301998*0.56518958301998+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.700909195942342*0.700909195942342+0.56518958301998*0.56518958301998+0.435071297937661*${unitz})
variable           dir_module    equal     sqrt(0.700909195942342*0.700909195942342+0.56518958301998*0.56518958301998+0.435071297937661*0.435071297937661)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.69023244392912e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.69023244392912e-06*0.700909195942342+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.69023244392912e-06*0.700909195942342+8.06513781472843e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -4.69023244392912e-06*0.700909195942342+8.06513781472843e-07*0.56518958301998+${fz}*${unitz}
variable           dot      equal     -4.69023244392912e-06*0.700909195942342+8.06513781472843e-07*0.56518958301998+6.76802094892889e-06*${unitz}
variable           dot      equal     -4.69023244392912e-06*0.700909195942342+8.06513781472843e-07*0.56518958301998+6.76802094892889e-06*0.435071297937661
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.1297779551323e-07/${f_module}*${dir_module}
variable           cos      equal     1.1297779551323e-07/8.27374476418818e-06*${dir_module}
variable           cos      equal     1.1297779551323e-07/8.27374476418818e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0136549771274356)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55714092528432/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.2176031258874-90.0)
print              "The dot product: ${dot}"
The dot product: 1.1297779551323e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.2176031258874

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12289038736714^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12289038736714^2+0.09909467188516^2+${new_z}^2)
variable           norm          equal     sqrt(0.12289038736714^2+0.09909467188516^2+0.0762810370379015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12289038736714/${norm}
variable           unit_x        equal     0.12289038736714/0.175329968672931
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.09909467188516/${norm}
variable           unit_y        equal     0.09909467188516/0.175329968672931
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0762810370379015/${norm}
variable           unit_z        equal     0.0762810370379015/0.175329968672931
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28852670125191+${delta}*${unit_x}
variable           x_new         equal     1.28852670125191+0.03*${unit_x}
variable           x_new         equal     1.28852670125191+0.03*0.700909195942342
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.1237776271475+${delta}*${unit_y}
variable           y_new         equal     4.1237776271475+0.03*${unit_y}
variable           y_new         equal     4.1237776271475+0.03*0.56518958301998
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3971493599706+${delta}*${unit_z}
variable           z_new         equal     31.3971493599706+0.03*${unit_z}
variable           z_new         equal     31.3971493599706+0.03*0.435071297937661

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30955397713018  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30955397713018  y  4.1407333146381  z   ${z_new}
set                atom          288751    x  1.30955397713018  y  4.1407333146381  z   31.4102014989087
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12289038736714  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12289038736714  0.09909467188516  ${new_z}
fix                hold    carbon   planeforce   0.12289038736714  0.09909467188516  0.0762810370379015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1374   -1152449.3            0   -1152449.3 -0.056214753  0.066967637 0.0035672923 
    1577   -1152449.3            0   -1152449.3 1.4814089e-05 -1.5965415e-06 -2.179179e-05 
Loop time of 2.37598 on 104 procs for 203 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.25951366  -1152449.26292692  -1152449.26292692
  Force two-norm initial, final = 0.26352655 8.0926945e-05
  Force max component initial, final = 0.12897856 2.4269984e-05
  Final line search alpha, max atom move = 1.0000000 2.4269984e-05
  Iterations, force evaluations = 203 406

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61394    | 1.7027     | 2.2451     |  35.3 | 71.66
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036325   | 0.38684    | 1.1607     |  51.4 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5004e-05 | 0.0033437  | 0.0071334  |   2.7 |  0.14
Other   |            | 0.2831     |            |       | 11.91

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30077675059449-${x_0}
variable           new_x         equal     1.30077675059449-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.15230506234854-${y_0}
variable           new_y         equal     4.15230506234854-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4093092486699-${z_0}
variable           new_z         equal     31.4093092486699-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13514043670972*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13514043670972*0.13514043670972+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13514043670972*0.13514043670972+0.1276221070862*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13514043670972*0.13514043670972+0.1276221070862*0.1276221070862+${new_z}*${new_z})
variable           module        equal     sqrt(0.13514043670972*0.13514043670972+0.1276221070862*0.1276221070862+0.0884409257371992*${new_z})
variable           module        equal     sqrt(0.13514043670972*0.13514043670972+0.1276221070862*0.1276221070862+0.0884409257371992*0.0884409257371992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13514043670972/${module}
variable           unitx         equal     0.13514043670972/0.205844934833161
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.1276221070862/${module}
variable           unity         equal     0.1276221070862/0.205844934833161
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0884409257371992/${module}
variable           unitz         equal     0.0884409257371992/0.205844934833161
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48140886852225e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48140886852225e-05*1.48140886852225e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48140886852225e-05*1.48140886852225e-05+-1.59654152015134e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48140886852225e-05*1.48140886852225e-05+-1.59654152015134e-06*-1.59654152015134e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.48140886852225e-05*1.48140886852225e-05+-1.59654152015134e-06*-1.59654152015134e-06+-2.1791789984263e-05*${fz})
variable           f_module      equal     sqrt(1.48140886852225e-05*1.48140886852225e-05+-1.59654152015134e-06*-1.59654152015134e-06+-2.1791789984263e-05*-2.1791789984263e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.656515725389369*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.656515725389369*0.656515725389369+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.656515725389369*0.656515725389369+0.619991486259493*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.656515725389369*0.656515725389369+0.619991486259493*0.619991486259493+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.656515725389369*0.656515725389369+0.619991486259493*0.619991486259493+0.429648297194591*${unitz})
variable           dir_module    equal     sqrt(0.656515725389369*0.656515725389369+0.619991486259493*0.619991486259493+0.429648297194591*0.429648297194591)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.48140886852225e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.48140886852225e-05*0.656515725389369+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.48140886852225e-05*0.656515725389369+-1.59654152015134e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.48140886852225e-05*0.656515725389369+-1.59654152015134e-06*0.619991486259493+${fz}*${unitz}
variable           dot      equal     1.48140886852225e-05*0.656515725389369+-1.59654152015134e-06*0.619991486259493+-2.1791789984263e-05*${unitz}
variable           dot      equal     1.48140886852225e-05*0.656515725389369+-1.59654152015134e-06*0.619991486259493+-2.1791789984263e-05*0.429648297194591
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.26965430353068e-07/${f_module}*${dir_module}
variable           cos      equal     -6.26965430353068e-07/2.63986416150042e-05*${dir_module}
variable           cos      equal     -6.26965430353068e-07/2.63986416150042e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0237499125711347)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59454847265568/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.360897712202-90.0)
print              "The dot product: ${dot}"
The dot product: -6.26965430353068e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.360897712202

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13514043670972^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13514043670972^2+0.1276221070862^2+${new_z}^2)
variable           norm          equal     sqrt(0.13514043670972^2+0.1276221070862^2+0.0884409257371992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13514043670972/${norm}
variable           unit_x        equal     0.13514043670972/0.205844934833161
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.1276221070862/${norm}
variable           unit_y        equal     0.1276221070862/0.205844934833161
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0884409257371992/${norm}
variable           unit_z        equal     0.0884409257371992/0.205844934833161
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30077675059449+${delta}*${unit_x}
variable           x_new         equal     1.30077675059449+0.03*${unit_x}
variable           x_new         equal     1.30077675059449+0.03*0.656515725389369
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.15230506234854+${delta}*${unit_y}
variable           y_new         equal     4.15230506234854+0.03*${unit_y}
variable           y_new         equal     4.15230506234854+0.03*0.619991486259493
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4093092486699+${delta}*${unit_z}
variable           z_new         equal     31.4093092486699+0.03*${unit_z}
variable           z_new         equal     31.4093092486699+0.03*0.429648297194591

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32047222235617  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32047222235617  y  4.17090480693632  z   ${z_new}
set                atom          288751    x  1.32047222235617  y  4.17090480693632  z   31.4221986975857
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13514043670972  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13514043670972  0.1276221070862  ${new_z}
fix                hold    carbon   planeforce   0.13514043670972  0.1276221070862  0.0884409257371992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1577   -1152449.2            0   -1152449.2 -0.063596738  0.064137476 0.0046260376 
    1765   -1152449.2            0   -1152449.2 -2.9938193e-05 3.0472247e-06 4.1349264e-05 
Loop time of 2.173 on 104 procs for 188 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.23615255  -1152449.23952411  -1152449.23952411
  Force two-norm initial, final = 0.26051814 0.00013049326
  Force max component initial, final = 0.12247579 4.1349264e-05
  Final line search alpha, max atom move = 1.0000000 4.1349264e-05
  Iterations, force evaluations = 188 376

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56759    | 1.576      | 2.0522     |  34.0 | 72.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035583   | 0.35793    | 1.065      |  49.8 | 16.47
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3258e-05 | 0.0031064  | 0.0066283  |   2.6 |  0.14
Other   |            | 0.2359     |            |       | 10.86

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115504 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30997693571232-${x_0}
variable           new_x         equal     1.30997693571232-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.18210413063225-${y_0}
variable           new_y         equal     4.18210413063225-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4220749577278-${z_0}
variable           new_z         equal     31.4220749577278-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14434062182755*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14434062182755*0.14434062182755+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14434062182755*0.14434062182755+0.15742117536991*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14434062182755*0.14434062182755+0.15742117536991*0.15742117536991+${new_z}*${new_z})
variable           module        equal     sqrt(0.14434062182755*0.14434062182755+0.15742117536991*0.15742117536991+0.101206634795101*${new_z})
variable           module        equal     sqrt(0.14434062182755*0.14434062182755+0.15742117536991*0.15742117536991+0.101206634795101*0.101206634795101)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.14434062182755/${module}
variable           unitx         equal     0.14434062182755/0.236343869163041
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.15742117536991/${module}
variable           unity         equal     0.15742117536991/0.236343869163041
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.101206634795101/${module}
variable           unitz         equal     0.101206634795101/0.236343869163041
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.99381925325583e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.99381925325583e-05*-2.99381925325583e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.99381925325583e-05*-2.99381925325583e-05+3.04722473998696e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.99381925325583e-05*-2.99381925325583e-05+3.04722473998696e-06*3.04722473998696e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.99381925325583e-05*-2.99381925325583e-05+3.04722473998696e-06*3.04722473998696e-06+4.1349263822911e-05*${fz})
variable           f_module      equal     sqrt(-2.99381925325583e-05*-2.99381925325583e-05+3.04722473998696e-06*3.04722473998696e-06+4.1349263822911e-05*4.1349263822911e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.610722936620696*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.610722936620696*0.610722936620696+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.610722936620696*0.610722936620696+0.666068368633305*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.610722936620696*0.610722936620696+0.666068368633305*0.666068368633305+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.610722936620696*0.610722936620696+0.666068368633305*0.666068368633305+0.428217728488163*${unitz})
variable           dir_module    equal     sqrt(0.610722936620696*0.610722936620696+0.666068368633305*0.666068368633305+0.428217728488163*0.428217728488163)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.99381925325583e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.99381925325583e-05*0.610722936620696+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.99381925325583e-05*0.610722936620696+3.04722473998696e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.99381925325583e-05*0.610722936620696+3.04722473998696e-06*0.666068368633305+${fz}*${unitz}
variable           dot      equal     -2.99381925325583e-05*0.610722936620696+3.04722473998696e-06*0.666068368633305+4.1349263822911e-05*${unitz}
variable           dot      equal     -2.99381925325583e-05*0.610722936620696+3.04722473998696e-06*0.666068368633305+4.1349263822911e-05*0.428217728488163
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.45220697972709e-06/${f_module}*${dir_module}
variable           cos      equal     1.45220697972709e-06/5.11404201139296e-05*${dir_module}
variable           cos      equal     1.45220697972709e-06/5.11404201139296e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0283964616734061)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54239604744547/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.3727838562853-90.0)
print              "The dot product: ${dot}"
The dot product: 1.45220697972709e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.3727838562853

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14434062182755^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14434062182755^2+0.15742117536991^2+${new_z}^2)
variable           norm          equal     sqrt(0.14434062182755^2+0.15742117536991^2+0.101206634795101^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.14434062182755/${norm}
variable           unit_x        equal     0.14434062182755/0.236343869163041
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.15742117536991/${norm}
variable           unit_y        equal     0.15742117536991/0.236343869163041
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.101206634795101/${norm}
variable           unit_z        equal     0.101206634795101/0.236343869163041
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30997693571232+${delta}*${unit_x}
variable           x_new         equal     1.30997693571232+0.03*${unit_x}
variable           x_new         equal     1.30997693571232+0.03*0.610722936620696
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.18210413063225+${delta}*${unit_y}
variable           y_new         equal     4.18210413063225+0.03*${unit_y}
variable           y_new         equal     4.18210413063225+0.03*0.666068368633305
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4220749577278+${delta}*${unit_z}
variable           z_new         equal     31.4220749577278+0.03*${unit_z}
variable           z_new         equal     31.4220749577278+0.03*0.428217728488163

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32829862381094  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32829862381094  y  4.20208618169125  z   ${z_new}
set                atom          288751    x  1.32829862381094  y  4.20208618169125  z   31.4349214895824
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14434062182755  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14434062182755  0.15742117536991  ${new_z}
fix                hold    carbon   planeforce   0.14434062182755  0.15742117536991  0.101206634795101
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1765   -1152449.2            0   -1152449.2  -0.06516693  0.057321208   0.00378101 
    1949   -1152449.2            0   -1152449.2 -2.8975141e-05 4.5171109e-06 3.4298157e-05 
Loop time of 2.14025 on 104 procs for 184 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.20977595  -1152449.21306431  -1152449.21306431
  Force two-norm initial, final = 0.25625755 0.00016456656
  Force max component initial, final = 0.12196913 4.6538983e-05
  Final line search alpha, max atom move = 1.0000000 4.6538983e-05
  Iterations, force evaluations = 184 368

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55653    | 1.5431     | 2.0149     |  33.6 | 72.10
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032408   | 0.3491     | 1.0479     |  49.3 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2675e-05 | 0.003033   | 0.0065072  |   2.6 |  0.14
Other   |            | 0.245      |            |       | 11.45

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.31716049710487-${x_0}
variable           new_x         equal     1.31716049710487-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.21221499023342-${y_0}
variable           new_y         equal     4.21221499023342-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4350518682772-${z_0}
variable           new_z         equal     31.4350518682772-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1515241832201*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1515241832201*0.1515241832201+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1515241832201*0.1515241832201+0.18753203497108*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1515241832201*0.1515241832201+0.18753203497108*0.18753203497108+${new_z}*${new_z})
variable           module        equal     sqrt(0.1515241832201*0.1515241832201+0.18753203497108*0.18753203497108+0.114183545344499*${new_z})
variable           module        equal     sqrt(0.1515241832201*0.1515241832201+0.18753203497108*0.18753203497108+0.114183545344499*0.114183545344499)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.1515241832201/${module}
variable           unitx         equal     0.1515241832201/0.266769046683366
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.18753203497108/${module}
variable           unity         equal     0.18753203497108/0.266769046683366
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.114183545344499/${module}
variable           unitz         equal     0.114183545344499/0.266769046683366
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.89751413871585e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.89751413871585e-05*-2.89751413871585e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.89751413871585e-05*-2.89751413871585e-05+4.51711093252292e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.89751413871585e-05*-2.89751413871585e-05+4.51711093252292e-06*4.51711093252292e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.89751413871585e-05*-2.89751413871585e-05+4.51711093252292e-06*4.51711093252292e-06+3.42981566389758e-05*${fz})
variable           f_module      equal     sqrt(-2.89751413871585e-05*-2.89751413871585e-05+4.51711093252292e-06*4.51711093252292e-06+3.42981566389758e-05*3.42981566389758e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.567997618554102*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.567997618554102*0.567997618554102+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.567997618554102*0.567997618554102+0.702975241328001*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.567997618554102*0.567997618554102+0.702975241328001*0.702975241328001+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.567997618554102*0.567997618554102+0.702975241328001*0.702975241328001+0.428023965913954*${unitz})
variable           dir_module    equal     sqrt(0.567997618554102*0.567997618554102+0.702975241328001*0.702975241328001+0.428023965913954*0.428023965913954)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.89751413871585e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.89751413871585e-05*0.567997618554102+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.89751413871585e-05*0.567997618554102+4.51711093252292e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.89751413871585e-05*0.567997618554102+4.51711093252292e-06*0.702975241328001+${fz}*${unitz}
variable           dot      equal     -2.89751413871585e-05*0.567997618554102+4.51711093252292e-06*0.702975241328001+3.42981566389758e-05*${unitz}
variable           dot      equal     -2.89751413871585e-05*0.567997618554102+4.51711093252292e-06*0.702975241328001+3.42981566389758e-05*0.428023965913954
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.39803887087366e-06/${f_module}*${dir_module}
variable           cos      equal     1.39803887087366e-06/4.51256762654507e-05*${dir_module}
variable           cos      equal     1.39803887087366e-06/4.51256762654507e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0309810065260791)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53981036208108/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.224634997757-90.0)
print              "The dot product: ${dot}"
The dot product: 1.39803887087366e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.224634997757

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1515241832201^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1515241832201^2+0.18753203497108^2+${new_z}^2)
variable           norm          equal     sqrt(0.1515241832201^2+0.18753203497108^2+0.114183545344499^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.1515241832201/${norm}
variable           unit_x        equal     0.1515241832201/0.266769046683366
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.18753203497108/${norm}
variable           unit_y        equal     0.18753203497108/0.266769046683366
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.114183545344499/${norm}
variable           unit_z        equal     0.114183545344499/0.266769046683366
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.31716049710487+${delta}*${unit_x}
variable           x_new         equal     1.31716049710487+0.03*${unit_x}
variable           x_new         equal     1.31716049710487+0.03*0.567997618554102
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.21221499023342+${delta}*${unit_y}
variable           y_new         equal     4.21221499023342+0.03*${unit_y}
variable           y_new         equal     4.21221499023342+0.03*0.702975241328001
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4350518682772+${delta}*${unit_z}
variable           z_new         equal     31.4350518682772+0.03*${unit_z}
variable           z_new         equal     31.4350518682772+0.03*0.428023965913954

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33420042566149  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33420042566149  y  4.23330424747326  z   ${z_new}
set                atom          288751    x  1.33420042566149  y  4.23330424747326  z   31.4478925872546
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1515241832201  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1515241832201  0.18753203497108  ${new_z}
fix                hold    carbon   planeforce   0.1515241832201  0.18753203497108  0.114183545344499
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1949   -1152449.2            0   -1152449.2   -0.0631744  0.049588154 0.0023916055 
    2000   -1152449.2            0   -1152449.2 0.00045510246 6.8218421e-05 -0.00071597153 
    2129   -1152449.2            0   -1152449.2 -2.1627528e-05 -8.7380702e-07 3.0135343e-05 
Loop time of 2.08634 on 104 procs for 180 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.18010192  -1152449.18328834  -1152449.18328834
  Force two-norm initial, final = 0.25245586 0.00020786383
  Force max component initial, final = 0.13300409 5.0036806e-05
  Final line search alpha, max atom move = 1.0000000 5.0036806e-05
  Iterations, force evaluations = 180 360

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54181    | 1.509      | 1.9627     |  33.3 | 72.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031594   | 0.34105    | 1.028      |  48.9 | 16.35
Output  | 9.7373e-05 | 0.00010573 | 0.00020486 |   0.0 |  0.01
Modify  | 2.2476e-05 | 0.0029707  | 0.006345   |   2.6 |  0.14
Other   |            | 0.2332     |            |       | 11.18

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115510 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32325095708273-${x_0}
variable           new_x         equal     1.32325095708273-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.24210024306517-${y_0}
variable           new_y         equal     4.24210024306517-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4479764726353-${z_0}
variable           new_z         equal     31.4479764726353-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15761464319796*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15761464319796*0.15761464319796+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15761464319796*0.15761464319796+0.217417287802831*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15761464319796*0.15761464319796+0.217417287802831*0.217417287802831+${new_z}*${new_z})
variable           module        equal     sqrt(0.15761464319796*0.15761464319796+0.217417287802831*0.217417287802831+0.1271081497026*${new_z})
variable           module        equal     sqrt(0.15761464319796*0.15761464319796+0.217417287802831*0.217417287802831+0.1271081497026*0.1271081497026)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.15761464319796/${module}
variable           unitx         equal     0.15761464319796/0.29710121929534
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.217417287802831/${module}
variable           unity         equal     0.217417287802831/0.29710121929534
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1271081497026/${module}
variable           unitz         equal     0.1271081497026/0.29710121929534
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.16275281431916e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.16275281431916e-05*-2.16275281431916e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.16275281431916e-05*-2.16275281431916e-05+-8.73807023617907e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.16275281431916e-05*-2.16275281431916e-05+-8.73807023617907e-07*-8.73807023617907e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.16275281431916e-05*-2.16275281431916e-05+-8.73807023617907e-07*-8.73807023617907e-07+3.01353433713621e-05*${fz})
variable           f_module      equal     sqrt(-2.16275281431916e-05*-2.16275281431916e-05+-8.73807023617907e-07*-8.73807023617907e-07+3.01353433713621e-05*3.01353433713621e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.530508234102128*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.530508234102128*0.530508234102128+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.530508234102128*0.530508234102128+0.731795340047738*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.530508234102128*0.530508234102128+0.731795340047738*0.731795340047738+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.530508234102128*0.530508234102128+0.731795340047738*0.731795340047738+0.427827761878841*${unitz})
variable           dir_module    equal     sqrt(0.530508234102128*0.530508234102128+0.731795340047738*0.731795340047738+0.427827761878841*0.427827761878841)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.16275281431916e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.16275281431916e-05*0.530508234102128+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.16275281431916e-05*0.530508234102128+-8.73807023617907e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.16275281431916e-05*0.530508234102128+-8.73807023617907e-07*0.731795340047738+${fz}*${unitz}
variable           dot      equal     -2.16275281431916e-05*0.530508234102128+-8.73807023617907e-07*0.731795340047738+3.01353433713621e-05*${unitz}
variable           dot      equal     -2.16275281431916e-05*0.530508234102128+-8.73807023617907e-07*0.731795340047738+3.01353433713621e-05*0.427827761878841
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.79706836796995e-07/${f_module}*${dir_module}
variable           cos      equal     7.79706836796995e-07/3.71032671392826e-05*${dir_module}
variable           cos      equal     7.79706836796995e-07/3.71032671392826e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0210145061853998)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54978027360123/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7958688499805-90.0)
print              "The dot product: ${dot}"
The dot product: 7.79706836796995e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7958688499805

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15761464319796^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15761464319796^2+0.217417287802831^2+${new_z}^2)
variable           norm          equal     sqrt(0.15761464319796^2+0.217417287802831^2+0.1271081497026^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.15761464319796/${norm}
variable           unit_x        equal     0.15761464319796/0.29710121929534
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.217417287802831/${norm}
variable           unit_y        equal     0.217417287802831/0.29710121929534
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1271081497026/${norm}
variable           unit_z        equal     0.1271081497026/0.29710121929534
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32325095708273+${delta}*${unit_x}
variable           x_new         equal     1.32325095708273+0.03*${unit_x}
variable           x_new         equal     1.32325095708273+0.03*0.530508234102128
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.24210024306517+${delta}*${unit_y}
variable           y_new         equal     4.24210024306517+0.03*${unit_y}
variable           y_new         equal     4.24210024306517+0.03*0.731795340047738
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4479764726353+${delta}*${unit_z}
variable           z_new         equal     31.4479764726353+0.03*${unit_z}
variable           z_new         equal     31.4479764726353+0.03*0.427827761878841

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33916620410579  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33916620410579  y  4.2640541032666  z   ${z_new}
set                atom          288751    x  1.33916620410579  y  4.2640541032666  z   31.4608113054917
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15761464319796  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15761464319796  0.217417287802831  ${new_z}
fix                hold    carbon   planeforce   0.15761464319796  0.217417287802831  0.1271081497026
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2129   -1152449.1            0   -1152449.1 -0.059476742  0.042423216 0.0011869022 
    2330   -1152449.1            0   -1152449.1 2.222829e-05 -2.3870466e-06 -2.3480152e-05 
Loop time of 2.34664 on 104 procs for 201 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.14686467  -1152449.14996684  -1152449.14996684
  Force two-norm initial, final = 0.25006102 0.00012401677
  Force max component initial, final = 0.14269772 2.5911656e-05
  Final line search alpha, max atom move = 1.0000000 2.5911656e-05
  Iterations, force evaluations = 201 402

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61039    | 1.6832     | 2.217      |  35.0 | 71.73
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037405   | 0.38004    | 1.1307     |  51.0 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5964e-05 | 0.0033058  | 0.0070881  |   2.7 |  0.14
Other   |            | 0.28       |            |       | 11.93

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32872936253841-${x_0}
variable           new_x         equal     1.32872936253841-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.27165820206111-${y_0}
variable           new_y         equal     4.27165820206111-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4607462941106-${z_0}
variable           new_z         equal     31.4607462941106-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16309304865364*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16309304865364*0.16309304865364+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16309304865364*0.16309304865364+0.24697524679877*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16309304865364*0.16309304865364+0.24697524679877*0.24697524679877+${new_z}*${new_z})
variable           module        equal     sqrt(0.16309304865364*0.16309304865364+0.24697524679877*0.24697524679877+0.139877971177899*${new_z})
variable           module        equal     sqrt(0.16309304865364*0.16309304865364+0.24697524679877*0.24697524679877+0.139877971177899*0.139877971177899)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16309304865364/${module}
variable           unitx         equal     0.16309304865364/0.327356017007931
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.24697524679877/${module}
variable           unity         equal     0.24697524679877/0.327356017007931
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.139877971177899/${module}
variable           unitz         equal     0.139877971177899/0.327356017007931
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.22282895858547e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.22282895858547e-05*2.22282895858547e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.22282895858547e-05*2.22282895858547e-05+-2.38704662186419e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.22282895858547e-05*2.22282895858547e-05+-2.38704662186419e-06*-2.38704662186419e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.22282895858547e-05*2.22282895858547e-05+-2.38704662186419e-06*-2.38704662186419e-06+-2.34801524261884e-05*${fz})
variable           f_module      equal     sqrt(2.22282895858547e-05*2.22282895858547e-05+-2.38704662186419e-06*-2.38704662186419e-06+-2.34801524261884e-05*-2.34801524261884e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.498213077444942*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.498213077444942*0.498213077444942+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.498213077444942*0.498213077444942+0.754454581455842*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.498213077444942*0.498213077444942+0.754454581455842*0.754454581455842+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.498213077444942*0.498213077444942+0.754454581455842*0.754454581455842+0.427296166590731*${unitz})
variable           dir_module    equal     sqrt(0.498213077444942*0.498213077444942+0.754454581455842*0.754454581455842+0.427296166590731*0.427296166590731)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.22282895858547e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.22282895858547e-05*0.498213077444942+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.22282895858547e-05*0.498213077444942+-2.38704662186419e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.22282895858547e-05*0.498213077444942+-2.38704662186419e-06*0.754454581455842+${fz}*${unitz}
variable           dot      equal     2.22282895858547e-05*0.498213077444942+-2.38704662186419e-06*0.754454581455842+-2.34801524261884e-05*${unitz}
variable           dot      equal     2.22282895858547e-05*0.498213077444942+-2.38704662186419e-06*0.754454581455842+-2.34801524261884e-05*0.427296166590731
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.59472821784459e-07/${f_module}*${dir_module}
variable           cos      equal     -7.59472821784459e-07/3.24208637677131e-05*${dir_module}
variable           cos      equal     -7.59472821784459e-07/3.24208637677131e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.023425434535794)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59422390431496/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.3423013161152-90.0)
print              "The dot product: ${dot}"
The dot product: -7.59472821784459e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.3423013161152

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16309304865364^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16309304865364^2+0.24697524679877^2+${new_z}^2)
variable           norm          equal     sqrt(0.16309304865364^2+0.24697524679877^2+0.139877971177899^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16309304865364/${norm}
variable           unit_x        equal     0.16309304865364/0.327356017007931
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.24697524679877/${norm}
variable           unit_y        equal     0.24697524679877/0.327356017007931
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.139877971177899/${norm}
variable           unit_z        equal     0.139877971177899/0.327356017007931
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32872936253841+${delta}*${unit_x}
variable           x_new         equal     1.32872936253841+0.03*${unit_x}
variable           x_new         equal     1.32872936253841+0.03*0.498213077444942
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.27165820206111+${delta}*${unit_y}
variable           y_new         equal     4.27165820206111+0.03*${unit_y}
variable           y_new         equal     4.27165820206111+0.03*0.754454581455842
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4607462941106+${delta}*${unit_z}
variable           z_new         equal     31.4607462941106+0.03*${unit_z}
variable           z_new         equal     31.4607462941106+0.03*0.427296166590731

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34367575486176  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34367575486176  y  4.29429183950479  z   ${z_new}
set                atom          288751    x  1.34367575486176  y  4.29429183950479  z   31.4735651791083
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16309304865364  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16309304865364  0.24697524679877  ${new_z}
fix                hold    carbon   planeforce   0.16309304865364  0.24697524679877  0.139877971177899
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2330   -1152449.1            0   -1152449.1  -0.05585482  0.036713238 0.00030220582 
    2523   -1152449.1            0   -1152449.1 4.0796847e-05 -4.8503644e-06 -3.9003727e-05 
Loop time of 2.23161 on 104 procs for 193 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.10985976  -1152449.11291872  -1152449.11291872
  Force two-norm initial, final = 0.24959518 0.00015539404
  Force max component initial, final = 0.15125834 4.0796847e-05
  Final line search alpha, max atom move = 1.0000000 4.0796847e-05
  Iterations, force evaluations = 193 386

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58694    | 1.6195     | 2.1077     |  34.3 | 72.57
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032843   | 0.36574    | 1.0968     |  50.6 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3708e-05 | 0.0031892  | 0.0068271  |   2.7 |  0.14
Other   |            | 0.2432     |            |       | 10.90

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115501 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.33371025095545-${x_0}
variable           new_x         equal     1.33371025095545-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.30105073317568-${y_0}
variable           new_y         equal     4.30105073317568-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4732507978037-${z_0}
variable           new_z         equal     31.4732507978037-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16807393707068*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16807393707068*0.16807393707068+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16807393707068*0.16807393707068+0.27636777791334*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16807393707068*0.16807393707068+0.27636777791334*0.27636777791334+${new_z}*${new_z})
variable           module        equal     sqrt(0.16807393707068*0.16807393707068+0.27636777791334*0.27636777791334+0.152382474871001*${new_z})
variable           module        equal     sqrt(0.16807393707068*0.16807393707068+0.27636777791334*0.27636777791334+0.152382474871001*0.152382474871001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16807393707068/${module}
variable           unitx         equal     0.16807393707068/0.357558968058427
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.27636777791334/${module}
variable           unity         equal     0.27636777791334/0.357558968058427
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.152382474871001/${module}
variable           unitz         equal     0.152382474871001/0.357558968058427
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07968470134977e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07968470134977e-05*4.07968470134977e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07968470134977e-05*4.07968470134977e-05+-4.8503644327065e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.07968470134977e-05*4.07968470134977e-05+-4.8503644327065e-06*-4.8503644327065e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.07968470134977e-05*4.07968470134977e-05+-4.8503644327065e-06*-4.8503644327065e-06+-3.90037270070338e-05*${fz})
variable           f_module      equal     sqrt(4.07968470134977e-05*4.07968470134977e-05+-4.8503644327065e-06*-4.8503644327065e-06+-3.90037270070338e-05*-3.90037270070338e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.470059352680579*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.470059352680579*0.470059352680579+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.470059352680579*0.470059352680579+0.772929230146397*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.470059352680579*0.470059352680579+0.772929230146397*0.772929230146397+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.470059352680579*0.470059352680579+0.772929230146397*0.772929230146397+0.42617438935583*${unitz})
variable           dir_module    equal     sqrt(0.470059352680579*0.470059352680579+0.772929230146397*0.772929230146397+0.42617438935583*0.42617438935583)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07968470134977e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07968470134977e-05*0.470059352680579+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.07968470134977e-05*0.470059352680579+-4.8503644327065e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.07968470134977e-05*0.470059352680579+-4.8503644327065e-06*0.772929230146397+${fz}*${unitz}
variable           dot      equal     4.07968470134977e-05*0.470059352680579+-4.8503644327065e-06*0.772929230146397+-3.90037270070338e-05*${unitz}
variable           dot      equal     4.07968470134977e-05*0.470059352680579+-4.8503644327065e-06*0.772929230146397+-3.90037270070338e-05*0.42617438935583
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.19443848815208e-06/${f_module}*${dir_module}
variable           cos      equal     -1.19443848815208e-06/5.66497968382237e-05*${dir_module}
variable           cos      equal     -1.19443848815208e-06/5.66497968382237e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0210846032080763)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59188249254585/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.2081483036429-90.0)
print              "The dot product: ${dot}"
The dot product: -1.19443848815208e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.2081483036429

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16807393707068^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16807393707068^2+0.27636777791334^2+${new_z}^2)
variable           norm          equal     sqrt(0.16807393707068^2+0.27636777791334^2+0.152382474871001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16807393707068/${norm}
variable           unit_x        equal     0.16807393707068/0.357558968058427
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.27636777791334/${norm}
variable           unit_y        equal     0.27636777791334/0.357558968058427
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.152382474871001/${norm}
variable           unit_z        equal     0.152382474871001/0.357558968058427
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.33371025095545+${delta}*${unit_x}
variable           x_new         equal     1.33371025095545+0.03*${unit_x}
variable           x_new         equal     1.33371025095545+0.03*0.470059352680579
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.30105073317568+${delta}*${unit_y}
variable           y_new         equal     4.30105073317568+0.03*${unit_y}
variable           y_new         equal     4.30105073317568+0.03*0.772929230146397
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4732507978037+${delta}*${unit_z}
variable           z_new         equal     31.4732507978037+0.03*${unit_z}
variable           z_new         equal     31.4732507978037+0.03*0.42617438935583

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34781203153587  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34781203153587  y  4.32423861008007  z   ${z_new}
set                atom          288751    x  1.34781203153587  y  4.32423861008007  z   31.4860360294844
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16807393707068  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16807393707068  0.27636777791334  ${new_z}
fix                hold    carbon   planeforce   0.16807393707068  0.27636777791334  0.152382474871001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2523   -1152449.1            0   -1152449.1  -0.05291139    0.0326519 -0.00085907199 
    2781   -1152449.1            0   -1152449.1 -6.4101961e-07 -1.1558629e-07 9.1666064e-07 
Loop time of 3.01503 on 104 procs for 258 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.0689404  -1152449.07200065  -1152449.07200065
  Force two-norm initial, final = 0.25092889 7.9654263e-06
  Force max component initial, final = 0.15912121 9.7914533e-07
  Final line search alpha, max atom move = 1.0000000 9.7914533e-07
  Iterations, force evaluations = 258 516

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.77917    | 2.1585     | 2.8396     |  39.7 | 71.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.050056   | 0.4894     | 1.4652     |  58.1 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.2968e-05 | 0.0042468  | 0.0090864  |   3.1 |  0.14
Other   |            | 0.3629     |            |       | 12.04

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115508 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.33813967335949-${x_0}
variable           new_x         equal     1.33813967335949-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.33050109800016-${y_0}
variable           new_y         equal     4.33050109800016-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4853464583818-${z_0}
variable           new_z         equal     31.4853464583818-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17250335947472*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17250335947472*0.17250335947472+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17250335947472*0.17250335947472+0.30581814273782*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17250335947472*0.17250335947472+0.30581814273782*0.30581814273782+${new_z}*${new_z})
variable           module        equal     sqrt(0.17250335947472*0.17250335947472+0.30581814273782*0.30581814273782+0.164478135449102*${new_z})
variable           module        equal     sqrt(0.17250335947472*0.17250335947472+0.30581814273782*0.30581814273782+0.164478135449102*0.164478135449102)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.17250335947472/${module}
variable           unitx         equal     0.17250335947472/0.387730837693479
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.30581814273782/${module}
variable           unity         equal     0.30581814273782/0.387730837693479
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.164478135449102/${module}
variable           unitz         equal     0.164478135449102/0.387730837693479
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.41019613754929e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.41019613754929e-07*-6.41019613754929e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.41019613754929e-07*-6.41019613754929e-07+-1.15586293713353e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.41019613754929e-07*-6.41019613754929e-07+-1.15586293713353e-07*-1.15586293713353e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-6.41019613754929e-07*-6.41019613754929e-07+-1.15586293713353e-07*-1.15586293713353e-07+9.16660642891153e-07*${fz})
variable           f_module      equal     sqrt(-6.41019613754929e-07*-6.41019613754929e-07+-1.15586293713353e-07*-1.15586293713353e-07+9.16660642891153e-07*9.16660642891153e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.444904925542943*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.444904925542943*0.444904925542943+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.444904925542943*0.444904925542943+0.788738250888326*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.444904925542943*0.444904925542943+0.788738250888326*0.788738250888326+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.444904925542943*0.444904925542943+0.788738250888326*0.788738250888326+0.424206999957869*${unitz})
variable           dir_module    equal     sqrt(0.444904925542943*0.444904925542943+0.788738250888326*0.788738250888326+0.424206999957869*0.424206999957869)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.41019613754929e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.41019613754929e-07*0.444904925542943+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.41019613754929e-07*0.444904925542943+-1.15586293713353e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -6.41019613754929e-07*0.444904925542943+-1.15586293713353e-07*0.788738250888326+${fz}*${unitz}
variable           dot      equal     -6.41019613754929e-07*0.444904925542943+-1.15586293713353e-07*0.788738250888326+9.16660642891153e-07*${unitz}
variable           dot      equal     -6.41019613754929e-07*0.444904925542943+-1.15586293713353e-07*0.788738250888326+9.16660642891153e-07*0.424206999957869
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.24937466409704e-08/${f_module}*${dir_module}
variable           cos      equal     1.24937466409704e-08/1.1245145933862e-06*${dir_module}
variable           cos      equal     1.24937466409704e-08/1.1245145933862e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0111103463791862)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55968575182653/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.3634109463489-90.0)
print              "The dot product: ${dot}"
The dot product: 1.24937466409704e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.3634109463489

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.17250335947472^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.17250335947472^2+0.30581814273782^2+${new_z}^2)
variable           norm          equal     sqrt(0.17250335947472^2+0.30581814273782^2+0.164478135449102^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.17250335947472/${norm}
variable           unit_x        equal     0.17250335947472/0.387730837693479
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.30581814273782/${norm}
variable           unit_y        equal     0.30581814273782/0.387730837693479
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.164478135449102/${norm}
variable           unit_z        equal     0.164478135449102/0.387730837693479
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.33813967335949+${delta}*${unit_x}
variable           x_new         equal     1.33813967335949+0.03*${unit_x}
variable           x_new         equal     1.33813967335949+0.03*0.444904925542943
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.33050109800016+${delta}*${unit_y}
variable           y_new         equal     4.33050109800016+0.03*${unit_y}
variable           y_new         equal     4.33050109800016+0.03*0.788738250888326
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4853464583818+${delta}*${unit_z}
variable           z_new         equal     31.4853464583818+0.03*${unit_z}
variable           z_new         equal     31.4853464583818+0.03*0.424206999957869

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.35148682112578  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.35148682112578  y  4.35416324552681  z   ${z_new}
set                atom          288751    x  1.35148682112578  y  4.35416324552681  z   31.4980726683805
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.17250335947472  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.17250335947472  0.30581814273782  ${new_z}
fix                hold    carbon   planeforce   0.17250335947472  0.30581814273782  0.164478135449102
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2781     -1152449            0     -1152449 -0.050053433  0.029828146 -0.002964545 
    2974     -1152449            0     -1152449 2.0531082e-05 -8.6754404e-06 -5.4023806e-06 
Loop time of 2.24053 on 104 procs for 193 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.02401025  -1152449.02710363  -1152449.02710363
  Force two-norm initial, final = 0.25341095 0.00015403178
  Force max component initial, final = 0.1666207 3.6466195e-05
  Final line search alpha, max atom move = 1.0000000 3.6466195e-05
  Iterations, force evaluations = 193 386

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59255    | 1.6169     | 2.1038     |  34.0 | 72.16
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035276   | 0.36226    | 1.0847     |  50.3 | 16.17
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3929e-05 | 0.0031739  | 0.0067946  |   2.7 |  0.14
Other   |            | 0.2582     |            |       | 11.53

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.18 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.34195582656923-${x_0}
variable           new_x         equal     1.34195582656923-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.36024203809088-${y_0}
variable           new_y         equal     4.36024203809088-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4967662547875-${z_0}
variable           new_z         equal     31.4967662547875-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17631951268446*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17631951268446*0.17631951268446+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17631951268446*0.17631951268446+0.33555908282854*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17631951268446*0.17631951268446+0.33555908282854*0.33555908282854+${new_z}*${new_z})
variable           module        equal     sqrt(0.17631951268446*0.17631951268446+0.33555908282854*0.33555908282854+0.175897931854799*${new_z})
variable           module        equal     sqrt(0.17631951268446*0.17631951268446+0.33555908282854*0.33555908282854+0.175897931854799*0.175897931854799)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.17631951268446/${module}
variable           unitx         equal     0.17631951268446/0.417885811021159
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.33555908282854/${module}
variable           unity         equal     0.33555908282854/0.417885811021159
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.175897931854799/${module}
variable           unitz         equal     0.175897931854799/0.417885811021159
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.05310815586657e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.05310815586657e-05*2.05310815586657e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.05310815586657e-05*2.05310815586657e-05+-8.67544036763038e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.05310815586657e-05*2.05310815586657e-05+-8.67544036763038e-06*-8.67544036763038e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.05310815586657e-05*2.05310815586657e-05+-8.67544036763038e-06*-8.67544036763038e-06+-5.40238056223191e-06*${fz})
variable           f_module      equal     sqrt(2.05310815586657e-05*2.05310815586657e-05+-8.67544036763038e-06*-8.67544036763038e-06+-5.40238056223191e-06*-5.40238056223191e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.421932279187944*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.421932279187944*0.421932279187944+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.421932279187944*0.421932279187944+0.802992286358221*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.421932279187944*0.421932279187944+0.802992286358221*0.802992286358221+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.421932279187944*0.421932279187944+0.802992286358221*0.802992286358221+0.420923437014933*${unitz})
variable           dir_module    equal     sqrt(0.421932279187944*0.421932279187944+0.802992286358221*0.802992286358221+0.420923437014933*0.420923437014933)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.05310815586657e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.05310815586657e-05*0.421932279187944+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.05310815586657e-05*0.421932279187944+-8.67544036763038e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.05310815586657e-05*0.421932279187944+-8.67544036763038e-06*0.802992286358221+${fz}*${unitz}
variable           dot      equal     2.05310815586657e-05*0.421932279187944+-8.67544036763038e-06*0.802992286358221+-5.40238056223191e-06*${unitz}
variable           dot      equal     2.05310815586657e-05*0.421932279187944+-8.67544036763038e-06*0.802992286358221+-5.40238056223191e-06*0.420923437014933
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.77574254043861e-07/${f_module}*${dir_module}
variable           cos      equal     -5.77574254043861e-07/2.29341293987819e-05*${dir_module}
variable           cos      equal     -5.77574254043861e-07/2.29341293987819e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0251840496755258)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59598303933715/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.4430923284803-90.0)
print              "The dot product: ${dot}"
The dot product: -5.77574254043861e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.4430923284803

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.17631951268446^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.17631951268446^2+0.33555908282854^2+${new_z}^2)
variable           norm          equal     sqrt(0.17631951268446^2+0.33555908282854^2+0.175897931854799^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.17631951268446/${norm}
variable           unit_x        equal     0.17631951268446/0.417885811021159
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.33555908282854/${norm}
variable           unit_y        equal     0.33555908282854/0.417885811021159
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.175897931854799/${norm}
variable           unit_z        equal     0.175897931854799/0.417885811021159
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.34195582656923+${delta}*${unit_x}
variable           x_new         equal     1.34195582656923+0.03*${unit_x}
variable           x_new         equal     1.34195582656923+0.03*0.421932279187944
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.36024203809088+${delta}*${unit_y}
variable           y_new         equal     4.36024203809088+0.03*${unit_y}
variable           y_new         equal     4.36024203809088+0.03*0.802992286358221
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4967662547875+${delta}*${unit_z}
variable           z_new         equal     31.4967662547875+0.03*${unit_z}
variable           z_new         equal     31.4967662547875+0.03*0.420923437014933

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.35461379494487  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.35461379494487  y  4.38433180668163  z   ${z_new}
set                atom          288751    x  1.35461379494487  y  4.38433180668163  z   31.5093939578979
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.17631951268446  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.17631951268446  0.33555908282854  ${new_z}
fix                hold    carbon   planeforce   0.17631951268446  0.33555908282854  0.175897931854799
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2974     -1152449            0     -1152449 -0.045912678  0.027683821 -0.006789487 
    3000     -1152449            0     -1152449 0.00033320346 -0.00013306476 -8.0155479e-05 
    3196     -1152449            0     -1152449 -1.054081e-07 -1.8225904e-06 3.5826019e-06 
Loop time of 2.62347 on 104 procs for 222 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.9750061  -1152448.97814826  -1152448.97814826
  Force two-norm initial, final = 0.2562547 5.4795890e-05
  Force max component initial, final = 0.17401371 3.9591231e-06
  Final line search alpha, max atom move = 1.0000000 3.9591231e-06
  Iterations, force evaluations = 222 444

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6689     | 1.8632     | 2.4539     |  36.9 | 71.02
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042349   | 0.42472    | 1.2759     |  54.0 | 16.19
Output  | 0.00015852 | 0.0001655  | 0.00024844 |   0.0 |  0.01
Modify  | 2.7887e-05 | 0.0036649  | 0.0078314  |   2.8 |  0.14
Other   |            | 0.3317     |            |       | 12.64

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.13 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115507 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.34522021634934-${x_0}
variable           new_x         equal     1.34522021634934-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.39041830182089-${y_0}
variable           new_y         equal     4.39041830182089-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5071988921442-${z_0}
variable           new_z         equal     31.5071988921442-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17958390246457*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17958390246457*0.17958390246457+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17958390246457*0.17958390246457+0.365735346558551*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.17958390246457*0.17958390246457+0.365735346558551*0.365735346558551+${new_z}*${new_z})
variable           module        equal     sqrt(0.17958390246457*0.17958390246457+0.365735346558551*0.365735346558551+0.186330569211499*${new_z})
variable           module        equal     sqrt(0.17958390246457*0.17958390246457+0.365735346558551*0.365735346558551+0.186330569211499*0.186330569211499)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.17958390246457/${module}
variable           unitx         equal     0.17958390246457/0.448031028802011
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.365735346558551/${module}
variable           unity         equal     0.365735346558551/0.448031028802011
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.186330569211499/${module}
variable           unitz         equal     0.186330569211499/0.448031028802011
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05408104777506e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05408104777506e-07*-1.05408104777506e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05408104777506e-07*-1.05408104777506e-07+-1.82259041080332e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05408104777506e-07*-1.05408104777506e-07+-1.82259041080332e-06*-1.82259041080332e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.05408104777506e-07*-1.05408104777506e-07+-1.82259041080332e-06*-1.82259041080332e-06+3.58260194124287e-06*${fz})
variable           f_module      equal     sqrt(-1.05408104777506e-07*-1.05408104777506e-07+-1.82259041080332e-06*-1.82259041080332e-06+3.58260194124287e-06*3.58260194124287e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.400829163428165*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.400829163428165*0.400829163428165+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.400829163428165*0.400829163428165+0.816317002722981*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.400829163428165*0.400829163428165+0.816317002722981*0.816317002722981+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.400829163428165*0.400829163428165+0.816317002722981*0.816317002722981+0.415887644455626*${unitz})
variable           dir_module    equal     sqrt(0.400829163428165*0.400829163428165+0.816317002722981*0.816317002722981+0.415887644455626*0.415887644455626)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05408104777506e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05408104777506e-07*0.400829163428165+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05408104777506e-07*0.400829163428165+-1.82259041080332e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.05408104777506e-07*0.400829163428165+-1.82259041080332e-06*0.816317002722981+${fz}*${unitz}
variable           dot      equal     -1.05408104777506e-07*0.400829163428165+-1.82259041080332e-06*0.816317002722981+3.58260194124287e-06*${unitz}
variable           dot      equal     -1.05408104777506e-07*0.400829163428165+-1.82259041080332e-06*0.816317002722981+3.58260194124287e-06*0.415887644455626
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.01023014294788e-08/${f_module}*${dir_module}
variable           cos      equal     -4.01023014294788e-08/4.0209430913036e-06*${dir_module}
variable           cos      equal     -4.01023014294788e-08/4.0209430913036e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00997335712515084)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58076984926552/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.5714407444456-90.0)
print              "The dot product: ${dot}"
The dot product: -4.01023014294788e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.5714407444456

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.17958390246457^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.17958390246457^2+0.365735346558551^2+${new_z}^2)
variable           norm          equal     sqrt(0.17958390246457^2+0.365735346558551^2+0.186330569211499^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.17958390246457/${norm}
variable           unit_x        equal     0.17958390246457/0.448031028802011
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.365735346558551/${norm}
variable           unit_y        equal     0.365735346558551/0.448031028802011
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.186330569211499/${norm}
variable           unit_z        equal     0.186330569211499/0.448031028802011
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.34522021634934+${delta}*${unit_x}
variable           x_new         equal     1.34522021634934+0.03*${unit_x}
variable           x_new         equal     1.34522021634934+0.03*0.400829163428165
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.39041830182089+${delta}*${unit_y}
variable           y_new         equal     4.39041830182089+0.03*${unit_y}
variable           y_new         equal     4.39041830182089+0.03*0.816317002722981
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5071988921442+${delta}*${unit_z}
variable           z_new         equal     31.5071988921442+0.03*${unit_z}
variable           z_new         equal     31.5071988921442+0.03*0.415887644455626

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.35724509125218  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.35724509125218  y  4.41490781190258  z   ${z_new}
set                atom          288751    x  1.35724509125218  y  4.41490781190258  z   31.5196755214779
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.17958390246457  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.17958390246457  0.365735346558551  ${new_z}
fix                hold    carbon   planeforce   0.17958390246457  0.365735346558551  0.186330569211499
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3196   -1152448.9            0   -1152448.9 -0.039415245  0.025510971 -0.012085619 
    3396   -1152448.9            0   -1152448.9 -1.102981e-06 8.4204214e-07 -5.8974192e-07 
Loop time of 2.32926 on 104 procs for 200 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.92188465   -1152448.9250806   -1152448.9250806
  Force two-norm initial, final = 0.25900347 0.00013248109
  Force max component initial, final = 0.18157164 5.9151202e-06
  Final line search alpha, max atom move = 1.0000000 5.9151202e-06
  Iterations, force evaluations = 200 400

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60717    | 1.6803     | 2.1848     |  34.8 | 72.14
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037712   | 0.38133    | 1.1377     |  51.2 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.461e-05  | 0.0032903  | 0.0070505  |   2.7 |  0.14
Other   |            | 0.2643     |            |       | 11.35

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.03 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.34809917656492-${x_0}
variable           new_x         equal     1.34809917656492-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.4211189261288-${y_0}
variable           new_y         equal     4.4211189261288-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5162989152373-${z_0}
variable           new_z         equal     31.5162989152373-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18246286268015*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18246286268015*0.18246286268015+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18246286268015*0.18246286268015+0.39643597086646*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18246286268015*0.18246286268015+0.39643597086646*0.39643597086646+${new_z}*${new_z})
variable           module        equal     sqrt(0.18246286268015*0.18246286268015+0.39643597086646*0.39643597086646+0.1954305923046*${new_z})
variable           module        equal     sqrt(0.18246286268015*0.18246286268015+0.39643597086646*0.39643597086646+0.1954305923046*0.1954305923046)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.18246286268015/${module}
variable           unitx         equal     0.18246286268015/0.478170776671677
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.39643597086646/${module}
variable           unity         equal     0.39643597086646/0.478170776671677
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1954305923046/${module}
variable           unitz         equal     0.1954305923046/0.478170776671677
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.10298097264477e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.10298097264477e-06*-1.10298097264477e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.10298097264477e-06*-1.10298097264477e-06+8.42042141485828e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.10298097264477e-06*-1.10298097264477e-06+8.42042141485828e-07*8.42042141485828e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.10298097264477e-06*-1.10298097264477e-06+8.42042141485828e-07*8.42042141485828e-07+-5.89741916035086e-07*${fz})
variable           f_module      equal     sqrt(-1.10298097264477e-06*-1.10298097264477e-06+8.42042141485828e-07*8.42042141485828e-07+-5.89741916035086e-07*-5.89741916035086e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.381585139832653*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.381585139832653*0.381585139832653+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.381585139832653*0.381585139832653+0.829067751956456*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.381585139832653*0.381585139832653+0.829067751956456*0.829067751956456+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.381585139832653*0.381585139832653+0.829067751956456*0.829067751956456+0.408704592248194*${unitz})
variable           dir_module    equal     sqrt(0.381585139832653*0.381585139832653+0.829067751956456*0.829067751956456+0.408704592248194*0.408704592248194)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.10298097264477e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.10298097264477e-06*0.381585139832653+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.10298097264477e-06*0.381585139832653+8.42042141485828e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.10298097264477e-06*0.381585139832653+8.42042141485828e-07*0.829067751956456+${fz}*${unitz}
variable           dot      equal     -1.10298097264477e-06*0.381585139832653+8.42042141485828e-07*0.829067751956456+-5.89741916035086e-07*${unitz}
variable           dot      equal     -1.10298097264477e-06*0.381585139832653+8.42042141485828e-07*0.829067751956456+-5.89741916035086e-07*0.408704592248194
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.61986072900567e-08/${f_module}*${dir_module}
variable           cos      equal     3.61986072900567e-08/1.50777900289902e-06*${dir_module}
variable           cos      equal     3.61986072900567e-08/1.50777900289902e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0240078998450418)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54678612007556/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.6243164897454-90.0)
print              "The dot product: ${dot}"
The dot product: 3.61986072900567e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.6243164897454

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18246286268015^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18246286268015^2+0.39643597086646^2+${new_z}^2)
variable           norm          equal     sqrt(0.18246286268015^2+0.39643597086646^2+0.1954305923046^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.18246286268015/${norm}
variable           unit_x        equal     0.18246286268015/0.478170776671677
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.39643597086646/${norm}
variable           unit_y        equal     0.39643597086646/0.478170776671677
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1954305923046/${norm}
variable           unit_z        equal     0.1954305923046/0.478170776671677
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.34809917656492+${delta}*${unit_x}
variable           x_new         equal     1.34809917656492+0.03*${unit_x}
variable           x_new         equal     1.34809917656492+0.03*0.381585139832653
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.4211189261288+${delta}*${unit_y}
variable           y_new         equal     4.4211189261288+0.03*${unit_y}
variable           y_new         equal     4.4211189261288+0.03*0.829067751956456
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5162989152373+${delta}*${unit_z}
variable           z_new         equal     31.5162989152373+0.03*${unit_z}
variable           z_new         equal     31.5162989152373+0.03*0.408704592248194

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.3595467307599  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.3595467307599  y  4.44599095868749  z   ${z_new}
set                atom          288751    x  1.3595467307599  y  4.44599095868749  z   31.5285600530047
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18246286268015  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18246286268015  0.39643597086646  ${new_z}
fix                hold    carbon   planeforce   0.18246286268015  0.39643597086646  0.1954305923046
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3396   -1152448.9            0   -1152448.9 -0.030293307  0.022713107 -0.017790914 
    3634   -1152448.9            0   -1152448.9 -4.9399754e-06 4.532732e-06 -4.5825782e-06 
Loop time of 2.82429 on 104 procs for 238 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.86463903  -1152448.86787468  -1152448.86787468
  Force two-norm initial, final = 0.26124038 3.4154411e-05
  Force max component initial, final = 0.18930992 1.2420582e-05
  Final line search alpha, max atom move = 1.0000000 1.2420582e-05
  Iterations, force evaluations = 238 476

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.72242    | 2.0105     | 2.6337     |  38.4 | 71.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042185   | 0.45762    | 1.354      |  55.3 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.0889e-05 | 0.003921   | 0.0083705  |   2.9 |  0.14
Other   |            | 0.3523     |            |       | 12.47

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238179
Ave neighs/atom = 28.530391
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.35084500271898-${x_0}
variable           new_x         equal     1.35084500271898-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.45231152856308-${y_0}
variable           new_y         equal     4.45231152856308-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.523862942713-${z_0}
variable           new_z         equal     31.523862942713-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18520868883421*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18520868883421*0.18520868883421+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18520868883421*0.18520868883421+0.427628573300741*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18520868883421*0.18520868883421+0.427628573300741*0.427628573300741+${new_z}*${new_z})
variable           module        equal     sqrt(0.18520868883421*0.18520868883421+0.427628573300741*0.427628573300741+0.202994619780299*${new_z})
variable           module        equal     sqrt(0.18520868883421*0.18520868883421+0.427628573300741*0.427628573300741+0.202994619780299*0.202994619780299)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.18520868883421/${module}
variable           unitx         equal     0.18520868883421/0.508306276552496
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.427628573300741/${module}
variable           unity         equal     0.427628573300741/0.508306276552496
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.202994619780299/${module}
variable           unitz         equal     0.202994619780299/0.508306276552496
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.93997537809664e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.93997537809664e-06*-4.93997537809664e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.93997537809664e-06*-4.93997537809664e-06+4.53273200040444e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.93997537809664e-06*-4.93997537809664e-06+4.53273200040444e-06*4.53273200040444e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.93997537809664e-06*-4.93997537809664e-06+4.53273200040444e-06*4.53273200040444e-06+-4.58257815013172e-06*${fz})
variable           f_module      equal     sqrt(-4.93997537809664e-06*-4.93997537809664e-06+4.53273200040444e-06*4.53273200040444e-06+-4.58257815013172e-06*-4.58257815013172e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.364364355463713*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.364364355463713*0.364364355463713+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.364364355463713*0.364364355463713+0.841281316062162*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.364364355463713*0.364364355463713+0.841281316062162*0.841281316062162+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.364364355463713*0.364364355463713+0.841281316062162*0.841281316062162+0.399354934503419*${unitz})
variable           dir_module    equal     sqrt(0.364364355463713*0.364364355463713+0.841281316062162*0.841281316062162+0.399354934503419*0.399354934503419)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.93997537809664e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.93997537809664e-06*0.364364355463713+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.93997537809664e-06*0.364364355463713+4.53273200040444e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.93997537809664e-06*0.364364355463713+4.53273200040444e-06*0.841281316062162+${fz}*${unitz}
variable           dot      equal     -4.93997537809664e-06*0.364364355463713+4.53273200040444e-06*0.841281316062162+-4.58257815013172e-06*${unitz}
variable           dot      equal     -4.93997537809664e-06*0.364364355463713+4.53273200040444e-06*0.841281316062162+-4.58257815013172e-06*0.399354934503419
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.83276601007877e-07/${f_module}*${dir_module}
variable           cos      equal     1.83276601007877e-07/8.12090134318575e-06*${dir_module}
variable           cos      equal     1.83276601007877e-07/8.12090134318575e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.022568504807864)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54822590571716/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7068101304126-90.0)
print              "The dot product: ${dot}"
The dot product: 1.83276601007877e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7068101304126

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18520868883421^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18520868883421^2+0.427628573300741^2+${new_z}^2)
variable           norm          equal     sqrt(0.18520868883421^2+0.427628573300741^2+0.202994619780299^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.18520868883421/${norm}
variable           unit_x        equal     0.18520868883421/0.508306276552496
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.427628573300741/${norm}
variable           unit_y        equal     0.427628573300741/0.508306276552496
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.202994619780299/${norm}
variable           unit_z        equal     0.202994619780299/0.508306276552496
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.35084500271898+${delta}*${unit_x}
variable           x_new         equal     1.35084500271898+0.03*${unit_x}
variable           x_new         equal     1.35084500271898+0.03*0.364364355463713
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.45231152856308+${delta}*${unit_y}
variable           y_new         equal     4.45231152856308+0.03*${unit_y}
variable           y_new         equal     4.45231152856308+0.03*0.841281316062162
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.523862942713+${delta}*${unit_z}
variable           z_new         equal     31.523862942713+0.03*${unit_z}
variable           z_new         equal     31.523862942713+0.03*0.399354934503419

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.36177593338289  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.36177593338289  y  4.47754996804495  z   ${z_new}
set                atom          288751    x  1.36177593338289  y  4.47754996804495  z   31.5358435907481
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18520868883421  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18520868883421  0.427628573300741  ${new_z}
fix                hold    carbon   planeforce   0.18520868883421  0.427628573300741  0.202994619780299
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3634   -1152448.8            0   -1152448.8 -0.018957437  0.018945304 -0.022613759 
    3813   -1152448.8            0   -1152448.8 -3.1672283e-05 2.2165514e-05 -1.7796654e-05 
Loop time of 2.07515 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.80330516  -1152448.80654407  -1152448.80654407
  Force two-norm initial, final = 0.26267083 0.00030260486
  Force max component initial, final = 0.19720438 0.00012685853
  Final line search alpha, max atom move = 1.0000000 0.00012685853
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53906    | 1.5012     | 1.9518     |  33.2 | 72.34
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036494   | 0.34259    | 1.0216     |  48.6 | 16.51
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2219e-05 | 0.0029577  | 0.0062794  |   2.6 |  0.14
Other   |            | 0.2284     |            |       | 11.01

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3878.96 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115496 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238174
Ave neighs/atom = 28.530374
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.35375667368301-${x_0}
variable           new_x         equal     1.35375667368301-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.48396910391443-${y_0}
variable           new_y         equal     4.48396910391443-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5296376659773-${z_0}
variable           new_z         equal     31.5296376659773-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18812035979824*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18812035979824*0.18812035979824+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18812035979824*0.18812035979824+0.45928614865209*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18812035979824*0.18812035979824+0.45928614865209*0.45928614865209+${new_z}*${new_z})
variable           module        equal     sqrt(0.18812035979824*0.18812035979824+0.45928614865209*0.45928614865209+0.208769343044601*${new_z})
variable           module        equal     sqrt(0.18812035979824*0.18812035979824+0.45928614865209*0.45928614865209+0.208769343044601*0.208769343044601)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.18812035979824/${module}
variable           unitx         equal     0.18812035979824/0.538440038174692
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.45928614865209/${module}
variable           unity         equal     0.45928614865209/0.538440038174692
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.208769343044601/${module}
variable           unitz         equal     0.208769343044601/0.538440038174692
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.16722831961758e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.16722831961758e-05*-3.16722831961758e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.16722831961758e-05*-3.16722831961758e-05+2.21655139053261e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.16722831961758e-05*-3.16722831961758e-05+2.21655139053261e-05*2.21655139053261e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-3.16722831961758e-05*-3.16722831961758e-05+2.21655139053261e-05*2.21655139053261e-05+-1.77966541604687e-05*${fz})
variable           f_module      equal     sqrt(-3.16722831961758e-05*-3.16722831961758e-05+2.21655139053261e-05*2.21655139053261e-05+-1.77966541604687e-05*-1.77966541604687e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.349380332926145*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.349380332926145*0.349380332926145+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.349380332926145*0.349380332926145+0.852994049642123*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.349380332926145*0.349380332926145+0.852994049642123*0.852994049642123+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.349380332926145*0.349380332926145+0.852994049642123*0.852994049642123+0.387729975936276*${unitz})
variable           dir_module    equal     sqrt(0.349380332926145*0.349380332926145+0.852994049642123*0.852994049642123+0.387729975936276*0.387729975936276)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.16722831961758e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.16722831961758e-05*0.349380332926145+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.16722831961758e-05*0.349380332926145+2.21655139053261e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -3.16722831961758e-05*0.349380332926145+2.21655139053261e-05*0.852994049642123+${fz}*${unitz}
variable           dot      equal     -3.16722831961758e-05*0.349380332926145+2.21655139053261e-05*0.852994049642123+-1.77966541604687e-05*${unitz}
variable           dot      equal     -3.16722831961758e-05*0.349380332926145+2.21655139053261e-05*0.852994049642123+-1.77966541604687e-05*0.387729975936276
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     9.41082331507094e-07/${f_module}*${dir_module}
variable           cos      equal     9.41082331507094e-07/4.2557777536583e-05*${dir_module}
variable           cos      equal     9.41082331507094e-07/4.2557777536583e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0221130516201917)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54868147261205/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7329121907757-90.0)
print              "The dot product: ${dot}"
The dot product: 9.41082331507094e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7329121907757

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18812035979824^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18812035979824^2+0.45928614865209^2+${new_z}^2)
variable           norm          equal     sqrt(0.18812035979824^2+0.45928614865209^2+0.208769343044601^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.18812035979824/${norm}
variable           unit_x        equal     0.18812035979824/0.538440038174692
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.45928614865209/${norm}
variable           unit_y        equal     0.45928614865209/0.538440038174692
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.208769343044601/${norm}
variable           unit_z        equal     0.208769343044601/0.538440038174692
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.35375667368301+${delta}*${unit_x}
variable           x_new         equal     1.35375667368301+0.03*${unit_x}
variable           x_new         equal     1.35375667368301+0.03*0.349380332926145
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.48396910391443+${delta}*${unit_y}
variable           y_new         equal     4.48396910391443+0.03*${unit_y}
variable           y_new         equal     4.48396910391443+0.03*0.852994049642123
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5296376659773+${delta}*${unit_z}
variable           z_new         equal     31.5296376659773+0.03*${unit_z}
variable           z_new         equal     31.5296376659773+0.03*0.387729975936276

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.36423808367079  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.36423808367079  y  4.50955892540369  z   ${z_new}
set                atom          288751    x  1.36423808367079  y  4.50955892540369  z   31.5412695652554
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18812035979824  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18812035979824  0.45928614865209  ${new_z}
fix                hold    carbon   planeforce   0.18812035979824  0.45928614865209  0.208769343044601
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3813   -1152448.7            0   -1152448.7 -0.0064694727  0.015435688 -0.028128451 
    4000   -1152448.7            0   -1152448.7 2.3285132e-05 -2.7394213e-05 3.9284384e-05 
    4010   -1152448.7            0   -1152448.7 -3.6132493e-05 1.9902301e-06 2.8180251e-05 
Loop time of 2.29686 on 104 procs for 197 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.73801257  -1152448.74124326  -1152448.74124326
  Force two-norm initial, final = 0.26332999 0.00012183527
  Force max component initial, final = 0.20514615 3.6132493e-05
  Final line search alpha, max atom move = 1.0000000 3.6132493e-05
  Iterations, force evaluations = 197 394

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59623    | 1.6509     | 2.1696     |  34.6 | 71.88
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037614   | 0.3748     | 1.1138     |  50.8 | 16.32
Output  | 0.00010117 | 0.00010438 | 0.0002521  |   0.0 |  0.00
Modify  | 2.451e-05  | 0.0032459  | 0.0069318  |   2.7 |  0.14
Other   |            | 0.2678     |            |       | 11.66

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3878.92 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115494 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238169
Ave neighs/atom = 28.530357
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.35639402777913-${x_0}
variable           new_x         equal     1.35639402777913-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.51687399095166-${y_0}
variable           new_y         equal     4.51687399095166-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5322448605806-${z_0}
variable           new_z         equal     31.5322448605806-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.19075771389436*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.19075771389436*0.19075771389436+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.19075771389436*0.19075771389436+0.49219103568932*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.19075771389436*0.19075771389436+0.49219103568932*0.49219103568932+${new_z}*${new_z})
variable           module        equal     sqrt(0.19075771389436*0.19075771389436+0.49219103568932*0.49219103568932+0.211376537647901*${new_z})
variable           module        equal     sqrt(0.19075771389436*0.19075771389436+0.49219103568932*0.49219103568932+0.211376537647901*0.211376537647901)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.19075771389436/${module}
variable           unitx         equal     0.19075771389436/0.568612839892965
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.49219103568932/${module}
variable           unity         equal     0.49219103568932/0.568612839892965
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.211376537647901/${module}
variable           unitz         equal     0.211376537647901/0.568612839892965
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.61324930316098e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.61324930316098e-05*-3.61324930316098e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.61324930316098e-05*-3.61324930316098e-05+1.9902300637267e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.61324930316098e-05*-3.61324930316098e-05+1.9902300637267e-06*1.9902300637267e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.61324930316098e-05*-3.61324930316098e-05+1.9902300637267e-06*1.9902300637267e-06+2.81802510018725e-05*${fz})
variable           f_module      equal     sqrt(-3.61324930316098e-05*-3.61324930316098e-05+1.9902300637267e-06*1.9902300637267e-06+2.81802510018725e-05*2.81802510018725e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.335479082621961*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.335479082621961*0.335479082621961+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.335479082621961*0.335479082621961+0.865599580519444*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.335479082621961*0.335479082621961+0.865599580519444*0.865599580519444+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.335479082621961*0.335479082621961+0.865599580519444*0.865599580519444+0.371740704426742*${unitz})
variable           dir_module    equal     sqrt(0.335479082621961*0.335479082621961+0.865599580519444*0.865599580519444+0.371740704426742*0.371740704426742)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.61324930316098e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.61324930316098e-05*0.335479082621961+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.61324930316098e-05*0.335479082621961+1.9902300637267e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.61324930316098e-05*0.335479082621961+1.9902300637267e-06*0.865599580519444+${fz}*${unitz}
variable           dot      equal     -3.61324930316098e-05*0.335479082621961+1.9902300637267e-06*0.865599580519444+2.81802510018725e-05*${unitz}
variable           dot      equal     -3.61324930316098e-05*0.335479082621961+1.9902300637267e-06*0.865599580519444+2.81802510018725e-05*0.371740704426742
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.67930515686481e-08/${f_module}*${dir_module}
variable           cos      equal     7.67930515686481e-08/4.58655057195975e-05*${dir_module}
variable           cos      equal     7.67930515686481e-08/4.58655057195975e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00167430949171538)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56912201652091/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9040690877052-90.0)
print              "The dot product: ${dot}"
The dot product: 7.67930515686481e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9040690877052

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.19075771389436^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.19075771389436^2+0.49219103568932^2+${new_z}^2)
variable           norm          equal     sqrt(0.19075771389436^2+0.49219103568932^2+0.211376537647901^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.19075771389436/${norm}
variable           unit_x        equal     0.19075771389436/0.568612839892965
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.49219103568932/${norm}
variable           unit_y        equal     0.49219103568932/0.568612839892965
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.211376537647901/${norm}
variable           unit_z        equal     0.211376537647901/0.568612839892965
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.35639402777913+${delta}*${unit_x}
variable           x_new         equal     1.35639402777913+0.03*${unit_x}
variable           x_new         equal     1.35639402777913+0.03*0.335479082621961
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.51687399095166+${delta}*${unit_y}
variable           y_new         equal     4.51687399095166+0.03*${unit_y}
variable           y_new         equal     4.51687399095166+0.03*0.865599580519444
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5322448605806+${delta}*${unit_z}
variable           z_new         equal     31.5322448605806+0.03*${unit_z}
variable           z_new         equal     31.5322448605806+0.03*0.371740704426742

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.36645840025779  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.36645840025779  y  4.54284197836724  z   ${z_new}
set                atom          288751    x  1.36645840025779  y  4.54284197836724  z   31.5433970817134
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.19075771389436  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.19075771389436  0.49219103568932  ${new_z}
fix                hold    carbon   planeforce   0.19075771389436  0.49219103568932  0.211376537647901
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4010   -1152448.7            0   -1152448.7 0.0022950965  0.016727025 -0.041020159 
    4146   -1152448.7            0   -1152448.7 -2.6667436e-05 5.9910845e-06 1.0115887e-05 
Loop time of 1.6016 on 104 procs for 136 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.66919608   -1152448.6727079   -1152448.6727079
  Force two-norm initial, final = 0.26544455 0.00013628107
  Force max component initial, final = 0.2142514 5.1382631e-05
  Final line search alpha, max atom move = 1.0000000 5.1382631e-05
  Iterations, force evaluations = 136 272

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.42155    | 1.1446     | 1.486      |  28.6 | 71.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03203    | 0.26151    | 0.77998    |  42.2 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6985e-05 | 0.0022472  | 0.0047934  |   2.2 |  0.14
Other   |            | 0.1932     |            |       | 12.07

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3878.88 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115491 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238166
Ave neighs/atom = 28.530346
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.35411076380898-${x_0}
variable           new_x         equal     1.35411076380898-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.55553459526961-${y_0}
variable           new_y         equal     4.55553459526961-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.524985457599-${z_0}
variable           new_z         equal     31.524985457599-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18847444992421*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18847444992421*0.18847444992421+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18847444992421*0.18847444992421+0.53085164000727*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.18847444992421*0.18847444992421+0.53085164000727*0.53085164000727+${new_z}*${new_z})
variable           module        equal     sqrt(0.18847444992421*0.18847444992421+0.53085164000727*0.53085164000727+0.204117134666301*${new_z})
variable           module        equal     sqrt(0.18847444992421*0.18847444992421+0.53085164000727*0.53085164000727+0.204117134666301*0.204117134666301)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.18847444992421/${module}
variable           unitx         equal     0.18847444992421/0.599157647566167
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.53085164000727/${module}
variable           unity         equal     0.53085164000727/0.599157647566167
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.204117134666301/${module}
variable           unitz         equal     0.204117134666301/0.599157647566167
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.66674361827549e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.66674361827549e-05*-2.66674361827549e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.66674361827549e-05*-2.66674361827549e-05+5.99108448910898e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.66674361827549e-05*-2.66674361827549e-05+5.99108448910898e-06*5.99108448910898e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.66674361827549e-05*-2.66674361827549e-05+5.99108448910898e-06*5.99108448910898e-06+1.01158865879017e-05*${fz})
variable           f_module      equal     sqrt(-2.66674361827549e-05*-2.66674361827549e-05+5.99108448910898e-06*5.99108448910898e-06+1.01158865879017e-05*1.01158865879017e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.314565708523976*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.314565708523976*0.314565708523976+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.314565708523976*0.314565708523976+0.885996602336026*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.314565708523976*0.314565708523976+0.885996602336026*0.885996602336026+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.314565708523976*0.314565708523976+0.885996602336026*0.885996602336026+0.340673503034541*${unitz})
variable           dir_module    equal     sqrt(0.314565708523976*0.314565708523976+0.885996602336026*0.885996602336026+0.340673503034541*0.340673503034541)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.66674361827549e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.66674361827549e-05*0.314565708523976+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.66674361827549e-05*0.314565708523976+5.99108448910898e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.66674361827549e-05*0.314565708523976+5.99108448910898e-06*0.885996602336026+${fz}*${unitz}
variable           dot      equal     -2.66674361827549e-05*0.314565708523976+5.99108448910898e-06*0.885996602336026+1.01158865879017e-05*${unitz}
variable           dot      equal     -2.66674361827549e-05*0.314565708523976+5.99108448910898e-06*0.885996602336026+1.01158865879017e-05*0.340673503034541
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.65634064513016e-07/${f_module}*${dir_module}
variable           cos      equal     3.65634064513016e-07/2.914406298676e-05*${dir_module}
variable           cos      equal     3.65634064513016e-07/2.914406298676e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0125457478141988)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55825024984941/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.2811627415772-90.0)
print              "The dot product: ${dot}"
The dot product: 3.65634064513016e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.2811627415772

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18847444992421^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.18847444992421^2+0.53085164000727^2+${new_z}^2)
variable           norm          equal     sqrt(0.18847444992421^2+0.53085164000727^2+0.204117134666301^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.18847444992421/${norm}
variable           unit_x        equal     0.18847444992421/0.599157647566167
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.53085164000727/${norm}
variable           unit_y        equal     0.53085164000727/0.599157647566167
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.204117134666301/${norm}
variable           unit_z        equal     0.204117134666301/0.599157647566167
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.35411076380898+${delta}*${unit_x}
variable           x_new         equal     1.35411076380898+0.03*${unit_x}
variable           x_new         equal     1.35411076380898+0.03*0.314565708523976
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.55553459526961+${delta}*${unit_y}
variable           y_new         equal     4.55553459526961+0.03*${unit_y}
variable           y_new         equal     4.55553459526961+0.03*0.885996602336026
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.524985457599+${delta}*${unit_z}
variable           z_new         equal     31.524985457599+0.03*${unit_z}
variable           z_new         equal     31.524985457599+0.03*0.340673503034541

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.3635477350647  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.3635477350647  y  4.58211449333969  z   ${z_new}
set                atom          288751    x  1.3635477350647  y  4.58211449333969  z   31.53520566269
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18847444992421  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.18847444992421  0.53085164000727  ${new_z}
fix                hold    carbon   planeforce   0.18847444992421  0.53085164000727  0.204117134666301
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4146   -1152448.6            0   -1152448.6 -0.012592415  0.037840619 -0.086785493 
    4387   -1152448.6            0   -1152448.6 -4.1122083e-07 -9.2861321e-06 2.4530342e-05 
Loop time of 2.82225 on 104 procs for 241 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.59855182  -1152448.64475495  -1152448.64475495
  Force two-norm initial, final = 0.28717298 0.00021454226
  Force max component initial, final = 0.22870787 8.4961136e-05
  Final line search alpha, max atom move = 1.0000000 8.4961136e-05
  Iterations, force evaluations = 241 482

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.73303    | 2.0187     | 2.6564     |  38.2 | 71.53
Neigh   | 1.0161e-05 | 0.0029531  | 0.0043596  |   2.2 |  0.10
Comm    | 0.046907   | 0.45865    | 1.366      |  56.0 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9617e-05 | 0.0039708  | 0.0085296  |   3.0 |  0.14
Other   |            | 0.338      |            |       | 11.97

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3878.86 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115493 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238169
Ave neighs/atom = 28.530357
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27414841690089-${x_0}
variable           new_x         equal     1.27414841690089-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.65337079270476-${y_0}
variable           new_y         equal     4.65337079270476-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4324360637607-${z_0}
variable           new_z         equal     31.4324360637607-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10851210301612*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10851210301612*0.10851210301612+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10851210301612*0.10851210301612+0.628687837442421*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10851210301612*0.10851210301612+0.628687837442421*0.628687837442421+${new_z}*${new_z})
variable           module        equal     sqrt(0.10851210301612*0.10851210301612+0.628687837442421*0.628687837442421+0.111567740828001*${new_z})
variable           module        equal     sqrt(0.10851210301612*0.10851210301612+0.628687837442421*0.628687837442421+0.111567740828001*0.111567740828001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10851210301612/${module}
variable           unitx         equal     0.10851210301612/0.647665526520034
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.628687837442421/${module}
variable           unity         equal     0.628687837442421/0.647665526520034
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.111567740828001/${module}
variable           unitz         equal     0.111567740828001/0.647665526520034
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.11220834381704e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.11220834381704e-07*-4.11220834381704e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.11220834381704e-07*-4.11220834381704e-07+-9.28613213131284e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.11220834381704e-07*-4.11220834381704e-07+-9.28613213131284e-06*-9.28613213131284e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.11220834381704e-07*-4.11220834381704e-07+-9.28613213131284e-06*-9.28613213131284e-06+2.45303418546478e-05*${fz})
variable           f_module      equal     sqrt(-4.11220834381704e-07*-4.11220834381704e-07+-9.28613213131284e-06*-9.28613213131284e-06+2.45303418546478e-05*2.45303418546478e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16754342878054*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16754342878054*0.16754342878054+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16754342878054*0.16754342878054+0.970698318344066*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16754342878054*0.16754342878054+0.970698318344066*0.970698318344066+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16754342878054*0.16754342878054+0.970698318344066*0.970698318344066+0.172261354448591*${unitz})
variable           dir_module    equal     sqrt(0.16754342878054*0.16754342878054+0.970698318344066*0.970698318344066+0.172261354448591*0.172261354448591)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.11220834381704e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.11220834381704e-07*0.16754342878054+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.11220834381704e-07*0.16754342878054+-9.28613213131284e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.11220834381704e-07*0.16754342878054+-9.28613213131284e-06*0.970698318344066+${fz}*${unitz}
variable           dot      equal     -4.11220834381704e-07*0.16754342878054+-9.28613213131284e-06*0.970698318344066+2.45303418546478e-05*${unitz}
variable           dot      equal     -4.11220834381704e-07*0.16754342878054+-9.28613213131284e-06*0.970698318344066+2.45303418546478e-05*0.172261354448591
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.85730027939588e-06/${f_module}*${dir_module}
variable           cos      equal     -4.85730027939588e-06/2.62324040842755e-05*${dir_module}
variable           cos      equal     -4.85730027939588e-06/2.62324040842755e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.185164129974175)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.75703520461539/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(100.670701680367-90.0)
print              "The dot product: ${dot}"
The dot product: -4.85730027939588e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 100.670701680367

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10851210301612^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10851210301612^2+0.628687837442421^2+${new_z}^2)
variable           norm          equal     sqrt(0.10851210301612^2+0.628687837442421^2+0.111567740828001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10851210301612/${norm}
variable           unit_x        equal     0.10851210301612/0.647665526520034
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.628687837442421/${norm}
variable           unit_y        equal     0.628687837442421/0.647665526520034
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.111567740828001/${norm}
variable           unit_z        equal     0.111567740828001/0.647665526520034
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27414841690089+${delta}*${unit_x}
variable           x_new         equal     1.27414841690089+0.03*${unit_x}
variable           x_new         equal     1.27414841690089+0.03*0.16754342878054
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.65337079270476+${delta}*${unit_y}
variable           y_new         equal     4.65337079270476+0.03*${unit_y}
variable           y_new         equal     4.65337079270476+0.03*0.970698318344066
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4324360637607+${delta}*${unit_z}
variable           z_new         equal     31.4324360637607+0.03*${unit_z}
variable           z_new         equal     31.4324360637607+0.03*0.172261354448591

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27917471976431  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27917471976431  y  4.68249174225508  z   ${z_new}
set                atom          288751    x  1.27917471976431  y  4.68249174225508  z   31.4376039043942
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10851210301612  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10851210301612  0.628687837442421  ${new_z}
fix                hold    carbon   planeforce   0.10851210301612  0.628687837442421  0.111567740828001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4387   -1152448.6            0   -1152448.6  -0.20985098  0.084213311   -0.2704412 
    4729   -1152448.6            0   -1152448.6 -2.3092144e-07 -1.6451304e-08 3.1730055e-07 
Loop time of 3.9542 on 104 procs for 342 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.59318781  -1152448.61979358  -1152448.61979358
  Force two-norm initial, final = 0.48160584 2.7729584e-06
  Force max component initial, final = 0.29483496 1.2297513e-06
  Final line search alpha, max atom move = 1.0000000 1.2297513e-06
  Iterations, force evaluations = 342 684

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 1.0393     | 2.8641     | 3.7184     |  45.5 | 72.43
Neigh   | 1.0135e-05 | 0.0029591  | 0.004367   |   2.2 |  0.07
Comm    | 0.064119   | 0.64689    | 1.9336     |  67.2 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 4.1793e-05 | 0.0056265  | 0.01206    |   3.5 |  0.14
Other   |            | 0.4346     |            |       | 10.99

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115495 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238167
Ave neighs/atom = 28.530350
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21194445334058-${x_0}
variable           new_x         equal     1.21194445334058-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.7065287011611-${y_0}
variable           new_y         equal     4.7065287011611-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3675438130159-${z_0}
variable           new_z         equal     31.3675438130159-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04630813945581*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04630813945581*0.04630813945581+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04630813945581*0.04630813945581+0.681845745898761*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.04630813945581*0.04630813945581+0.681845745898761*0.681845745898761+${new_z}*${new_z})
variable           module        equal     sqrt(0.04630813945581*0.04630813945581+0.681845745898761*0.681845745898761+0.0466754900831994*${new_z})
variable           module        equal     sqrt(0.04630813945581*0.04630813945581+0.681845745898761*0.681845745898761+0.0466754900831994*0.0466754900831994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.04630813945581/${module}
variable           unitx         equal     0.04630813945581/0.685008515534372
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.681845745898761/${module}
variable           unity         equal     0.681845745898761/0.685008515534372
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0466754900831994/${module}
variable           unitz         equal     0.0466754900831994/0.685008515534372
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3092143901764e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3092143901764e-07*-2.3092143901764e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3092143901764e-07*-2.3092143901764e-07+-1.64513041083411e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3092143901764e-07*-2.3092143901764e-07+-1.64513041083411e-08*-1.64513041083411e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3092143901764e-07*-2.3092143901764e-07+-1.64513041083411e-08*-1.64513041083411e-08+3.17300552823908e-07*${fz})
variable           f_module      equal     sqrt(-2.3092143901764e-07*-2.3092143901764e-07+-1.64513041083411e-08*-1.64513041083411e-08+3.17300552823908e-07*3.17300552823908e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0676022828996297*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0676022828996297*0.0676022828996297+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0676022828996297*0.0676022828996297+0.995382875447696*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0676022828996297*0.0676022828996297+0.995382875447696*0.995382875447696+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0676022828996297*0.0676022828996297+0.995382875447696*0.995382875447696+0.0681385545211625*${unitz})
variable           dir_module    equal     sqrt(0.0676022828996297*0.0676022828996297+0.995382875447696*0.995382875447696+0.0681385545211625*0.0681385545211625)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3092143901764e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3092143901764e-07*0.0676022828996297+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3092143901764e-07*0.0676022828996297+-1.64513041083411e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3092143901764e-07*0.0676022828996297+-1.64513041083411e-08*0.995382875447696+${fz}*${unitz}
variable           dot      equal     -2.3092143901764e-07*0.0676022828996297+-1.64513041083411e-08*0.995382875447696+3.17300552823908e-07*${unitz}
variable           dot      equal     -2.3092143901764e-07*0.0676022828996297+-1.64513041083411e-08*0.995382875447696+3.17300552823908e-07*0.0681385545211625
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.03657618180983e-08/${f_module}*${dir_module}
variable           cos      equal     -1.03657618180983e-08/3.92778560040133e-07*${dir_module}
variable           cos      equal     -1.03657618180983e-08/3.92778560040133e-07*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.02639085447291)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5971902456664/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.5122601561478-90.0)
print              "The dot product: ${dot}"
The dot product: -1.03657618180983e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.5122601561478

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.04630813945581^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.04630813945581^2+0.681845745898761^2+${new_z}^2)
variable           norm          equal     sqrt(0.04630813945581^2+0.681845745898761^2+0.0466754900831994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.04630813945581/${norm}
variable           unit_x        equal     0.04630813945581/0.685008515534372
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.681845745898761/${norm}
variable           unit_y        equal     0.681845745898761/0.685008515534372
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0466754900831994/${norm}
variable           unit_z        equal     0.0466754900831994/0.685008515534372
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21194445334058+${delta}*${unit_x}
variable           x_new         equal     1.21194445334058+0.03*${unit_x}
variable           x_new         equal     1.21194445334058+0.03*0.0676022828996297
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.7065287011611+${delta}*${unit_y}
variable           y_new         equal     4.7065287011611+0.03*${unit_y}
variable           y_new         equal     4.7065287011611+0.03*0.995382875447696
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3675438130159+${delta}*${unit_z}
variable           z_new         equal     31.3675438130159+0.03*${unit_z}
variable           z_new         equal     31.3675438130159+0.03*0.0681385545211625

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21397252182757  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21397252182757  y  4.73639018742453  z   ${z_new}
set                atom          288751    x  1.21397252182757  y  4.73639018742453  z   31.3695879696515
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.04630813945581  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.04630813945581  0.681845745898761  ${new_z}
fix                hold    carbon   planeforce   0.04630813945581  0.681845745898761  0.0466754900831994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4729   -1152448.6            0   -1152448.6  -0.12413215  0.018025482  -0.14016499 
    4968   -1152448.6            0   -1152448.6 4.5855697e-06 -6.0634686e-07 4.3081674e-06 
Loop time of 2.78575 on 104 procs for 239 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.57139869  -1152448.58030876  -1152448.58030876
  Force two-norm initial, final = 0.39932302 7.3198023e-05
  Force max component initial, final = 0.32182786 2.7666779e-05
  Final line search alpha, max atom move = 1.0000000 2.7666779e-05
  Iterations, force evaluations = 239 478

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.72579    | 2.0019     | 2.6319     |  38.2 | 71.86
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044378   | 0.45447    | 1.3593     |  55.9 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9823e-05 | 0.0039346  | 0.0084123  |   3.0 |  0.14
Other   |            | 0.3254     |            |       | 11.68

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115492 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238166
Ave neighs/atom = 28.530346
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18535812761832-${x_0}
variable           new_x         equal     1.18535812761832-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.74033306530951-${y_0}
variable           new_y         equal     4.74033306530951-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3403787390104-${z_0}
variable           new_z         equal     31.3403787390104-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01972181373355*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01972181373355*0.01972181373355+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01972181373355*0.01972181373355+0.715650110047171*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01972181373355*0.01972181373355+0.715650110047171*0.715650110047171+${new_z}*${new_z})
variable           module        equal     sqrt(0.01972181373355*0.01972181373355+0.715650110047171*0.715650110047171+0.0195104160777007*${new_z})
variable           module        equal     sqrt(0.01972181373355*0.01972181373355+0.715650110047171*0.715650110047171+0.0195104160777007*0.0195104160777007)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.01972181373355/${module}
variable           unitx         equal     0.01972181373355/0.716187605507798
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.715650110047171/${module}
variable           unity         equal     0.715650110047171/0.716187605507798
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0195104160777007/${module}
variable           unitz         equal     0.0195104160777007/0.716187605507798
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.58556973686962e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.58556973686962e-06*4.58556973686962e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.58556973686962e-06*4.58556973686962e-06+-6.06346860088768e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.58556973686962e-06*4.58556973686962e-06+-6.06346860088768e-07*-6.06346860088768e-07+${fz}*${fz})
variable           f_module      equal     sqrt(4.58556973686962e-06*4.58556973686962e-06+-6.06346860088768e-07*-6.06346860088768e-07+4.30816738516315e-06*${fz})
variable           f_module      equal     sqrt(4.58556973686962e-06*4.58556973686962e-06+-6.06346860088768e-07*-6.06346860088768e-07+4.30816738516315e-06*4.30816738516315e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0275372173183124*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0275372173183124*0.0275372173183124+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0275372173183124*0.0275372173183124+0.999249504659822*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0275372173183124*0.0275372173183124+0.999249504659822*0.999249504659822+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0275372173183124*0.0275372173183124+0.999249504659822*0.999249504659822+0.0272420465359314*${unitz})
variable           dir_module    equal     sqrt(0.0275372173183124*0.0275372173183124+0.999249504659822*0.999249504659822+0.0272420465359314*0.0272420465359314)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.58556973686962e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.58556973686962e-06*0.0275372173183124+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.58556973686962e-06*0.0275372173183124+-6.06346860088768e-07*${unity}+${fz}*${unitz}
variable           dot      equal     4.58556973686962e-06*0.0275372173183124+-6.06346860088768e-07*0.999249504659822+${fz}*${unitz}
variable           dot      equal     4.58556973686962e-06*0.0275372173183124+-6.06346860088768e-07*0.999249504659822+4.30816738516315e-06*${unitz}
variable           dot      equal     4.58556973686962e-06*0.0275372173183124+-6.06346860088768e-07*0.999249504659822+4.30816738516315e-06*0.0272420465359314
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.62254672832088e-07/${f_module}*${dir_module}
variable           cos      equal     -3.62254672832088e-07/6.3210293896657e-06*${dir_module}
variable           cos      equal     -3.62254672832088e-07/6.3210293896657e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0573094428930106)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62813718706789/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.2853892872919-90.0)
print              "The dot product: ${dot}"
The dot product: -3.62254672832088e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.2853892872919

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01972181373355^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01972181373355^2+0.715650110047171^2+${new_z}^2)
variable           norm          equal     sqrt(0.01972181373355^2+0.715650110047171^2+0.0195104160777007^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01972181373355/${norm}
variable           unit_x        equal     0.01972181373355/0.716187605507798
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.715650110047171/${norm}
variable           unit_y        equal     0.715650110047171/0.716187605507798
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0195104160777007/${norm}
variable           unit_z        equal     0.0195104160777007/0.716187605507798
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18535812761832+${delta}*${unit_x}
variable           x_new         equal     1.18535812761832+0.03*${unit_x}
variable           x_new         equal     1.18535812761832+0.03*0.0275372173183124
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.74033306530951+${delta}*${unit_y}
variable           y_new         equal     4.74033306530951+0.03*${unit_y}
variable           y_new         equal     4.74033306530951+0.03*0.999249504659822
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3403787390104+${delta}*${unit_z}
variable           z_new         equal     31.3403787390104+0.03*${unit_z}
variable           z_new         equal     31.3403787390104+0.03*0.0272420465359314

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18618424413787  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18618424413787  y  4.77031055044931  z   ${z_new}
set                atom          288751    x  1.18618424413787  y  4.77031055044931  z   31.3411960004065
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01972181373355  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01972181373355  0.715650110047171  ${new_z}
fix                hold    carbon   planeforce   0.01972181373355  0.715650110047171  0.0195104160777007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4968   -1152448.5            0   -1152448.5 -0.048769794 0.0028405946 -0.054895961 
    5000   -1152448.5            0   -1152448.5 0.00018537625 -9.9530959e-06 0.00017769884 
    5192   -1152448.5            0   -1152448.5 -7.4847508e-08 1.8919942e-08 -6.1833278e-07 
Loop time of 2.60416 on 104 procs for 224 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.52707537  -1152448.53289259  -1152448.53289259
  Force two-norm initial, final = 0.37411977 9.7435852e-05
  Force max component initial, final = 0.33174898 3.6642270e-05
  Final line search alpha, max atom move = 1.0000000 3.6642270e-05
  Iterations, force evaluations = 224 448

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6779     | 1.8761     | 2.4586     |  36.9 | 72.04
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042108   | 0.42443    | 1.2608     |  54.0 | 16.30
Output  | 0.00010192 | 0.00010423 | 0.00019205 |   0.0 |  0.00
Modify  | 2.9523e-05 | 0.0036884  | 0.0078913  |   2.9 |  0.14
Other   |            | 0.2998     |            |       | 11.51

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115514 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238163
Ave neighs/atom = 28.530336
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17458778572211-${x_0}
variable           new_x         equal     1.17458778572211-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.7709491819027-${y_0}
variable           new_y         equal     4.7709491819027-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3294928426732-${z_0}
variable           new_z         equal     31.3294928426732-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00895147183734002*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00895147183734002*0.00895147183734002+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00895147183734002*0.00895147183734002+0.74626622664036*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00895147183734002*0.00895147183734002+0.74626622664036*0.74626622664036+${new_z}*${new_z})
variable           module        equal     sqrt(0.00895147183734002*0.00895147183734002+0.74626622664036*0.74626622664036+0.0086245197405006*${new_z})
variable           module        equal     sqrt(0.00895147183734002*0.00895147183734002+0.74626622664036*0.74626622664036+0.0086245197405006*0.0086245197405006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00895147183734002/${module}
variable           unitx         equal     0.00895147183734002/0.746369742294561
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.74626622664036/${module}
variable           unity         equal     0.74626622664036/0.746369742294561
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0086245197405006/${module}
variable           unitz         equal     0.0086245197405006/0.746369742294561
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.48475079473697e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.48475079473697e-08*-7.48475079473697e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.48475079473697e-08*-7.48475079473697e-08+1.89199423233968e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.48475079473697e-08*-7.48475079473697e-08+1.89199423233968e-08*1.89199423233968e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-7.48475079473697e-08*-7.48475079473697e-08+1.89199423233968e-08*1.89199423233968e-08+-6.18332783731563e-07*${fz})
variable           f_module      equal     sqrt(-7.48475079473697e-08*-7.48475079473697e-08+1.89199423233968e-08*1.89199423233968e-08+-6.18332783731563e-07*-6.18332783731563e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0119933477070233*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0119933477070233*0.0119933477070233+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0119933477070233*0.0119933477070233+0.999861307809876*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0119933477070233*0.0119933477070233+0.999861307809876*0.999861307809876+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0119933477070233*0.0119933477070233+0.999861307809876*0.999861307809876+0.0115552912340555*${unitz})
variable           dir_module    equal     sqrt(0.0119933477070233*0.0119933477070233+0.999861307809876*0.999861307809876+0.0115552912340555*0.0115552912340555)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.48475079473697e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.48475079473697e-08*0.0119933477070233+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.48475079473697e-08*0.0119933477070233+1.89199423233968e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -7.48475079473697e-08*0.0119933477070233+1.89199423233968e-08*0.999861307809876+${fz}*${unitz}
variable           dot      equal     -7.48475079473697e-08*0.0119933477070233+1.89199423233968e-08*0.999861307809876+-6.18332783731563e-07*${unitz}
variable           dot      equal     -7.48475079473697e-08*0.0119933477070233+1.89199423233968e-08*0.999861307809876+-6.18332783731563e-07*0.0115552912340555
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.08746306917595e-08/${f_module}*${dir_module}
variable           cos      equal     1.08746306917595e-08/6.23133649469097e-07*${dir_module}
variable           cos      equal     1.08746306917595e-08/6.23133649469097e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0174515221590498)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55334391868788/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.000050673128-90.0)
print              "The dot product: ${dot}"
The dot product: 1.08746306917595e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.000050673128

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00895147183734002^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00895147183734002^2+0.74626622664036^2+${new_z}^2)
variable           norm          equal     sqrt(0.00895147183734002^2+0.74626622664036^2+0.0086245197405006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00895147183734002/${norm}
variable           unit_x        equal     0.00895147183734002/0.746369742294561
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.74626622664036/${norm}
variable           unit_y        equal     0.74626622664036/0.746369742294561
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0086245197405006/${norm}
variable           unit_z        equal     0.0086245197405006/0.746369742294561
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17458778572211+${delta}*${unit_x}
variable           x_new         equal     1.17458778572211+0.03*${unit_x}
variable           x_new         equal     1.17458778572211+0.03*0.0119933477070233
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.7709491819027+${delta}*${unit_y}
variable           y_new         equal     4.7709491819027+0.03*${unit_y}
variable           y_new         equal     4.7709491819027+0.03*0.999861307809876
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3294928426732+${delta}*${unit_z}
variable           z_new         equal     31.3294928426732+0.03*${unit_z}
variable           z_new         equal     31.3294928426732+0.03*0.0115552912340555

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17494758615332  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17494758615332  y  4.800945021137  z   ${z_new}
set                atom          288751    x  1.17494758615332  y  4.800945021137  z   31.3298395014102
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00895147183734002  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00895147183734002  0.74626622664036  ${new_z}
fix                hold    carbon   planeforce   0.00895147183734002  0.74626622664036  0.0086245197405006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5192   -1152448.5            0   -1152448.5 -0.018634381 0.00047130044 -0.021440088 
    5394   -1152448.5            0   -1152448.5 6.8688114e-07 -1.2920097e-08 4.0503536e-07 
Loop time of 2.34681 on 104 procs for 202 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.47434799   -1152448.4799448   -1152448.4799448
  Force two-norm initial, final = 0.37839128 0.00012480597
  Force max component initial, final = 0.33889251 5.1552163e-05
  Final line search alpha, max atom move = 1.0000000 5.1552163e-05
  Iterations, force evaluations = 202 404

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61862    | 1.6998     | 2.2121     |  35.0 | 72.43
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036651   | 0.38103    | 1.1482     |  51.9 | 16.24
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5129e-05 | 0.0033304  | 0.0071851  |   2.7 |  0.14
Other   |            | 0.2627     |            |       | 11.19

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238159
Ave neighs/atom = 28.530322
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17003736705331-${x_0}
variable           new_x         equal     1.17003736705331-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.80106039947064-${y_0}
variable           new_y         equal     4.80106039947064-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3249523579392-${z_0}
variable           new_z         equal     31.3249523579392-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00440105316853989*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00440105316853989*0.00440105316853989+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00440105316853989*0.00440105316853989+0.7763774442083*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00440105316853989*0.00440105316853989+0.7763774442083*0.7763774442083+${new_z}*${new_z})
variable           module        equal     sqrt(0.00440105316853989*0.00440105316853989+0.7763774442083*0.7763774442083+0.00408403500649968*${new_z})
variable           module        equal     sqrt(0.00440105316853989*0.00440105316853989+0.7763774442083*0.7763774442083+0.00408403500649968*0.00408403500649968)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00440105316853989/${module}
variable           unitx         equal     0.00440105316853989/0.77640065976681
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.7763774442083/${module}
variable           unity         equal     0.7763774442083/0.77640065976681
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00408403500649968/${module}
variable           unitz         equal     0.00408403500649968/0.77640065976681
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.86881140925325e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.86881140925325e-07*6.86881140925325e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.86881140925325e-07*6.86881140925325e-07+-1.29200971814516e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.86881140925325e-07*6.86881140925325e-07+-1.29200971814516e-08*-1.29200971814516e-08+${fz}*${fz})
variable           f_module      equal     sqrt(6.86881140925325e-07*6.86881140925325e-07+-1.29200971814516e-08*-1.29200971814516e-08+4.05035363700888e-07*${fz})
variable           f_module      equal     sqrt(6.86881140925325e-07*6.86881140925325e-07+-1.29200971814516e-08*-1.29200971814516e-08+4.05035363700888e-07*4.05035363700888e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00566853352476766*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00566853352476766*0.00566853352476766+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00566853352476766*0.00566853352476766+0.999970098481734*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00566853352476766*0.00566853352476766+0.999970098481734*0.999970098481734+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00566853352476766*0.00566853352476766+0.999970098481734*0.999970098481734+0.00526021578565674*${unitz})
variable           dir_module    equal     sqrt(0.00566853352476766*0.00566853352476766+0.999970098481734*0.999970098481734+0.00526021578565674*0.00526021578565674)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.86881140925325e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.86881140925325e-07*0.00566853352476766+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.86881140925325e-07*0.00566853352476766+-1.29200971814516e-08*${unity}+${fz}*${unitz}
variable           dot      equal     6.86881140925325e-07*0.00566853352476766+-1.29200971814516e-08*0.999970098481734+${fz}*${unitz}
variable           dot      equal     6.86881140925325e-07*0.00566853352476766+-1.29200971814516e-08*0.999970098481734+4.05035363700888e-07*${unitz}
variable           dot      equal     6.86881140925325e-07*0.00566853352476766+-1.29200971814516e-08*0.999970098481734+4.05035363700888e-07*0.00526021578565674
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.89552866217524e-09/${f_module}*${dir_module}
variable           cos      equal     -6.89552866217524e-09/7.97512555712049e-07*${dir_module}
variable           cos      equal     -6.89552866217524e-09/7.97512555712049e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00864629479847957)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57944272932755/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.4954023730923-90.0)
print              "The dot product: ${dot}"
The dot product: -6.89552866217524e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.4954023730923

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00440105316853989^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00440105316853989^2+0.7763774442083^2+${new_z}^2)
variable           norm          equal     sqrt(0.00440105316853989^2+0.7763774442083^2+0.00408403500649968^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00440105316853989/${norm}
variable           unit_x        equal     0.00440105316853989/0.77640065976681
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.7763774442083/${norm}
variable           unit_y        equal     0.7763774442083/0.77640065976681
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00408403500649968/${norm}
variable           unit_z        equal     0.00408403500649968/0.77640065976681
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17003736705331+${delta}*${unit_x}
variable           x_new         equal     1.17003736705331+0.03*${unit_x}
variable           x_new         equal     1.17003736705331+0.03*0.00566853352476766
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.80106039947064+${delta}*${unit_y}
variable           y_new         equal     4.80106039947064+0.03*${unit_y}
variable           y_new         equal     4.80106039947064+0.03*0.999970098481734
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3249523579392+${delta}*${unit_z}
variable           z_new         equal     31.3249523579392+0.03*${unit_z}
variable           z_new         equal     31.3249523579392+0.03*0.00526021578565674

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17020742305905  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17020742305905  y  4.83105950242509  z   ${z_new}
set                atom          288751    x  1.17020742305905  y  4.83105950242509  z   31.3251101644128
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00440105316853989  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00440105316853989  0.7763774442083  ${new_z}
fix                hold    carbon   planeforce   0.00440105316853989  0.7763774442083  0.00408403500649968
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5394   -1152448.4            0   -1152448.4 -0.0071139308 8.5127466e-05 -0.0085166402 
    5526   -1152448.4            0   -1152448.4 4.3942915e-07 -5.1610296e-09 5.0757544e-07 
Loop time of 1.52965 on 104 procs for 132 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.41605792  -1152448.42177761  -1152448.42177761
  Force two-norm initial, final = 0.38506181 0.00027494362
  Force max component initial, final = 0.34553239 0.00010480909
  Final line search alpha, max atom move = 1.0000000 0.00010480909
  Iterations, force evaluations = 132 264

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.40076    | 1.108      | 1.444      |  28.4 | 72.43
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02248    | 0.25034    | 0.74796    |  41.7 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6565e-05 | 0.0021806  | 0.0046395  |   2.2 |  0.14
Other   |            | 0.1691     |            |       | 11.06

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.0 ave      115497 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238153
Ave neighs/atom = 28.530301
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16800946082375-${x_0}
variable           new_x         equal     1.16800946082375-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.83108318644161-${y_0}
variable           new_y         equal     4.83108318644161-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.322976395362-${z_0}
variable           new_z         equal     31.322976395362-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00237314693897983*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00237314693897983*0.00237314693897983+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00237314693897983*0.00237314693897983+0.80640023117927*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00237314693897983*0.00237314693897983+0.80640023117927*0.80640023117927+${new_z}*${new_z})
variable           module        equal     sqrt(0.00237314693897983*0.00237314693897983+0.80640023117927*0.80640023117927+0.00210807242930144*${new_z})
variable           module        equal     sqrt(0.00237314693897983*0.00237314693897983+0.80640023117927*0.80640023117927+0.00210807242930144*0.00210807242930144)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00237314693897983/${module}
variable           unitx         equal     0.00237314693897983/0.806406478546484
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.80640023117927/${module}
variable           unity         equal     0.80640023117927/0.806406478546484
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00210807242930144/${module}
variable           unitz         equal     0.00210807242930144/0.806406478546484
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.39429151436293e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.39429151436293e-07*4.39429151436293e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.39429151436293e-07*4.39429151436293e-07+-5.16102960645009e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.39429151436293e-07*4.39429151436293e-07+-5.16102960645009e-09*-5.16102960645009e-09+${fz}*${fz})
variable           f_module      equal     sqrt(4.39429151436293e-07*4.39429151436293e-07+-5.16102960645009e-09*-5.16102960645009e-09+5.07575443146994e-07*${fz})
variable           f_module      equal     sqrt(4.39429151436293e-07*4.39429151436293e-07+-5.16102960645009e-09*-5.16102960645009e-09+5.07575443146994e-07*5.07575443146994e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00294286690659695*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00294286690659695*0.00294286690659695+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00294286690659695*0.00294286690659695+0.999992252831072*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00294286690659695*0.00294286690659695+0.999992252831072*0.999992252831072+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00294286690659695*0.00294286690659695+0.999992252831072*0.999992252831072+0.00261415611776974*${unitz})
variable           dir_module    equal     sqrt(0.00294286690659695*0.00294286690659695+0.999992252831072*0.999992252831072+0.00261415611776974*0.00261415611776974)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.39429151436293e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.39429151436293e-07*0.00294286690659695+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.39429151436293e-07*0.00294286690659695+-5.16102960645009e-09*${unity}+${fz}*${unitz}
variable           dot      equal     4.39429151436293e-07*0.00294286690659695+-5.16102960645009e-09*0.999992252831072+${fz}*${unitz}
variable           dot      equal     4.39429151436293e-07*0.00294286690659695+-5.16102960645009e-09*0.999992252831072+5.07575443146994e-07*${unitz}
variable           dot      equal     4.39429151436293e-07*0.00294286690659695+-5.16102960645009e-09*0.999992252831072+5.07575443146994e-07*0.00261415611776974
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.54092666559364e-09/${f_module}*${dir_module}
variable           cos      equal     -2.54092666559364e-09/6.71384722677309e-07*${dir_module}
variable           cos      equal     -2.54092666559364e-09/6.71384722677309e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00378460602359416)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57458094185319/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.2168424699219-90.0)
print              "The dot product: ${dot}"
The dot product: -2.54092666559364e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.2168424699219

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00237314693897983^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00237314693897983^2+0.80640023117927^2+${new_z}^2)
variable           norm          equal     sqrt(0.00237314693897983^2+0.80640023117927^2+0.00210807242930144^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00237314693897983/${norm}
variable           unit_x        equal     0.00237314693897983/0.806406478546484
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.80640023117927/${norm}
variable           unit_y        equal     0.80640023117927/0.806406478546484
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00210807242930144/${norm}
variable           unit_z        equal     0.00210807242930144/0.806406478546484
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16800946082375+${delta}*${unit_x}
variable           x_new         equal     1.16800946082375+0.03*${unit_x}
variable           x_new         equal     1.16800946082375+0.03*0.00294286690659695
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.83108318644161+${delta}*${unit_y}
variable           y_new         equal     4.83108318644161+0.03*${unit_y}
variable           y_new         equal     4.83108318644161+0.03*0.999992252831072
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.322976395362+${delta}*${unit_z}
variable           z_new         equal     31.322976395362+0.03*${unit_z}
variable           z_new         equal     31.322976395362+0.03*0.00261415611776974

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16809774683095  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16809774683095  y  4.86108295402654  z   ${z_new}
set                atom          288751    x  1.16809774683095  y  4.86108295402654  z   31.3230548200455
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00237314693897983  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00237314693897983  0.80640023117927  ${new_z}
fix                hold    carbon   planeforce   0.00237314693897983  0.80640023117927  0.00210807242930144
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5526   -1152448.4            0   -1152448.4 -0.0025884808 1.6314145e-05 -0.0033266814 
    5679   -1152448.4            0   -1152448.4 -4.5214409e-06 2.3256393e-09 4.2003526e-06 
Loop time of 1.78457 on 104 procs for 153 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.35261193  -1152448.35839922  -1152448.35839922
  Force two-norm initial, final = 0.39051422 0.00012634028
  Force max component initial, final = 0.35238974 6.0921344e-05
  Final line search alpha, max atom move = 1.0000000 6.0921344e-05
  Iterations, force evaluations = 153 306

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46354    | 1.2828     | 1.6862     |  30.5 | 71.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030701   | 0.29029    | 0.86545    |  44.9 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9134e-05 | 0.0025263  | 0.0059292  |   2.4 |  0.14
Other   |            | 0.2089     |            |       | 11.71

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.0 ave      115498 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238155
Ave neighs/atom = 28.530308
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16706169117864-${x_0}
variable           new_x         equal     1.16706169117864-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.86108860042885-${y_0}
variable           new_y         equal     4.86108860042885-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.322061235699-${z_0}
variable           new_z         equal     31.322061235699-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00142537729386993*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00142537729386993*0.00142537729386993+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00142537729386993*0.00142537729386993+0.836405645166511*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00142537729386993*0.00142537729386993+0.836405645166511*0.836405645166511+${new_z}*${new_z})
variable           module        equal     sqrt(0.00142537729386993*0.00142537729386993+0.836405645166511*0.836405645166511+0.00119291276629951*${new_z})
variable           module        equal     sqrt(0.00142537729386993*0.00142537729386993+0.836405645166511*0.836405645166511+0.00119291276629951*0.00119291276629951)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00142537729386993/${module}
variable           unitx         equal     0.00142537729386993/0.836407710394701
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.836405645166511/${module}
variable           unity         equal     0.836405645166511/0.836407710394701
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00119291276629951/${module}
variable           unitz         equal     0.00119291276629951/0.836407710394701
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.52144085718477e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.52144085718477e-06*-4.52144085718477e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.52144085718477e-06*-4.52144085718477e-06+2.32563930772456e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.52144085718477e-06*-4.52144085718477e-06+2.32563930772456e-09*2.32563930772456e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-4.52144085718477e-06*-4.52144085718477e-06+2.32563930772456e-09*2.32563930772456e-09+4.20035255948032e-06*${fz})
variable           f_module      equal     sqrt(-4.52144085718477e-06*-4.52144085718477e-06+2.32563930772456e-09*2.32563930772456e-09+4.20035255948032e-06*4.20035255948032e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00170416565528466*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00170416565528466*0.00170416565528466+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00170416565528466*0.00170416565528466+0.999997530835543*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00170416565528466*0.00170416565528466+0.999997530835543*0.999997530835543+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00170416565528466*0.00170416565528466+0.999997530835543*0.999997530835543+0.00142623358378245*${unitz})
variable           dir_module    equal     sqrt(0.00170416565528466*0.00170416565528466+0.999997530835543*0.999997530835543+0.00142623358378245*0.00142623358378245)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.52144085718477e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.52144085718477e-06*0.00170416565528466+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.52144085718477e-06*0.00170416565528466+2.32563930772456e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -4.52144085718477e-06*0.00170416565528466+2.32563930772456e-09*0.999997530835543+${fz}*${unitz}
variable           dot      equal     -4.52144085718477e-06*0.00170416565528466+2.32563930772456e-09*0.999997530835543+4.20035255948032e-06*${unitz}
variable           dot      equal     -4.52144085718477e-06*0.00170416565528466+2.32563930772456e-09*0.999997530835543+4.20035255948032e-06*0.00142623358378245
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.11033228180928e-10/${f_module}*${dir_module}
variable           cos      equal     6.11033228180928e-10/6.17141754036711e-06*${dir_module}
variable           cos      equal     6.11033228180928e-10/6.17141754036711e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(9.90101908004396e-05)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57069731660393/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9943271339288-90.0)
print              "The dot product: ${dot}"
The dot product: 6.11033228180928e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9943271339288

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5679   -1152448.4            0   -1152448.4 -0.0064776153   -2.1995706 -0.0057458653 
    5888   -1152449.3            0   -1152449.3 6.7600954e-06 1.7039249e-06 -4.4938297e-06 
Loop time of 2.39755 on 104 procs for 209 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.35839922  -1152449.34502402  -1152449.34502402
  Force two-norm initial, final = 2.1995877 0.00013310087
  Force max component initial, final = 2.1995706 8.3558381e-06
  Final line search alpha, max atom move = 1.0000000 8.3558381e-06
  Iterations, force evaluations = 209 411

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64003    | 1.7273     | 2.2426     |  35.0 | 72.05
Neigh   | 5.0118e-05 | 0.014804   | 0.021771   |   5.0 |  0.62
Comm    | 0.037457   | 0.39176    | 1.1758     |  52.0 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4135e-05 | 0.0022071  | 0.0056497  |   2.9 |  0.09
Other   |            | 0.2615     |            |       | 10.91

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115522 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238168
Ave neighs/atom = 28.530353
Neighbor list builds = 5
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.1656373400614-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.1656373400614-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.1656373400614-1.16563631388477)^2+(4.02468217789556-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.1656373400614-1.16563631388477)^2+(4.02468217789556-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.1656373400614-1.16563631388477)^2+(4.02468217789556-4.02468295526234)^2+(31.3208813240025-${z_0})^2)
variable                displacement      equal     sqrt((1.1656373400614-1.16563631388477)^2+(4.02468217789556-4.02468295526234)^2+(31.3208813240025-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 8
8
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.341 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.86212 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4897     | 1.3234     | 1.7404     |  30.7 | 71.07
Neigh   | 3.0223e-05 | 0.0088929  | 0.012932   |   3.9 |  0.48
Comm    | 0.030593   | 0.30394    | 0.89776    |  44.4 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7587e-05 | 0.0016859  | 0.0043333  |   2.6 |  0.09
Other   |            | 0.2242     |            |       | 12.04

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,8)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,8)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,8)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.18935101839832
variable                y_1    equal     $y
variable                y_1    equal     4.0161340970966
variable                z_1    equal     $z
variable                z_1    equal     31.3366065705656

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.18935101839832  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.18935101839832  y  4.0161340970966  z  ${z_1}
set                atom        288751    x  1.18935101839832  y  4.0161340970966  z  31.3366065705656
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.18935101839832-${x_0}
variable           vector_x          equal     1.18935101839832-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.0161340970966-${y_0}
variable           vector_y          equal     4.0161340970966-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3366065705656-${z_0}
variable           vector_z          equal     31.3366065705656-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.02371470451355  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.02371470451355  -0.00854885816573958  ${vector_z}
fix                hold    carbon   planeforce   0.02371470451355  -0.00854885816573958  0.0157382476328998
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 -0.014823497  -0.01342805  0.015042358 
     433   -1152449.3            0   -1152449.3 7.3147996e-07 6.2725194e-08 -1.0681369e-06 
Loop time of 3.23335 on 104 procs for 275 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
       -1152449.339703  -1152449.34305496  -1152449.34305496
  Force two-norm initial, final = 0.2608051 3.5315211e-06
  Force max component initial, final = 0.13860356 1.0681369e-06
  Final line search alpha, max atom move = 1.0000000 1.0681369e-06
  Iterations, force evaluations = 275 550

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.84243    | 2.3143     | 3.0554     |  40.9 | 71.58
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.052742   | 0.5247     | 1.5518     |  59.4 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.3111e-05 | 0.004513   | 0.0096972  |   3.2 |  0.14
Other   |            | 0.3898     |            |       | 12.06

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18869553375659-${x_0}
variable           new_x         equal     1.18869553375659-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.01542587816329-${y_0}
variable           new_y         equal     4.01542587816329-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3372095704421-${z_0}
variable           new_z         equal     31.3372095704421-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02305921987182^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02305921987182^2+-0.00925707709904966^2+${new_z}^2)
variable           norm          equal     sqrt(0.02305921987182^2+-0.00925707709904966^2+0.0163412475093985^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.02305921987182/${norm}
variable           unit_x        equal     0.02305921987182/0.029739829651128
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00925707709904966/${norm}
variable           unit_y        equal     -0.00925707709904966/0.029739829651128
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0163412475093985/${norm}
variable           unit_z        equal     0.0163412475093985/0.029739829651128
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18869553375659+${delta}*${unit_x}
variable           x_new         equal     1.18869553375659+0.03*${unit_x}
variable           x_new         equal     1.18869553375659+0.03*0.775364894228484
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.01542587816329+${delta}*${unit_y}
variable           y_new         equal     4.01542587816329+0.03*${unit_y}
variable           y_new         equal     4.01542587816329+0.03*-0.311268665881499
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3372095704421+${delta}*${unit_z}
variable           z_new         equal     31.3372095704421+0.03*${unit_z}
variable           z_new         equal     31.3372095704421+0.03*0.549473473825991

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21195648058344  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21195648058344  y  4.00608781818685  z   ${z_new}
set                atom          288751    x  1.21195648058344  y  4.00608781818685  z   31.3536937746569
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02305921987182  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02305921987182  -0.00925707709904966  ${new_z}
fix                hold    carbon   planeforce   0.02305921987182  -0.00925707709904966  0.0163412475093985
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     433   -1152449.3            0   -1152449.3  -0.01653474 -0.018816351  0.012673072 
     685   -1152449.3            0   -1152449.3 -1.5297199e-06 -2.0794973e-07 2.0407953e-06 
Loop time of 2.93588 on 104 procs for 252 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.3337074  -1152449.33709912  -1152449.33709912
  Force two-norm initial, final = 0.2623547 1.1428705e-05
  Force max component initial, final = 0.14494023 2.0407953e-06
  Final line search alpha, max atom move = 1.0000000 2.0407953e-06
  Iterations, force evaluations = 252 504

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.76443    | 2.1137     | 2.7735     |  39.3 | 71.99
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.046834   | 0.4787     | 1.418      |  57.1 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.104e-05  | 0.0041463  | 0.0088572  |   3.0 |  0.14
Other   |            | 0.3394     |            |       | 11.56

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115461 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21066115487908-${x_0}
variable           new_x         equal     1.21066115487908-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.00451928342244-${y_0}
variable           new_y         equal     4.00451928342244-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3546330635922-${z_0}
variable           new_z         equal     31.3546330635922-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0450248409943099*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0450248409943099*0.0450248409943099+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0450248409943099*0.0450248409943099+-0.0201636718398994*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0450248409943099*0.0450248409943099+-0.0201636718398994*-0.0201636718398994+${new_z}*${new_z})
variable           module        equal     sqrt(0.0450248409943099*0.0450248409943099+-0.0201636718398994*-0.0201636718398994+0.0337647406594996*${new_z})
variable           module        equal     sqrt(0.0450248409943099*0.0450248409943099+-0.0201636718398994*-0.0201636718398994+0.0337647406594996*0.0337647406594996)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0450248409943099/${module}
variable           unitx         equal     0.0450248409943099/0.0597818340337038
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0201636718398994/${module}
variable           unity         equal     -0.0201636718398994/0.0597818340337038
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0337647406594996/${module}
variable           unitz         equal     0.0337647406594996/0.0597818340337038
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.52971988582439e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.52971988582439e-06*-1.52971988582439e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.52971988582439e-06*-1.52971988582439e-06+-2.07949730941246e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.52971988582439e-06*-1.52971988582439e-06+-2.07949730941246e-07*-2.07949730941246e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.52971988582439e-06*-1.52971988582439e-06+-2.07949730941246e-07*-2.07949730941246e-07+2.04079526224542e-06*${fz})
variable           f_module      equal     sqrt(-1.52971988582439e-06*-1.52971988582439e-06+-2.07949730941246e-07*-2.07949730941246e-07+2.04079526224542e-06*2.04079526224542e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.753152554150911*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.753152554150911*0.753152554150911+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.753152554150911*0.753152554150911+-0.33728760861588*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.753152554150911*0.753152554150911+-0.33728760861588*-0.33728760861588+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.753152554150911*0.753152554150911+-0.33728760861588*-0.33728760861588+0.564799344236641*${unitz})
variable           dir_module    equal     sqrt(0.753152554150911*0.753152554150911+-0.33728760861588*-0.33728760861588+0.564799344236641*0.564799344236641)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.52971988582439e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.52971988582439e-06*0.753152554150911+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.52971988582439e-06*0.753152554150911+-2.07949730941246e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.52971988582439e-06*0.753152554150911+-2.07949730941246e-07*-0.33728760861588+${fz}*${unitz}
variable           dot      equal     -1.52971988582439e-06*0.753152554150911+-2.07949730941246e-07*-0.33728760861588+2.04079526224542e-06*${unitz}
variable           dot      equal     -1.52971988582439e-06*0.753152554150911+-2.07949730941246e-07*-0.33728760861588+2.04079526224542e-06*0.564799344236641
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.06662541548664e-08/${f_module}*${dir_module}
variable           cos      equal     7.06662541548664e-08/2.55893167593206e-06*${dir_module}
variable           cos      equal     7.06662541548664e-08/2.55893167593206e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0276155298789394)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5431772856965/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.4175455108635-90.0)
print              "The dot product: ${dot}"
The dot product: 7.06662541548664e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.4175455108635

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0450248409943099^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0450248409943099^2+-0.0201636718398994^2+${new_z}^2)
variable           norm          equal     sqrt(0.0450248409943099^2+-0.0201636718398994^2+0.0337647406594996^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0450248409943099/${norm}
variable           unit_x        equal     0.0450248409943099/0.0597818340337038
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0201636718398994/${norm}
variable           unit_y        equal     -0.0201636718398994/0.0597818340337038
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0337647406594996/${norm}
variable           unit_z        equal     0.0337647406594996/0.0597818340337038
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21066115487908+${delta}*${unit_x}
variable           x_new         equal     1.21066115487908+0.03*${unit_x}
variable           x_new         equal     1.21066115487908+0.03*0.753152554150911
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.00451928342244+${delta}*${unit_y}
variable           y_new         equal     4.00451928342244+0.03*${unit_y}
variable           y_new         equal     4.00451928342244+0.03*-0.33728760861588
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3546330635922+${delta}*${unit_z}
variable           z_new         equal     31.3546330635922+0.03*${unit_z}
variable           z_new         equal     31.3546330635922+0.03*0.564799344236641

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23325573150361  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23325573150361  y  3.99440065516396  z   ${z_new}
set                atom          288751    x  1.23325573150361  y  3.99440065516396  z   31.3715770439193
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0450248409943099  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0450248409943099  -0.0201636718398994  ${new_z}
fix                hold    carbon   planeforce   0.0450248409943099  -0.0201636718398994  0.0337647406594996
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     685   -1152449.3            0   -1152449.3 -0.015982084 -0.030316453 0.0032074811 
     887   -1152449.3            0   -1152449.3 -1.6117675e-05 -1.0089287e-06 2.0890195e-05 
Loop time of 2.36267 on 104 procs for 202 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32403582  -1152449.32735966  -1152449.32735966
  Force two-norm initial, final = 0.26190208 0.00011564707
  Force max component initial, final = 0.14921247 2.7140027e-05
  Final line search alpha, max atom move = 1.0000000 2.7140027e-05
  Iterations, force evaluations = 202 404

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61104    | 1.6994     | 2.2314     |  35.3 | 71.93
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03673    | 0.38511    | 1.1429     |  51.7 | 16.30
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5044e-05 | 0.0033251  | 0.0071234  |   2.7 |  0.14
Other   |            | 0.2749     |            |       | 11.63

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115437 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.23172595019476-${x_0}
variable           new_x         equal     1.23172595019476-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.99033180514102-${y_0}
variable           new_y         equal     3.99033180514102-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3711871461684-${z_0}
variable           new_z         equal     31.3711871461684-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0660896363099899*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0660896363099899*0.0660896363099899+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0660896363099899*0.0660896363099899+-0.0343511501213198*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0660896363099899*0.0660896363099899+-0.0343511501213198*-0.0343511501213198+${new_z}*${new_z})
variable           module        equal     sqrt(0.0660896363099899*0.0660896363099899+-0.0343511501213198*-0.0343511501213198+0.050318823235699*${new_z})
variable           module        equal     sqrt(0.0660896363099899*0.0660896363099899+-0.0343511501213198*-0.0343511501213198+0.050318823235699*0.050318823235699)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0660896363099899/${module}
variable           unitx         equal     0.0660896363099899/0.0898878496464884
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0343511501213198/${module}
variable           unity         equal     -0.0343511501213198/0.0898878496464884
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.050318823235699/${module}
variable           unitz         equal     0.050318823235699/0.0898878496464884
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.61176746233872e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.61176746233872e-05*-1.61176746233872e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.61176746233872e-05*-1.61176746233872e-05+-1.0089287091514e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.61176746233872e-05*-1.61176746233872e-05+-1.0089287091514e-06*-1.0089287091514e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.61176746233872e-05*-1.61176746233872e-05+-1.0089287091514e-06*-1.0089287091514e-06+2.08901953912922e-05*${fz})
variable           f_module      equal     sqrt(-1.61176746233872e-05*-1.61176746233872e-05+-1.0089287091514e-06*-1.0089287091514e-06+2.08901953912922e-05*2.08901953912922e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735245492799168*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735245492799168*0.735245492799168+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735245492799168*0.735245492799168+-0.382155655702259*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735245492799168*0.735245492799168+-0.382155655702259*-0.382155655702259+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.735245492799168*0.735245492799168+-0.382155655702259*-0.382155655702259+0.559795605675219*${unitz})
variable           dir_module    equal     sqrt(0.735245492799168*0.735245492799168+-0.382155655702259*-0.382155655702259+0.559795605675219*0.559795605675219)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.61176746233872e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.61176746233872e-05*0.735245492799168+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.61176746233872e-05*0.735245492799168+-1.0089287091514e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.61176746233872e-05*0.735245492799168+-1.0089287091514e-06*-0.382155655702259+${fz}*${unitz}
variable           dot      equal     -1.61176746233872e-05*0.735245492799168+-1.0089287091514e-06*-0.382155655702259+2.08901953912922e-05*${unitz}
variable           dot      equal     -1.61176746233872e-05*0.735245492799168+-1.0089287091514e-06*-0.382155655702259+2.08901953912922e-05*0.559795605675219
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.29359772895707e-07/${f_module}*${dir_module}
variable           cos      equal     2.29359772895707e-07/2.64045002961975e-05*${dir_module}
variable           cos      equal     2.29359772895707e-07/2.64045002961975e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00868638945341969)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56210982810155/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.5023002861253-90.0)
print              "The dot product: ${dot}"
The dot product: 2.29359772895707e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.5023002861253

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0660896363099899^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0660896363099899^2+-0.0343511501213198^2+${new_z}^2)
variable           norm          equal     sqrt(0.0660896363099899^2+-0.0343511501213198^2+0.050318823235699^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0660896363099899/${norm}
variable           unit_x        equal     0.0660896363099899/0.0898878496464884
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0343511501213198/${norm}
variable           unit_y        equal     -0.0343511501213198/0.0898878496464884
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.050318823235699/${norm}
variable           unit_z        equal     0.050318823235699/0.0898878496464884
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.23172595019476+${delta}*${unit_x}
variable           x_new         equal     1.23172595019476+0.03*${unit_x}
variable           x_new         equal     1.23172595019476+0.03*0.735245492799168
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.99033180514102+${delta}*${unit_y}
variable           y_new         equal     3.99033180514102+0.03*${unit_y}
variable           y_new         equal     3.99033180514102+0.03*-0.382155655702259
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3711871461684+${delta}*${unit_z}
variable           z_new         equal     31.3711871461684+0.03*${unit_z}
variable           z_new         equal     31.3711871461684+0.03*0.559795605675219

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25378331497873  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25378331497873  y  3.97886713546995  z   ${z_new}
set                atom          288751    x  1.25378331497873  y  3.97886713546995  z   31.3879810143387
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0660896363099899  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0660896363099899  -0.0343511501213198  ${new_z}
fix                hold    carbon   planeforce   0.0660896363099899  -0.0343511501213198  0.050318823235699
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     887   -1152449.3            0   -1152449.3 -0.015770526 -0.045571951 -0.010397314 
    1000   -1152449.3            0   -1152449.3 0.00019761825 1.4460399e-05 -0.00024968365 
    1083   -1152449.3            0   -1152449.3 -7.2827325e-06 -1.1168089e-06 8.8028583e-06 
Loop time of 2.3196 on 104 procs for 196 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31107838  -1152449.31448561  -1152449.31448561
  Force two-norm initial, final = 0.26377133 0.00011437093
  Force max component initial, final = 0.15094811 1.1363268e-05
  Final line search alpha, max atom move = 1.0000000 1.1363268e-05
  Iterations, force evaluations = 196 392

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59498    | 1.6498     | 2.1911     |  34.8 | 71.12
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044129   | 0.37743    | 1.1182     |  49.9 | 16.27
Output  | 9.7841e-05 | 0.00010117 | 0.00024106 |   0.0 |  0.00
Modify  | 2.358e-05  | 0.0032252  | 0.006973   |   2.7 |  0.14
Other   |            | 0.2891     |            |       | 12.46

Nlocal:        2776.45 ave        3959 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115440 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25229838881-${x_0}
variable           new_x         equal     1.25229838881-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.97109566250229-${y_0}
variable           new_y         equal     3.97109566250229-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.384625991441-${z_0}
variable           new_z         equal     31.384625991441-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08666207492523*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08666207492523*0.08666207492523+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08666207492523*0.08666207492523+-0.0535872927600498*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08666207492523*0.08666207492523+-0.0535872927600498*-0.0535872927600498+${new_z}*${new_z})
variable           module        equal     sqrt(0.08666207492523*0.08666207492523+-0.0535872927600498*-0.0535872927600498+0.0637576685082983*${new_z})
variable           module        equal     sqrt(0.08666207492523*0.08666207492523+-0.0535872927600498*-0.0535872927600498+0.0637576685082983*0.0637576685082983)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.08666207492523/${module}
variable           unitx         equal     0.08666207492523/0.120195480236619
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0535872927600498/${module}
variable           unity         equal     -0.0535872927600498/0.120195480236619
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0637576685082983/${module}
variable           unitz         equal     0.0637576685082983/0.120195480236619
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.28273247552027e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.28273247552027e-06*-7.28273247552027e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.28273247552027e-06*-7.28273247552027e-06+-1.11680891307164e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.28273247552027e-06*-7.28273247552027e-06+-1.11680891307164e-06*-1.11680891307164e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-7.28273247552027e-06*-7.28273247552027e-06+-1.11680891307164e-06*-1.11680891307164e-06+8.80285828504159e-06*${fz})
variable           f_module      equal     sqrt(-7.28273247552027e-06*-7.28273247552027e-06+-1.11680891307164e-06*-1.11680891307164e-06+8.80285828504159e-06*8.80285828504159e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.721009431923942*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.721009431923942*0.721009431923942+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.721009431923942*0.721009431923942+-0.445834507708251*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.721009431923942*0.721009431923942+-0.445834507708251*-0.445834507708251+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.721009431923942*0.721009431923942+-0.445834507708251*-0.445834507708251+0.530449800464908*${unitz})
variable           dir_module    equal     sqrt(0.721009431923942*0.721009431923942+-0.445834507708251*-0.445834507708251+0.530449800464908*0.530449800464908)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.28273247552027e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.28273247552027e-06*0.721009431923942+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.28273247552027e-06*0.721009431923942+-1.11680891307164e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -7.28273247552027e-06*0.721009431923942+-1.11680891307164e-06*-0.445834507708251+${fz}*${unitz}
variable           dot      equal     -7.28273247552027e-06*0.721009431923942+-1.11680891307164e-06*-0.445834507708251+8.80285828504159e-06*${unitz}
variable           dot      equal     -7.28273247552027e-06*0.721009431923942+-1.11680891307164e-06*-0.445834507708251+8.80285828504159e-06*0.530449800464908
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.35324322442581e-08/${f_module}*${dir_module}
variable           cos      equal     -8.35324322442581e-08/1.14793627194561e-05*${dir_module}
variable           cos      equal     -8.35324322442581e-08/1.14793627194561e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00727674822075976)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57807313923578/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.4169306411709-90.0)
print              "The dot product: ${dot}"
The dot product: -8.35324322442581e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.4169306411709

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08666207492523^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08666207492523^2+-0.0535872927600498^2+${new_z}^2)
variable           norm          equal     sqrt(0.08666207492523^2+-0.0535872927600498^2+0.0637576685082983^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.08666207492523/${norm}
variable           unit_x        equal     0.08666207492523/0.120195480236619
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0535872927600498/${norm}
variable           unit_y        equal     -0.0535872927600498/0.120195480236619
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0637576685082983/${norm}
variable           unit_z        equal     0.0637576685082983/0.120195480236619
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25229838881+${delta}*${unit_x}
variable           x_new         equal     1.25229838881+0.03*${unit_x}
variable           x_new         equal     1.25229838881+0.03*0.721009431923942
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.97109566250229+${delta}*${unit_y}
variable           y_new         equal     3.97109566250229+0.03*${unit_y}
variable           y_new         equal     3.97109566250229+0.03*-0.445834507708251
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.384625991441+${delta}*${unit_z}
variable           z_new         equal     31.384625991441+0.03*${unit_z}
variable           z_new         equal     31.384625991441+0.03*0.530449800464908

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27392867176772  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27392867176772  y  3.95772062727104  z   ${z_new}
set                atom          288751    x  1.27392867176772  y  3.95772062727104  z   31.4005394854549
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08666207492523  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08666207492523  -0.0535872927600498  ${new_z}
fix                hold    carbon   planeforce   0.08666207492523  -0.0535872927600498  0.0637576685082983
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1083   -1152449.3            0   -1152449.3 -0.019577401 -0.057600569 -0.021801932 
    1270   -1152449.3            0   -1152449.3 5.0347114e-06 -3.9034064e-07 -7.1714642e-06 
Loop time of 2.20386 on 104 procs for 187 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.29518245  -1152449.29866119  -1152449.29866119
  Force two-norm initial, final = 0.26515574 0.00012918246
  Force max component initial, final = 0.14891888 2.4977862e-05
  Final line search alpha, max atom move = 1.0000000 2.4977862e-05
  Iterations, force evaluations = 187 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56795    | 1.5771     | 2.0646     |  33.8 | 71.56
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03595    | 0.36021    | 1.0637     |  49.2 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2352e-05 | 0.0030776  | 0.0066096  |   2.6 |  0.14
Other   |            | 0.2635     |            |       | 11.96

Nlocal:        2776.45 ave        3958 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115386 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27186987599183-${x_0}
variable           new_x         equal     1.27186987599183-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.94762134684123-${y_0}
variable           new_y         equal     3.94762134684123-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3948496038808-${z_0}
variable           new_z         equal     31.3948496038808-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10623356210706*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10623356210706*0.10623356210706+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10623356210706*0.10623356210706+-0.07706160842111*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10623356210706*0.10623356210706+-0.07706160842111*-0.07706160842111+${new_z}*${new_z})
variable           module        equal     sqrt(0.10623356210706*0.10623356210706+-0.07706160842111*-0.07706160842111+0.0739812809481002*${new_z})
variable           module        equal     sqrt(0.10623356210706*0.10623356210706+-0.07706160842111*-0.07706160842111+0.0739812809481002*0.0739812809481002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10623356210706/${module}
variable           unitx         equal     0.10623356210706/0.15065620180107
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.07706160842111/${module}
variable           unity         equal     -0.07706160842111/0.15065620180107
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0739812809481002/${module}
variable           unitz         equal     0.0739812809481002/0.15065620180107
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.03471140199341e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.03471140199341e-06*5.03471140199341e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.03471140199341e-06*5.03471140199341e-06+-3.9034063891721e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.03471140199341e-06*5.03471140199341e-06+-3.9034063891721e-07*-3.9034063891721e-07+${fz}*${fz})
variable           f_module      equal     sqrt(5.03471140199341e-06*5.03471140199341e-06+-3.9034063891721e-07*-3.9034063891721e-07+-7.1714641628771e-06*${fz})
variable           f_module      equal     sqrt(5.03471140199341e-06*5.03471140199341e-06+-3.9034063891721e-07*-3.9034063891721e-07+-7.1714641628771e-06*-7.1714641628771e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.705138990874954*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.705138990874954*0.705138990874954+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.705138990874954*0.705138990874954+-0.511506380088249*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.705138990874954*0.705138990874954+-0.511506380088249*-0.511506380088249+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.705138990874954*0.705138990874954+-0.511506380088249*-0.511506380088249+0.491060308594444*${unitz})
variable           dir_module    equal     sqrt(0.705138990874954*0.705138990874954+-0.511506380088249*-0.511506380088249+0.491060308594444*0.491060308594444)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.03471140199341e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.03471140199341e-06*0.705138990874954+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.03471140199341e-06*0.705138990874954+-3.9034063891721e-07*${unity}+${fz}*${unitz}
variable           dot      equal     5.03471140199341e-06*0.705138990874954+-3.9034063891721e-07*-0.511506380088249+${fz}*${unitz}
variable           dot      equal     5.03471140199341e-06*0.705138990874954+-3.9034063891721e-07*-0.511506380088249+-7.1714641628771e-06*${unitz}
variable           dot      equal     5.03471140199341e-06*0.705138990874954+-3.9034063891721e-07*-0.511506380088249+-7.1714641628771e-06*0.491060308594444
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.2821163966571e-07/${f_module}*${dir_module}
variable           cos      equal     2.2821163966571e-07/8.7710080922995e-06*${dir_module}
variable           cos      equal     2.2821163966571e-07/8.7710080922995e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0260188609181729)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54477452926907/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.5090608264262-90.0)
print              "The dot product: ${dot}"
The dot product: 2.2821163966571e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.5090608264262

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10623356210706^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10623356210706^2+-0.07706160842111^2+${new_z}^2)
variable           norm          equal     sqrt(0.10623356210706^2+-0.07706160842111^2+0.0739812809481002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10623356210706/${norm}
variable           unit_x        equal     0.10623356210706/0.15065620180107
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.07706160842111/${norm}
variable           unit_y        equal     -0.07706160842111/0.15065620180107
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0739812809481002/${norm}
variable           unit_z        equal     0.0739812809481002/0.15065620180107
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27186987599183+${delta}*${unit_x}
variable           x_new         equal     1.27186987599183+0.03*${unit_x}
variable           x_new         equal     1.27186987599183+0.03*0.705138990874954
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.94762134684123+${delta}*${unit_y}
variable           y_new         equal     3.94762134684123+0.03*${unit_y}
variable           y_new         equal     3.94762134684123+0.03*-0.511506380088249
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3948496038808+${delta}*${unit_z}
variable           z_new         equal     31.3948496038808+0.03*${unit_z}
variable           z_new         equal     31.3948496038808+0.03*0.491060308594444

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29302404571808  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29302404571808  y  3.93227615543858  z   ${z_new}
set                atom          288751    x  1.29302404571808  y  3.93227615543858  z   31.4095814131386
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10623356210706  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10623356210706  -0.07706160842111  ${new_z}
fix                hold    carbon   planeforce   0.10623356210706  -0.07706160842111  0.0739812809481002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1270   -1152449.3            0   -1152449.3 -0.026115311 -0.063649404 -0.028799215 
    1453   -1152449.3            0   -1152449.3 1.1230333e-05 3.9284083e-06 -1.2034244e-05 
Loop time of 2.15162 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.27627265  -1152449.27979664  -1152449.27979664
  Force two-norm initial, final = 0.26538008 0.0001267126
  Force max component initial, final = 0.14406014 1.3806800e-05
  Final line search alpha, max atom move = 1.0000000 1.3806800e-05
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55419    | 1.537      | 2.0332     |  33.6 | 71.43
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03549    | 0.35224    | 1.0459     |  48.3 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2649e-05 | 0.0030083  | 0.0064757  |   2.6 |  0.14
Other   |            | 0.2594     |            |       | 12.06

Nlocal:        2776.45 ave        3955 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.12 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115301 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28994753403376-${x_0}
variable           new_x         equal     1.28994753403376-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.92107363845708-${y_0}
variable           new_y         equal     3.92107363845708-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4023301845168-${z_0}
variable           new_z         equal     31.4023301845168-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12431122014899*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12431122014899*0.12431122014899+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12431122014899*0.12431122014899+-0.10360931680526*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12431122014899*0.12431122014899+-0.10360931680526*-0.10360931680526+${new_z}*${new_z})
variable           module        equal     sqrt(0.12431122014899*0.12431122014899+-0.10360931680526*-0.10360931680526+0.0814618615840992*${new_z})
variable           module        equal     sqrt(0.12431122014899*0.12431122014899+-0.10360931680526*-0.10360931680526+0.0814618615840992*0.0814618615840992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12431122014899/${module}
variable           unitx         equal     0.12431122014899/0.181174514975287
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.10360931680526/${module}
variable           unity         equal     -0.10360931680526/0.181174514975287
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0814618615840992/${module}
variable           unitz         equal     0.0814618615840992/0.181174514975287
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.12303327266527e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.12303327266527e-05*1.12303327266527e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.12303327266527e-05*1.12303327266527e-05+3.92840829971697e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.12303327266527e-05*1.12303327266527e-05+3.92840829971697e-06*3.92840829971697e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.12303327266527e-05*1.12303327266527e-05+3.92840829971697e-06*3.92840829971697e-06+-1.20342440100749e-05*${fz})
variable           f_module      equal     sqrt(1.12303327266527e-05*1.12303327266527e-05+3.92840829971697e-06*3.92840829971697e-06+-1.20342440100749e-05*-1.20342440100749e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.686140764146362*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.686140764146362*0.686140764146362+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.686140764146362*0.686140764146362+-0.571875778551927*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.686140764146362*0.686140764146362+-0.571875778551927*-0.571875778551927+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.686140764146362*0.686140764146362+-0.571875778551927*-0.571875778551927+0.449632011407404*${unitz})
variable           dir_module    equal     sqrt(0.686140764146362*0.686140764146362+-0.571875778551927*-0.571875778551927+0.449632011407404*0.449632011407404)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.12303327266527e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.12303327266527e-05*0.686140764146362+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.12303327266527e-05*0.686140764146362+3.92840829971697e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.12303327266527e-05*0.686140764146362+3.92840829971697e-06*-0.571875778551927+${fz}*${unitz}
variable           dot      equal     1.12303327266527e-05*0.686140764146362+3.92840829971697e-06*-0.571875778551927+-1.20342440100749e-05*${unitz}
variable           dot      equal     1.12303327266527e-05*0.686140764146362+3.92840829971697e-06*-0.571875778551927+-1.20342440100749e-05*0.449632011407404
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.80461837954069e-08/${f_module}*${dir_module}
variable           cos      equal     4.80461837954069e-08/1.69226414550045e-05*${dir_module}
variable           cos      equal     4.80461837954069e-08/1.69226414550045e-05*0.999999999999997
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00283916573681221)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56795715724372/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8373275673955-90.0)
print              "The dot product: ${dot}"
The dot product: 4.80461837954069e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8373275673955

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12431122014899^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12431122014899^2+-0.10360931680526^2+${new_z}^2)
variable           norm          equal     sqrt(0.12431122014899^2+-0.10360931680526^2+0.0814618615840992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12431122014899/${norm}
variable           unit_x        equal     0.12431122014899/0.181174514975287
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.10360931680526/${norm}
variable           unit_y        equal     -0.10360931680526/0.181174514975287
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0814618615840992/${norm}
variable           unit_z        equal     0.0814618615840992/0.181174514975287
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28994753403376+${delta}*${unit_x}
variable           x_new         equal     1.28994753403376+0.03*${unit_x}
variable           x_new         equal     1.28994753403376+0.03*0.686140764146362
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.92107363845708+${delta}*${unit_y}
variable           y_new         equal     3.92107363845708+0.03*${unit_y}
variable           y_new         equal     3.92107363845708+0.03*-0.571875778551927
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4023301845168+${delta}*${unit_z}
variable           z_new         equal     31.4023301845168+0.03*${unit_z}
variable           z_new         equal     31.4023301845168+0.03*0.449632011407404

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31053175695815  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31053175695815  y  3.90391736510052  z   ${z_new}
set                atom          288751    x  1.31053175695815  y  3.90391736510052  z   31.415819144859
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12431122014899  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12431122014899  -0.10360931680526  ${new_z}
fix                hold    carbon   planeforce   0.12431122014899  -0.10360931680526  0.0814618615840992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1453   -1152449.3            0   -1152449.3 -0.035258542  -0.06589471 -0.030005128 
    1631   -1152449.3            0   -1152449.3 -7.9009264e-06 1.6119539e-06 1.4107058e-05 
Loop time of 2.12742 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.25426541  -1152449.25778652  -1152449.25778652
  Force two-norm initial, final = 0.26430729 0.00014833065
  Force max component initial, final = 0.13729481 1.4107058e-05
  Final line search alpha, max atom move = 1.0000000 1.4107058e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54282    | 1.4976     | 1.9755     |  33.0 | 70.40
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035795   | 0.34252    | 1.0108     |  47.5 | 16.10
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2046e-05 | 0.0029323  | 0.0068555  |   2.6 |  0.14
Other   |            | 0.2844     |            |       | 13.37

Nlocal:        2776.45 ave        3949 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115110 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238193
Ave neighs/atom = 28.530440
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.3061125056441-${x_0}
variable           new_x         equal     1.3061125056441-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.89233298672114-${y_0}
variable           new_y         equal     3.89233298672114-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4078290622138-${z_0}
variable           new_z         equal     31.4078290622138-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14047619175933*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14047619175933*0.14047619175933+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14047619175933*0.14047619175933+-0.1323499685412*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14047619175933*0.14047619175933+-0.1323499685412*-0.1323499685412+${new_z}*${new_z})
variable           module        equal     sqrt(0.14047619175933*0.14047619175933+-0.1323499685412*-0.1323499685412+0.0869607392810998*${new_z})
variable           module        equal     sqrt(0.14047619175933*0.14047619175933+-0.1323499685412*-0.1323499685412+0.0869607392810998*0.0869607392810998)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.14047619175933/${module}
variable           unitx         equal     0.14047619175933/0.211689028530947
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.1323499685412/${module}
variable           unity         equal     -0.1323499685412/0.211689028530947
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0869607392810998/${module}
variable           unitz         equal     0.0869607392810998/0.211689028530947
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.90092643913174e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.90092643913174e-06*-7.90092643913174e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.90092643913174e-06*-7.90092643913174e-06+1.61195385407688e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.90092643913174e-06*-7.90092643913174e-06+1.61195385407688e-06*1.61195385407688e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-7.90092643913174e-06*-7.90092643913174e-06+1.61195385407688e-06*1.61195385407688e-06+1.41070584588412e-05*${fz})
variable           f_module      equal     sqrt(-7.90092643913174e-06*-7.90092643913174e-06+1.61195385407688e-06*1.61195385407688e-06+1.41070584588412e-05*1.41070584588412e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.663596940919371*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.663596940919371*0.663596940919371+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.663596940919371*0.663596940919371+-0.625209390678703*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.663596940919371*0.663596940919371+-0.625209390678703*-0.625209390678703+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.663596940919371*0.663596940919371+-0.625209390678703*-0.625209390678703+0.410794739267212*${unitz})
variable           dir_module    equal     sqrt(0.663596940919371*0.663596940919371+-0.625209390678703*-0.625209390678703+0.410794739267212*0.410794739267212)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.90092643913174e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.90092643913174e-06*0.663596940919371+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.90092643913174e-06*0.663596940919371+1.61195385407688e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -7.90092643913174e-06*0.663596940919371+1.61195385407688e-06*-0.625209390678703+${fz}*${unitz}
variable           dot      equal     -7.90092643913174e-06*0.663596940919371+1.61195385407688e-06*-0.625209390678703+1.41070584588412e-05*${unitz}
variable           dot      equal     -7.90092643913174e-06*0.663596940919371+1.61195385407688e-06*-0.625209390678703+1.41070584588412e-05*0.410794739267212
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.55733900919406e-07/${f_module}*${dir_module}
variable           cos      equal     -4.55733900919406e-07/1.62490655788389e-05*${dir_module}
variable           cos      equal     -4.55733900919406e-07/1.62490655788389e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0280467759027883)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59884678103336/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.6071726412888-90.0)
print              "The dot product: ${dot}"
The dot product: -4.55733900919406e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.6071726412888

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14047619175933^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14047619175933^2+-0.1323499685412^2+${new_z}^2)
variable           norm          equal     sqrt(0.14047619175933^2+-0.1323499685412^2+0.0869607392810998^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.14047619175933/${norm}
variable           unit_x        equal     0.14047619175933/0.211689028530947
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.1323499685412/${norm}
variable           unit_y        equal     -0.1323499685412/0.211689028530947
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0869607392810998/${norm}
variable           unit_z        equal     0.0869607392810998/0.211689028530947
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.3061125056441+${delta}*${unit_x}
variable           x_new         equal     1.3061125056441+0.03*${unit_x}
variable           x_new         equal     1.3061125056441+0.03*0.663596940919371
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.89233298672114+${delta}*${unit_y}
variable           y_new         equal     3.89233298672114+0.03*${unit_y}
variable           y_new         equal     3.89233298672114+0.03*-0.625209390678703
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4078290622138+${delta}*${unit_z}
variable           z_new         equal     31.4078290622138+0.03*${unit_z}
variable           z_new         equal     31.4078290622138+0.03*0.410794739267212

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32602041387168  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32602041387168  y  3.87357670500078  z   ${z_new}
set                atom          288751    x  1.32602041387168  y  3.87357670500078  z   31.4201529043918
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14047619175933  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14047619175933  -0.1323499685412  ${new_z}
fix                hold    carbon   planeforce   0.14047619175933  -0.1323499685412  0.0869607392810998
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1631   -1152449.2            0   -1152449.2 -0.049968464 -0.067427241 -0.021901995 
    1826   -1152449.2            0   -1152449.2 1.1758023e-05 1.4539222e-06 -1.6781087e-05 
Loop time of 2.29012 on 104 procs for 195 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.22918493   -1152449.2326965   -1152449.2326965
  Force two-norm initial, final = 0.26340913 6.1838428e-05
  Force max component initial, final = 0.12929581 1.7087947e-05
  Final line search alpha, max atom move = 1.0000000 1.7087947e-05
  Iterations, force evaluations = 195 390

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59021    | 1.64       | 2.1543     |  34.7 | 71.61
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037607   | 0.37548    | 1.1186     |  50.4 | 16.40
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5005e-05 | 0.0032076  | 0.0068896  |   2.7 |  0.14
Other   |            | 0.2714     |            |       | 11.85

Nlocal:        2776.45 ave        3946 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115003 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.31841365240238-${x_0}
variable           new_x         equal     1.31841365240238-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.86115554800148-${y_0}
variable           new_y         equal     3.86115554800148-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4135364604652-${z_0}
variable           new_z         equal     31.4135364604652-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15277733851761*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15277733851761*0.15277733851761+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15277733851761*0.15277733851761+-0.16352740726086*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15277733851761*0.15277733851761+-0.16352740726086*-0.16352740726086+${new_z}*${new_z})
variable           module        equal     sqrt(0.15277733851761*0.15277733851761+-0.16352740726086*-0.16352740726086+0.0926681375324989*${new_z})
variable           module        equal     sqrt(0.15277733851761*0.15277733851761+-0.16352740726086*-0.16352740726086+0.0926681375324989*0.0926681375324989)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.15277733851761/${module}
variable           unitx         equal     0.15277733851761/0.24221790149311
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.16352740726086/${module}
variable           unity         equal     -0.16352740726086/0.24221790149311
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0926681375324989/${module}
variable           unitz         equal     0.0926681375324989/0.24221790149311
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.17580228819193e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.17580228819193e-05*1.17580228819193e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.17580228819193e-05*1.17580228819193e-05+1.4539221737778e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.17580228819193e-05*1.17580228819193e-05+1.4539221737778e-06*1.4539221737778e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.17580228819193e-05*1.17580228819193e-05+1.4539221737778e-06*1.4539221737778e-06+-1.67810869037762e-05*${fz})
variable           f_module      equal     sqrt(1.17580228819193e-05*1.17580228819193e-05+1.4539221737778e-06*1.4539221737778e-06+-1.67810869037762e-05*-1.67810869037762e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630743382614748*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630743382614748*0.630743382614748+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630743382614748*0.630743382614748+-0.675125192039167*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630743382614748*0.630743382614748+-0.675125192039167*-0.675125192039167+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.630743382614748*0.630743382614748+-0.675125192039167*-0.675125192039167+0.382581704164978*${unitz})
variable           dir_module    equal     sqrt(0.630743382614748*0.630743382614748+-0.675125192039167*-0.675125192039167+0.382581704164978*0.382581704164978)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.17580228819193e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.17580228819193e-05*0.630743382614748+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.17580228819193e-05*0.630743382614748+1.4539221737778e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.17580228819193e-05*0.630743382614748+1.4539221737778e-06*-0.675125192039167+${fz}*${unitz}
variable           dot      equal     1.17580228819193e-05*0.630743382614748+1.4539221737778e-06*-0.675125192039167+-1.67810869037762e-05*${unitz}
variable           dot      equal     1.17580228819193e-05*0.630743382614748+1.4539221737778e-06*-0.675125192039167+-1.67810869037762e-05*0.382581704164978
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.45788132343562e-08/${f_module}*${dir_module}
variable           cos      equal     1.45788132343562e-08/2.05419052050006e-05*${dir_module}
variable           cos      equal     1.45788132343562e-08/2.05419052050006e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000709710861230495)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57008661587409/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9593365595634-90.0)
print              "The dot product: ${dot}"
The dot product: 1.45788132343562e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9593365595634

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15277733851761^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15277733851761^2+-0.16352740726086^2+${new_z}^2)
variable           norm          equal     sqrt(0.15277733851761^2+-0.16352740726086^2+0.0926681375324989^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.15277733851761/${norm}
variable           unit_x        equal     0.15277733851761/0.24221790149311
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.16352740726086/${norm}
variable           unit_y        equal     -0.16352740726086/0.24221790149311
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0926681375324989/${norm}
variable           unit_z        equal     0.0926681375324989/0.24221790149311
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.31841365240238+${delta}*${unit_x}
variable           x_new         equal     1.31841365240238+0.03*${unit_x}
variable           x_new         equal     1.31841365240238+0.03*0.630743382614748
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.86115554800148+${delta}*${unit_y}
variable           y_new         equal     3.86115554800148+0.03*${unit_y}
variable           y_new         equal     3.86115554800148+0.03*-0.675125192039167
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4135364604652+${delta}*${unit_z}
variable           z_new         equal     31.4135364604652+0.03*${unit_z}
variable           z_new         equal     31.4135364604652+0.03*0.382581704164978

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33733595388082  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33733595388082  y  3.84090179224031  z   ${z_new}
set                atom          288751    x  1.33733595388082  y  3.84090179224031  z   31.4250139115901
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15277733851761  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15277733851761  -0.16352740726086  ${new_z}
fix                hold    carbon   planeforce   0.15277733851761  -0.16352740726086  0.0926681375324989
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1826   -1152449.2            0   -1152449.2 -0.067362218  -0.06777023 -0.0085344296 
    1941   -1152449.2            0   -1152449.2 4.7743005e-05 4.4937554e-06 -7.0781578e-05 
Loop time of 1.35057 on 104 procs for 115 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.20131216    -1152449.204929    -1152449.204929
  Force two-norm initial, final = 0.26420181 0.00027732136
  Force max component initial, final = 0.12254088 7.0781578e-05
  Final line search alpha, max atom move = 1.0000000 7.0781578e-05
  Iterations, force evaluations = 115 230

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.34896    | 0.96757    | 1.2741     |  26.6 | 71.64
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.021853   | 0.22119    | 0.65332    |  38.3 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.3944e-05 | 0.0018965  | 0.0040643  |   2.1 |  0.14
Other   |            | 0.1599     |            |       | 11.84

Nlocal:        2776.45 ave        3942 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114883 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238194
Ave neighs/atom = 28.530443
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32583672118878-${x_0}
variable           new_x         equal     1.32583672118878-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.82790492561227-${y_0}
variable           new_y         equal     3.82790492561227-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4210371214406-${z_0}
variable           new_z         equal     31.4210371214406-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16020040730401*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16020040730401*0.16020040730401+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16020040730401*0.16020040730401+-0.19677802965007*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16020040730401*0.16020040730401+-0.19677802965007*-0.19677802965007+${new_z}*${new_z})
variable           module        equal     sqrt(0.16020040730401*0.16020040730401+-0.19677802965007*-0.19677802965007+0.100168798507902*${new_z})
variable           module        equal     sqrt(0.16020040730401*0.16020040730401+-0.19677802965007*-0.19677802965007+0.100168798507902*0.100168798507902)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16020040730401/${module}
variable           unitx         equal     0.16020040730401/0.272799471494816
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.19677802965007/${module}
variable           unity         equal     -0.19677802965007/0.272799471494816
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.100168798507902/${module}
variable           unitz         equal     0.100168798507902/0.272799471494816
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.7743004659165e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.7743004659165e-05*4.7743004659165e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.7743004659165e-05*4.7743004659165e-05+4.4937554031422e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.7743004659165e-05*4.7743004659165e-05+4.4937554031422e-06*4.4937554031422e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.7743004659165e-05*4.7743004659165e-05+4.4937554031422e-06*4.4937554031422e-06+-7.07815781062803e-05*${fz})
variable           f_module      equal     sqrt(4.7743004659165e-05*4.7743004659165e-05+4.4937554031422e-06*4.4937554031422e-06+-7.07815781062803e-05*-7.07815781062803e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.587246032502135*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.587246032502135*0.587246032502135+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.587246032502135*0.587246032502135+-0.721328485615521*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.587246032502135*0.587246032502135+-0.721328485615521*-0.721328485615521+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.587246032502135*0.587246032502135+-0.721328485615521*-0.721328485615521+0.367188389182072*${unitz})
variable           dir_module    equal     sqrt(0.587246032502135*0.587246032502135+-0.721328485615521*-0.721328485615521+0.367188389182072*0.367188389182072)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.7743004659165e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.7743004659165e-05*0.587246032502135+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.7743004659165e-05*0.587246032502135+4.4937554031422e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.7743004659165e-05*0.587246032502135+4.4937554031422e-06*-0.721328485615521+${fz}*${unitz}
variable           dot      equal     4.7743004659165e-05*0.587246032502135+4.4937554031422e-06*-0.721328485615521+-7.07815781062803e-05*${unitz}
variable           dot      equal     4.7743004659165e-05*0.587246032502135+4.4937554031422e-06*-0.721328485615521+-7.07815781062803e-05*0.367188389182072
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.1947573624596e-06/${f_module}*${dir_module}
variable           cos      equal     -1.1947573624596e-06/8.54963164745931e-05*${dir_module}
variable           cos      equal     -1.1947573624596e-06/8.54963164745931e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.01397437236743)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58477115402872/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8006986199226-90.0)
print              "The dot product: ${dot}"
The dot product: -1.1947573624596e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8006986199226

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16020040730401^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16020040730401^2+-0.19677802965007^2+${new_z}^2)
variable           norm          equal     sqrt(0.16020040730401^2+-0.19677802965007^2+0.100168798507902^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16020040730401/${norm}
variable           unit_x        equal     0.16020040730401/0.272799471494816
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.19677802965007/${norm}
variable           unit_y        equal     -0.19677802965007/0.272799471494816
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.100168798507902/${norm}
variable           unit_z        equal     0.100168798507902/0.272799471494816
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32583672118878+${delta}*${unit_x}
variable           x_new         equal     1.32583672118878+0.03*${unit_x}
variable           x_new         equal     1.32583672118878+0.03*0.587246032502135
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.82790492561227+${delta}*${unit_y}
variable           y_new         equal     3.82790492561227+0.03*${unit_y}
variable           y_new         equal     3.82790492561227+0.03*-0.721328485615521
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4210371214406+${delta}*${unit_z}
variable           z_new         equal     31.4210371214406+0.03*${unit_z}
variable           z_new         equal     31.4210371214406+0.03*0.367188389182072

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34345410216384  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34345410216384  y  3.8062650710438  z   ${z_new}
set                atom          288751    x  1.34345410216384  y  3.8062650710438  z   31.4320527731161
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16020040730401  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16020040730401  -0.19677802965007  ${new_z}
fix                hold    carbon   planeforce   0.16020040730401  -0.19677802965007  0.100168798507902
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1941   -1152449.2            0   -1152449.2 -0.078654441 -0.063763832 0.0005306254 
    2000   -1152449.2            0   -1152449.2 0.0003507413 0.0002369999 -9.5364284e-05 
    2118   -1152449.2            0   -1152449.2 3.3160866e-05 1.6538162e-05 -2.0545691e-05 
Loop time of 2.06234 on 104 procs for 177 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.17077926  -1152449.17442316  -1152449.17442316
  Force two-norm initial, final = 0.26402415 0.00017865042
  Force max component initial, final = 0.13633583 3.3160866e-05
  Final line search alpha, max atom move = 1.0000000 3.3160866e-05
  Iterations, force evaluations = 177 354

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54553    | 1.4914     | 1.9383     |  32.8 | 72.32
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032749   | 0.33554    | 1.0065     |  48.5 | 16.27
Output  | 0.00010475 | 0.00010813 | 0.00021563 |   0.0 |  0.01
Modify  | 2.2101e-05 | 0.0029158  | 0.0062677  |   2.5 |  0.14
Other   |            | 0.2324     |            |       | 11.27

Nlocal:        2776.45 ave        3931 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114523 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32969964663306-${x_0}
variable           new_x         equal     1.32969964663306-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.79388258294836-${y_0}
variable           new_y         equal     3.79388258294836-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4297253794093-${z_0}
variable           new_z         equal     31.4297253794093-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16406333274829*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16406333274829*0.16406333274829+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16406333274829*0.16406333274829+-0.23080037231398*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16406333274829*0.16406333274829+-0.23080037231398*-0.23080037231398+${new_z}*${new_z})
variable           module        equal     sqrt(0.16406333274829*0.16406333274829+-0.23080037231398*-0.23080037231398+0.108857056476602*${new_z})
variable           module        equal     sqrt(0.16406333274829*0.16406333274829+-0.23080037231398*-0.23080037231398+0.108857056476602*0.108857056476602)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16406333274829/${module}
variable           unitx         equal     0.16406333274829/0.303373446032276
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.23080037231398/${module}
variable           unity         equal     -0.23080037231398/0.303373446032276
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.108857056476602/${module}
variable           unitz         equal     0.108857056476602/0.303373446032276
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31608659178322e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31608659178322e-05*3.31608659178322e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31608659178322e-05*3.31608659178322e-05+1.65381624186068e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31608659178322e-05*3.31608659178322e-05+1.65381624186068e-05*1.65381624186068e-05+${fz}*${fz})
variable           f_module      equal     sqrt(3.31608659178322e-05*3.31608659178322e-05+1.65381624186068e-05*1.65381624186068e-05+-2.05456912970651e-05*${fz})
variable           f_module      equal     sqrt(3.31608659178322e-05*3.31608659178322e-05+1.65381624186068e-05*1.65381624186068e-05+-2.05456912970651e-05*-2.05456912970651e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.540796615175196*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.540796615175196*0.540796615175196+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.540796615175196*0.540796615175196+-0.760779743028086*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.540796615175196*0.540796615175196+-0.760779743028086*-0.760779743028086+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.540796615175196*0.540796615175196+-0.760779743028086*-0.760779743028086+0.35882196645853*${unitz})
variable           dir_module    equal     sqrt(0.540796615175196*0.540796615175196+-0.760779743028086*-0.760779743028086+0.35882196645853*0.35882196645853)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31608659178322e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31608659178322e-05*0.540796615175196+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31608659178322e-05*0.540796615175196+1.65381624186068e-05*${unity}+${fz}*${unitz}
variable           dot      equal     3.31608659178322e-05*0.540796615175196+1.65381624186068e-05*-0.760779743028086+${fz}*${unitz}
variable           dot      equal     3.31608659178322e-05*0.540796615175196+1.65381624186068e-05*-0.760779743028086+-2.05456912970651e-05*${unitz}
variable           dot      equal     3.31608659178322e-05*0.540796615175196+1.65381624186068e-05*-0.760779743028086+-2.05456912970651e-05*0.35882196645853
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.02086026380507e-06/${f_module}*${dir_module}
variable           cos      equal     -2.02086026380507e-06/4.23707360743115e-05*${dir_module}
variable           cos      equal     -2.02086026380507e-06/4.23707360743115e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0476947169447517)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61850914482094/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.733743101568-90.0)
print              "The dot product: ${dot}"
The dot product: -2.02086026380507e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.733743101568

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16406333274829^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16406333274829^2+-0.23080037231398^2+${new_z}^2)
variable           norm          equal     sqrt(0.16406333274829^2+-0.23080037231398^2+0.108857056476602^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16406333274829/${norm}
variable           unit_x        equal     0.16406333274829/0.303373446032276
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.23080037231398/${norm}
variable           unit_y        equal     -0.23080037231398/0.303373446032276
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.108857056476602/${norm}
variable           unit_z        equal     0.108857056476602/0.303373446032276
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32969964663306+${delta}*${unit_x}
variable           x_new         equal     1.32969964663306+0.03*${unit_x}
variable           x_new         equal     1.32969964663306+0.03*0.540796615175196
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.79388258294836+${delta}*${unit_y}
variable           y_new         equal     3.79388258294836+0.03*${unit_y}
variable           y_new         equal     3.79388258294836+0.03*-0.760779743028086
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4297253794093+${delta}*${unit_z}
variable           z_new         equal     31.4297253794093+0.03*${unit_z}
variable           z_new         equal     31.4297253794093+0.03*0.35882196645853

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34592354508832  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34592354508832  y  3.77105919065752  z   ${z_new}
set                atom          288751    x  1.34592354508832  y  3.77105919065752  z   31.4404900384031
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16406333274829  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16406333274829  -0.23080037231398  ${new_z}
fix                hold    carbon   planeforce   0.16406333274829  -0.23080037231398  0.108857056476602
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2118   -1152449.1            0   -1152449.1 -0.083312956 -0.056547022 0.0056728288 
    2362   -1152449.1            0   -1152449.1 -1.8633169e-06 4.7146845e-07 3.8079026e-06 
Loop time of 2.8407 on 104 procs for 244 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.1373236    -1152449.140969    -1152449.140969
  Force two-norm initial, final = 0.26317145 1.6524297e-05
  Force max component initial, final = 0.14957233 3.8079026e-06
  Final line search alpha, max atom move = 1.0000000 3.8079026e-06
  Iterations, force evaluations = 244 488

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.73823    | 2.0511     | 2.6827     |  38.7 | 72.20
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.045466   | 0.4654     | 1.3788     |  56.1 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9717e-05 | 0.0040101  | 0.0085717  |   3.0 |  0.14
Other   |            | 0.3202     |            |       | 11.27

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114497 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.33109372651973-${x_0}
variable           new_x         equal     1.33109372651973-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.75984091226394-${y_0}
variable           new_y         equal     3.75984091226394-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4390555574739-${z_0}
variable           new_z         equal     31.4390555574739-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16545741263496*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16545741263496*0.16545741263496+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16545741263496*0.16545741263496+-0.2648420429984*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16545741263496*0.16545741263496+-0.2648420429984*-0.2648420429984+${new_z}*${new_z})
variable           module        equal     sqrt(0.16545741263496*0.16545741263496+-0.2648420429984*-0.2648420429984+0.1181872345412*${new_z})
variable           module        equal     sqrt(0.16545741263496*0.16545741263496+-0.2648420429984*-0.2648420429984+0.1181872345412*0.1181872345412)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16545741263496/${module}
variable           unitx         equal     0.16545741263496/0.333894722246277
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.2648420429984/${module}
variable           unity         equal     -0.2648420429984/0.333894722246277
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1181872345412/${module}
variable           unitz         equal     0.1181872345412/0.333894722246277
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.86331687219311e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.86331687219311e-06*-1.86331687219311e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.86331687219311e-06*-1.86331687219311e-06+4.71468452580986e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.86331687219311e-06*-1.86331687219311e-06+4.71468452580986e-07*4.71468452580986e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.86331687219311e-06*-1.86331687219311e-06+4.71468452580986e-07*4.71468452580986e-07+3.8079026185344e-06*${fz})
variable           f_module      equal     sqrt(-1.86331687219311e-06*-1.86331687219311e-06+4.71468452580986e-07*4.71468452580986e-07+3.8079026185344e-06*3.8079026185344e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.495537669843492*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.495537669843492*0.495537669843492+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.495537669843492*0.495537669843492+-0.793190264334443*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.495537669843492*0.495537669843492+-0.793190264334443*-0.793190264334443+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.495537669843492*0.495537669843492+-0.793190264334443*-0.793190264334443+0.353965566589658*${unitz})
variable           dir_module    equal     sqrt(0.495537669843492*0.495537669843492+-0.793190264334443*-0.793190264334443+0.353965566589658*0.353965566589658)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.86331687219311e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.86331687219311e-06*0.495537669843492+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.86331687219311e-06*0.495537669843492+4.71468452580986e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.86331687219311e-06*0.495537669843492+4.71468452580986e-07*-0.793190264334443+${fz}*${unitz}
variable           dot      equal     -1.86331687219311e-06*0.495537669843492+4.71468452580986e-07*-0.793190264334443+3.8079026185344e-06*${unitz}
variable           dot      equal     -1.86331687219311e-06*0.495537669843492+4.71468452580986e-07*-0.793190264334443+3.8079026185344e-06*0.353965566589658
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.05585203330706e-08/${f_module}*${dir_module}
variable           cos      equal     5.05585203330706e-08/4.26548410150826e-06*${dir_module}
variable           cos      equal     5.05585203330706e-08/4.26548410150826e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.011852938407435)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55894311082912/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.3208607515039-90.0)
print              "The dot product: ${dot}"
The dot product: 5.05585203330706e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.3208607515039

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16545741263496^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16545741263496^2+-0.2648420429984^2+${new_z}^2)
variable           norm          equal     sqrt(0.16545741263496^2+-0.2648420429984^2+0.1181872345412^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16545741263496/${norm}
variable           unit_x        equal     0.16545741263496/0.333894722246277
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.2648420429984/${norm}
variable           unit_y        equal     -0.2648420429984/0.333894722246277
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1181872345412/${norm}
variable           unit_z        equal     0.1181872345412/0.333894722246277
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.33109372651973+${delta}*${unit_x}
variable           x_new         equal     1.33109372651973+0.03*${unit_x}
variable           x_new         equal     1.33109372651973+0.03*0.495537669843492
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.75984091226394+${delta}*${unit_y}
variable           y_new         equal     3.75984091226394+0.03*${unit_y}
variable           y_new         equal     3.75984091226394+0.03*-0.793190264334443
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4390555574739+${delta}*${unit_z}
variable           z_new         equal     31.4390555574739+0.03*${unit_z}
variable           z_new         equal     31.4390555574739+0.03*0.353965566589658

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34595985661503  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34595985661503  y  3.73604520433391  z   ${z_new}
set                atom          288751    x  1.34595985661503  y  3.73604520433391  z   31.4496745244716
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16545741263496  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16545741263496  -0.2648420429984  ${new_z}
fix                hold    carbon   planeforce   0.16545741263496  -0.2648420429984  0.1181872345412
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2362   -1152449.1            0   -1152449.1 -0.083708147 -0.048593058 0.0082974151 
    2557   -1152449.1            0   -1152449.1 1.8392177e-05 -1.0836854e-06 -2.8176711e-05 
Loop time of 2.3096 on 104 procs for 195 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.10077424  -1152449.10439477  -1152449.10439477
  Force two-norm initial, final = 0.26259764 0.0001084608
  Force max component initial, final = 0.16186946 2.8176711e-05
  Final line search alpha, max atom move = 1.0000000 2.8176711e-05
  Iterations, force evaluations = 195 390

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59365    | 1.6409     | 2.1615     |  34.5 | 71.05
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036708   | 0.37747    | 1.1144     |  49.6 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3483e-05 | 0.0032102  | 0.0069249  |   2.7 |  0.14
Other   |            | 0.288      |            |       | 12.47

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114498 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.33080349355085-${x_0}
variable           new_x         equal     1.33080349355085-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.72613068176187-${y_0}
variable           new_y         equal     3.72613068176187-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4486756873619-${z_0}
variable           new_z         equal     31.4486756873619-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16516717966608*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16516717966608*0.16516717966608+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16516717966608*0.16516717966608+-0.29855227350047*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16516717966608*0.16516717966608+-0.29855227350047*-0.29855227350047+${new_z}*${new_z})
variable           module        equal     sqrt(0.16516717966608*0.16516717966608+-0.29855227350047*-0.29855227350047+0.127807364429199*${new_z})
variable           module        equal     sqrt(0.16516717966608*0.16516717966608+-0.29855227350047*-0.29855227350047+0.127807364429199*0.127807364429199)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16516717966608/${module}
variable           unitx         equal     0.16516717966608/0.364346510417603
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.29855227350047/${module}
variable           unity         equal     -0.29855227350047/0.364346510417603
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.127807364429199/${module}
variable           unitz         equal     0.127807364429199/0.364346510417603
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83921774435358e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83921774435358e-05*1.83921774435358e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83921774435358e-05*1.83921774435358e-05+-1.08368544679494e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83921774435358e-05*1.83921774435358e-05+-1.08368544679494e-06*-1.08368544679494e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.83921774435358e-05*1.83921774435358e-05+-1.08368544679494e-06*-1.08368544679494e-06+-2.81767110728641e-05*${fz})
variable           f_module      equal     sqrt(1.83921774435358e-05*1.83921774435358e-05+-1.08368544679494e-06*-1.08368544679494e-06+-2.81767110728641e-05*-2.81767110728641e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.453324445118935*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.453324445118935*0.453324445118935+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.453324445118935*0.453324445118935+-0.819418506734917*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.453324445118935*0.453324445118935+-0.819418506734917*-0.819418506734917+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.453324445118935*0.453324445118935+-0.819418506734917*-0.819418506734917+0.350785202478569*${unitz})
variable           dir_module    equal     sqrt(0.453324445118935*0.453324445118935+-0.819418506734917*-0.819418506734917+0.350785202478569*0.350785202478569)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.83921774435358e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.83921774435358e-05*0.453324445118935+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.83921774435358e-05*0.453324445118935+-1.08368544679494e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.83921774435358e-05*0.453324445118935+-1.08368544679494e-06*-0.819418506734917+${fz}*${unitz}
variable           dot      equal     1.83921774435358e-05*0.453324445118935+-1.08368544679494e-06*-0.819418506734917+-2.81767110728641e-05*${unitz}
variable           dot      equal     1.83921774435358e-05*0.453324445118935+-1.08368544679494e-06*-0.819418506734917+-2.81767110728641e-05*0.350785202478569
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.5835775417184e-07/${f_module}*${dir_module}
variable           cos      equal     -6.5835775417184e-07/3.36656146853992e-05*${dir_module}
variable           cos      equal     -6.5835775417184e-07/3.36656146853992e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.019555791876195)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59035336533595/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.120535768177-90.0)
print              "The dot product: ${dot}"
The dot product: -6.5835775417184e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.120535768177

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16516717966608^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16516717966608^2+-0.29855227350047^2+${new_z}^2)
variable           norm          equal     sqrt(0.16516717966608^2+-0.29855227350047^2+0.127807364429199^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16516717966608/${norm}
variable           unit_x        equal     0.16516717966608/0.364346510417603
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.29855227350047/${norm}
variable           unit_y        equal     -0.29855227350047/0.364346510417603
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.127807364429199/${norm}
variable           unit_z        equal     0.127807364429199/0.364346510417603
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.33080349355085+${delta}*${unit_x}
variable           x_new         equal     1.33080349355085+0.03*${unit_x}
variable           x_new         equal     1.33080349355085+0.03*0.453324445118935
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.72613068176187+${delta}*${unit_y}
variable           y_new         equal     3.72613068176187+0.03*${unit_y}
variable           y_new         equal     3.72613068176187+0.03*-0.819418506734917
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4486756873619+${delta}*${unit_z}
variable           z_new         equal     31.4486756873619+0.03*${unit_z}
variable           z_new         equal     31.4486756873619+0.03*0.350785202478569

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34440322690442  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34440322690442  y  3.70154812655982  z   ${z_new}
set                atom          288751    x  1.34440322690442  y  3.70154812655982  z   31.4591992434363
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16516717966608  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16516717966608  -0.29855227350047  ${new_z}
fix                hold    carbon   planeforce   0.16516717966608  -0.29855227350047  0.127807364429199
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2557   -1152449.1            0   -1152449.1  -0.08136285 -0.040982677 0.0094126113 
    2760   -1152449.1            0   -1152449.1 1.0446325e-05 5.9869183e-07 -1.2101409e-05 
Loop time of 2.38884 on 104 procs for 203 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.06098917   -1152449.0645851   -1152449.0645851
  Force two-norm initial, final = 0.26254922 9.3641486e-05
  Force max component initial, final = 0.1731839 1.2484651e-05
  Final line search alpha, max atom move = 1.0000000 1.2484651e-05
  Iterations, force evaluations = 203 406

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61544    | 1.7091     | 2.2297     |  35.4 | 71.55
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040316   | 0.38986    | 1.1488     |  51.0 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.423e-05  | 0.0033486  | 0.0071727  |   2.7 |  0.14
Other   |            | 0.2865     |            |       | 11.99

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114488 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32894262512989-${x_0}
variable           new_x         equal     1.32894262512989-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.69258851670823-${y_0}
variable           new_y         equal     3.69258851670823-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4582499405504-${z_0}
variable           new_z         equal     31.4582499405504-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16330631124512*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16330631124512*0.16330631124512+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16330631124512*0.16330631124512+-0.33209443855411*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16330631124512*0.16330631124512+-0.33209443855411*-0.33209443855411+${new_z}*${new_z})
variable           module        equal     sqrt(0.16330631124512*0.16330631124512+-0.33209443855411*-0.33209443855411+0.137381617617699*${new_z})
variable           module        equal     sqrt(0.16330631124512*0.16330631124512+-0.33209443855411*-0.33209443855411+0.137381617617699*0.137381617617699)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16330631124512/${module}
variable           unitx         equal     0.16330631124512/0.394752297359133
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.33209443855411/${module}
variable           unity         equal     -0.33209443855411/0.394752297359133
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.137381617617699/${module}
variable           unitz         equal     0.137381617617699/0.394752297359133
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.04463250143041e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.04463250143041e-05*1.04463250143041e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.04463250143041e-05*1.04463250143041e-05+5.98691830369081e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.04463250143041e-05*1.04463250143041e-05+5.98691830369081e-07*5.98691830369081e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.04463250143041e-05*1.04463250143041e-05+5.98691830369081e-07*5.98691830369081e-07+-1.21014093391632e-05*${fz})
variable           f_module      equal     sqrt(1.04463250143041e-05*1.04463250143041e-05+5.98691830369081e-07*5.98691830369081e-07+-1.21014093391632e-05*-1.21014093391632e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.413693124365909*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.413693124365909*0.413693124365909+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.413693124365909*0.413693124365909+-0.841272972382428*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.413693124365909*0.413693124365909+-0.841272972382428*-0.841272972382428+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.413693124365909*0.413693124365909+-0.841272972382428*-0.841272972382428+0.348019805170921*${unitz})
variable           dir_module    equal     sqrt(0.413693124365909*0.413693124365909+-0.841272972382428*-0.841272972382428+0.348019805170921*0.348019805170921)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.04463250143041e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.04463250143041e-05*0.413693124365909+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.04463250143041e-05*0.413693124365909+5.98691830369081e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.04463250143041e-05*0.413693124365909+5.98691830369081e-07*-0.841272972382428+${fz}*${unitz}
variable           dot      equal     1.04463250143041e-05*0.413693124365909+5.98691830369081e-07*-0.841272972382428+-1.21014093391632e-05*${unitz}
variable           dot      equal     1.04463250143041e-05*0.413693124365909+5.98691830369081e-07*-0.841272972382428+-1.21014093391632e-05*0.348019805170921
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.93620542875602e-07/${f_module}*${dir_module}
variable           cos      equal     -3.93620542875602e-07/1.59977575367991e-05*${dir_module}
variable           cos      equal     -3.93620542875602e-07/1.59977575367991e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0246047323801583)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59540354243982/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.4098896020224-90.0)
print              "The dot product: ${dot}"
The dot product: -3.93620542875602e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.4098896020224

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16330631124512^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16330631124512^2+-0.33209443855411^2+${new_z}^2)
variable           norm          equal     sqrt(0.16330631124512^2+-0.33209443855411^2+0.137381617617699^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16330631124512/${norm}
variable           unit_x        equal     0.16330631124512/0.394752297359133
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.33209443855411/${norm}
variable           unit_y        equal     -0.33209443855411/0.394752297359133
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.137381617617699/${norm}
variable           unit_z        equal     0.137381617617699/0.394752297359133
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32894262512989+${delta}*${unit_x}
variable           x_new         equal     1.32894262512989+0.03*${unit_x}
variable           x_new         equal     1.32894262512989+0.03*0.413693124365909
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.69258851670823+${delta}*${unit_y}
variable           y_new         equal     3.69258851670823+0.03*${unit_y}
variable           y_new         equal     3.69258851670823+0.03*-0.841272972382428
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4582499405504+${delta}*${unit_z}
variable           z_new         equal     31.4582499405504+0.03*${unit_z}
variable           z_new         equal     31.4582499405504+0.03*0.348019805170921

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34135341886087  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34135341886087  y  3.66735032753676  z   ${z_new}
set                atom          288751    x  1.34135341886087  y  3.66735032753676  z   31.4686905347055
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16330631124512  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16330631124512  -0.33209443855411  ${new_z}
fix                hold    carbon   planeforce   0.16330631124512  -0.33209443855411  0.137381617617699
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2760     -1152449            0     -1152449 -0.079399809 -0.035361383 0.0089034568 
    2959     -1152449            0     -1152449 2.2563221e-05 -1.9715942e-06 -3.1586991e-05 
Loop time of 2.3363 on 104 procs for 199 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.01790882  -1152449.02164519  -1152449.02164519
  Force two-norm initial, final = 0.26387121 0.00010135327
  Force max component initial, final = 0.18389603 3.1586991e-05
  Final line search alpha, max atom move = 1.0000000 3.1586991e-05
  Iterations, force evaluations = 199 398

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61072    | 1.675      | 2.2        |  34.8 | 71.69
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.041046   | 0.38352    | 1.1372     |  50.4 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3702e-05 | 0.0032743  | 0.0070364  |   2.7 |  0.14
Other   |            | 0.2745     |            |       | 11.75

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114488 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32237634062031-${x_0}
variable           new_x         equal     1.32237634062031-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.65709252923079-${y_0}
variable           new_y         equal     3.65709252923079-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4664523813852-${z_0}
variable           new_z         equal     31.4664523813852-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15674002673554*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15674002673554*0.15674002673554+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15674002673554*0.15674002673554+-0.36759042603155*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15674002673554*0.15674002673554+-0.36759042603155*-0.36759042603155+${new_z}*${new_z})
variable           module        equal     sqrt(0.15674002673554*0.15674002673554+-0.36759042603155*-0.36759042603155+0.145584058452499*${new_z})
variable           module        equal     sqrt(0.15674002673554*0.15674002673554+-0.36759042603155*-0.36759042603155+0.145584058452499*0.145584058452499)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.15674002673554/${module}
variable           unitx         equal     0.15674002673554/0.425305625834664
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.36759042603155/${module}
variable           unity         equal     -0.36759042603155/0.425305625834664
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.145584058452499/${module}
variable           unitz         equal     0.145584058452499/0.425305625834664
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25632211998819e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25632211998819e-05*2.25632211998819e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25632211998819e-05*2.25632211998819e-05+-1.9715941623029e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25632211998819e-05*2.25632211998819e-05+-1.9715941623029e-06*-1.9715941623029e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.25632211998819e-05*2.25632211998819e-05+-1.9715941623029e-06*-1.9715941623029e-06+-3.15869907173433e-05*${fz})
variable           f_module      equal     sqrt(2.25632211998819e-05*2.25632211998819e-05+-1.9715941623029e-06*-1.9715941623029e-06+-3.15869907173433e-05*-3.15869907173433e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.368535042131025*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.368535042131025*0.368535042131025+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.368535042131025*0.368535042131025+-0.864297116479831*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.368535042131025*0.368535042131025+-0.864297116479831*-0.864297116479831+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.368535042131025*0.368535042131025+-0.864297116479831*-0.864297116479831+0.342304567842924*${unitz})
variable           dir_module    equal     sqrt(0.368535042131025*0.368535042131025+-0.864297116479831*-0.864297116479831+0.342304567842924*0.342304567842924)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.25632211998819e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.25632211998819e-05*0.368535042131025+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.25632211998819e-05*0.368535042131025+-1.9715941623029e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.25632211998819e-05*0.368535042131025+-1.9715941623029e-06*-0.864297116479831+${fz}*${unitz}
variable           dot      equal     2.25632211998819e-05*0.368535042131025+-1.9715941623029e-06*-0.864297116479831+-3.15869907173433e-05*${unitz}
variable           dot      equal     2.25632211998819e-05*0.368535042131025+-1.9715941623029e-06*-0.864297116479831+-3.15869907173433e-05*0.342304567842924
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.92990382101674e-07/${f_module}*${dir_module}
variable           cos      equal     -7.92990382101674e-07/3.8868034643305e-05*${dir_module}
variable           cos      equal     -7.92990382101674e-07/3.8868034643305e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0204021219333318)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59119986437899/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.1690365907051-90.0)
print              "The dot product: ${dot}"
The dot product: -7.92990382101674e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.1690365907051

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15674002673554^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15674002673554^2+-0.36759042603155^2+${new_z}^2)
variable           norm          equal     sqrt(0.15674002673554^2+-0.36759042603155^2+0.145584058452499^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.15674002673554/${norm}
variable           unit_x        equal     0.15674002673554/0.425305625834664
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.36759042603155/${norm}
variable           unit_y        equal     -0.36759042603155/0.425305625834664
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.145584058452499/${norm}
variable           unit_z        equal     0.145584058452499/0.425305625834664
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32237634062031+${delta}*${unit_x}
variable           x_new         equal     1.32237634062031+0.03*${unit_x}
variable           x_new         equal     1.32237634062031+0.03*0.368535042131025
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.65709252923079+${delta}*${unit_y}
variable           y_new         equal     3.65709252923079+0.03*${unit_y}
variable           y_new         equal     3.65709252923079+0.03*-0.864297116479831
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4664523813852+${delta}*${unit_z}
variable           z_new         equal     31.4664523813852+0.03*${unit_z}
variable           z_new         equal     31.4664523813852+0.03*0.342304567842924

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33343239188424  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33343239188424  y  3.6311636157364  z   ${z_new}
set                atom          288751    x  1.33343239188424  y  3.6311636157364  z   31.4767215184205
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15674002673554  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15674002673554  -0.36759042603155  ${new_z}
fix                hold    carbon   planeforce   0.15674002673554  -0.36759042603155  0.145584058452499
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2959     -1152449            0     -1152449 -0.090008802 -0.037389726 0.0024994261 
    3000     -1152449            0     -1152449 0.00045978918 0.00012389025 -0.00018220745 
    3168     -1152449            0     -1152449 1.1527294e-05 -3.5247569e-07 -1.3300598e-05 
Loop time of 2.43582 on 104 procs for 209 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.97177726  -1152448.97602582  -1152448.97602582
  Force two-norm initial, final = 0.27119162 6.7280928e-05
  Force max component initial, final = 0.19620118 1.3300598e-05
  Final line search alpha, max atom move = 1.0000000 1.3300598e-05
  Iterations, force evaluations = 209 418

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63376    | 1.7555     | 2.3008     |  35.7 | 72.07
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039191   | 0.3991     | 1.1876     |  51.8 | 16.38
Output  | 0.00010581 | 0.00010789 | 0.00019875 |   0.0 |  0.00
Modify  | 2.4947e-05 | 0.0034369  | 0.0073632  |   2.8 |  0.14
Other   |            | 0.2777     |            |       | 11.40

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114488 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30948227165604-${x_0}
variable           new_x         equal     1.30948227165604-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.61905652510679-${y_0}
variable           new_y         equal     3.61905652510679-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4719372850018-${z_0}
variable           new_z         equal     31.4719372850018-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14384595777127*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14384595777127*0.14384595777127+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14384595777127*0.14384595777127+-0.40562643015555*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14384595777127*0.14384595777127+-0.40562643015555*-0.40562643015555+${new_z}*${new_z})
variable           module        equal     sqrt(0.14384595777127*0.14384595777127+-0.40562643015555*-0.40562643015555+0.1510689620691*${new_z})
variable           module        equal     sqrt(0.14384595777127*0.14384595777127+-0.40562643015555*-0.40562643015555+0.1510689620691*0.1510689620691)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.14384595777127/${module}
variable           unitx         equal     0.14384595777127/0.456120917858965
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.40562643015555/${module}
variable           unity         equal     -0.40562643015555/0.456120917858965
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1510689620691/${module}
variable           unitz         equal     0.1510689620691/0.456120917858965
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.15272942441997e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.15272942441997e-05*1.15272942441997e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.15272942441997e-05*1.15272942441997e-05+-3.52475692109947e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.15272942441997e-05*1.15272942441997e-05+-3.52475692109947e-07*-3.52475692109947e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.15272942441997e-05*1.15272942441997e-05+-3.52475692109947e-07*-3.52475692109947e-07+-1.33005984201936e-05*${fz})
variable           f_module      equal     sqrt(1.15272942441997e-05*1.15272942441997e-05+-3.52475692109947e-07*-3.52475692109947e-07+-1.33005984201936e-05*-1.33005984201936e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.315368035402726*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.315368035402726*0.315368035402726+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.315368035402726*0.315368035402726+-0.889295829841708*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.315368035402726*0.315368035402726+-0.889295829841708*-0.889295829841708+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.315368035402726*0.315368035402726+-0.889295829841708*-0.889295829841708+0.331203757938178*${unitz})
variable           dir_module    equal     sqrt(0.315368035402726*0.315368035402726+-0.889295829841708*-0.889295829841708+0.331203757938178*0.331203757938178)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.15272942441997e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.15272942441997e-05*0.315368035402726+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.15272942441997e-05*0.315368035402726+-3.52475692109947e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.15272942441997e-05*0.315368035402726+-3.52475692109947e-07*-0.889295829841708+${fz}*${unitz}
variable           dot      equal     1.15272942441997e-05*0.315368035402726+-3.52475692109947e-07*-0.889295829841708+-1.33005984201936e-05*${unitz}
variable           dot      equal     1.15272942441997e-05*0.315368035402726+-3.52475692109947e-07*-0.889295829841708+-1.33005984201936e-05*0.331203757938178
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.56412877178358e-07/${f_module}*${dir_module}
variable           cos      equal     -4.56412877178358e-07/1.76042230740565e-05*${dir_module}
variable           cos      equal     -4.56412877178358e-07/1.76042230740565e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0259263288847423)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59672556106153/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.4856356894841-90.0)
print              "The dot product: ${dot}"
The dot product: -4.56412877178358e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.4856356894841

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14384595777127^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14384595777127^2+-0.40562643015555^2+${new_z}^2)
variable           norm          equal     sqrt(0.14384595777127^2+-0.40562643015555^2+0.1510689620691^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.14384595777127/${norm}
variable           unit_x        equal     0.14384595777127/0.456120917858965
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.40562643015555/${norm}
variable           unit_y        equal     -0.40562643015555/0.456120917858965
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1510689620691/${norm}
variable           unit_z        equal     0.1510689620691/0.456120917858965
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30948227165604+${delta}*${unit_x}
variable           x_new         equal     1.30948227165604+0.03*${unit_x}
variable           x_new         equal     1.30948227165604+0.03*0.315368035402726
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.61905652510679+${delta}*${unit_y}
variable           y_new         equal     3.61905652510679+0.03*${unit_y}
variable           y_new         equal     3.61905652510679+0.03*-0.889295829841708
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4719372850018+${delta}*${unit_z}
variable           z_new         equal     31.4719372850018+0.03*${unit_z}
variable           z_new         equal     31.4719372850018+0.03*0.331203757938178

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31894331271812  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31894331271812  y  3.59237765021154  z   ${z_new}
set                atom          288751    x  1.31894331271812  y  3.59237765021154  z   31.4818733977399
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14384595777127  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14384595777127  -0.40562643015555  ${new_z}
fix                hold    carbon   planeforce   0.14384595777127  -0.40562643015555  0.1510689620691
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3168   -1152448.9            0   -1152448.9  -0.10285531 -0.039442126 -0.007966217 
    3339   -1152448.9            0   -1152448.9 2.6848969e-05 -1.0589034e-05 -5.3997245e-05 
Loop time of 2.02858 on 104 procs for 171 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.92302747  -1152448.92771114  -1152448.92771114
  Force two-norm initial, final = 0.28173871 0.00020635321
  Force max component initial, final = 0.21052354 5.3997245e-05
  Final line search alpha, max atom move = 1.0000000 5.3997245e-05
  Iterations, force evaluations = 171 342

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.52978    | 1.4436     | 1.8917     |  32.2 | 71.16
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03266    | 0.33193    | 0.98907    |  47.0 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.015e-05  | 0.002818   | 0.0060767  |   2.5 |  0.14
Other   |            | 0.2502     |            |       | 12.34

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29282604017458-${x_0}
variable           new_x         equal     1.29282604017458-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.58037284610929-${y_0}
variable           new_y         equal     3.58037284610929-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4745085377842-${z_0}
variable           new_z         equal     31.4745085377842-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12718972628981*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12718972628981*0.12718972628981+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12718972628981*0.12718972628981+-0.44431010915305*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12718972628981*0.12718972628981+-0.44431010915305*-0.44431010915305+${new_z}*${new_z})
variable           module        equal     sqrt(0.12718972628981*0.12718972628981+-0.44431010915305*-0.44431010915305+0.153640214851499*${new_z})
variable           module        equal     sqrt(0.12718972628981*0.12718972628981+-0.44431010915305*-0.44431010915305+0.153640214851499*0.153640214851499)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12718972628981/${module}
variable           unitx         equal     0.12718972628981/0.487025682268283
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.44431010915305/${module}
variable           unity         equal     -0.44431010915305/0.487025682268283
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.153640214851499/${module}
variable           unitz         equal     0.153640214851499/0.487025682268283
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.68489694437785e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.68489694437785e-05*2.68489694437785e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.68489694437785e-05*2.68489694437785e-05+-1.05890340528015e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.68489694437785e-05*2.68489694437785e-05+-1.05890340528015e-05*-1.05890340528015e-05+${fz}*${fz})
variable           f_module      equal     sqrt(2.68489694437785e-05*2.68489694437785e-05+-1.05890340528015e-05*-1.05890340528015e-05+-5.39972453283757e-05*${fz})
variable           f_module      equal     sqrt(2.68489694437785e-05*2.68489694437785e-05+-1.05890340528015e-05*-1.05890340528015e-05+-5.39972453283757e-05*-5.39972453283757e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.261156096938121*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.261156096938121*0.261156096938121+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.261156096938121*0.261156096938121+-0.912292976180869*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.261156096938121*0.261156096938121+-0.912292976180869*-0.912292976180869+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.261156096938121*0.261156096938121+-0.912292976180869*-0.912292976180869+0.315466351047304*${unitz})
variable           dir_module    equal     sqrt(0.261156096938121*0.261156096938121+-0.912292976180869*-0.912292976180869+0.315466351047304*0.315466351047304)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.68489694437785e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.68489694437785e-05*0.261156096938121+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.68489694437785e-05*0.261156096938121+-1.05890340528015e-05*${unity}+${fz}*${unitz}
variable           dot      equal     2.68489694437785e-05*0.261156096938121+-1.05890340528015e-05*-0.912292976180869+${fz}*${unitz}
variable           dot      equal     2.68489694437785e-05*0.261156096938121+-1.05890340528015e-05*-0.912292976180869+-5.39972453283757e-05*${unitz}
variable           dot      equal     2.68489694437785e-05*0.261156096938121+-1.05890340528015e-05*-0.912292976180869+-5.39972453283757e-05*0.315466351047304
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.62240492689847e-07/${f_module}*${dir_module}
variable           cos      equal     -3.62240492689847e-07/6.1226606188953e-05*${dir_module}
variable           cos      equal     -3.62240492689847e-07/6.1226606188953e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00591639019761976)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57671275150896/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.3389861659227-90.0)
print              "The dot product: ${dot}"
The dot product: -3.62240492689847e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.3389861659227

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12718972628981^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12718972628981^2+-0.44431010915305^2+${new_z}^2)
variable           norm          equal     sqrt(0.12718972628981^2+-0.44431010915305^2+0.153640214851499^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12718972628981/${norm}
variable           unit_x        equal     0.12718972628981/0.487025682268283
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.44431010915305/${norm}
variable           unit_y        equal     -0.44431010915305/0.487025682268283
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.153640214851499/${norm}
variable           unit_z        equal     0.153640214851499/0.487025682268283
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29282604017458+${delta}*${unit_x}
variable           x_new         equal     1.29282604017458+0.03*${unit_x}
variable           x_new         equal     1.29282604017458+0.03*0.261156096938121
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.58037284610929+${delta}*${unit_y}
variable           y_new         equal     3.58037284610929+0.03*${unit_y}
variable           y_new         equal     3.58037284610929+0.03*-0.912292976180869
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4745085377842+${delta}*${unit_z}
variable           z_new         equal     31.4745085377842+0.03*${unit_z}
variable           z_new         equal     31.4745085377842+0.03*0.315466351047304

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30066072308272  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30066072308272  y  3.55300405682386  z   ${z_new}
set                atom          288751    x  1.30066072308272  y  3.55300405682386  z   31.4839725283156
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12718972628981  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12718972628981  -0.44431010915305  ${new_z}
fix                hold    carbon   planeforce   0.12718972628981  -0.44431010915305  0.153640214851499
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3339   -1152448.9            0   -1152448.9    -0.105289 -0.036407821 -0.018124704 
    3487   -1152448.9            0   -1152448.9 2.5136148e-05 5.0830902e-06 -6.1090221e-06 
Loop time of 1.73248 on 104 procs for 148 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.87148834  -1152448.87648484  -1152448.87648484
  Force two-norm initial, final = 0.29023143 0.00010181944
  Force max component initial, final = 0.22497255 2.5136148e-05
  Final line search alpha, max atom move = 1.0000000 2.5136148e-05
  Iterations, force evaluations = 148 296

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.44884    | 1.2447     | 1.6363     |  30.1 | 71.84
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02785    | 0.28549    | 0.84141    |  43.3 | 16.48
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7664e-05 | 0.0024406  | 0.0052228  |   2.3 |  0.14
Other   |            | 0.1999     |            |       | 11.54

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27484025525311-${x_0}
variable           new_x         equal     1.27484025525311-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.54184054883165-${y_0}
variable           new_y         equal     3.54184054883165-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4730641784393-${z_0}
variable           new_z         equal     31.4730641784393-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10920394136834*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10920394136834*0.10920394136834+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10920394136834*0.10920394136834+-0.48284240643069*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10920394136834*0.10920394136834+-0.48284240643069*-0.48284240643069+${new_z}*${new_z})
variable           module        equal     sqrt(0.10920394136834*0.10920394136834+-0.48284240643069*-0.48284240643069+0.152195855506601*${new_z})
variable           module        equal     sqrt(0.10920394136834*0.10920394136834+-0.48284240643069*-0.48284240643069+0.152195855506601*0.152195855506601)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10920394136834/${module}
variable           unitx         equal     0.10920394136834/0.51790526999785
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.48284240643069/${module}
variable           unity         equal     -0.48284240643069/0.51790526999785
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.152195855506601/${module}
variable           unitz         equal     0.152195855506601/0.51790526999785
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.5136148333381e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.5136148333381e-05*2.5136148333381e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.5136148333381e-05*2.5136148333381e-05+5.08309020586399e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.5136148333381e-05*2.5136148333381e-05+5.08309020586399e-06*5.08309020586399e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.5136148333381e-05*2.5136148333381e-05+5.08309020586399e-06*5.08309020586399e-06+-6.10902206408068e-06*${fz})
variable           f_module      equal     sqrt(2.5136148333381e-05*2.5136148333381e-05+5.08309020586399e-06*5.08309020586399e-06+-6.10902206408068e-06*-6.10902206408068e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.210856980406462*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.210856980406462*0.210856980406462+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.210856980406462*0.210856980406462+-0.93229869321989*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.210856980406462*0.210856980406462+-0.93229869321989*-0.93229869321989+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.210856980406462*0.210856980406462+-0.93229869321989*-0.93229869321989+0.293868134431675*${unitz})
variable           dir_module    equal     sqrt(0.210856980406462*0.210856980406462+-0.93229869321989*-0.93229869321989+0.293868134431675*0.293868134431675)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.5136148333381e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.5136148333381e-05*0.210856980406462+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.5136148333381e-05*0.210856980406462+5.08309020586399e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.5136148333381e-05*0.210856980406462+5.08309020586399e-06*-0.93229869321989+${fz}*${unitz}
variable           dot      equal     2.5136148333381e-05*0.210856980406462+5.08309020586399e-06*-0.93229869321989+-6.10902206408068e-06*${unitz}
variable           dot      equal     2.5136148333381e-05*0.210856980406462+5.08309020586399e-06*-0.93229869321989+-6.10902206408068e-06*0.293868134431675
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.23407293699351e-06/${f_module}*${dir_module}
variable           cos      equal     -1.23407293699351e-06/2.63625474804334e-05*${dir_module}
variable           cos      equal     -1.23407293699351e-06/2.63625474804334e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0468115965617303)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.6176250368123/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.6830874440392-90.0)
print              "The dot product: ${dot}"
The dot product: -1.23407293699351e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.6830874440392

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10920394136834^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10920394136834^2+-0.48284240643069^2+${new_z}^2)
variable           norm          equal     sqrt(0.10920394136834^2+-0.48284240643069^2+0.152195855506601^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10920394136834/${norm}
variable           unit_x        equal     0.10920394136834/0.51790526999785
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.48284240643069/${norm}
variable           unit_y        equal     -0.48284240643069/0.51790526999785
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.152195855506601/${norm}
variable           unit_z        equal     0.152195855506601/0.51790526999785
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27484025525311+${delta}*${unit_x}
variable           x_new         equal     1.27484025525311+0.03*${unit_x}
variable           x_new         equal     1.27484025525311+0.03*0.210856980406462
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.54184054883165+${delta}*${unit_y}
variable           y_new         equal     3.54184054883165+0.03*${unit_y}
variable           y_new         equal     3.54184054883165+0.03*-0.93229869321989
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4730641784393+${delta}*${unit_z}
variable           z_new         equal     31.4730641784393+0.03*${unit_z}
variable           z_new         equal     31.4730641784393+0.03*0.293868134431675

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2811659646653  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2811659646653  y  3.51387158803505  z   ${z_new}
set                atom          288751    x  1.2811659646653  y  3.51387158803505  z   31.4818802224723
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10920394136834  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10920394136834  -0.48284240643069  ${new_z}
fix                hold    carbon   planeforce   0.10920394136834  -0.48284240643069  0.152195855506601
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3487   -1152448.8            0   -1152448.8   -0.1014932  -0.03200208 -0.028703174 
    3650   -1152448.8            0   -1152448.8 1.3616693e-05 1.7618092e-06 -4.1809309e-06 
Loop time of 1.89255 on 104 procs for 163 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.81717608  -1152448.82226157  -1152448.82226157
  Force two-norm initial, final = 0.29701505 9.4810877e-05
  Force max component initial, final = 0.23727419 1.3616693e-05
  Final line search alpha, max atom move = 1.0000000 1.3616693e-05
  Iterations, force evaluations = 163 326

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49368    | 1.3733     | 1.7869     |  31.7 | 72.56
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033235   | 0.3101     | 0.92995    |  46.6 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9687e-05 | 0.0026818  | 0.0057718  |   2.4 |  0.14
Other   |            | 0.2065     |            |       | 10.91

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25766671488347-${x_0}
variable           new_x         equal     1.25766671488347-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.50472707543041-${y_0}
variable           new_y         equal     3.50472707543041-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4697304318614-${z_0}
variable           new_z         equal     31.4697304318614-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0920304009986999*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0920304009986999*0.0920304009986999+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0920304009986999*0.0920304009986999+-0.51995587983193*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0920304009986999*0.0920304009986999+-0.51995587983193*-0.51995587983193+${new_z}*${new_z})
variable           module        equal     sqrt(0.0920304009986999*0.0920304009986999+-0.51995587983193*-0.51995587983193+0.1488621089287*${new_z})
variable           module        equal     sqrt(0.0920304009986999*0.0920304009986999+-0.51995587983193*-0.51995587983193+0.1488621089287*0.1488621089287)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0920304009986999/${module}
variable           unitx         equal     0.0920304009986999/0.548619758261109
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.51995587983193/${module}
variable           unity         equal     -0.51995587983193/0.548619758261109
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1488621089287/${module}
variable           unitz         equal     0.1488621089287/0.548619758261109
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.36166930851207e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.36166930851207e-05*1.36166930851207e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.36166930851207e-05*1.36166930851207e-05+1.76180919892689e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.36166930851207e-05*1.36166930851207e-05+1.76180919892689e-06*1.76180919892689e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.36166930851207e-05*1.36166930851207e-05+1.76180919892689e-06*1.76180919892689e-06+-4.180930930709e-06*${fz})
variable           f_module      equal     sqrt(1.36166930851207e-05*1.36166930851207e-05+1.76180919892689e-06*1.76180919892689e-06+-4.180930930709e-06*-4.180930930709e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.167748972968814*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.167748972968814*0.167748972968814+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.167748972968814*0.167748972968814+-0.947752741315713*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.167748972968814*0.167748972968814+-0.947752741315713*-0.947752741315713+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.167748972968814*0.167748972968814+-0.947752741315713*-0.947752741315713+0.271339314137226*${unitz})
variable           dir_module    equal     sqrt(0.167748972968814*0.167748972968814+-0.947752741315713*-0.947752741315713+0.271339314137226*0.271339314137226)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.36166930851207e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.36166930851207e-05*0.167748972968814+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.36166930851207e-05*0.167748972968814+1.76180919892689e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.36166930851207e-05*0.167748972968814+1.76180919892689e-06*-0.947752741315713+${fz}*${unitz}
variable           dot      equal     1.36166930851207e-05*0.167748972968814+1.76180919892689e-06*-0.947752741315713+-4.180930930709e-06*${unitz}
variable           dot      equal     1.36166930851207e-05*0.167748972968814+1.76180919892689e-06*-0.947752741315713+-4.180930930709e-06*0.271339314137226
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.20024148891346e-07/${f_module}*${dir_module}
variable           cos      equal     -5.20024148891346e-07/1.43526473403047e-05*${dir_module}
variable           cos      equal     -5.20024148891346e-07/1.43526473403047e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0362319324485197)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60703619119259/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.0763912801142-90.0)
print              "The dot product: ${dot}"
The dot product: -5.20024148891346e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.0763912801142

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0920304009986999^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0920304009986999^2+-0.51995587983193^2+${new_z}^2)
variable           norm          equal     sqrt(0.0920304009986999^2+-0.51995587983193^2+0.1488621089287^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0920304009986999/${norm}
variable           unit_x        equal     0.0920304009986999/0.548619758261109
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.51995587983193/${norm}
variable           unit_y        equal     -0.51995587983193/0.548619758261109
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1488621089287/${norm}
variable           unit_z        equal     0.1488621089287/0.548619758261109
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25766671488347+${delta}*${unit_x}
variable           x_new         equal     1.25766671488347+0.03*${unit_x}
variable           x_new         equal     1.25766671488347+0.03*0.167748972968814
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.50472707543041+${delta}*${unit_y}
variable           y_new         equal     3.50472707543041+0.03*${unit_y}
variable           y_new         equal     3.50472707543041+0.03*-0.947752741315713
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4697304318614+${delta}*${unit_z}
variable           z_new         equal     31.4697304318614+0.03*${unit_z}
variable           z_new         equal     31.4697304318614+0.03*0.271339314137226

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26269918407253  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26269918407253  y  3.47629449319094  z   ${z_new}
set                atom          288751    x  1.26269918407253  y  3.47629449319094  z   31.4778706112855
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0920304009986999  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0920304009986999  -0.51995587983193  ${new_z}
fix                hold    carbon   planeforce   0.0920304009986999  -0.51995587983193  0.1488621089287
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3650   -1152448.8            0   -1152448.8 -0.091956733 -0.025264304 -0.031394882 
    3792   -1152448.8            0   -1152448.8 -1.3914749e-05 5.7471902e-06 2.8676641e-05 
Loop time of 1.66572 on 104 procs for 142 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.75992857  -1152448.76482605  -1152448.76482605
  Force two-norm initial, final = 0.30068741 0.00020163582
  Force max component initial, final = 0.24812985 7.0880864e-05
  Final line search alpha, max atom move = 1.0000000 7.0880864e-05
  Iterations, force evaluations = 142 284

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.43172    | 1.1939     | 1.5613     |  29.5 | 71.68
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.027694   | 0.27205    | 0.80379    |  42.8 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9013e-05 | 0.0023388  | 0.0050473  |   2.3 |  0.14
Other   |            | 0.1974     |            |       | 11.85

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24258187443164-${x_0}
variable           new_x         equal     1.24258187443164-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.46890072870977-${y_0}
variable           new_y         equal     3.46890072870977-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4644821993047-${z_0}
variable           new_z         equal     31.4644821993047-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0769455605468699*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0769455605468699*0.0769455605468699+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0769455605468699*0.0769455605468699+-0.55578222655257*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0769455605468699*0.0769455605468699+-0.55578222655257*-0.55578222655257+${new_z}*${new_z})
variable           module        equal     sqrt(0.0769455605468699*0.0769455605468699+-0.55578222655257*-0.55578222655257+0.143613876372001*${new_z})
variable           module        equal     sqrt(0.0769455605468699*0.0769455605468699+-0.55578222655257*-0.55578222655257+0.143613876372001*0.143613876372001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0769455605468699/${module}
variable           unitx         equal     0.0769455605468699/0.579171346085247
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.55578222655257/${module}
variable           unity         equal     -0.55578222655257/0.579171346085247
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.143613876372001/${module}
variable           unitz         equal     0.143613876372001/0.579171346085247
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.39147494563805e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.39147494563805e-05*-1.39147494563805e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.39147494563805e-05*-1.39147494563805e-05+5.74719022345202e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.39147494563805e-05*-1.39147494563805e-05+5.74719022345202e-06*5.74719022345202e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.39147494563805e-05*-1.39147494563805e-05+5.74719022345202e-06*5.74719022345202e-06+2.86766414411876e-05*${fz})
variable           f_module      equal     sqrt(-1.39147494563805e-05*-1.39147494563805e-05+5.74719022345202e-06*5.74719022345202e-06+2.86766414411876e-05*2.86766414411876e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.13285457070168*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.13285457070168*0.13285457070168+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.13285457070168*0.13285457070168+-0.959616235004081*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.13285457070168*0.13285457070168+-0.959616235004081*-0.959616235004081+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.13285457070168*0.13285457070168+-0.959616235004081*-0.959616235004081+0.24796440180047*${unitz})
variable           dir_module    equal     sqrt(0.13285457070168*0.13285457070168+-0.959616235004081*-0.959616235004081+0.24796440180047*0.24796440180047)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.39147494563805e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.39147494563805e-05*0.13285457070168+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.39147494563805e-05*0.13285457070168+5.74719022345202e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.39147494563805e-05*0.13285457070168+5.74719022345202e-06*-0.959616235004081+${fz}*${unitz}
variable           dot      equal     -1.39147494563805e-05*0.13285457070168+5.74719022345202e-06*-0.959616235004081+2.86766414411876e-05*${unitz}
variable           dot      equal     -1.39147494563805e-05*0.13285457070168+5.74719022345202e-06*-0.959616235004081+2.86766414411876e-05*0.24796440180047
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.52948868919505e-07/${f_module}*${dir_module}
variable           cos      equal     -2.52948868919505e-07/3.23882727579725e-05*${dir_module}
variable           cos      equal     -2.52948868919505e-07/3.23882727579725e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0078098906604163)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57860629685075/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.447478322324-90.0)
print              "The dot product: ${dot}"
The dot product: -2.52948868919505e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.447478322324

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0769455605468699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0769455605468699^2+-0.55578222655257^2+${new_z}^2)
variable           norm          equal     sqrt(0.0769455605468699^2+-0.55578222655257^2+0.143613876372001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0769455605468699/${norm}
variable           unit_x        equal     0.0769455605468699/0.579171346085247
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.55578222655257/${norm}
variable           unit_y        equal     -0.55578222655257/0.579171346085247
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.143613876372001/${norm}
variable           unit_z        equal     0.143613876372001/0.579171346085247
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24258187443164+${delta}*${unit_x}
variable           x_new         equal     1.24258187443164+0.03*${unit_x}
variable           x_new         equal     1.24258187443164+0.03*0.13285457070168
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.46890072870977+${delta}*${unit_y}
variable           y_new         equal     3.46890072870977+0.03*${unit_y}
variable           y_new         equal     3.46890072870977+0.03*-0.959616235004081
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4644821993047+${delta}*${unit_z}
variable           z_new         equal     31.4644821993047+0.03*${unit_z}
variable           z_new         equal     31.4644821993047+0.03*0.24796440180047

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24656751155269  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24656751155269  y  3.44011224165965  z   ${z_new}
set                atom          288751    x  1.24656751155269  y  3.44011224165965  z   31.4719211313587
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0769455605468699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0769455605468699  -0.55578222655257  ${new_z}
fix                hold    carbon   planeforce   0.0769455605468699  -0.55578222655257  0.143613876372001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3792   -1152448.7            0   -1152448.7 -0.079858353 -0.020896292 -0.038081571 
    3969   -1152448.7            0   -1152448.7 4.4739754e-05 -2.9980187e-06 -3.5572962e-05 
Loop time of 2.07112 on 104 procs for 177 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.6994829  -1152448.70423821  -1152448.70423821
  Force two-norm initial, final = 0.30435041 0.00021759438
  Force max component initial, final = 0.25851551 4.8321320e-05
  Final line search alpha, max atom move = 1.0000000 4.8321320e-05
  Iterations, force evaluations = 177 354

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53633    | 1.4872     | 1.9561     |  32.9 | 71.80
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034081   | 0.34022    | 1.0115     |  47.5 | 16.43
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1015e-05 | 0.0029146  | 0.0062882  |   2.6 |  0.14
Other   |            | 0.2408     |            |       | 11.63

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22983834530853-${x_0}
variable           new_x         equal     1.22983834530853-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.43326378406186-${y_0}
variable           new_y         equal     3.43326378406186-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4543809325863-${z_0}
variable           new_z         equal     31.4543809325863-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642020314237599*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642020314237599*0.0642020314237599+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642020314237599*0.0642020314237599+-0.59141917120048*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642020314237599*0.0642020314237599+-0.59141917120048*-0.59141917120048+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642020314237599*0.0642020314237599+-0.59141917120048*-0.59141917120048+0.1335126096536*${new_z})
variable           module        equal     sqrt(0.0642020314237599*0.0642020314237599+-0.59141917120048*-0.59141917120048+0.1335126096536*0.1335126096536)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0642020314237599/${module}
variable           unitx         equal     0.0642020314237599/0.609691851543806
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.59141917120048/${module}
variable           unity         equal     -0.59141917120048/0.609691851543806
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1335126096536/${module}
variable           unitz         equal     0.1335126096536/0.609691851543806
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.47397540591021e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.47397540591021e-05*4.47397540591021e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.47397540591021e-05*4.47397540591021e-05+-2.99801867583956e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.47397540591021e-05*4.47397540591021e-05+-2.99801867583956e-06*-2.99801867583956e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.47397540591021e-05*4.47397540591021e-05+-2.99801867583956e-06*-2.99801867583956e-06+-3.55729618814575e-05*${fz})
variable           f_module      equal     sqrt(4.47397540591021e-05*4.47397540591021e-05+-2.99801867583956e-06*-2.99801867583956e-06+-3.55729618814575e-05*-3.55729618814575e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105302426563834*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105302426563834*0.105302426563834+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105302426563834*0.105302426563834+-0.970029646456554*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105302426563834*0.105302426563834+-0.970029646456554*-0.970029646456554+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105302426563834*0.105302426563834+-0.970029646456554*-0.970029646456554+0.218983752719561*${unitz})
variable           dir_module    equal     sqrt(0.105302426563834*0.105302426563834+-0.970029646456554*-0.970029646456554+0.218983752719561*0.218983752719561)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.47397540591021e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.47397540591021e-05*0.105302426563834+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.47397540591021e-05*0.105302426563834+-2.99801867583956e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.47397540591021e-05*0.105302426563834+-2.99801867583956e-06*-0.970029646456554+${fz}*${unitz}
variable           dot      equal     4.47397540591021e-05*0.105302426563834+-2.99801867583956e-06*-0.970029646456554+-3.55729618814575e-05*${unitz}
variable           dot      equal     4.47397540591021e-05*0.105302426563834+-2.99801867583956e-06*-0.970029646456554+-3.55729618814575e-05*0.218983752719561
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.70529025664071e-07/${f_module}*${dir_module}
variable           cos      equal     -1.70529025664071e-07/5.72369576957865e-05*${dir_module}
variable           cos      equal     -1.70529025664071e-07/5.72369576957865e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00297935167292486)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57377568287556/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.1707045290887-90.0)
print              "The dot product: ${dot}"
The dot product: -1.70529025664071e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.1707045290887

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0642020314237599^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0642020314237599^2+-0.59141917120048^2+${new_z}^2)
variable           norm          equal     sqrt(0.0642020314237599^2+-0.59141917120048^2+0.1335126096536^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0642020314237599/${norm}
variable           unit_x        equal     0.0642020314237599/0.609691851543806
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.59141917120048/${norm}
variable           unit_y        equal     -0.59141917120048/0.609691851543806
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1335126096536/${norm}
variable           unit_z        equal     0.1335126096536/0.609691851543806
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22983834530853+${delta}*${unit_x}
variable           x_new         equal     1.22983834530853+0.03*${unit_x}
variable           x_new         equal     1.22983834530853+0.03*0.105302426563834
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.43326378406186+${delta}*${unit_y}
variable           y_new         equal     3.43326378406186+0.03*${unit_y}
variable           y_new         equal     3.43326378406186+0.03*-0.970029646456554
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4543809325863+${delta}*${unit_z}
variable           z_new         equal     31.4543809325863+0.03*${unit_z}
variable           z_new         equal     31.4543809325863+0.03*0.218983752719561

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23299741810545  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23299741810545  y  3.40416289466816  z   ${z_new}
set                atom          288751    x  1.23299741810545  y  3.40416289466816  z   31.4609504451679
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0642020314237599  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0642020314237599  -0.59141917120048  ${new_z}
fix                hold    carbon   planeforce   0.0642020314237599  -0.59141917120048  0.1335126096536
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3969   -1152448.6            0   -1152448.6 -0.068060502 -0.019612669 -0.054149839 
    4000   -1152448.7            0   -1152448.7 -0.0043803216 -0.00031160153 0.00072606196 
    4234   -1152448.7            0   -1152448.7 -4.9984994e-06 -3.226996e-06 -1.1890963e-05 
Loop time of 3.06474 on 104 procs for 265 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.63619067  -1152448.67107144  -1152448.67107144
  Force two-norm initial, final = 0.31246415 0.00011320371
  Force max component initial, final = 0.2700959 4.0614794e-05
  Final line search alpha, max atom move = 1.0000000 4.0614794e-05
  Iterations, force evaluations = 265 529

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.80555    | 2.2235     | 2.8881     |  40.1 | 72.55
Neigh   | 1.0478e-05 | 0.0029622  | 0.0042298  |   2.2 |  0.10
Comm    | 0.04942    | 0.50234    | 1.5061     |  58.8 | 16.39
Output  | 9.854e-05  | 0.00010628 | 0.0001966  |   0.0 |  0.00
Modify  | 3.1132e-05 | 0.0043558  | 0.0093665  |   3.1 |  0.14
Other   |            | 0.3315     |            |       | 10.82

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114486 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238204
Ave neighs/atom = 28.530478
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19824506485813-${x_0}
variable           new_x         equal     1.19824506485813-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.38479878139467-${y_0}
variable           new_y         equal     3.38479878139467-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3918847878355-${z_0}
variable           new_z         equal     31.3918847878355-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0326087509733599*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0326087509733599*0.0326087509733599+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0326087509733599*0.0326087509733599+-0.63988417386767*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0326087509733599*0.0326087509733599+-0.63988417386767*-0.63988417386767+${new_z}*${new_z})
variable           module        equal     sqrt(0.0326087509733599*0.0326087509733599+-0.63988417386767*-0.63988417386767+0.0710164649028009*${new_z})
variable           module        equal     sqrt(0.0326087509733599*0.0326087509733599+-0.63988417386767*-0.63988417386767+0.0710164649028009*0.0710164649028009)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0326087509733599/${module}
variable           unitx         equal     0.0326087509733599/0.644638212405721
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.63988417386767/${module}
variable           unity         equal     -0.63988417386767/0.644638212405721
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0710164649028009/${module}
variable           unitz         equal     0.0710164649028009/0.644638212405721
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.99849943547563e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.99849943547563e-06*-4.99849943547563e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.99849943547563e-06*-4.99849943547563e-06+-3.22699599542058e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.99849943547563e-06*-4.99849943547563e-06+-3.22699599542058e-06*-3.22699599542058e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.99849943547563e-06*-4.99849943547563e-06+-3.22699599542058e-06*-3.22699599542058e-06+-1.18909628329182e-05*${fz})
variable           f_module      equal     sqrt(-4.99849943547563e-06*-4.99849943547563e-06+-3.22699599542058e-06*-3.22699599542058e-06+-1.18909628329182e-05*-1.18909628329182e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0505845765048081*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0505845765048081*0.0505845765048081+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0505845765048081*0.0505845765048081+-0.99262526104323*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0505845765048081*0.0505845765048081+-0.99262526104323*-0.99262526104323+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0505845765048081*0.0505845765048081+-0.99262526104323*-0.99262526104323+0.110164839030834*${unitz})
variable           dir_module    equal     sqrt(0.0505845765048081*0.0505845765048081+-0.99262526104323*-0.99262526104323+0.110164839030834*0.110164839030834)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.99849943547563e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.99849943547563e-06*0.0505845765048081+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.99849943547563e-06*0.0505845765048081+-3.22699599542058e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.99849943547563e-06*0.0505845765048081+-3.22699599542058e-06*-0.99262526104323+${fz}*${unitz}
variable           dot      equal     -4.99849943547563e-06*0.0505845765048081+-3.22699599542058e-06*-0.99262526104323+-1.18909628329182e-05*${unitz}
variable           dot      equal     -4.99849943547563e-06*0.0505845765048081+-3.22699599542058e-06*-0.99262526104323+-1.18909628329182e-05*0.110164839030834
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.64038475882669e-06/${f_module}*${dir_module}
variable           cos      equal     1.64038475882669e-06/1.32963715672642e-05*${dir_module}
variable           cos      equal     1.64038475882669e-06/1.32963715672642e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.123370857269462)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.44711034808229/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(82.9133154348227-90.0)
print              "The dot product: ${dot}"
The dot product: 1.64038475882669e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 82.9133154348227

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0326087509733599^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0326087509733599^2+-0.63988417386767^2+${new_z}^2)
variable           norm          equal     sqrt(0.0326087509733599^2+-0.63988417386767^2+0.0710164649028009^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0326087509733599/${norm}
variable           unit_x        equal     0.0326087509733599/0.644638212405721
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.63988417386767/${norm}
variable           unit_y        equal     -0.63988417386767/0.644638212405721
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0710164649028009/${norm}
variable           unit_z        equal     0.0710164649028009/0.644638212405721
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19824506485813+${delta}*${unit_x}
variable           x_new         equal     1.19824506485813+0.03*${unit_x}
variable           x_new         equal     1.19824506485813+0.03*0.0505845765048081
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.38479878139467+${delta}*${unit_y}
variable           y_new         equal     3.38479878139467+0.03*${unit_y}
variable           y_new         equal     3.38479878139467+0.03*-0.99262526104323
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3918847878355+${delta}*${unit_z}
variable           z_new         equal     31.3918847878355+0.03*${unit_z}
variable           z_new         equal     31.3918847878355+0.03*0.110164839030834

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19976260215327  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19976260215327  y  3.35502002356337  z   ${z_new}
set                atom          288751    x  1.19976260215327  y  3.35502002356337  z   31.3951897330064
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0326087509733599  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0326087509733599  -0.63988417386767  ${new_z}
fix                hold    carbon   planeforce   0.0326087509733599  -0.63988417386767  0.0710164649028009
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4234   -1152448.6            0   -1152448.6 -0.068072425 -0.020732585  -0.15555119 
    4564   -1152448.6            0   -1152448.6 -2.6064741e-07 -2.3915543e-08 -9.5805831e-08 
Loop time of 3.86939 on 104 procs for 330 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.6239321  -1152448.63257312  -1152448.63257312
  Force two-norm initial, final = 0.37494293 1.8227204e-06
  Force max component initial, final = 0.30424052 4.7270916e-07
  Final line search alpha, max atom move = 1.0000000 4.7270916e-07
  Iterations, force evaluations = 330 660

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.99703    | 2.7706     | 3.6526     |  45.1 | 71.60
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.076617   | 0.63349    | 1.8828     |  65.0 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.944e-05  | 0.0054225  | 0.011613   |   3.5 |  0.14
Other   |            | 0.4598     |            |       | 11.88

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114486 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18117179871499-${x_0}
variable           new_x         equal     1.18117179871499-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.34969706244543-${y_0}
variable           new_y         equal     3.34969706244543-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3557642884732-${z_0}
variable           new_z         equal     31.3557642884732-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0155354848302198*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0155354848302198*0.0155354848302198+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0155354848302198*0.0155354848302198+-0.67498589281691*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0155354848302198*0.0155354848302198+-0.67498589281691*-0.67498589281691+${new_z}*${new_z})
variable           module        equal     sqrt(0.0155354848302198*0.0155354848302198+-0.67498589281691*-0.67498589281691+0.0348959655404997*${new_z})
variable           module        equal     sqrt(0.0155354848302198*0.0155354848302198+-0.67498589281691*-0.67498589281691+0.0348959655404997*0.0348959655404997)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0155354848302198/${module}
variable           unitx         equal     0.0155354848302198/0.676065851231783
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.67498589281691/${module}
variable           unity         equal     -0.67498589281691/0.676065851231783
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0348959655404997/${module}
variable           unitz         equal     0.0348959655404997/0.676065851231783
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60647409473229e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60647409473229e-07*-2.60647409473229e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60647409473229e-07*-2.60647409473229e-07+-2.39155431527886e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60647409473229e-07*-2.60647409473229e-07+-2.39155431527886e-08*-2.39155431527886e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60647409473229e-07*-2.60647409473229e-07+-2.39155431527886e-08*-2.39155431527886e-08+-9.58058309538856e-08*${fz})
variable           f_module      equal     sqrt(-2.60647409473229e-07*-2.60647409473229e-07+-2.39155431527886e-08*-2.39155431527886e-08+-9.58058309538856e-08*-9.58058309538856e-08)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0229792479562669*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0229792479562669*0.0229792479562669+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0229792479562669*0.0229792479562669+-0.998402583989555*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0229792479562669*0.0229792479562669+-0.998402583989555*-0.998402583989555+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0229792479562669*0.0229792479562669+-0.998402583989555*-0.998402583989555+0.0516162227051103*${unitz})
variable           dir_module    equal     sqrt(0.0229792479562669*0.0229792479562669+-0.998402583989555*-0.998402583989555+0.0516162227051103*0.0516162227051103)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60647409473229e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60647409473229e-07*0.0229792479562669+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60647409473229e-07*0.0229792479562669+-2.39155431527886e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60647409473229e-07*0.0229792479562669+-2.39155431527886e-08*-0.998402583989555+${fz}*${unitz}
variable           dot      equal     -2.60647409473229e-07*0.0229792479562669+-2.39155431527886e-08*-0.998402583989555+-9.58058309538856e-08*${unitz}
variable           dot      equal     -2.60647409473229e-07*0.0229792479562669+-2.39155431527886e-08*-0.998402583989555+-9.58058309538856e-08*0.0516162227051103
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.294272352285e-08/${f_module}*${dir_module}
variable           cos      equal     1.294272352285e-08/2.78725281440637e-07*${dir_module}
variable           cos      equal     1.294272352285e-08/2.78725281440637e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0464354128766268)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5243442099975/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.3384897580604-90.0)
print              "The dot product: ${dot}"
The dot product: 1.294272352285e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.3384897580604

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0155354848302198^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0155354848302198^2+-0.67498589281691^2+${new_z}^2)
variable           norm          equal     sqrt(0.0155354848302198^2+-0.67498589281691^2+0.0348959655404997^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0155354848302198/${norm}
variable           unit_x        equal     0.0155354848302198/0.676065851231783
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.67498589281691/${norm}
variable           unit_y        equal     -0.67498589281691/0.676065851231783
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0348959655404997/${norm}
variable           unit_z        equal     0.0348959655404997/0.676065851231783
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18117179871499+${delta}*${unit_x}
variable           x_new         equal     1.18117179871499+0.03*${unit_x}
variable           x_new         equal     1.18117179871499+0.03*0.0229792479562669
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.34969706244543+${delta}*${unit_y}
variable           y_new         equal     3.34969706244543+0.03*${unit_y}
variable           y_new         equal     3.34969706244543+0.03*-0.998402583989555
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3557642884732+${delta}*${unit_z}
variable           z_new         equal     31.3557642884732+0.03*${unit_z}
variable           z_new         equal     31.3557642884732+0.03*0.0516162227051103

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18186117615368  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18186117615368  y  3.31974498492574  z   ${z_new}
set                atom          288751    x  1.18186117615368  y  3.31974498492574  z   31.3573127751544
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0155354848302198  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0155354848302198  -0.67498589281691  ${new_z}
fix                hold    carbon   planeforce   0.0155354848302198  -0.67498589281691  0.0348959655404997
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4564   -1152448.6            0   -1152448.6 -0.030376759 -0.0049861185 -0.082921964 
    4896   -1152448.6            0   -1152448.6 1.4492495e-07 5.4052251e-09 4.0032458e-08 
Loop time of 3.85421 on 104 procs for 332 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.58533322   -1152448.5920414   -1152448.5920414
  Force two-norm initial, final = 0.3595247 1.7878593e-06
  Force max component initial, final = 0.31493158 7.8070019e-07
  Final line search alpha, max atom move = 1.0000000 7.8070019e-07
  Iterations, force evaluations = 332 664

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 1.008      | 2.7853     | 3.6402     |  45.0 | 72.27
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.065346   | 0.62952    | 1.8725     |  65.7 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 4.0268e-05 | 0.00545    | 0.01169    |   3.5 |  0.14
Other   |            | 0.4339     |            |       | 11.26

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5428 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114483 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17264328172905-${x_0}
variable           new_x         equal     1.17264328172905-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.31846262520701-${y_0}
variable           new_y         equal     3.31846262520701-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3366120938708-${z_0}
variable           new_z         equal     31.3366120938708-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0070069678442799*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0070069678442799*0.0070069678442799+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0070069678442799*0.0070069678442799+-0.70622033005533*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0070069678442799*0.0070069678442799+-0.70622033005533*-0.70622033005533+${new_z}*${new_z})
variable           module        equal     sqrt(0.0070069678442799*0.0070069678442799+-0.70622033005533*-0.70622033005533+0.0157437709381014*${new_z})
variable           module        equal     sqrt(0.0070069678442799*0.0070069678442799+-0.70622033005533*-0.70622033005533+0.0157437709381014*0.0157437709381014)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0070069678442799/${module}
variable           unitx         equal     0.0070069678442799/0.706430547545321
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.70622033005533/${module}
variable           unity         equal     -0.70622033005533/0.706430547545321
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0157437709381014/${module}
variable           unitz         equal     0.0157437709381014/0.706430547545321
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.44924953915769e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.44924953915769e-07*1.44924953915769e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.44924953915769e-07*1.44924953915769e-07+5.4052250841755e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.44924953915769e-07*1.44924953915769e-07+5.4052250841755e-09*5.4052250841755e-09+${fz}*${fz})
variable           f_module      equal     sqrt(1.44924953915769e-07*1.44924953915769e-07+5.4052250841755e-09*5.4052250841755e-09+4.00324583768586e-08*${fz})
variable           f_module      equal     sqrt(1.44924953915769e-07*1.44924953915769e-07+5.4052250841755e-09*5.4052250841755e-09+4.00324583768586e-08*4.00324583768586e-08)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00991883472285769*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00991883472285769*0.00991883472285769+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00991883472285769*0.00991883472285769+-0.99970242299017*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00991883472285769*0.00991883472285769+-0.99970242299017*-0.99970242299017+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00991883472285769*0.00991883472285769+-0.99970242299017*-0.99970242299017+0.0222863677014071*${unitz})
variable           dir_module    equal     sqrt(0.00991883472285769*0.00991883472285769+-0.99970242299017*-0.99970242299017+0.0222863677014071*0.0222863677014071)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.44924953915769e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.44924953915769e-07*0.00991883472285769+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.44924953915769e-07*0.00991883472285769+5.4052250841755e-09*${unity}+${fz}*${unitz}
variable           dot      equal     1.44924953915769e-07*0.00991883472285769+5.4052250841755e-09*-0.99970242299017+${fz}*${unitz}
variable           dot      equal     1.44924953915769e-07*0.00991883472285769+5.4052250841755e-09*-0.99970242299017+4.00324583768586e-08*${unitz}
variable           dot      equal     1.44924953915769e-07*0.00991883472285769+5.4052250841755e-09*-0.99970242299017+4.00324583768586e-08*0.0222863677014071
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.07395186097127e-09/${f_module}*${dir_module}
variable           cos      equal     -3.07395186097127e-09/1.50449514619999e-07*${dir_module}
variable           cos      equal     -3.07395186097127e-09/1.50449514619999e-07*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0204317831714869)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59122953180125/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.1707364087896-90.0)
print              "The dot product: ${dot}"
The dot product: -3.07395186097127e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.1707364087896

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0070069678442799^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0070069678442799^2+-0.70622033005533^2+${new_z}^2)
variable           norm          equal     sqrt(0.0070069678442799^2+-0.70622033005533^2+0.0157437709381014^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0070069678442799/${norm}
variable           unit_x        equal     0.0070069678442799/0.706430547545321
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.70622033005533/${norm}
variable           unit_y        equal     -0.70622033005533/0.706430547545321
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0157437709381014/${norm}
variable           unit_z        equal     0.0157437709381014/0.706430547545321
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17264328172905+${delta}*${unit_x}
variable           x_new         equal     1.17264328172905+0.03*${unit_x}
variable           x_new         equal     1.17264328172905+0.03*0.00991883472285769
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.31846262520701+${delta}*${unit_y}
variable           y_new         equal     3.31846262520701+0.03*${unit_y}
variable           y_new         equal     3.31846262520701+0.03*-0.99970242299017
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3366120938708+${delta}*${unit_z}
variable           z_new         equal     31.3366120938708+0.03*${unit_z}
variable           z_new         equal     31.3366120938708+0.03*0.0222863677014071

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17294084677074  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17294084677074  y  3.2884715525173  z   ${z_new}
set                atom          288751    x  1.17294084677074  y  3.2884715525173  z   31.3372806849018
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0070069678442799  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0070069678442799  -0.70622033005533  ${new_z}
fix                hold    carbon   planeforce   0.0070069678442799  -0.70622033005533  0.0157437709381014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4896   -1152448.5            0   -1152448.5 -0.011585488 -0.00097338978 -0.038507198 
    5000   -1152448.6            0   -1152448.6 -7.0521332e-05 3.9066223e-07 4.8910412e-05 
    5115   -1152448.6            0   -1152448.6 6.2915505e-08 -1.0592099e-08 -5.0313246e-07 
Loop time of 2.57416 on 104 procs for 219 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.54530637  -1152448.55002151  -1152448.55002151
  Force two-norm initial, final = 0.35385603 7.7482588e-05
  Force max component initial, final = 0.32293817 2.7254439e-05
  Final line search alpha, max atom move = 1.0000000 2.7254439e-05
  Iterations, force evaluations = 219 438

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.66617    | 1.8426     | 2.416      |  36.7 | 71.58
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.045663   | 0.42223    | 1.2666     |  53.0 | 16.40
Output  | 9.6887e-05 | 0.00010473 | 0.00023695 |   0.0 |  0.00
Modify  | 2.5893e-05 | 0.0036044  | 0.0077186  |   2.8 |  0.14
Other   |            | 0.3056     |            |       | 11.87

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114475 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16900058430192-${x_0}
variable           new_x         equal     1.16900058430192-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.28822835359509-${y_0}
variable           new_y         equal     3.28822835359509-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3281251445223-${z_0}
variable           new_z         equal     31.3281251445223-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00336427041714993*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00336427041714993*0.00336427041714993+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00336427041714993*0.00336427041714993+-0.73645460166725*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00336427041714993*0.00336427041714993+-0.73645460166725*-0.73645460166725+${new_z}*${new_z})
variable           module        equal     sqrt(0.00336427041714993*0.00336427041714993+-0.73645460166725*-0.73645460166725+0.00725682158959984*${new_z})
variable           module        equal     sqrt(0.00336427041714993*0.00336427041714993+-0.73645460166725*-0.73645460166725+0.00725682158959984*0.00725682158959984)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00336427041714993/${module}
variable           unitx         equal     0.00336427041714993/0.736498038077421
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.73645460166725/${module}
variable           unity         equal     -0.73645460166725/0.736498038077421
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00725682158959984/${module}
variable           unitz         equal     0.00725682158959984/0.736498038077421
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.29155051277891e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.29155051277891e-08*6.29155051277891e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.29155051277891e-08*6.29155051277891e-08+-1.0592098717436e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.29155051277891e-08*6.29155051277891e-08+-1.0592098717436e-08*-1.0592098717436e-08+${fz}*${fz})
variable           f_module      equal     sqrt(6.29155051277891e-08*6.29155051277891e-08+-1.0592098717436e-08*-1.0592098717436e-08+-5.03132459420786e-07*${fz})
variable           f_module      equal     sqrt(6.29155051277891e-08*6.29155051277891e-08+-1.0592098717436e-08*-1.0592098717436e-08+-5.03132459420786e-07*-5.03132459420786e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0045679285527116*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0045679285527116*0.0045679285527116+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0045679285527116*0.0045679285527116+-0.999941023047007*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0045679285527116*0.0045679285527116+-0.999941023047007*-0.999941023047007+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0045679285527116*0.0045679285527116+-0.999941023047007*-0.999941023047007+0.00985314449518873*${unitz})
variable           dir_module    equal     sqrt(0.0045679285527116*0.0045679285527116+-0.999941023047007*-0.999941023047007+0.00985314449518873*0.00985314449518873)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.29155051277891e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.29155051277891e-08*0.0045679285527116+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.29155051277891e-08*0.0045679285527116+-1.0592098717436e-08*${unity}+${fz}*${unitz}
variable           dot      equal     6.29155051277891e-08*0.0045679285527116+-1.0592098717436e-08*-0.999941023047007+${fz}*${unitz}
variable           dot      equal     6.29155051277891e-08*0.0045679285527116+-1.0592098717436e-08*-0.999941023047007+-5.03132459420786e-07*${unitz}
variable           dot      equal     6.29155051277891e-08*0.0045679285527116+-1.0592098717436e-08*-0.999941023047007+-5.03132459420786e-07*0.00985314449518873
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.92143073711666e-09/${f_module}*${dir_module}
variable           cos      equal     5.92143073711666e-09/5.07161537444958e-07*${dir_module}
variable           cos      equal     5.92143073711666e-09/5.07161537444958e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0116756305435708)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55912043096405/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.3310204468581-90.0)
print              "The dot product: ${dot}"
The dot product: 5.92143073711666e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.3310204468581

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00336427041714993^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00336427041714993^2+-0.73645460166725^2+${new_z}^2)
variable           norm          equal     sqrt(0.00336427041714993^2+-0.73645460166725^2+0.00725682158959984^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00336427041714993/${norm}
variable           unit_x        equal     0.00336427041714993/0.736498038077421
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.73645460166725/${norm}
variable           unit_y        equal     -0.73645460166725/0.736498038077421
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00725682158959984/${norm}
variable           unit_z        equal     0.00725682158959984/0.736498038077421
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16900058430192+${delta}*${unit_x}
variable           x_new         equal     1.16900058430192+0.03*${unit_x}
variable           x_new         equal     1.16900058430192+0.03*0.0045679285527116
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.28822835359509+${delta}*${unit_y}
variable           y_new         equal     3.28822835359509+0.03*${unit_y}
variable           y_new         equal     3.28822835359509+0.03*-0.999941023047007
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3281251445223+${delta}*${unit_z}
variable           z_new         equal     31.3281251445223+0.03*${unit_z}
variable           z_new         equal     31.3281251445223+0.03*0.00985314449518873

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1691376221585  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1691376221585  y  3.25823012290368  z   ${z_new}
set                atom          288751    x  1.1691376221585  y  3.25823012290368  z   31.3284207388572
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00336427041714993  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00336427041714993  -0.73645460166725  ${new_z}
fix                hold    carbon   planeforce   0.00336427041714993  -0.73645460166725  0.00725682158959984
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5115   -1152448.5            0   -1152448.5 -0.0037449683 -0.00017809305 -0.016337505 
    5261   -1152448.5            0   -1152448.5 -2.7291393e-05 -4.1944877e-08 8.3955666e-06 
Loop time of 1.71293 on 104 procs for 146 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.49918421  -1152448.50399286  -1152448.50399286
  Force two-norm initial, final = 0.35972997 0.00019389595
  Force max component initial, final = 0.3297655 7.2404945e-05
  Final line search alpha, max atom move = 1.0000000 7.2404945e-05
  Iterations, force evaluations = 146 292

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.44282    | 1.2315     | 1.6182     |  30.1 | 71.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.028141   | 0.27993    | 0.83007    |  43.4 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7461e-05 | 0.0024043  | 0.0051563  |   2.3 |  0.14
Other   |            | 0.1991     |            |       | 11.62

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114464 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16743967636786-${x_0}
variable           new_x         equal     1.16743967636786-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.25818326408834-${y_0}
variable           new_y         equal     3.25818326408834-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3244524669271-${z_0}
variable           new_z         equal     31.3244524669271-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00180336248308999*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00180336248308999*0.00180336248308999+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00180336248308999*0.00180336248308999+-0.766499691174*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00180336248308999*0.00180336248308999+-0.766499691174*-0.766499691174+${new_z}*${new_z})
variable           module        equal     sqrt(0.00180336248308999*0.00180336248308999+-0.766499691174*-0.766499691174+0.00358414399439866*${new_z})
variable           module        equal     sqrt(0.00180336248308999*0.00180336248308999+-0.766499691174*-0.766499691174+0.00358414399439866*0.00358414399439866)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00180336248308999/${module}
variable           unitx         equal     0.00180336248308999/0.766510192218117
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.766499691174/${module}
variable           unity         equal     -0.766499691174/0.766510192218117
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00358414399439866/${module}
variable           unitz         equal     0.00358414399439866/0.766510192218117
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72913931053378e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72913931053378e-05*-2.72913931053378e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72913931053378e-05*-2.72913931053378e-05+-4.19448765662451e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72913931053378e-05*-2.72913931053378e-05+-4.19448765662451e-08*-4.19448765662451e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-2.72913931053378e-05*-2.72913931053378e-05+-4.19448765662451e-08*-4.19448765662451e-08+8.39556659344308e-06*${fz})
variable           f_module      equal     sqrt(-2.72913931053378e-05*-2.72913931053378e-05+-4.19448765662451e-08*-4.19448765662451e-08+8.39556659344308e-06*8.39556659344308e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00235269211211849*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00235269211211849*0.00235269211211849+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00235269211211849*0.00235269211211849+-0.999986300189843*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00235269211211849*0.00235269211211849+-0.999986300189843*-0.999986300189843+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00235269211211849*0.00235269211211849+-0.999986300189843*-0.999986300189843+0.00467592477019374*${unitz})
variable           dir_module    equal     sqrt(0.00235269211211849*0.00235269211211849+-0.999986300189843*-0.999986300189843+0.00467592477019374*0.00467592477019374)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72913931053378e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72913931053378e-05*0.00235269211211849+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72913931053378e-05*0.00235269211211849+-4.19448765662451e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -2.72913931053378e-05*0.00235269211211849+-4.19448765662451e-08*-0.999986300189843+${fz}*${unitz}
variable           dot      equal     -2.72913931053378e-05*0.00235269211211849+-4.19448765662451e-08*-0.999986300189843+8.39556659344308e-06*${unitz}
variable           dot      equal     -2.72913931053378e-05*0.00235269211211849+-4.19448765662451e-08*-0.999986300189843+8.39556659344308e-06*0.00467592477019374
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.69930944358375e-08/${f_module}*${dir_module}
variable           cos      equal     1.69930944358375e-08/2.85535888362161e-05*${dir_module}
variable           cos      equal     1.69930944358375e-08/2.85535888362161e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000595129898847749)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57020119686092/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9659015665212-90.0)
print              "The dot product: ${dot}"
The dot product: 1.69930944358375e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9659015665212

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00180336248308999^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00180336248308999^2+-0.766499691174^2+${new_z}^2)
variable           norm          equal     sqrt(0.00180336248308999^2+-0.766499691174^2+0.00358414399439866^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00180336248308999/${norm}
variable           unit_x        equal     0.00180336248308999/0.766510192218117
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.766499691174/${norm}
variable           unit_y        equal     -0.766499691174/0.766510192218117
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00358414399439866/${norm}
variable           unit_z        equal     0.00358414399439866/0.766510192218117
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16743967636786+${delta}*${unit_x}
variable           x_new         equal     1.16743967636786+0.03*${unit_x}
variable           x_new         equal     1.16743967636786+0.03*0.00235269211211849
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.25818326408834+${delta}*${unit_y}
variable           y_new         equal     3.25818326408834+0.03*${unit_y}
variable           y_new         equal     3.25818326408834+0.03*-0.999986300189843
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3244524669271+${delta}*${unit_z}
variable           z_new         equal     31.3244524669271+0.03*${unit_z}
variable           z_new         equal     31.3244524669271+0.03*0.00467592477019374

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16751025713122  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16751025713122  y  3.22818367508264  z   ${z_new}
set                atom          288751    x  1.16751025713122  y  3.22818367508264  z   31.3245927446702
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00180336248308999  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00180336248308999  -0.766499691174  ${new_z}
fix                hold    carbon   planeforce   0.00180336248308999  -0.766499691174  0.00358414399439866
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5261   -1152448.4            0   -1152448.4 -0.0010022753 -3.5210036e-05 -0.007025671 
    5430   -1152448.5            0   -1152448.5 -7.2347508e-06 2.022008e-08 7.964402e-06 
Loop time of 2.01519 on 104 procs for 169 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.44823365   -1152448.4533273   -1152448.4533273
  Force two-norm initial, final = 0.36945345 0.00015859328
  Force max component initial, final = 0.33649917 8.0196336e-05
  Final line search alpha, max atom move = 1.0000000 8.0196336e-05
  Iterations, force evaluations = 169 338

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5154     | 1.4282     | 1.8758     |  32.4 | 70.87
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038391   | 0.32788    | 0.97192    |  46.4 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0593e-05 | 0.0027846  | 0.0059391  |   2.5 |  0.14
Other   |            | 0.2563     |            |       | 12.72

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114464 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1667418532321-${x_0}
variable           new_x         equal     1.1667418532321-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.22817333646107-${y_0}
variable           new_y         equal     3.22817333646107-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3227683650183-${z_0}
variable           new_z         equal     31.3227683650183-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00110553934732982*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00110553934732982*0.00110553934732982+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00110553934732982*0.00110553934732982+-0.79650961880127*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00110553934732982*0.00110553934732982+-0.79650961880127*-0.79650961880127+${new_z}*${new_z})
variable           module        equal     sqrt(0.00110553934732982*0.00110553934732982+-0.79650961880127*-0.79650961880127+0.00190004208560168*${new_z})
variable           module        equal     sqrt(0.00110553934732982*0.00110553934732982+-0.79650961880127*-0.79650961880127+0.00190004208560168*0.00190004208560168)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00110553934732982/${module}
variable           unitx         equal     0.00110553934732982/0.79651265226619
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.79650961880127/${module}
variable           unity         equal     -0.79650961880127/0.79651265226619
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00190004208560168/${module}
variable           unitz         equal     0.00190004208560168/0.79651265226619
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.23475084204662e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.23475084204662e-06*-7.23475084204662e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.23475084204662e-06*-7.23475084204662e-06+2.02200800353919e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.23475084204662e-06*-7.23475084204662e-06+2.02200800353919e-08*2.02200800353919e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-7.23475084204662e-06*-7.23475084204662e-06+2.02200800353919e-08*2.02200800353919e-08+7.96440202856877e-06*${fz})
variable           f_module      equal     sqrt(-7.23475084204662e-06*-7.23475084204662e-06+2.02200800353919e-08*2.02200800353919e-08+7.96440202856877e-06*7.96440202856877e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0013879746218524*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0013879746218524*0.0013879746218524+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0013879746218524*0.0013879746218524+-0.999996191567188*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0013879746218524*0.0013879746218524+-0.999996191567188*-0.999996191567188+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0013879746218524*0.0013879746218524+-0.999996191567188*-0.999996191567188+0.00238545122942592*${unitz})
variable           dir_module    equal     sqrt(0.0013879746218524*0.0013879746218524+-0.999996191567188*-0.999996191567188+0.00238545122942592*0.00238545122942592)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.23475084204662e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.23475084204662e-06*0.0013879746218524+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.23475084204662e-06*0.0013879746218524+2.02200800353919e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -7.23475084204662e-06*0.0013879746218524+2.02200800353919e-08*-0.999996191567188+${fz}*${unitz}
variable           dot      equal     -7.23475084204662e-06*0.0013879746218524+2.02200800353919e-08*-0.999996191567188+7.96440202856877e-06*${unitz}
variable           dot      equal     -7.23475084204662e-06*0.0013879746218524+2.02200800353919e-08*-0.999996191567188+7.96440202856877e-06*0.00238545122942592
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.126296098207e-08/${f_module}*${dir_module}
variable           cos      equal     -1.126296098207e-08/1.0759820085429e-05*${dir_module}
variable           cos      equal     -1.126296098207e-08/1.0759820085429e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0010467610882567)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57184308807431/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0599750034681-90.0)
print              "The dot product: ${dot}"
The dot product: -1.126296098207e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0599750034681

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00110553934732982^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00110553934732982^2+-0.79650961880127^2+${new_z}^2)
variable           norm          equal     sqrt(0.00110553934732982^2+-0.79650961880127^2+0.00190004208560168^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00110553934732982/${norm}
variable           unit_x        equal     0.00110553934732982/0.79651265226619
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.79650961880127/${norm}
variable           unit_y        equal     -0.79650961880127/0.79651265226619
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00190004208560168/${norm}
variable           unit_z        equal     0.00190004208560168/0.79651265226619
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1667418532321+${delta}*${unit_x}
variable           x_new         equal     1.1667418532321+0.03*${unit_x}
variable           x_new         equal     1.1667418532321+0.03*0.0013879746218524
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.22817333646107+${delta}*${unit_y}
variable           y_new         equal     3.22817333646107+0.03*${unit_y}
variable           y_new         equal     3.22817333646107+0.03*-0.999996191567188
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3227683650183+${delta}*${unit_z}
variable           z_new         equal     31.3227683650183+0.03*${unit_z}
variable           z_new         equal     31.3227683650183+0.03*0.00238545122942592

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16678349247076  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16678349247076  y  3.19817345071405  z   ${z_new}
set                atom          288751    x  1.16678349247076  y  3.19817345071405  z   31.3228399285552
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00110553934732982  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00110553934732982  -0.79650961880127  ${new_z}
fix                hold    carbon   planeforce   0.00110553934732982  -0.79650961880127  0.00190004208560168
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5430   -1152448.4            0   -1152448.4 3.0803115e-05 -7.4677598e-06 -0.0031484548 
    5582   -1152448.4            0   -1152448.4 1.3077156e-06 -1.8444665e-09 -1.5341061e-06 
Loop time of 1.77461 on 104 procs for 152 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.3924722   -1152448.3977793   -1152448.3977793
  Force two-norm initial, final = 0.37780858 0.00013930095
  Force max component initial, final = 0.34310892 7.4320160e-05
  Final line search alpha, max atom move = 1.0000000 7.4320160e-05
  Iterations, force evaluations = 152 304

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46158    | 1.2811     | 1.676      |  30.6 | 72.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.028573   | 0.2914     | 0.86573    |  44.4 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8076e-05 | 0.0024996  | 0.0053632  |   2.4 |  0.14
Other   |            | 0.1996     |            |       | 11.25

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16643305442723-${x_0}
variable           new_x         equal     1.16643305442723-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.19817086358709-${y_0}
variable           new_y         equal     3.19817086358709-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3219592910088-${z_0}
variable           new_z         equal     31.3219592910088-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000796740542460039*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000796740542460039*0.000796740542460039+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000796740542460039*0.000796740542460039+-0.82651209167525*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000796740542460039*0.000796740542460039+-0.82651209167525*-0.82651209167525+${new_z}*${new_z})
variable           module        equal     sqrt(0.000796740542460039*0.000796740542460039+-0.82651209167525*-0.82651209167525+0.00109096807609887*${new_z})
variable           module        equal     sqrt(0.000796740542460039*0.000796740542460039+-0.82651209167525*-0.82651209167525+0.00109096807609887*0.00109096807609887)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000796740542460039/${module}
variable           unitx         equal     0.000796740542460039/0.826513195715732
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.82651209167525/${module}
variable           unity         equal     -0.82651209167525/0.826513195715732
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00109096807609887/${module}
variable           unitz         equal     0.00109096807609887/0.826513195715732
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.30771559066123e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.30771559066123e-06*1.30771559066123e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.30771559066123e-06*1.30771559066123e-06+-1.84446653668571e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.30771559066123e-06*1.30771559066123e-06+-1.84446653668571e-09*-1.84446653668571e-09+${fz}*${fz})
variable           f_module      equal     sqrt(1.30771559066123e-06*1.30771559066123e-06+-1.84446653668571e-09*-1.84446653668571e-09+-1.5341061419589e-06*${fz})
variable           f_module      equal     sqrt(1.30771559066123e-06*1.30771559066123e-06+-1.84446653668571e-09*-1.84446653668571e-09+-1.5341061419589e-06*-1.5341061419589e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000963978006146761*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000963978006146761*0.000963978006146761+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000963978006146761*0.000963978006146761+-0.999998664219171*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000963978006146761*0.000963978006146761+-0.999998664219171*-0.999998664219171+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000963978006146761*0.000963978006146761+-0.999998664219171*-0.999998664219171+0.00131996449875689*${unitz})
variable           dir_module    equal     sqrt(0.000963978006146761*0.000963978006146761+-0.999998664219171*-0.999998664219171+0.00131996449875689*0.00131996449875689)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.30771559066123e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.30771559066123e-06*0.000963978006146761+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.30771559066123e-06*0.000963978006146761+-1.84446653668571e-09*${unity}+${fz}*${unitz}
variable           dot      equal     1.30771559066123e-06*0.000963978006146761+-1.84446653668571e-09*-0.999998664219171+${fz}*${unitz}
variable           dot      equal     1.30771559066123e-06*0.000963978006146761+-1.84446653668571e-09*-0.999998664219171+-1.5341061419589e-06*${unitz}
variable           dot      equal     1.30771559066123e-06*0.000963978006146761+-1.84446653668571e-09*-0.999998664219171+-1.5341061419589e-06*0.00131996449875689
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.08010749586467e-09/${f_module}*${dir_module}
variable           cos      equal     1.08010749586467e-09/2.01583856568706e-06*${dir_module}
variable           cos      equal     1.08010749586467e-09/2.01583856568706e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000535810512929906)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57026051625633/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9693003175215-90.0)
print              "The dot product: ${dot}"
The dot product: 1.08010749586467e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9693003175215

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000796740542460039^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000796740542460039^2+-0.82651209167525^2+${new_z}^2)
variable           norm          equal     sqrt(0.000796740542460039^2+-0.82651209167525^2+0.00109096807609887^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000796740542460039/${norm}
variable           unit_x        equal     0.000796740542460039/0.826513195715732
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.82651209167525/${norm}
variable           unit_y        equal     -0.82651209167525/0.826513195715732
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00109096807609887/${norm}
variable           unit_z        equal     0.00109096807609887/0.826513195715732
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16643305442723+${delta}*${unit_x}
variable           x_new         equal     1.16643305442723+0.03*${unit_x}
variable           x_new         equal     1.16643305442723+0.03*0.000963978006146761
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.19817086358709+${delta}*${unit_y}
variable           y_new         equal     3.19817086358709+0.03*${unit_y}
variable           y_new         equal     3.19817086358709+0.03*-0.999998664219171
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3219592910088+${delta}*${unit_z}
variable           z_new         equal     31.3219592910088+0.03*${unit_z}
variable           z_new         equal     31.3219592910088+0.03*0.00131996449875689

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16646197376741  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16646197376741  y  3.16817090366051  z   ${z_new}
set                atom          288751    x  1.16646197376741  y  3.16817090366051  z   31.3219988899438
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000796740542460039  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000796740542460039  -0.82651209167525  ${new_z}
fix                hold    carbon   planeforce   0.000796740542460039  -0.82651209167525  0.00109096807609887
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5582   -1152448.3            0   -1152448.3 0.00075005029 -1.1129537e-06 -0.0013909345 
    5745   -1152448.3            0   -1152448.3 -1.6650148e-06 1.1959642e-09 2.1220273e-06 
Loop time of 1.90907 on 104 procs for 163 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.33182794  -1152448.33725842  -1152448.33725842
  Force two-norm initial, final = 0.38449046 7.8977845e-05
  Force max component initial, final = 0.35019805 2.9443078e-05
  Final line search alpha, max atom move = 1.0000000 2.9443078e-05
  Iterations, force evaluations = 163 326

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49125    | 1.3685     | 1.8042     |  31.7 | 71.68
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034884   | 0.31233    | 0.93139    |  45.7 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9433e-05 | 0.0026866  | 0.0057561  |   2.4 |  0.14
Other   |            | 0.2256     |            |       | 11.82

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16635565932726-${x_0}
variable           new_x         equal     1.16635565932726-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.16817021570062-${y_0}
variable           new_y         equal     3.16817021570062-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3215553370937-${z_0}
variable           new_z         equal     31.3215553370937-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00071934544248986*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00071934544248986*0.00071934544248986+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00071934544248986*0.00071934544248986+-0.85651273956172*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00071934544248986*0.00071934544248986+-0.85651273956172*-0.85651273956172+${new_z}*${new_z})
variable           module        equal     sqrt(0.00071934544248986*0.00071934544248986+-0.85651273956172*-0.85651273956172+0.0006870141609987*${new_z})
variable           module        equal     sqrt(0.00071934544248986*0.00071934544248986+-0.85651273956172*-0.85651273956172+0.0006870141609987*0.0006870141609987)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00071934544248986/${module}
variable           unitx         equal     0.00071934544248986/0.856513317163163
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.85651273956172/${module}
variable           unity         equal     -0.85651273956172/0.856513317163163
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0006870141609987/${module}
variable           unitz         equal     0.0006870141609987/0.856513317163163
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.66501482173052e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.66501482173052e-06*-1.66501482173052e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.66501482173052e-06*-1.66501482173052e-06+1.19596417459178e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.66501482173052e-06*-1.66501482173052e-06+1.19596417459178e-09*1.19596417459178e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-1.66501482173052e-06*-1.66501482173052e-06+1.19596417459178e-09*1.19596417459178e-09+2.12202727492142e-06*${fz})
variable           f_module      equal     sqrt(-1.66501482173052e-06*-1.66501482173052e-06+1.19596417459178e-09*1.19596417459178e-09+2.12202727492142e-06*2.12202727492142e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000839853190925725*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000839853190925725*0.000839853190925725+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000839853190925725*0.000839853190925725+-0.999999325636355*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000839853190925725*0.000839853190925725+-0.999999325636355*-0.999999325636355+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000839853190925725*0.000839853190925725+-0.999999325636355*-0.999999325636355+0.000802105638326959*${unitz})
variable           dir_module    equal     sqrt(0.000839853190925725*0.000839853190925725+-0.999999325636355*-0.999999325636355+0.000802105638326959*0.000802105638326959)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.66501482173052e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.66501482173052e-06*0.000839853190925725+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.66501482173052e-06*0.000839853190925725+1.19596417459178e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -1.66501482173052e-06*0.000839853190925725+1.19596417459178e-09*-0.999999325636355+${fz}*${unitz}
variable           dot      equal     -1.66501482173052e-06*0.000839853190925725+1.19596417459178e-09*-0.999999325636355+2.12202727492142e-06*${unitz}
variable           dot      equal     -1.66501482173052e-06*0.000839853190925725+1.19596417459178e-09*-0.999999325636355+2.12202727492142e-06*0.000802105638326959
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.92241337147961e-10/${f_module}*${dir_module}
variable           cos      equal     -8.92241337147961e-10/2.69727187032065e-06*${dir_module}
variable           cos      equal     -8.92241337147961e-10/2.69727187032065e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.000330793994838159)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57112712079577/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0189531001383-90.0)
print              "The dot product: ${dot}"
The dot product: -8.92241337147961e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0189531001383

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5745   -1152448.3            0   -1152448.3 -0.0020262236    2.1002096 -0.0027700838 
    5937   -1152449.3            0   -1152449.3 -3.258898e-05 -2.6536338e-06 2.8621301e-05 
Loop time of 2.20792 on 104 procs for 192 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.33725842  -1152449.34502401  -1152449.34502401
  Force two-norm initial, final = 2.1002124 0.00022258707
  Force max component initial, final = 2.1002096 5.9118387e-05
  Final line search alpha, max atom move = 1.0000000 5.9118387e-05
  Iterations, force evaluations = 192 377

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59158    | 1.5917     | 2.0633     |  33.5 | 72.09
Neigh   | 5.0199e-05 | 0.014839   | 0.021311   |   5.0 |  0.67
Comm    | 0.037039   | 0.36021    | 1.0768     |  49.5 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0991e-05 | 0.0020195  | 0.0051737  |   2.8 |  0.09
Other   |            | 0.2392     |            |       | 10.83

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 5
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563881247638-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563881247638-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563881247638-1.16563631388477)^2+(4.02468141352735-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563881247638-1.16563631388477)^2+(4.02468141352735-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563881247638-1.16563631388477)^2+(4.02468141352735-4.02468295526234)^2+(31.3208736250911-${z_0})^2)
variable                displacement      equal     sqrt((1.16563881247638-1.16563631388477)^2+(4.02468141352735-4.02468295526234)^2+(31.3208736250911-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 9
9
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.342 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.84029 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48789    | 1.3257     | 1.7242     |  30.8 | 72.04
Neigh   | 3.0079e-05 | 0.0088854  | 0.012903   |   3.9 |  0.48
Comm    | 0.029066   | 0.29945    | 0.89917    |  45.7 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7051e-05 | 0.0016928  | 0.0043471  |   2.6 |  0.09
Other   |            | 0.2045     |            |       | 11.11

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,9)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,9)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,9)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.1898179087334
variable                y_1    equal     $y
variable                y_1    equal     4.04069469523159
variable                z_1    equal     $z
variable                z_1    equal     31.3045803833842

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.1898179087334  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.1898179087334  y  4.04069469523159  z  ${z_1}
set                atom        288751    x  1.1898179087334  y  4.04069469523159  z  31.3045803833842
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.1898179087334-${x_0}
variable           vector_x          equal     1.1898179087334-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.04069469523159-${y_0}
variable           vector_y          equal     4.04069469523159-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3045803833842-${z_0}
variable           vector_z          equal     31.3045803833842-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.0241815948486299  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.0241815948486299  0.0160117399692501  ${vector_z}
fix                hold    carbon   planeforce   0.0241815948486299  0.0160117399692501  -0.0162879395485014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 -0.017683602   0.06604577  0.038672172 
     346   -1152449.3            0   -1152449.3 -2.6190582e-06 -1.869344e-05 -2.2264787e-05 
Loop time of 2.18151 on 104 procs for 188 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33698289  -1152449.34250075  -1152449.34250075
  Force two-norm initial, final = 0.3554037 0.00016774518
  Force max component initial, final = 0.17878198 2.2264787e-05
  Final line search alpha, max atom move = 1.0000000 2.2264787e-05
  Iterations, force evaluations = 188 376

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57038    | 1.5787     | 2.0551     |  33.9 | 72.37
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036234   | 0.35479    | 1.0788     |  50.5 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1699e-05 | 0.0031154  | 0.0066517  |   2.6 |  0.14
Other   |            | 0.2449     |            |       | 11.22

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18887512093104-${x_0}
variable           new_x         equal     1.18887512093104-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.04242558426211-${y_0}
variable           new_y         equal     4.04242558426211-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3048822283409-${z_0}
variable           new_z         equal     31.3048822283409-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0232388070462699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0232388070462699^2+0.0177426289997706^2+${new_z}^2)
variable           norm          equal     sqrt(0.0232388070462699^2+0.0177426289997706^2+-0.0159860945917991^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0232388070462699/${norm}
variable           unit_x        equal     0.0232388070462699/0.0333226388069014
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0177426289997706/${norm}
variable           unit_y        equal     0.0177426289997706/0.0333226388069014
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0159860945917991/${norm}
variable           unit_z        equal     -0.0159860945917991/0.0333226388069014
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18887512093104+${delta}*${unit_x}
variable           x_new         equal     1.18887512093104+0.03*${unit_x}
variable           x_new         equal     1.18887512093104+0.03*0.697387958406732
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.04242558426211+${delta}*${unit_y}
variable           y_new         equal     4.04242558426211+0.03*${unit_y}
variable           y_new         equal     4.04242558426211+0.03*0.532449698914479
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3048822283409+${delta}*${unit_z}
variable           z_new         equal     31.3048822283409+0.03*${unit_z}
variable           z_new         equal     31.3048822283409+0.03*-0.479736754476006

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20979675968324  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20979675968324  y  4.05839907522954  z   ${z_new}
set                atom          288751    x  1.20979675968324  y  4.05839907522954  z   31.2904901257066
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0232388070462699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0232388070462699  0.0177426289997706  ${new_z}
fix                hold    carbon   planeforce   0.0232388070462699  0.0177426289997706  -0.0159860945917991
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     346   -1152449.3            0   -1152449.3 -0.026235809  0.069367816  0.038851173 
     547   -1152449.3            0   -1152449.3 3.1313062e-06 1.1040465e-05 1.6805524e-05 
Loop time of 2.34009 on 104 procs for 201 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.3315553  -1152449.33595401  -1152449.33595401
  Force two-norm initial, final = 0.31875779 9.0520219e-05
  Force max component initial, final = 0.15689055 1.6805524e-05
  Final line search alpha, max atom move = 1.0000000 1.6805524e-05
  Iterations, force evaluations = 201 402

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60869    | 1.6874     | 2.2107     |  35.1 | 72.11
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036332   | 0.38321    | 1.1493     |  51.4 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3319e-05 | 0.0033193  | 0.0070876  |   2.7 |  0.14
Other   |            | 0.2662     |            |       | 11.37

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115501 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.2078146783652-${x_0}
variable           new_x         equal     1.2078146783652-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.06178902693617-${y_0}
variable           new_y         equal     4.06178902693617-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2913712321004-${z_0}
variable           new_z         equal     31.2913712321004-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0421783644804299*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0421783644804299*0.0421783644804299+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0421783644804299*0.0421783644804299+0.0371060716738301*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0421783644804299*0.0421783644804299+0.0371060716738301*0.0371060716738301+${new_z}*${new_z})
variable           module        equal     sqrt(0.0421783644804299*0.0421783644804299+0.0371060716738301*0.0371060716738301+-0.0294970908323009*${new_z})
variable           module        equal     sqrt(0.0421783644804299*0.0421783644804299+0.0371060716738301*0.0371060716738301+-0.0294970908323009*-0.0294970908323009)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0421783644804299/${module}
variable           unitx         equal     0.0421783644804299/0.0634504007306212
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0371060716738301/${module}
variable           unity         equal     0.0371060716738301/0.0634504007306212
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0294970908323009/${module}
variable           unitz         equal     -0.0294970908323009/0.0634504007306212
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.13130621248106e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.13130621248106e-06*3.13130621248106e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.13130621248106e-06*3.13130621248106e-06+1.10404652197851e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.13130621248106e-06*3.13130621248106e-06+1.10404652197851e-05*1.10404652197851e-05+${fz}*${fz})
variable           f_module      equal     sqrt(3.13130621248106e-06*3.13130621248106e-06+1.10404652197851e-05*1.10404652197851e-05+1.6805524182865e-05*${fz})
variable           f_module      equal     sqrt(3.13130621248106e-06*3.13130621248106e-06+1.10404652197851e-05*1.10404652197851e-05+1.6805524182865e-05*1.6805524182865e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.664745438874346*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.664745438874346*0.664745438874346+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.664745438874346*0.664745438874346+0.584804370761408*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.664745438874346*0.664745438874346+0.584804370761408*0.584804370761408+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.664745438874346*0.664745438874346+0.584804370761408*0.584804370761408+-0.464884232292415*${unitz})
variable           dir_module    equal     sqrt(0.664745438874346*0.664745438874346+0.584804370761408*0.584804370761408+-0.464884232292415*-0.464884232292415)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.13130621248106e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.13130621248106e-06*0.664745438874346+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.13130621248106e-06*0.664745438874346+1.10404652197851e-05*${unity}+${fz}*${unitz}
variable           dot      equal     3.13130621248106e-06*0.664745438874346+1.10404652197851e-05*0.584804370761408+${fz}*${unitz}
variable           dot      equal     3.13130621248106e-06*0.664745438874346+1.10404652197851e-05*0.584804370761408+1.6805524182865e-05*${unitz}
variable           dot      equal     3.13130621248106e-06*0.664745438874346+1.10404652197851e-05*0.584804370761408+1.6805524182865e-05*-0.464884232292415
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.25410630212515e-07/${f_module}*${dir_module}
variable           cos      equal     7.25410630212515e-07/2.03500023077755e-05*${dir_module}
variable           cos      equal     7.25410630212515e-07/2.03500023077755e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0356467099728703)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53514206319463/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.9571611740578-90.0)
print              "The dot product: ${dot}"
The dot product: 7.25410630212515e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.9571611740578

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0421783644804299^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0421783644804299^2+0.0371060716738301^2+${new_z}^2)
variable           norm          equal     sqrt(0.0421783644804299^2+0.0371060716738301^2+-0.0294970908323009^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0421783644804299/${norm}
variable           unit_x        equal     0.0421783644804299/0.0634504007306212
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0371060716738301/${norm}
variable           unit_y        equal     0.0371060716738301/0.0634504007306212
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0294970908323009/${norm}
variable           unit_z        equal     -0.0294970908323009/0.0634504007306212
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.2078146783652+${delta}*${unit_x}
variable           x_new         equal     1.2078146783652+0.03*${unit_x}
variable           x_new         equal     1.2078146783652+0.03*0.664745438874346
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.06178902693617+${delta}*${unit_y}
variable           y_new         equal     4.06178902693617+0.03*${unit_y}
variable           y_new         equal     4.06178902693617+0.03*0.584804370761408
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2913712321004+${delta}*${unit_z}
variable           z_new         equal     31.2913712321004+0.03*${unit_z}
variable           z_new         equal     31.2913712321004+0.03*-0.464884232292415

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22775704153143  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22775704153143  y  4.07933315805901  z   ${z_new}
set                atom          288751    x  1.22775704153143  y  4.07933315805901  z   31.2774247051316
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0421783644804299  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0421783644804299  0.0371060716738301  ${new_z}
fix                hold    carbon   planeforce   0.0421783644804299  0.0371060716738301  -0.0294970908323009
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     547   -1152449.3            0   -1152449.3 -0.034878543  0.078404809  0.048756487 
     732   -1152449.3            0   -1152449.3 6.1648034e-06 -2.5546146e-05 -2.3320802e-05 
Loop time of 2.14259 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32119667  -1152449.32548837  -1152449.32548837
  Force two-norm initial, final = 0.31695364 0.0001467545
  Force max component initial, final = 0.15084613 2.9039715e-05
  Final line search alpha, max atom move = 1.0000000 2.9039715e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55986    | 1.5541     | 2.0208     |  33.7 | 72.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03292    | 0.3505     | 1.0675     |  50.3 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1453e-05 | 0.0030621  | 0.0065901  |   2.6 |  0.14
Other   |            | 0.2349     |            |       | 10.96

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115474 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22486809457399-${x_0}
variable           new_x         equal     1.22486809457399-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.08452561562162-${y_0}
variable           new_y         equal     4.08452561562162-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2798256417238-${z_0}
variable           new_z         equal     31.2798256417238-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05923178068922*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05923178068922*0.05923178068922+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05923178068922*0.05923178068922+0.0598426603592799*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05923178068922*0.05923178068922+0.0598426603592799*0.0598426603592799+${new_z}*${new_z})
variable           module        equal     sqrt(0.05923178068922*0.05923178068922+0.0598426603592799*0.0598426603592799+-0.0410426812089*${new_z})
variable           module        equal     sqrt(0.05923178068922*0.05923178068922+0.0598426603592799*0.0598426603592799+-0.0410426812089*-0.0410426812089)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.05923178068922/${module}
variable           unitx         equal     0.05923178068922/0.0936698965693215
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0598426603592799/${module}
variable           unity         equal     0.0598426603592799/0.0936698965693215
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0410426812089/${module}
variable           unitz         equal     -0.0410426812089/0.0936698965693215
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.16480339008986e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.16480339008986e-06*6.16480339008986e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.16480339008986e-06*6.16480339008986e-06+-2.55461460583143e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.16480339008986e-06*6.16480339008986e-06+-2.55461460583143e-05*-2.55461460583143e-05+${fz}*${fz})
variable           f_module      equal     sqrt(6.16480339008986e-06*6.16480339008986e-06+-2.55461460583143e-05*-2.55461460583143e-05+-2.33208015735349e-05*${fz})
variable           f_module      equal     sqrt(6.16480339008986e-06*6.16480339008986e-06+-2.55461460583143e-05*-2.55461460583143e-05+-2.33208015735349e-05*-2.33208015735349e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.632345960213427*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.632345960213427*0.632345960213427+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.632345960213427*0.632345960213427+0.638867582339996*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.632345960213427*0.632345960213427+0.638867582339996*0.638867582339996+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.632345960213427*0.632345960213427+0.638867582339996*0.638867582339996+-0.438162982047556*${unitz})
variable           dir_module    equal     sqrt(0.632345960213427*0.632345960213427+0.638867582339996*0.638867582339996+-0.438162982047556*-0.438162982047556)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.16480339008986e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.16480339008986e-06*0.632345960213427+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.16480339008986e-06*0.632345960213427+-2.55461460583143e-05*${unity}+${fz}*${unitz}
variable           dot      equal     6.16480339008986e-06*0.632345960213427+-2.55461460583143e-05*0.638867582339996+${fz}*${unitz}
variable           dot      equal     6.16480339008986e-06*0.632345960213427+-2.55461460583143e-05*0.638867582339996+-2.33208015735349e-05*${unitz}
variable           dot      equal     6.16480339008986e-06*0.632345960213427+-2.55461460583143e-05*0.638867582339996+-2.33208015735349e-05*-0.438162982047556
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.20400408994693e-06/${f_module}*${dir_module}
variable           cos      equal     -2.20400408994693e-06/3.5135027612105e-05*${dir_module}
variable           cos      equal     -2.20400408994693e-06/3.5135027612105e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0627295391447932)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.6335670790308/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.5964991799786-90.0)
print              "The dot product: ${dot}"
The dot product: -2.20400408994693e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.5964991799786

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05923178068922^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05923178068922^2+0.0598426603592799^2+${new_z}^2)
variable           norm          equal     sqrt(0.05923178068922^2+0.0598426603592799^2+-0.0410426812089^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.05923178068922/${norm}
variable           unit_x        equal     0.05923178068922/0.0936698965693215
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0598426603592799/${norm}
variable           unit_y        equal     0.0598426603592799/0.0936698965693215
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0410426812089/${norm}
variable           unit_z        equal     -0.0410426812089/0.0936698965693215
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22486809457399+${delta}*${unit_x}
variable           x_new         equal     1.22486809457399+0.03*${unit_x}
variable           x_new         equal     1.22486809457399+0.03*0.632345960213427
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.08452561562162+${delta}*${unit_y}
variable           y_new         equal     4.08452561562162+0.03*${unit_y}
variable           y_new         equal     4.08452561562162+0.03*0.638867582339996
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2798256417238+${delta}*${unit_z}
variable           z_new         equal     31.2798256417238+0.03*${unit_z}
variable           z_new         equal     31.2798256417238+0.03*-0.438162982047556

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24383847338039  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24383847338039  y  4.10369164309182  z   ${z_new}
set                atom          288751    x  1.24383847338039  y  4.10369164309182  z   31.2666807522624
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05923178068922  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05923178068922  0.0598426603592799  ${new_z}
fix                hold    carbon   planeforce   0.05923178068922  0.0598426603592799  -0.0410426812089
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     732   -1152449.3            0   -1152449.3 -0.039802854  0.086487962  0.068662079 
     911   -1152449.3            0   -1152449.3 1.4652091e-05 -2.3920645e-05 -1.3732182e-05 
Loop time of 2.08318 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30737373  -1152449.31159968  -1152449.31159968
  Force two-norm initial, final = 0.31626643 0.00012208406
  Force max component initial, final = 0.14187791 2.5560682e-05
  Final line search alpha, max atom move = 1.0000000 2.5560682e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54292    | 1.5048     | 1.9677     |  33.1 | 72.23
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033374   | 0.3439     | 1.0398     |  48.7 | 16.51
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1866e-05 | 0.0029531  | 0.0063691  |   2.6 |  0.14
Other   |            | 0.2316     |            |       | 11.12

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115483 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24133628326111-${x_0}
variable           new_x         equal     1.24133628326111-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.11103555802298-${y_0}
variable           new_y         equal     4.11103555802298-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2737775164594-${z_0}
variable           new_z         equal     31.2737775164594-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0756999693763398*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0756999693763398*0.0756999693763398+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0756999693763398*0.0756999693763398+0.0863526027606403*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0756999693763398*0.0756999693763398+0.0863526027606403*0.0863526027606403+${new_z}*${new_z})
variable           module        equal     sqrt(0.0756999693763398*0.0756999693763398+0.0863526027606403*0.0863526027606403+-0.0470908064732996*${new_z})
variable           module        equal     sqrt(0.0756999693763398*0.0756999693763398+0.0863526027606403*0.0863526027606403+-0.0470908064732996*-0.0470908064732996)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0756999693763398/${module}
variable           unitx         equal     0.0756999693763398/0.124116080430464
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0863526027606403/${module}
variable           unity         equal     0.0863526027606403/0.124116080430464
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0470908064732996/${module}
variable           unitz         equal     -0.0470908064732996/0.124116080430464
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.46520911746894e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.46520911746894e-05*1.46520911746894e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.46520911746894e-05*1.46520911746894e-05+-2.39206450031019e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.46520911746894e-05*1.46520911746894e-05+-2.39206450031019e-05*-2.39206450031019e-05+${fz}*${fz})
variable           f_module      equal     sqrt(1.46520911746894e-05*1.46520911746894e-05+-2.39206450031019e-05*-2.39206450031019e-05+-1.37321823717072e-05*${fz})
variable           f_module      equal     sqrt(1.46520911746894e-05*1.46520911746894e-05+-2.39206450031019e-05*-2.39206450031019e-05+-1.37321823717072e-05*-1.37321823717072e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.609912664932653*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.609912664932653*0.609912664932653+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.609912664932653*0.609912664932653+0.695740652308299*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.609912664932653*0.609912664932653+0.695740652308299*0.695740652308299+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.609912664932653*0.609912664932653+0.695740652308299*0.695740652308299+-0.379409390870043*${unitz})
variable           dir_module    equal     sqrt(0.609912664932653*0.609912664932653+0.695740652308299*0.695740652308299+-0.379409390870043*-0.379409390870043)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.46520911746894e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.46520911746894e-05*0.609912664932653+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.46520911746894e-05*0.609912664932653+-2.39206450031019e-05*${unity}+${fz}*${unitz}
variable           dot      equal     1.46520911746894e-05*0.609912664932653+-2.39206450031019e-05*0.695740652308299+${fz}*${unitz}
variable           dot      equal     1.46520911746894e-05*0.609912664932653+-2.39206450031019e-05*0.695740652308299+-1.37321823717072e-05*${unitz}
variable           dot      equal     1.46520911746894e-05*0.609912664932653+-2.39206450031019e-05*0.695740652308299+-1.37321823717072e-05*-0.379409390870043
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.49595023393658e-06/${f_module}*${dir_module}
variable           cos      equal     -2.49595023393658e-06/3.12322568164015e-05*${dir_module}
variable           cos      equal     -2.49595023393658e-06/3.12322568164015e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0799157822186529)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.65079741853613/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(94.5837249132116-90.0)
print              "The dot product: ${dot}"
The dot product: -2.49595023393658e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 94.5837249132116

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0756999693763398^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0756999693763398^2+0.0863526027606403^2+${new_z}^2)
variable           norm          equal     sqrt(0.0756999693763398^2+0.0863526027606403^2+-0.0470908064732996^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0756999693763398/${norm}
variable           unit_x        equal     0.0756999693763398/0.124116080430464
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0863526027606403/${norm}
variable           unit_y        equal     0.0863526027606403/0.124116080430464
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0470908064732996/${norm}
variable           unit_z        equal     -0.0470908064732996/0.124116080430464
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24133628326111+${delta}*${unit_x}
variable           x_new         equal     1.24133628326111+0.03*${unit_x}
variable           x_new         equal     1.24133628326111+0.03*0.609912664932653
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.11103555802298+${delta}*${unit_y}
variable           y_new         equal     4.11103555802298+0.03*${unit_y}
variable           y_new         equal     4.11103555802298+0.03*0.695740652308299
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2737775164594+${delta}*${unit_z}
variable           z_new         equal     31.2737775164594+0.03*${unit_z}
variable           z_new         equal     31.2737775164594+0.03*-0.379409390870043

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25963366320909  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25963366320909  y  4.13190777759223  z   ${z_new}
set                atom          288751    x  1.25963366320909  y  4.13190777759223  z   31.2623952347333
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0756999693763398  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0756999693763398  0.0863526027606403  ${new_z}
fix                hold    carbon   planeforce   0.0756999693763398  0.0863526027606403  -0.0470908064732996
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     911   -1152449.3            0   -1152449.3 -0.047234144   0.08736997  0.084283989 
    1000   -1152449.3            0   -1152449.3 -1.842279e-05 2.7391888e-05 2.061456e-05 
    1100   -1152449.3            0   -1152449.3 -3.3457791e-06 5.1930574e-06 4.1443046e-06 
Loop time of 2.19311 on 104 procs for 189 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.29081208  -1152449.29494066  -1152449.29494066
  Force two-norm initial, final = 0.3123954 4.2517208e-05
  Force max component initial, final = 0.12795174 9.0353937e-06
  Final line search alpha, max atom move = 1.0000000 9.0353937e-06
  Iterations, force evaluations = 189 378

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5753     | 1.5845     | 2.0608     |  33.8 | 72.25
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033843   | 0.35566    | 1.0796     |  50.4 | 16.22
Output  | 0.00015422 | 0.00015915 | 0.00029577 |   0.0 |  0.01
Modify  | 2.2749e-05 | 0.0031146  | 0.0066851  |   2.6 |  0.14
Other   |            | 0.2497     |            |       | 11.38

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115485 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25682528948535-${x_0}
variable           new_x         equal     1.25682528948535-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.14017758923405-${y_0}
variable           new_y         equal     4.14017758923405-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2730454230031-${z_0}
variable           new_z         equal     31.2730454230031-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0911889756005799*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0911889756005799*0.0911889756005799+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0911889756005799*0.0911889756005799+0.115494633971711*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0911889756005799*0.0911889756005799+0.115494633971711*0.115494633971711+${new_z}*${new_z})
variable           module        equal     sqrt(0.0911889756005799*0.0911889756005799+0.115494633971711*0.115494633971711+-0.0478228999295993*${new_z})
variable           module        equal     sqrt(0.0911889756005799*0.0911889756005799+0.115494633971711*0.115494633971711+-0.0478228999295993*-0.0478228999295993)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0911889756005799/${module}
variable           unitx         equal     0.0911889756005799/0.154730312172564
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.115494633971711/${module}
variable           unity         equal     0.115494633971711/0.154730312172564
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0478228999295993/${module}
variable           unitz         equal     -0.0478228999295993/0.154730312172564
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.34577912464278e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.34577912464278e-06*-3.34577912464278e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.34577912464278e-06*-3.34577912464278e-06+5.19305741156124e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.34577912464278e-06*-3.34577912464278e-06+5.19305741156124e-06*5.19305741156124e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.34577912464278e-06*-3.34577912464278e-06+5.19305741156124e-06*5.19305741156124e-06+4.14430461282959e-06*${fz})
variable           f_module      equal     sqrt(-3.34577912464278e-06*-3.34577912464278e-06+5.19305741156124e-06*5.19305741156124e-06+4.14430461282959e-06*4.14430461282959e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.589341379334133*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.589341379334133*0.589341379334133+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.589341379334133*0.589341379334133+0.74642539234914*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.589341379334133*0.589341379334133+0.74642539234914*0.74642539234914+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.589341379334133*0.589341379334133+0.74642539234914*0.74642539234914+-0.309072600307718*${unitz})
variable           dir_module    equal     sqrt(0.589341379334133*0.589341379334133+0.74642539234914*0.74642539234914+-0.309072600307718*-0.309072600307718)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.34577912464278e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.34577912464278e-06*0.589341379334133+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.34577912464278e-06*0.589341379334133+5.19305741156124e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.34577912464278e-06*0.589341379334133+5.19305741156124e-06*0.74642539234914+${fz}*${unitz}
variable           dot      equal     -3.34577912464278e-06*0.589341379334133+5.19305741156124e-06*0.74642539234914+4.14430461282959e-06*${unitz}
variable           dot      equal     -3.34577912464278e-06*0.589341379334133+5.19305741156124e-06*0.74642539234914+4.14430461282959e-06*-0.309072600307718
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.23532828497372e-07/${f_module}*${dir_module}
variable           cos      equal     6.23532828497372e-07/7.43890744360939e-06*${dir_module}
variable           cos      equal     6.23532828497372e-07/7.43890744360939e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0838204848257705)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.48687737832045/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(85.1917984312384-90.0)
print              "The dot product: ${dot}"
The dot product: 6.23532828497372e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 85.1917984312384

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0911889756005799^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0911889756005799^2+0.115494633971711^2+${new_z}^2)
variable           norm          equal     sqrt(0.0911889756005799^2+0.115494633971711^2+-0.0478228999295993^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0911889756005799/${norm}
variable           unit_x        equal     0.0911889756005799/0.154730312172564
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.115494633971711/${norm}
variable           unit_y        equal     0.115494633971711/0.154730312172564
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0478228999295993/${norm}
variable           unit_z        equal     -0.0478228999295993/0.154730312172564
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25682528948535+${delta}*${unit_x}
variable           x_new         equal     1.25682528948535+0.03*${unit_x}
variable           x_new         equal     1.25682528948535+0.03*0.589341379334133
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.14017758923405+${delta}*${unit_y}
variable           y_new         equal     4.14017758923405+0.03*${unit_y}
variable           y_new         equal     4.14017758923405+0.03*0.74642539234914
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2730454230031+${delta}*${unit_z}
variable           z_new         equal     31.2730454230031+0.03*${unit_z}
variable           z_new         equal     31.2730454230031+0.03*-0.309072600307718

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27450553086537  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27450553086537  y  4.16257035100452  z   ${z_new}
set                atom          288751    x  1.27450553086537  y  4.16257035100452  z   31.2637732449939
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0911889756005799  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0911889756005799  0.115494633971711  ${new_z}
fix                hold    carbon   planeforce   0.0911889756005799  0.115494633971711  -0.0478228999295993
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1100   -1152449.3            0   -1152449.3 -0.055317915  0.079349428  0.086152223 
    1270   -1152449.3            0   -1152449.3 2.1817324e-06 -2.2823754e-06 -1.3519083e-06 
Loop time of 1.99112 on 104 procs for 170 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.27166715  -1152449.27558186  -1152449.27558186
  Force two-norm initial, final = 0.30326711 0.0001467002
  Force max component initial, final = 0.13991134 1.3858078e-05
  Final line search alpha, max atom move = 1.0000000 1.3858078e-05
  Iterations, force evaluations = 170 340

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51899    | 1.432      | 1.8713     |  32.2 | 71.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033083   | 0.33042    | 0.99947    |  47.2 | 16.59
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9965e-05 | 0.0028044  | 0.0060373  |   2.5 |  0.14
Other   |            | 0.2259     |            |       | 11.34

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115490 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27012695552362-${x_0}
variable           new_x         equal     1.27012695552362-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.17052064815826-${y_0}
variable           new_y         equal     4.17052064815826-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2746245078931-${z_0}
variable           new_z         equal     31.2746245078931-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10449064163885*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10449064163885*0.10449064163885+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10449064163885*0.10449064163885+0.14583769289592*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.10449064163885*0.10449064163885+0.14583769289592*0.14583769289592+${new_z}*${new_z})
variable           module        equal     sqrt(0.10449064163885*0.10449064163885+0.14583769289592*0.14583769289592+-0.046243815039599*${new_z})
variable           module        equal     sqrt(0.10449064163885*0.10449064163885+0.14583769289592*0.14583769289592+-0.046243815039599*-0.046243815039599)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.10449064163885/${module}
variable           unitx         equal     0.10449064163885/0.185271199296382
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.14583769289592/${module}
variable           unity         equal     0.14583769289592/0.185271199296382
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.046243815039599/${module}
variable           unitz         equal     -0.046243815039599/0.185271199296382
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.18173236859065e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.18173236859065e-06*2.18173236859065e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.18173236859065e-06*2.18173236859065e-06+-2.28237541470226e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.18173236859065e-06*2.18173236859065e-06+-2.28237541470226e-06*-2.28237541470226e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.18173236859065e-06*2.18173236859065e-06+-2.28237541470226e-06*-2.28237541470226e-06+-1.35190825865456e-06*${fz})
variable           f_module      equal     sqrt(2.18173236859065e-06*2.18173236859065e-06+-2.28237541470226e-06*-2.28237541470226e-06+-1.35190825865456e-06*-1.35190825865456e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563987506075859*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563987506075859*0.563987506075859+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563987506075859*0.563987506075859+0.78715792551556*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563987506075859*0.563987506075859+0.78715792551556*0.78715792551556+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.563987506075859*0.563987506075859+0.78715792551556*0.78715792551556+-0.249600667644094*${unitz})
variable           dir_module    equal     sqrt(0.563987506075859*0.563987506075859+0.78715792551556*0.78715792551556+-0.249600667644094*-0.249600667644094)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.18173236859065e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.18173236859065e-06*0.563987506075859+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.18173236859065e-06*0.563987506075859+-2.28237541470226e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.18173236859065e-06*0.563987506075859+-2.28237541470226e-06*0.78715792551556+${fz}*${unitz}
variable           dot      equal     2.18173236859065e-06*0.563987506075859+-2.28237541470226e-06*0.78715792551556+-1.35190825865456e-06*${unitz}
variable           dot      equal     2.18173236859065e-06*0.563987506075859+-2.28237541470226e-06*0.78715792551556+-1.35190825865456e-06*-0.249600667644094
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.28682895244587e-07/${f_module}*${dir_module}
variable           cos      equal     -2.28682895244587e-07/3.43465421863859e-06*${dir_module}
variable           cos      equal     -2.28682895244587e-07/3.43465421863859e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0665810531970322)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.63742667109265/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.8176375157648-90.0)
print              "The dot product: ${dot}"
The dot product: -2.28682895244587e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.8176375157648

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10449064163885^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.10449064163885^2+0.14583769289592^2+${new_z}^2)
variable           norm          equal     sqrt(0.10449064163885^2+0.14583769289592^2+-0.046243815039599^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.10449064163885/${norm}
variable           unit_x        equal     0.10449064163885/0.185271199296382
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.14583769289592/${norm}
variable           unit_y        equal     0.14583769289592/0.185271199296382
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.046243815039599/${norm}
variable           unit_z        equal     -0.046243815039599/0.185271199296382
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27012695552362+${delta}*${unit_x}
variable           x_new         equal     1.27012695552362+0.03*${unit_x}
variable           x_new         equal     1.27012695552362+0.03*0.563987506075859
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.17052064815826+${delta}*${unit_y}
variable           y_new         equal     4.17052064815826+0.03*${unit_y}
variable           y_new         equal     4.17052064815826+0.03*0.78715792551556
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2746245078931+${delta}*${unit_z}
variable           z_new         equal     31.2746245078931+0.03*${unit_z}
variable           z_new         equal     31.2746245078931+0.03*-0.249600667644094

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2870465807059  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2870465807059  y  4.19413538592373  z   ${z_new}
set                atom          288751    x  1.2870465807059  y  4.19413538592373  z   31.2671364878638
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10449064163885  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.10449064163885  0.14583769289592  ${new_z}
fix                hold    carbon   planeforce   0.10449064163885  0.14583769289592  -0.046243815039599
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1270   -1152449.2            0   -1152449.2 -0.059364697  0.067420583   0.07848416 
    1390   -1152449.3            0   -1152449.3 -4.7525181e-05 5.2309341e-05 5.7580391e-05 
Loop time of 1.38932 on 104 procs for 120 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.24969441  -1152449.25335229  -1152449.25335229
  Force two-norm initial, final = 0.29134417 0.00027236765
  Force max component initial, final = 0.1524118 6.9259028e-05
  Final line search alpha, max atom move = 1.0000000 6.9259028e-05
  Iterations, force evaluations = 120 240

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.36602    | 1.0088     | 1.3124     |  27.0 | 72.61
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.020817   | 0.22674    | 0.6878     |  40.2 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.4119e-05 | 0.0019821  | 0.0042458  |   2.1 |  0.14
Other   |            | 0.1518     |            |       | 10.92

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.03 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115489 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28139299074573-${x_0}
variable           new_x         equal     1.28139299074573-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.20114432951457-${y_0}
variable           new_y         equal     4.20114432951457-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2764657553572-${z_0}
variable           new_z         equal     31.2764657553572-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11575667686096*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11575667686096*0.11575667686096+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11575667686096*0.11575667686096+0.17646137425223*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11575667686096*0.11575667686096+0.17646137425223*0.17646137425223+${new_z}*${new_z})
variable           module        equal     sqrt(0.11575667686096*0.11575667686096+0.17646137425223*0.17646137425223+-0.0444025675754993*${new_z})
variable           module        equal     sqrt(0.11575667686096*0.11575667686096+0.17646137425223*0.17646137425223+-0.0444025675754993*-0.0444025675754993)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.11575667686096/${module}
variable           unitx         equal     0.11575667686096/0.215661338325104
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.17646137425223/${module}
variable           unity         equal     0.17646137425223/0.215661338325104
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0444025675754993/${module}
variable           unitz         equal     -0.0444025675754993/0.215661338325104
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.75251812992875e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.75251812992875e-05*-4.75251812992875e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.75251812992875e-05*-4.75251812992875e-05+5.23093410695086e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.75251812992875e-05*-4.75251812992875e-05+5.23093410695086e-05*5.23093410695086e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-4.75251812992875e-05*-4.75251812992875e-05+5.23093410695086e-05*5.23093410695086e-05+5.75803905502429e-05*${fz})
variable           f_module      equal     sqrt(-4.75251812992875e-05*-4.75251812992875e-05+5.23093410695086e-05*5.23093410695086e-05+5.75803905502429e-05*5.75803905502429e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.536752102903394*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.536752102903394*0.536752102903394+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.536752102903394*0.536752102903394+0.818233697438244*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.536752102903394*0.536752102903394+0.818233697438244*0.818233697438244+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.536752102903394*0.536752102903394+0.818233697438244*0.818233697438244+-0.205890253303369*${unitz})
variable           dir_module    equal     sqrt(0.536752102903394*0.536752102903394+0.818233697438244*0.818233697438244+-0.205890253303369*-0.205890253303369)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.75251812992875e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.75251812992875e-05*0.536752102903394+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.75251812992875e-05*0.536752102903394+5.23093410695086e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -4.75251812992875e-05*0.536752102903394+5.23093410695086e-05*0.818233697438244+${fz}*${unitz}
variable           dot      equal     -4.75251812992875e-05*0.536752102903394+5.23093410695086e-05*0.818233697438244+5.75803905502429e-05*${unitz}
variable           dot      equal     -4.75251812992875e-05*0.536752102903394+5.23093410695086e-05*0.818233697438244+5.75803905502429e-05*-0.205890253303369
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.43678335490816e-06/${f_module}*${dir_module}
variable           cos      equal     5.43678335490816e-06/9.11614578458178e-05*${dir_module}
variable           cos      equal     5.43678335490816e-06/9.11614578458178e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0596390567174062)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.51112185916795/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.5809048602859-90.0)
print              "The dot product: ${dot}"
The dot product: 5.43678335490816e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.5809048602859

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11575667686096^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11575667686096^2+0.17646137425223^2+${new_z}^2)
variable           norm          equal     sqrt(0.11575667686096^2+0.17646137425223^2+-0.0444025675754993^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.11575667686096/${norm}
variable           unit_x        equal     0.11575667686096/0.215661338325104
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.17646137425223/${norm}
variable           unit_y        equal     0.17646137425223/0.215661338325104
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0444025675754993/${norm}
variable           unit_z        equal     -0.0444025675754993/0.215661338325104
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28139299074573+${delta}*${unit_x}
variable           x_new         equal     1.28139299074573+0.03*${unit_x}
variable           x_new         equal     1.28139299074573+0.03*0.536752102903394
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.20114432951457+${delta}*${unit_y}
variable           y_new         equal     4.20114432951457+0.03*${unit_y}
variable           y_new         equal     4.20114432951457+0.03*0.818233697438244
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2764657553572+${delta}*${unit_z}
variable           z_new         equal     31.2764657553572+0.03*${unit_z}
variable           z_new         equal     31.2764657553572+0.03*-0.205890253303369

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29749555383283  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.29749555383283  y  4.22569134043772  z   ${z_new}
set                atom          288751    x  1.29749555383283  y  4.22569134043772  z   31.2702890477581
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11575667686096  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11575667686096  0.17646137425223  ${new_z}
fix                hold    carbon   planeforce   0.11575667686096  0.17646137425223  -0.0444025675754993
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1390   -1152449.2            0   -1152449.2 -0.059808829  0.055998778  0.066625654 
    1583   -1152449.2            0   -1152449.2 1.0119818e-05 -9.4616557e-06 -1.1219626e-05 
Loop time of 2.2653 on 104 procs for 193 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.22458968  -1152449.22802628  -1152449.22802628
  Force two-norm initial, final = 0.280426 6.8941103e-05
  Force max component initial, final = 0.16351104 1.4482274e-05
  Final line search alpha, max atom move = 1.0000000 1.4482274e-05
  Iterations, force evaluations = 193 386

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58494    | 1.6231     | 2.115      |  34.3 | 71.65
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038573   | 0.36962    | 1.0991     |  50.2 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2329e-05 | 0.0031815  | 0.006838   |   2.7 |  0.14
Other   |            | 0.2694     |            |       | 11.89

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.03 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115490 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29105733495251-${x_0}
variable           new_x         equal     1.29105733495251-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.23181095824877-${y_0}
variable           new_y         equal     4.23181095824877-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2778248585158-${z_0}
variable           new_z         equal     31.2778248585158-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12542102106774*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12542102106774*0.12542102106774+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12542102106774*0.12542102106774+0.207128002986431*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12542102106774*0.12542102106774+0.207128002986431*0.207128002986431+${new_z}*${new_z})
variable           module        equal     sqrt(0.12542102106774*0.12542102106774+0.207128002986431*0.207128002986431+-0.0430434644169004*${new_z})
variable           module        equal     sqrt(0.12542102106774*0.12542102106774+0.207128002986431*0.207128002986431+-0.0430434644169004*-0.0430434644169004)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12542102106774/${module}
variable           unitx         equal     0.12542102106774/0.245937353762763
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.207128002986431/${module}
variable           unity         equal     0.207128002986431/0.245937353762763
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0430434644169004/${module}
variable           unitz         equal     -0.0430434644169004/0.245937353762763
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.01198183377171e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.01198183377171e-05*1.01198183377171e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.01198183377171e-05*1.01198183377171e-05+-9.46165565493973e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.01198183377171e-05*1.01198183377171e-05+-9.46165565493973e-06*-9.46165565493973e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.01198183377171e-05*1.01198183377171e-05+-9.46165565493973e-06*-9.46165565493973e-06+-1.12196263748786e-05*${fz})
variable           f_module      equal     sqrt(1.01198183377171e-05*1.01198183377171e-05+-9.46165565493973e-06*-9.46165565493973e-06+-1.12196263748786e-05*-1.12196263748786e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.509971418122698*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.509971418122698*0.509971418122698+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.509971418122698*0.509971418122698+0.842198225757245*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.509971418122698*0.509971418122698+0.842198225757245*0.842198225757245+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.509971418122698*0.509971418122698+0.842198225757245*0.842198225757245+-0.175018002586224*${unitz})
variable           dir_module    equal     sqrt(0.509971418122698*0.509971418122698+0.842198225757245*0.842198225757245+-0.175018002586224*-0.175018002586224)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.01198183377171e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.01198183377171e-05*0.509971418122698+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.01198183377171e-05*0.509971418122698+-9.46165565493973e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.01198183377171e-05*0.509971418122698+-9.46165565493973e-06*0.842198225757245+${fz}*${unitz}
variable           dot      equal     1.01198183377171e-05*0.509971418122698+-9.46165565493973e-06*0.842198225757245+-1.12196263748786e-05*${unitz}
variable           dot      equal     1.01198183377171e-05*0.509971418122698+-9.46165565493973e-06*0.842198225757245+-1.12196263748786e-05*-0.175018002586224
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.44134898591601e-07/${f_module}*${dir_module}
variable           cos      equal     -8.44134898591601e-07/1.78273292142407e-05*${dir_module}
variable           cos      equal     -8.44134898591601e-07/1.78273292142407e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0473506091937369)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61816464784174/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.7140048786048-90.0)
print              "The dot product: ${dot}"
The dot product: -8.44134898591601e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.7140048786048

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12542102106774^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12542102106774^2+0.207128002986431^2+${new_z}^2)
variable           norm          equal     sqrt(0.12542102106774^2+0.207128002986431^2+-0.0430434644169004^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12542102106774/${norm}
variable           unit_x        equal     0.12542102106774/0.245937353762763
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.207128002986431/${norm}
variable           unit_y        equal     0.207128002986431/0.245937353762763
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0430434644169004/${norm}
variable           unit_z        equal     -0.0430434644169004/0.245937353762763
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29105733495251+${delta}*${unit_x}
variable           x_new         equal     1.29105733495251+0.03*${unit_x}
variable           x_new         equal     1.29105733495251+0.03*0.509971418122698
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.23181095824877+${delta}*${unit_y}
variable           y_new         equal     4.23181095824877+0.03*${unit_y}
variable           y_new         equal     4.23181095824877+0.03*0.842198225757245
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2778248585158+${delta}*${unit_z}
variable           z_new         equal     31.2778248585158+0.03*${unit_z}
variable           z_new         equal     31.2778248585158+0.03*-0.175018002586224

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30635647749619  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30635647749619  y  4.25707690502149  z   ${z_new}
set                atom          288751    x  1.30635647749619  y  4.25707690502149  z   31.2725743184382
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12542102106774  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12542102106774  0.207128002986431  ${new_z}
fix                hold    carbon   planeforce   0.12542102106774  0.207128002986431  -0.0430434644169004
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1583   -1152449.2            0   -1152449.2 -0.059415624  0.048353117  0.059551814 
    1706   -1152449.2            0   -1152449.2 3.2017593e-05 -2.6163392e-05 -3.2606387e-05 
Loop time of 1.42226 on 104 procs for 123 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.19621062  -1152449.19953059  -1152449.19953059
  Force two-norm initial, final = 0.27364653 0.00018636431
  Force max component initial, final = 0.1736007 4.3222332e-05
  Final line search alpha, max atom move = 1.0000000 4.3222332e-05
  Iterations, force evaluations = 123 246

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.37161    | 1.0332     | 1.344      |  27.5 | 72.65
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.021238   | 0.23311    | 0.70891    |  40.8 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.4775e-05 | 0.0020315  | 0.0043621  |   2.1 |  0.14
Other   |            | 0.1539     |            |       | 10.82

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.03 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115489 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29916389050763-${x_0}
variable           new_x         equal     1.29916389050763-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.26298534538251-${y_0}
variable           new_y         equal     4.26298534538251-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.280048202171-${z_0}
variable           new_z         equal     31.280048202171-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13352757662286*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13352757662286*0.13352757662286+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13352757662286*0.13352757662286+0.23830239012017*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13352757662286*0.13352757662286+0.23830239012017*0.23830239012017+${new_z}*${new_z})
variable           module        equal     sqrt(0.13352757662286*0.13352757662286+0.23830239012017*0.23830239012017+-0.0408201207617012*${new_z})
variable           module        equal     sqrt(0.13352757662286*0.13352757662286+0.23830239012017*0.23830239012017+-0.0408201207617012*-0.0408201207617012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13352757662286/${module}
variable           unitx         equal     0.13352757662286/0.276195447309979
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.23830239012017/${module}
variable           unity         equal     0.23830239012017/0.276195447309979
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0408201207617012/${module}
variable           unitz         equal     -0.0408201207617012/0.276195447309979
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.20175933564204e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.20175933564204e-05*3.20175933564204e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.20175933564204e-05*3.20175933564204e-05+-2.61633917904839e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.20175933564204e-05*3.20175933564204e-05+-2.61633917904839e-05*-2.61633917904839e-05+${fz}*${fz})
variable           f_module      equal     sqrt(3.20175933564204e-05*3.20175933564204e-05+-2.61633917904839e-05*-2.61633917904839e-05+-3.26063866162545e-05*${fz})
variable           f_module      equal     sqrt(3.20175933564204e-05*3.20175933564204e-05+-2.61633917904839e-05*-2.61633917904839e-05+-3.26063866162545e-05*-3.26063866162545e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.483453213741788*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.483453213741788*0.483453213741788+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.483453213741788*0.483453213741788+0.862803469214027*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.483453213741788*0.483453213741788+0.862803469214027*0.862803469214027+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.483453213741788*0.483453213741788+0.862803469214027*0.862803469214027+-0.147794328832249*${unitz})
variable           dir_module    equal     sqrt(0.483453213741788*0.483453213741788+0.862803469214027*0.862803469214027+-0.147794328832249*-0.147794328832249)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.20175933564204e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.20175933564204e-05*0.483453213741788+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.20175933564204e-05*0.483453213741788+-2.61633917904839e-05*${unity}+${fz}*${unitz}
variable           dot      equal     3.20175933564204e-05*0.483453213741788+-2.61633917904839e-05*0.862803469214027+${fz}*${unitz}
variable           dot      equal     3.20175933564204e-05*0.483453213741788+-2.61633917904839e-05*0.862803469214027+-3.26063866162545e-05*${unitz}
variable           dot      equal     3.20175933564204e-05*0.483453213741788+-2.61633917904839e-05*0.862803469214027+-3.26063866162545e-05*-0.147794328832249
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.27581777320198e-06/${f_module}*${dir_module}
variable           cos      equal     -2.27581777320198e-06/5.26576281509917e-05*${dir_module}
variable           cos      equal     -2.27581777320198e-06/5.26576281509917e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0432191470279718)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61402893994732/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.4770462709556-90.0)
print              "The dot product: ${dot}"
The dot product: -2.27581777320198e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.4770462709556

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13352757662286^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13352757662286^2+0.23830239012017^2+${new_z}^2)
variable           norm          equal     sqrt(0.13352757662286^2+0.23830239012017^2+-0.0408201207617012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13352757662286/${norm}
variable           unit_x        equal     0.13352757662286/0.276195447309979
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.23830239012017/${norm}
variable           unit_y        equal     0.23830239012017/0.276195447309979
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0408201207617012/${norm}
variable           unit_z        equal     -0.0408201207617012/0.276195447309979
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29916389050763+${delta}*${unit_x}
variable           x_new         equal     1.29916389050763+0.03*${unit_x}
variable           x_new         equal     1.29916389050763+0.03*0.483453213741788
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.26298534538251+${delta}*${unit_y}
variable           y_new         equal     4.26298534538251+0.03*${unit_y}
variable           y_new         equal     4.26298534538251+0.03*0.862803469214027
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.280048202171+${delta}*${unit_z}
variable           z_new         equal     31.280048202171+0.03*${unit_z}
variable           z_new         equal     31.280048202171+0.03*-0.147794328832249

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31366748691988  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31366748691988  y  4.28886944945893  z   ${z_new}
set                atom          288751    x  1.31366748691988  y  4.28886944945893  z   31.275614372306
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13352757662286  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13352757662286  0.23830239012017  ${new_z}
fix                hold    carbon   planeforce   0.13352757662286  0.23830239012017  -0.0408201207617012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1706   -1152449.2            0   -1152449.2 -0.060020177   0.04425385  0.062014743 
    1882   -1152449.2            0   -1152449.2 -2.8187126e-05 1.9535334e-05 2.1841143e-05 
Loop time of 2.07674 on 104 procs for 176 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.16461946  -1152449.16796521  -1152449.16796521
  Force two-norm initial, final = 0.27176498 0.00014599514
  Force max component initial, final = 0.18349443 3.4700630e-05
  Final line search alpha, max atom move = 1.0000000 3.4700630e-05
  Iterations, force evaluations = 176 352

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5349     | 1.4836     | 1.9459     |  32.9 | 71.44
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031544   | 0.33805    | 1.0053     |  47.7 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.04e-05   | 0.0029097  | 0.0062102  |   2.5 |  0.14
Other   |            | 0.2522     |            |       | 12.14

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.03 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115489 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30553879627702-${x_0}
variable           new_x         equal     1.30553879627702-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.29515814047207-${y_0}
variable           new_y         equal     4.29515814047207-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2857369718669-${z_0}
variable           new_z         equal     31.2857369718669-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13990248239225*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13990248239225*0.13990248239225+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13990248239225*0.13990248239225+0.27047518520973*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13990248239225*0.13990248239225+0.27047518520973*0.27047518520973+${new_z}*${new_z})
variable           module        equal     sqrt(0.13990248239225*0.13990248239225+0.27047518520973*0.27047518520973+-0.0351313510658002*${new_z})
variable           module        equal     sqrt(0.13990248239225*0.13990248239225+0.27047518520973*0.27047518520973+-0.0351313510658002*-0.0351313510658002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13990248239225/${module}
variable           unitx         equal     0.13990248239225/0.306535058715084
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.27047518520973/${module}
variable           unity         equal     0.27047518520973/0.306535058715084
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0351313510658002/${module}
variable           unitz         equal     -0.0351313510658002/0.306535058715084
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81871262944973e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81871262944973e-05*-2.81871262944973e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81871262944973e-05*-2.81871262944973e-05+1.95353339425653e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81871262944973e-05*-2.81871262944973e-05+1.95353339425653e-05*1.95353339425653e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81871262944973e-05*-2.81871262944973e-05+1.95353339425653e-05*1.95353339425653e-05+2.18411432294635e-05*${fz})
variable           f_module      equal     sqrt(-2.81871262944973e-05*-2.81871262944973e-05+1.95353339425653e-05*1.95353339425653e-05+2.18411432294635e-05*2.18411432294635e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.456399613729944*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.456399613729944*0.456399613729944+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.456399613729944*0.456399613729944+0.882362971281302*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.456399613729944*0.456399613729944+0.882362971281302*0.882362971281302+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.456399613729944*0.456399613729944+0.882362971281302*0.882362971281302+-0.114607938201463*${unitz})
variable           dir_module    equal     sqrt(0.456399613729944*0.456399613729944+0.882362971281302*0.882362971281302+-0.114607938201463*-0.114607938201463)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81871262944973e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81871262944973e-05*0.456399613729944+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81871262944973e-05*0.456399613729944+1.95353339425653e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81871262944973e-05*0.456399613729944+1.95353339425653e-05*0.882362971281302+${fz}*${unitz}
variable           dot      equal     -2.81871262944973e-05*0.456399613729944+1.95353339425653e-05*0.882362971281302+2.18411432294635e-05*${unitz}
variable           dot      equal     -2.81871262944973e-05*0.456399613729944+1.95353339425653e-05*0.882362971281302+2.18411432294635e-05*-0.114607938201463
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.86949335607702e-06/${f_module}*${dir_module}
variable           cos      equal     1.86949335607702e-06/4.06593027308564e-05*${dir_module}
variable           cos      equal     1.86949335607702e-06/4.06593027308564e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.045979474081297)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52480063632145/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.3646410600814-90.0)
print              "The dot product: ${dot}"
The dot product: 1.86949335607702e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.3646410600814

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13990248239225^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13990248239225^2+0.27047518520973^2+${new_z}^2)
variable           norm          equal     sqrt(0.13990248239225^2+0.27047518520973^2+-0.0351313510658002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13990248239225/${norm}
variable           unit_x        equal     0.13990248239225/0.306535058715084
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.27047518520973/${norm}
variable           unit_y        equal     0.27047518520973/0.306535058715084
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0351313510658002/${norm}
variable           unit_z        equal     -0.0351313510658002/0.306535058715084
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30553879627702+${delta}*${unit_x}
variable           x_new         equal     1.30553879627702+0.03*${unit_x}
variable           x_new         equal     1.30553879627702+0.03*0.456399613729944
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.29515814047207+${delta}*${unit_y}
variable           y_new         equal     4.29515814047207+0.03*${unit_y}
variable           y_new         equal     4.29515814047207+0.03*0.882362971281302
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2857369718669+${delta}*${unit_z}
variable           z_new         equal     31.2857369718669+0.03*${unit_z}
variable           z_new         equal     31.2857369718669+0.03*-0.114607938201463

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31923078468892  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31923078468892  y  4.32162902961051  z   ${z_new}
set                atom          288751    x  1.31923078468892  y  4.32162902961051  z   31.2822987337209
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13990248239225  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13990248239225  0.27047518520973  ${new_z}
fix                hold    carbon   planeforce   0.13990248239225  0.27047518520973  -0.0351313510658002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1882   -1152449.1            0   -1152449.1 -0.060407553  0.039883534  0.066502987 
    2000   -1152449.1            0   -1152449.1 -6.2347753e-05 4.0139842e-05 6.0749891e-05 
    2073   -1152449.1            0   -1152449.1 2.0321731e-05 -1.3416216e-05 -2.2364433e-05 
Loop time of 2.22038 on 104 procs for 191 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.1299312  -1152449.13334725  -1152449.13334725
  Force two-norm initial, final = 0.27182753 9.8708727e-05
  Force max component initial, final = 0.19386996 2.3689692e-05
  Final line search alpha, max atom move = 1.0000000 2.3689692e-05
  Iterations, force evaluations = 191 382

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57896    | 1.6028     | 2.0913     |  34.2 | 72.18
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036758   | 0.36086    | 1.0904     |  50.7 | 16.25
Output  | 9.5083e-05 | 0.00010224 | 0.00024805 |   0.0 |  0.00
Modify  | 2.2207e-05 | 0.0031475  | 0.0067253  |   2.7 |  0.14
Other   |            | 0.2535     |            |       | 11.42

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.03 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115489 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30989567197612-${x_0}
variable           new_x         equal     1.30989567197612-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.32798965796792-${y_0}
variable           new_y         equal     4.32798965796792-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2940940868322-${z_0}
variable           new_z         equal     31.2940940868322-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14425935809135*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14425935809135*0.14425935809135+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14425935809135*0.14425935809135+0.30330670270558*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14425935809135*0.14425935809135+0.30330670270558*0.30330670270558+${new_z}*${new_z})
variable           module        equal     sqrt(0.14425935809135*0.14425935809135+0.30330670270558*0.30330670270558+-0.0267742361005006*${new_z})
variable           module        equal     sqrt(0.14425935809135*0.14425935809135+0.30330670270558*0.30330670270558+-0.0267742361005006*-0.0267742361005006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.14425935809135/${module}
variable           unitx         equal     0.14425935809135/0.336931117621725
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.30330670270558/${module}
variable           unity         equal     0.30330670270558/0.336931117621725
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0267742361005006/${module}
variable           unitz         equal     -0.0267742361005006/0.336931117621725
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.03217311705656e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.03217311705656e-05*2.03217311705656e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.03217311705656e-05*2.03217311705656e-05+-1.34162155564712e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.03217311705656e-05*2.03217311705656e-05+-1.34162155564712e-05*-1.34162155564712e-05+${fz}*${fz})
variable           f_module      equal     sqrt(2.03217311705656e-05*2.03217311705656e-05+-1.34162155564712e-05*-1.34162155564712e-05+-2.23644330871223e-05*${fz})
variable           f_module      equal     sqrt(2.03217311705656e-05*2.03217311705656e-05+-1.34162155564712e-05*-1.34162155564712e-05+-2.23644330871223e-05*-2.23644330871223e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.428156826563319*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.428156826563319*0.428156826563319+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.428156826563319*0.428156826563319+0.900203889882634*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.428156826563319*0.428156826563319+0.900203889882634*0.900203889882634+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.428156826563319*0.428156826563319+0.900203889882634*0.900203889882634+-0.0794650143610666*${unitz})
variable           dir_module    equal     sqrt(0.428156826563319*0.428156826563319+0.900203889882634*0.900203889882634+-0.0794650143610666*-0.0794650143610666)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.03217311705656e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.03217311705656e-05*0.428156826563319+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.03217311705656e-05*0.428156826563319+-1.34162155564712e-05*${unity}+${fz}*${unitz}
variable           dot      equal     2.03217311705656e-05*0.428156826563319+-1.34162155564712e-05*0.900203889882634+${fz}*${unitz}
variable           dot      equal     2.03217311705656e-05*0.428156826563319+-1.34162155564712e-05*0.900203889882634+-2.23644330871223e-05*${unitz}
variable           dot      equal     2.03217311705656e-05*0.428156826563319+-1.34162155564712e-05*0.900203889882634+-2.23644330871223e-05*-0.0794650143610666
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.59925150673174e-06/${f_module}*${dir_module}
variable           cos      equal     -1.59925150673174e-06/3.30625991860109e-05*${dir_module}
variable           cos      equal     -1.59925150673174e-06/3.30625991860109e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0483704108601479)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61918561955655/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.7725022488657-90.0)
print              "The dot product: ${dot}"
The dot product: -1.59925150673174e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.7725022488657

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14425935809135^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14425935809135^2+0.30330670270558^2+${new_z}^2)
variable           norm          equal     sqrt(0.14425935809135^2+0.30330670270558^2+-0.0267742361005006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.14425935809135/${norm}
variable           unit_x        equal     0.14425935809135/0.336931117621725
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.30330670270558/${norm}
variable           unit_y        equal     0.30330670270558/0.336931117621725
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0267742361005006/${norm}
variable           unit_z        equal     -0.0267742361005006/0.336931117621725
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30989567197612+${delta}*${unit_x}
variable           x_new         equal     1.30989567197612+0.03*${unit_x}
variable           x_new         equal     1.30989567197612+0.03*0.428156826563319
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.32798965796792+${delta}*${unit_y}
variable           y_new         equal     4.32798965796792+0.03*${unit_y}
variable           y_new         equal     4.32798965796792+0.03*0.900203889882634
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2940940868322+${delta}*${unit_z}
variable           z_new         equal     31.2940940868322+0.03*${unit_z}
variable           z_new         equal     31.2940940868322+0.03*-0.0794650143610666

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32274037677302  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32274037677302  y  4.3549957746644  z   ${z_new}
set                atom          288751    x  1.32274037677302  y  4.3549957746644  z   31.2917101364014
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14425935809135  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14425935809135  0.30330670270558  ${new_z}
fix                hold    carbon   planeforce   0.14425935809135  0.30330670270558  -0.0267742361005006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2073   -1152449.1            0   -1152449.1 -0.063359535  0.035904109  0.065352037 
    2297   -1152449.1            0   -1152449.1 -5.6389172e-06 3.071215e-06 4.409221e-06 
Loop time of 2.60559 on 104 procs for 224 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.09206737  -1152449.09558429  -1152449.09558429
  Force two-norm initial, final = 0.27313158 3.8718304e-05
  Force max component initial, final = 0.2044474 6.6627939e-06
  Final line search alpha, max atom move = 1.0000000 6.6627939e-06
  Iterations, force evaluations = 224 448

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.67769    | 1.8822     | 2.4628     |  37.0 | 72.24
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.041789   | 0.42909    | 1.2924     |  54.6 | 16.47
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6084e-05 | 0.0036973  | 0.0078911  |   2.9 |  0.14
Other   |            | 0.2906     |            |       | 11.15

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.31082256743852-${x_0}
variable           new_x         equal     1.31082256743852-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.3617015663968-${y_0}
variable           new_y         equal     4.3617015663968-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3034623318236-${z_0}
variable           new_z         equal     31.3034623318236-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14518625355375*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14518625355375*0.14518625355375+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14518625355375*0.14518625355375+0.33701861113446*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14518625355375*0.14518625355375+0.33701861113446*0.33701861113446+${new_z}*${new_z})
variable           module        equal     sqrt(0.14518625355375*0.14518625355375+0.33701861113446*0.33701861113446+-0.0174059911091007*${new_z})
variable           module        equal     sqrt(0.14518625355375*0.14518625355375+0.33701861113446*0.33701861113446+-0.0174059911091007*-0.0174059911091007)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.14518625355375/${module}
variable           unitx         equal     0.14518625355375/0.367373870870622
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.33701861113446/${module}
variable           unity         equal     0.33701861113446/0.367373870870622
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0174059911091007/${module}
variable           unitz         equal     -0.0174059911091007/0.367373870870622
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.63891717788057e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.63891717788057e-06*-5.63891717788057e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.63891717788057e-06*-5.63891717788057e-06+3.07121500555834e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.63891717788057e-06*-5.63891717788057e-06+3.07121500555834e-06*3.07121500555834e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-5.63891717788057e-06*-5.63891717788057e-06+3.07121500555834e-06*3.07121500555834e-06+4.40922100376782e-06*${fz})
variable           f_module      equal     sqrt(-5.63891717788057e-06*-5.63891717788057e-06+3.07121500555834e-06*3.07121500555834e-06+4.40922100376782e-06*4.40922100376782e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.395200271618882*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.395200271618882*0.395200271618882+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.395200271618882*0.395200271618882+0.917372295247279*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.395200271618882*0.395200271618882+0.917372295247279*0.917372295247279+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.395200271618882*0.395200271618882+0.917372295247279*0.917372295247279+-0.0473795021617925*${unitz})
variable           dir_module    equal     sqrt(0.395200271618882*0.395200271618882+0.917372295247279*0.917372295247279+-0.0473795021617925*-0.0473795021617925)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.63891717788057e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.63891717788057e-06*0.395200271618882+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.63891717788057e-06*0.395200271618882+3.07121500555834e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -5.63891717788057e-06*0.395200271618882+3.07121500555834e-06*0.917372295247279+${fz}*${unitz}
variable           dot      equal     -5.63891717788057e-06*0.395200271618882+3.07121500555834e-06*0.917372295247279+4.40922100376782e-06*${unitz}
variable           dot      equal     -5.63891717788057e-06*0.395200271618882+3.07121500555834e-06*0.917372295247279+4.40922100376782e-06*-0.0473795021617925
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.8003926243232e-07/${f_module}*${dir_module}
variable           cos      equal     3.8003926243232e-07/7.78915774711429e-06*${dir_module}
variable           cos      equal     3.8003926243232e-07/7.78915774711429e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0487908031613708)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52198614477031/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.2033825727259-90.0)
print              "The dot product: ${dot}"
The dot product: 3.8003926243232e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.2033825727259

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14518625355375^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14518625355375^2+0.33701861113446^2+${new_z}^2)
variable           norm          equal     sqrt(0.14518625355375^2+0.33701861113446^2+-0.0174059911091007^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.14518625355375/${norm}
variable           unit_x        equal     0.14518625355375/0.367373870870622
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.33701861113446/${norm}
variable           unit_y        equal     0.33701861113446/0.367373870870622
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0174059911091007/${norm}
variable           unit_z        equal     -0.0174059911091007/0.367373870870622
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.31082256743852+${delta}*${unit_x}
variable           x_new         equal     1.31082256743852+0.03*${unit_x}
variable           x_new         equal     1.31082256743852+0.03*0.395200271618882
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.3617015663968+${delta}*${unit_y}
variable           y_new         equal     4.3617015663968+0.03*${unit_y}
variable           y_new         equal     4.3617015663968+0.03*0.917372295247279
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3034623318236+${delta}*${unit_z}
variable           z_new         equal     31.3034623318236+0.03*${unit_z}
variable           z_new         equal     31.3034623318236+0.03*-0.0473795021617925

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32267857558709  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32267857558709  y  4.38922273525422  z   ${z_new}
set                atom          288751    x  1.32267857558709  y  4.38922273525422  z   31.3020409467587
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14518625355375  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14518625355375  0.33701861113446  ${new_z}
fix                hold    carbon   planeforce   0.14518625355375  0.33701861113446  -0.0174059911091007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2297   -1152449.1            0   -1152449.1  -0.07271166  0.034315068  0.057915856 
    2496   -1152449.1            0   -1152449.1 8.6887795e-06 -4.4247796e-06 -1.3199003e-05 
Loop time of 2.31976 on 104 procs for 199 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.05098038  -1152449.05472818  -1152449.05472818
  Force two-norm initial, final = 0.27738557 0.00010105352
  Force max component initial, final = 0.21565561 1.8820267e-05
  Final line search alpha, max atom move = 1.0000000 1.8820267e-05
  Iterations, force evaluations = 199 398

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60354    | 1.6706     | 2.1699     |  34.7 | 72.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036802   | 0.37648    | 1.1417     |  52.0 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3097e-05 | 0.0032881  | 0.0070753  |   2.7 |  0.14
Other   |            | 0.2694     |            |       | 11.61

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115504 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30582157415557-${x_0}
variable           new_x         equal     1.30582157415557-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.39698949053462-${y_0}
variable           new_y         equal     4.39698949053462-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.311815523373-${z_0}
variable           new_z         equal     31.311815523373-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1401852602708*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1401852602708*0.1401852602708+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1401852602708*0.1401852602708+0.37230653527228*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1401852602708*0.1401852602708+0.37230653527228*0.37230653527228+${new_z}*${new_z})
variable           module        equal     sqrt(0.1401852602708*0.1401852602708+0.37230653527228*0.37230653527228+-0.00905279955970073*${new_z})
variable           module        equal     sqrt(0.1401852602708*0.1401852602708+0.37230653527228*0.37230653527228+-0.00905279955970073*-0.00905279955970073)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.1401852602708/${module}
variable           unitx         equal     0.1401852602708/0.397927149844679
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.37230653527228/${module}
variable           unity         equal     0.37230653527228/0.397927149844679
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00905279955970073/${module}
variable           unitz         equal     -0.00905279955970073/0.397927149844679
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.68877951248019e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.68877951248019e-06*8.68877951248019e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.68877951248019e-06*8.68877951248019e-06+-4.42477961589056e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.68877951248019e-06*8.68877951248019e-06+-4.42477961589056e-06*-4.42477961589056e-06+${fz}*${fz})
variable           f_module      equal     sqrt(8.68877951248019e-06*8.68877951248019e-06+-4.42477961589056e-06*-4.42477961589056e-06+-1.31990033692711e-05*${fz})
variable           f_module      equal     sqrt(8.68877951248019e-06*8.68877951248019e-06+-4.42477961589056e-06*-4.42477961589056e-06+-1.31990033692711e-05*-1.31990033692711e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352288755179228*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352288755179228*0.352288755179228+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352288755179228*0.352288755179228+0.935614811448781*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352288755179228*0.352288755179228+0.935614811448781*0.935614811448781+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352288755179228*0.352288755179228+0.935614811448781*0.935614811448781+-0.0227498916905626*${unitz})
variable           dir_module    equal     sqrt(0.352288755179228*0.352288755179228+0.935614811448781*0.935614811448781+-0.0227498916905626*-0.0227498916905626)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.68877951248019e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.68877951248019e-06*0.352288755179228+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.68877951248019e-06*0.352288755179228+-4.42477961589056e-06*${unity}+${fz}*${unitz}
variable           dot      equal     8.68877951248019e-06*0.352288755179228+-4.42477961589056e-06*0.935614811448781+${fz}*${unitz}
variable           dot      equal     8.68877951248019e-06*0.352288755179228+-4.42477961589056e-06*0.935614811448781+-1.31990033692711e-05*${unitz}
variable           dot      equal     8.68877951248019e-06*0.352288755179228+-4.42477961589056e-06*0.935614811448781+-1.31990033692711e-05*-0.0227498916905626
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.78654130471142e-07/${f_module}*${dir_module}
variable           cos      equal     -7.78654130471142e-07/1.64099742232499e-05*${dir_module}
variable           cos      equal     -7.78654130471142e-07/1.64099742232499e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0474500520157998)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61826420256608/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.7197089441401-90.0)
print              "The dot product: ${dot}"
The dot product: -7.78654130471142e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.7197089441401

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1401852602708^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1401852602708^2+0.37230653527228^2+${new_z}^2)
variable           norm          equal     sqrt(0.1401852602708^2+0.37230653527228^2+-0.00905279955970073^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.1401852602708/${norm}
variable           unit_x        equal     0.1401852602708/0.397927149844679
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.37230653527228/${norm}
variable           unit_y        equal     0.37230653527228/0.397927149844679
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00905279955970073/${norm}
variable           unit_z        equal     -0.00905279955970073/0.397927149844679
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30582157415557+${delta}*${unit_x}
variable           x_new         equal     1.30582157415557+0.03*${unit_x}
variable           x_new         equal     1.30582157415557+0.03*0.352288755179228
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.39698949053462+${delta}*${unit_y}
variable           y_new         equal     4.39698949053462+0.03*${unit_y}
variable           y_new         equal     4.39698949053462+0.03*0.935614811448781
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.311815523373+${delta}*${unit_z}
variable           z_new         equal     31.311815523373+0.03*${unit_z}
variable           z_new         equal     31.311815523373+0.03*-0.0227498916905626

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31639023681095  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31639023681095  y  4.42505793487808  z   ${z_new}
set                atom          288751    x  1.31639023681095  y  4.42505793487808  z   31.3111330266223
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1401852602708  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1401852602708  0.37230653527228  ${new_z}
fix                hold    carbon   planeforce   0.1401852602708  0.37230653527228  -0.00905279955970073
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2496     -1152449            0     -1152449 -0.086548312   0.03368222  0.044993021 
    2709     -1152449            0     -1152449 2.3740835e-06 -9.3903587e-07 -1.8555223e-06 
Loop time of 2.48834 on 104 procs for 213 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.00680964  -1152449.01089365  -1152449.01089365
  Force two-norm initial, final = 0.28501291 5.6173929e-05
  Force max component initial, final = 0.22841212 5.0930042e-06
  Final line search alpha, max atom move = 1.0000000 5.0930042e-06
  Iterations, force evaluations = 213 426

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64631    | 1.7897     | 2.3425     |  36.1 | 71.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042676   | 0.40492    | 1.216      |  53.0 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4736e-05 | 0.0035159  | 0.0074975  |   2.8 |  0.14
Other   |            | 0.2902     |            |       | 11.66

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115502 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29538933716832-${x_0}
variable           new_x         equal     1.29538933716832-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.43313874056464-${y_0}
variable           new_y         equal     4.43313874056464-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3182601241008-${z_0}
variable           new_z         equal     31.3182601241008-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12975302328355*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12975302328355*0.12975302328355+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12975302328355*0.12975302328355+0.408455785302301*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.12975302328355*0.12975302328355+0.408455785302301*0.408455785302301+${new_z}*${new_z})
variable           module        equal     sqrt(0.12975302328355*0.12975302328355+0.408455785302301*0.408455785302301+-0.00260819883190067*${new_z})
variable           module        equal     sqrt(0.12975302328355*0.12975302328355+0.408455785302301*0.408455785302301+-0.00260819883190067*-0.00260819883190067)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.12975302328355/${module}
variable           unitx         equal     0.12975302328355/0.428577622256794
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.408455785302301/${module}
variable           unity         equal     0.408455785302301/0.428577622256794
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00260819883190067/${module}
variable           unitz         equal     -0.00260819883190067/0.428577622256794
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.3740835341239e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.3740835341239e-06*2.3740835341239e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.3740835341239e-06*2.3740835341239e-06+-9.3903586510516e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.3740835341239e-06*2.3740835341239e-06+-9.3903586510516e-07*-9.3903586510516e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.3740835341239e-06*2.3740835341239e-06+-9.3903586510516e-07*-9.3903586510516e-07+-1.85552229854717e-06*${fz})
variable           f_module      equal     sqrt(2.3740835341239e-06*2.3740835341239e-06+-9.3903586510516e-07*-9.3903586510516e-07+-1.85552229854717e-06*-1.85552229854717e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.302752678966997*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.302752678966997*0.302752678966997+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.302752678966997*0.302752678966997+0.95304972562838*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.302752678966997*0.302752678966997+0.95304972562838*0.95304972562838+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.302752678966997*0.302752678966997+0.95304972562838*0.95304972562838+-0.00608570932417441*${unitz})
variable           dir_module    equal     sqrt(0.302752678966997*0.302752678966997+0.95304972562838*0.95304972562838+-0.00608570932417441*-0.00608570932417441)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.3740835341239e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.3740835341239e-06*0.302752678966997+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.3740835341239e-06*0.302752678966997+-9.3903586510516e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.3740835341239e-06*0.302752678966997+-9.3903586510516e-07*0.95304972562838+${fz}*${unitz}
variable           dot      equal     2.3740835341239e-06*0.302752678966997+-9.3903586510516e-07*0.95304972562838+-1.85552229854717e-06*${unitz}
variable           dot      equal     2.3740835341239e-06*0.302752678966997+-9.3903586510516e-07*0.95304972562838+-1.85552229854717e-06*-0.00608570932417441
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.64895554192753e-07/${f_module}*${dir_module}
variable           cos      equal     -1.64895554192753e-07/3.15610899421389e-06*${dir_module}
variable           cos      equal     -1.64895554192753e-07/3.15610899421389e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0522464700981673)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62306659561429/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.9948657973655-90.0)
print              "The dot product: ${dot}"
The dot product: -1.64895554192753e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.9948657973655

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12975302328355^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.12975302328355^2+0.408455785302301^2+${new_z}^2)
variable           norm          equal     sqrt(0.12975302328355^2+0.408455785302301^2+-0.00260819883190067^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.12975302328355/${norm}
variable           unit_x        equal     0.12975302328355/0.428577622256794
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.408455785302301/${norm}
variable           unit_y        equal     0.408455785302301/0.428577622256794
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00260819883190067/${norm}
variable           unit_z        equal     -0.00260819883190067/0.428577622256794
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29538933716832+${delta}*${unit_x}
variable           x_new         equal     1.29538933716832+0.03*${unit_x}
variable           x_new         equal     1.29538933716832+0.03*0.302752678966997
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.43313874056464+${delta}*${unit_y}
variable           y_new         equal     4.43313874056464+0.03*${unit_y}
variable           y_new         equal     4.43313874056464+0.03*0.95304972562838
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3182601241008+${delta}*${unit_z}
variable           z_new         equal     31.3182601241008+0.03*${unit_z}
variable           z_new         equal     31.3182601241008+0.03*-0.00608570932417441

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30447191753733  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30447191753733  y  4.46173023233349  z   ${z_new}
set                atom          288751    x  1.30447191753733  y  4.46173023233349  z   31.3180775528211
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12975302328355  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.12975302328355  0.408455785302301  ${new_z}
fix                hold    carbon   planeforce   0.12975302328355  0.408455785302301  -0.00260819883190067
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2709     -1152449            0     -1152449 -0.095967995  0.030685205  0.031213898 
    2881     -1152449            0     -1152449 2.4565887e-05 -7.9411335e-06 -2.1510564e-05 
Loop time of 2.01035 on 104 procs for 172 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.95962458  -1152448.96401296  -1152448.96401296
  Force two-norm initial, final = 0.29376936 0.00023520351
  Force max component initial, final = 0.2418724 8.2378631e-05
  Final line search alpha, max atom move = 1.0000000 8.2378631e-05
  Iterations, force evaluations = 172 344

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.52216    | 1.4434     | 1.8817     |  32.4 | 71.80
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031268   | 0.32638    | 0.97998    |  48.0 | 16.24
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.022e-05  | 0.002842   | 0.0060828  |   2.5 |  0.14
Other   |            | 0.2377     |            |       | 11.82

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238178
Ave neighs/atom = 28.530388
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28123098661699-${x_0}
variable           new_x         equal     1.28123098661699-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.46914144860774-${y_0}
variable           new_y         equal     4.46914144860774-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3225147576245-${z_0}
variable           new_z         equal     31.3225147576245-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11559467273222*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11559467273222*0.11559467273222+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11559467273222*0.11559467273222+0.4444584933454*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11559467273222*0.11559467273222+0.4444584933454*0.4444584933454+${new_z}*${new_z})
variable           module        equal     sqrt(0.11559467273222*0.11559467273222+0.4444584933454*0.4444584933454+0.00164643469179993*${new_z})
variable           module        equal     sqrt(0.11559467273222*0.11559467273222+0.4444584933454*0.4444584933454+0.00164643469179993*0.00164643469179993)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.11559467273222/${module}
variable           unitx         equal     0.11559467273222/0.459247418520917
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.4444584933454/${module}
variable           unity         equal     0.4444584933454/0.459247418520917
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00164643469179993/${module}
variable           unitz         equal     0.00164643469179993/0.459247418520917
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.45658869657876e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.45658869657876e-05*2.45658869657876e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.45658869657876e-05*2.45658869657876e-05+-7.94113352806801e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.45658869657876e-05*2.45658869657876e-05+-7.94113352806801e-06*-7.94113352806801e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.45658869657876e-05*2.45658869657876e-05+-7.94113352806801e-06*-7.94113352806801e-06+-2.15105640928753e-05*${fz})
variable           f_module      equal     sqrt(2.45658869657876e-05*2.45658869657876e-05+-7.94113352806801e-06*-7.94113352806801e-06+-2.15105640928753e-05*-2.15105640928753e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.251704567234176*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.251704567234176*0.251704567234176+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.251704567234176*0.251704567234176+0.967797477831999*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.251704567234176*0.251704567234176+0.967797477831999*0.967797477831999+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.251704567234176*0.251704567234176+0.967797477831999*0.967797477831999+0.0035850711956151*${unitz})
variable           dir_module    equal     sqrt(0.251704567234176*0.251704567234176+0.967797477831999*0.967797477831999+0.0035850711956151*0.0035850711956151)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.45658869657876e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.45658869657876e-05*0.251704567234176+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.45658869657876e-05*0.251704567234176+-7.94113352806801e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.45658869657876e-05*0.251704567234176+-7.94113352806801e-06*0.967797477831999+${fz}*${unitz}
variable           dot      equal     2.45658869657876e-05*0.251704567234176+-7.94113352806801e-06*0.967797477831999+-2.15105640928753e-05*${unitz}
variable           dot      equal     2.45658869657876e-05*0.251704567234176+-7.94113352806801e-06*0.967797477831999+-2.15105640928753e-05*0.0035850711956151
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.57917995587489e-06/${f_module}*${dir_module}
variable           cos      equal     -1.57917995587489e-06/3.36042969234614e-05*${dir_module}
variable           cos      equal     -1.57917995587489e-06/3.36042969234614e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0469933937160387)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61780703426007/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.6935151296786-90.0)
print              "The dot product: ${dot}"
The dot product: -1.57917995587489e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.6935151296786

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11559467273222^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11559467273222^2+0.4444584933454^2+${new_z}^2)
variable           norm          equal     sqrt(0.11559467273222^2+0.4444584933454^2+0.00164643469179993^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.11559467273222/${norm}
variable           unit_x        equal     0.11559467273222/0.459247418520917
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.4444584933454/${norm}
variable           unit_y        equal     0.4444584933454/0.459247418520917
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00164643469179993/${norm}
variable           unit_z        equal     0.00164643469179993/0.459247418520917
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28123098661699+${delta}*${unit_x}
variable           x_new         equal     1.28123098661699+0.03*${unit_x}
variable           x_new         equal     1.28123098661699+0.03*0.251704567234176
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.46914144860774+${delta}*${unit_y}
variable           y_new         equal     4.46914144860774+0.03*${unit_y}
variable           y_new         equal     4.46914144860774+0.03*0.967797477831999
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3225147576245+${delta}*${unit_z}
variable           z_new         equal     31.3225147576245+0.03*${unit_z}
variable           z_new         equal     31.3225147576245+0.03*0.0035850711956151

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28878212363402  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28878212363402  y  4.4981753729427  z   ${z_new}
set                atom          288751    x  1.28878212363402  y  4.4981753729427  z   31.3226223097604
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11559467273222  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11559467273222  0.4444584933454  ${new_z}
fix                hold    carbon   planeforce   0.11559467273222  0.4444584933454  0.00164643469179993
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2881   -1152448.9            0   -1152448.9 -0.098932548  0.025661957  0.018464723 
    3000   -1152448.9            0   -1152448.9 -3.6838877e-06 9.0312727e-07 1.4841285e-05 
    3025   -1152448.9            0   -1152448.9 -4.6866303e-05 1.2015722e-05 4.6770836e-05 
Loop time of 1.67465 on 104 procs for 144 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.90932379  -1152448.91386993  -1152448.91386993
  Force two-norm initial, final = 0.30173628 0.00019376161
  Force max component initial, final = 0.25504675 4.6866303e-05
  Final line search alpha, max atom move = 1.0000000 4.6866303e-05
  Iterations, force evaluations = 144 288

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.43698    | 1.2121     | 1.5735     |  29.7 | 72.38
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.024318   | 0.27662    | 0.8481     |  44.0 | 16.52
Output  | 0.00014767 | 0.00015176 | 0.00029047 |   0.0 |  0.01
Modify  | 1.6919e-05 | 0.0023797  | 0.0051349  |   2.3 |  0.14
Other   |            | 0.1834     |            |       | 10.95

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.26531589822983-${x_0}
variable           new_x         equal     1.26531589822983-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.50427057591142-${y_0}
variable           new_y         equal     4.50427057591142-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3247517095673-${z_0}
variable           new_z         equal     31.3247517095673-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09967958434506*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09967958434506*0.09967958434506+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09967958434506*0.09967958434506+0.47958762064908*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.09967958434506*0.09967958434506+0.47958762064908*0.47958762064908+${new_z}*${new_z})
variable           module        equal     sqrt(0.09967958434506*0.09967958434506+0.47958762064908*0.47958762064908+0.0038833866345982*${new_z})
variable           module        equal     sqrt(0.09967958434506*0.09967958434506+0.47958762064908*0.47958762064908+0.0038833866345982*0.0038833866345982)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.09967958434506/${module}
variable           unitx         equal     0.09967958434506/0.489852412576282
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.47958762064908/${module}
variable           unity         equal     0.47958762064908/0.489852412576282
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0038833866345982/${module}
variable           unitz         equal     0.0038833866345982/0.489852412576282
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.68663031911624e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.68663031911624e-05*-4.68663031911624e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.68663031911624e-05*-4.68663031911624e-05+1.2015722349679e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.68663031911624e-05*-4.68663031911624e-05+1.2015722349679e-05*1.2015722349679e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-4.68663031911624e-05*-4.68663031911624e-05+1.2015722349679e-05*1.2015722349679e-05+4.67708363009728e-05*${fz})
variable           f_module      equal     sqrt(-4.68663031911624e-05*-4.68663031911624e-05+1.2015722349679e-05*1.2015722349679e-05+4.67708363009728e-05*4.67708363009728e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.203489013804821*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.203489013804821*0.203489013804821+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.203489013804821*0.203489013804821+0.979045133465371*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.203489013804821*0.203489013804821+0.979045133465371*0.979045133465371+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.203489013804821*0.203489013804821+0.979045133465371*0.979045133465371+0.00792766664999014*${unitz})
variable           dir_module    equal     sqrt(0.203489013804821*0.203489013804821+0.979045133465371*0.979045133465371+0.00792766664999014*0.00792766664999014)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.68663031911624e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.68663031911624e-05*0.203489013804821+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.68663031911624e-05*0.203489013804821+1.2015722349679e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -4.68663031911624e-05*0.203489013804821+1.2015722349679e-05*0.979045133465371+${fz}*${unitz}
variable           dot      equal     -4.68663031911624e-05*0.203489013804821+1.2015722349679e-05*0.979045133465371+4.67708363009728e-05*${unitz}
variable           dot      equal     -4.68663031911624e-05*0.203489013804821+1.2015722349679e-05*0.979045133465371+4.67708363009728e-05*0.00792766664999014
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.59794027361232e-06/${f_module}*${dir_module}
variable           cos      equal     2.59794027361232e-06/6.72929348942586e-05*${dir_module}
variable           cos      equal     2.59794027361232e-06/6.72929348942586e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0386064343559189)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53218029579746/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.7874644023005-90.0)
print              "The dot product: ${dot}"
The dot product: 2.59794027361232e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.7874644023005

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.09967958434506^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.09967958434506^2+0.47958762064908^2+${new_z}^2)
variable           norm          equal     sqrt(0.09967958434506^2+0.47958762064908^2+0.0038833866345982^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.09967958434506/${norm}
variable           unit_x        equal     0.09967958434506/0.489852412576282
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.47958762064908/${norm}
variable           unit_y        equal     0.47958762064908/0.489852412576282
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0038833866345982/${norm}
variable           unit_z        equal     0.0038833866345982/0.489852412576282
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.26531589822983+${delta}*${unit_x}
variable           x_new         equal     1.26531589822983+0.03*${unit_x}
variable           x_new         equal     1.26531589822983+0.03*0.203489013804821
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.50427057591142+${delta}*${unit_y}
variable           y_new         equal     4.50427057591142+0.03*${unit_y}
variable           y_new         equal     4.50427057591142+0.03*0.979045133465371
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3247517095673+${delta}*${unit_z}
variable           z_new         equal     31.3247517095673+0.03*${unit_z}
variable           z_new         equal     31.3247517095673+0.03*0.00792766664999014

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27142056864397  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27142056864397  y  4.53364192991538  z   ${z_new}
set                atom          288751    x  1.27142056864397  y  4.53364192991538  z   31.3249895395668
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.09967958434506  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.09967958434506  0.47958762064908  ${new_z}
fix                hold    carbon   planeforce   0.09967958434506  0.47958762064908  0.0038833866345982
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3025   -1152448.9            0   -1152448.9 -0.097406505  0.020180039 0.0080710255 
    3229   -1152448.9            0   -1152448.9 -8.2946536e-06 1.6663222e-06 7.122676e-06 
Loop time of 2.39273 on 104 procs for 204 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.85578074  -1152448.86032167  -1152448.86032167
  Force two-norm initial, final = 0.30792749 6.7397394e-05
  Force max component initial, final = 0.26692621 2.4043862e-05
  Final line search alpha, max atom move = 1.0000000 2.4043862e-05
  Iterations, force evaluations = 204 408

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61478    | 1.7182     | 2.2505     |  35.6 | 71.81
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035427   | 0.388      | 1.1648     |  52.2 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3717e-05 | 0.0033747  | 0.0072282  |   2.7 |  0.14
Other   |            | 0.2832     |            |       | 11.84

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115501 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238179
Ave neighs/atom = 28.530391
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24892011915986-${x_0}
variable           new_x         equal     1.24892011915986-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.53831468299479-${y_0}
variable           new_y         equal     4.53831468299479-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3254635899931-${z_0}
variable           new_z         equal     31.3254635899931-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0832838052750899*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0832838052750899*0.0832838052750899+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0832838052750899*0.0832838052750899+0.51363172773245*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0832838052750899*0.0832838052750899+0.51363172773245*0.51363172773245+${new_z}*${new_z})
variable           module        equal     sqrt(0.0832838052750899*0.0832838052750899+0.51363172773245*0.51363172773245+0.00459526706039881*${new_z})
variable           module        equal     sqrt(0.0832838052750899*0.0832838052750899+0.51363172773245*0.51363172773245+0.00459526706039881*0.00459526706039881)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0832838052750899/${module}
variable           unitx         equal     0.0832838052750899/0.520360317889323
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.51363172773245/${module}
variable           unity         equal     0.51363172773245/0.520360317889323
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00459526706039881/${module}
variable           unitz         equal     0.00459526706039881/0.520360317889323
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.2946536278389e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.2946536278389e-06*-8.2946536278389e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.2946536278389e-06*-8.2946536278389e-06+1.66632224672097e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.2946536278389e-06*-8.2946536278389e-06+1.66632224672097e-06*1.66632224672097e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-8.2946536278389e-06*-8.2946536278389e-06+1.66632224672097e-06*1.66632224672097e-06+7.1226759718857e-06*${fz})
variable           f_module      equal     sqrt(-8.2946536278389e-06*-8.2946536278389e-06+1.66632224672097e-06*1.66632224672097e-06+7.1226759718857e-06*7.1226759718857e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16005026212011*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16005026212011*0.16005026212011+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16005026212011*0.16005026212011+0.987069363428469*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16005026212011*0.16005026212011+0.987069363428469*0.987069363428469+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.16005026212011*0.16005026212011+0.987069363428469*0.987069363428469+0.00883093291786364*${unitz})
variable           dir_module    equal     sqrt(0.16005026212011*0.16005026212011+0.987069363428469*0.987069363428469+0.00883093291786364*0.00883093291786364)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.2946536278389e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.2946536278389e-06*0.16005026212011+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.2946536278389e-06*0.16005026212011+1.66632224672097e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -8.2946536278389e-06*0.16005026212011+1.66632224672097e-06*0.987069363428469+${fz}*${unitz}
variable           dot      equal     -8.2946536278389e-06*0.16005026212011+1.66632224672097e-06*0.987069363428469+7.1226759718857e-06*${unitz}
variable           dot      equal     -8.2946536278389e-06*0.16005026212011+1.66632224672097e-06*0.987069363428469+7.1226759718857e-06*0.00883093291786364
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.80114025709828e-07/${f_module}*${dir_module}
variable           cos      equal     3.80114025709828e-07/1.10594042170551e-05*${dir_module}
variable           cos      equal     3.80114025709828e-07/1.10594042170551e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0343702082182366)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53641934799147/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.030344202153-90.0)
print              "The dot product: ${dot}"
The dot product: 3.80114025709828e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.030344202153

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0832838052750899^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0832838052750899^2+0.51363172773245^2+${new_z}^2)
variable           norm          equal     sqrt(0.0832838052750899^2+0.51363172773245^2+0.00459526706039881^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0832838052750899/${norm}
variable           unit_x        equal     0.0832838052750899/0.520360317889323
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.51363172773245/${norm}
variable           unit_y        equal     0.51363172773245/0.520360317889323
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00459526706039881/${norm}
variable           unit_z        equal     0.00459526706039881/0.520360317889323
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24892011915986+${delta}*${unit_x}
variable           x_new         equal     1.24892011915986+0.03*${unit_x}
variable           x_new         equal     1.24892011915986+0.03*0.16005026212011
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.53831468299479+${delta}*${unit_y}
variable           y_new         equal     4.53831468299479+0.03*${unit_y}
variable           y_new         equal     4.53831468299479+0.03*0.987069363428469
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3254635899931+${delta}*${unit_z}
variable           z_new         equal     31.3254635899931+0.03*${unit_z}
variable           z_new         equal     31.3254635899931+0.03*0.00883093291786364

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25372162702346  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25372162702346  y  4.56792676389764  z   ${z_new}
set                atom          288751    x  1.25372162702346  y  4.56792676389764  z   31.3257285179806
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0832838052750899  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0832838052750899  0.51363172773245  ${new_z}
fix                hold    carbon   planeforce   0.0832838052750899  0.51363172773245  0.00459526706039881
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3229   -1152448.8            0   -1152448.8 -0.094448636  0.015311949 0.0002913736 
    3405   -1152448.8            0   -1152448.8 -1.9223095e-06 3.0593006e-07 6.4454617e-07 
Loop time of 2.04424 on 104 procs for 176 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.79919474   -1152448.8037321   -1152448.8037321
  Force two-norm initial, final = 0.31448713 3.4433245e-05
  Force max component initial, final = 0.27774315 1.0795189e-05
  Final line search alpha, max atom move = 1.0000000 1.0795189e-05
  Iterations, force evaluations = 176 352

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53143    | 1.4771     | 1.9318     |  32.8 | 72.26
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031557   | 0.33545    | 0.99804    |  48.1 | 16.41
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.05e-05   | 0.0029026  | 0.0061992  |   2.5 |  0.14
Other   |            | 0.2288     |            |       | 11.19

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115501 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238175
Ave neighs/atom = 28.530377
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.2320205921699-${x_0}
variable           new_x         equal     1.2320205921699-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.57145183677959-${y_0}
variable           new_y         equal     4.57145183677959-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.32502246243-${z_0}
variable           new_z         equal     31.32502246243-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0663842782851298*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0663842782851298*0.0663842782851298+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0663842782851298*0.0663842782851298+0.54676888151725*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0663842782851298*0.0663842782851298+0.54676888151725*0.54676888151725+${new_z}*${new_z})
variable           module        equal     sqrt(0.0663842782851298*0.0663842782851298+0.54676888151725*0.54676888151725+0.00415413949729881*${new_z})
variable           module        equal     sqrt(0.0663842782851298*0.0663842782851298+0.54676888151725*0.54676888151725+0.00415413949729881*0.00415413949729881)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0663842782851298/${module}
variable           unitx         equal     0.0663842782851298/0.550799726828205
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.54676888151725/${module}
variable           unity         equal     0.54676888151725/0.550799726828205
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00415413949729881/${module}
variable           unitz         equal     0.00415413949729881/0.550799726828205
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.92230948660441e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.92230948660441e-06*-1.92230948660441e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.92230948660441e-06*-1.92230948660441e-06+3.05930063209709e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.92230948660441e-06*-1.92230948660441e-06+3.05930063209709e-07*3.05930063209709e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.92230948660441e-06*-1.92230948660441e-06+3.05930063209709e-07*3.05930063209709e-07+6.44546172648667e-07*${fz})
variable           f_module      equal     sqrt(-1.92230948660441e-06*-1.92230948660441e-06+3.05930063209709e-07*3.05930063209709e-07+6.44546172648667e-07*6.44546172648667e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.12052344082922*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.12052344082922*0.12052344082922+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.12052344082922*0.12052344082922+0.992681831317952*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.12052344082922*0.12052344082922+0.992681831317952*0.992681831317952+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.12052344082922*0.12052344082922+0.992681831317952*0.992681831317952+0.00754201444728474*${unitz})
variable           dir_module    equal     sqrt(0.12052344082922*0.12052344082922+0.992681831317952*0.992681831317952+0.00754201444728474*0.00754201444728474)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.92230948660441e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.92230948660441e-06*0.12052344082922+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.92230948660441e-06*0.12052344082922+3.05930063209709e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.92230948660441e-06*0.12052344082922+3.05930063209709e-07*0.992681831317952+${fz}*${unitz}
variable           dot      equal     -1.92230948660441e-06*0.12052344082922+3.05930063209709e-07*0.992681831317952+6.44546172648667e-07*${unitz}
variable           dot      equal     -1.92230948660441e-06*0.12052344082922+3.05930063209709e-07*0.992681831317952+6.44546172648667e-07*0.00754201444728474
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.68690382840742e-08/${f_module}*${dir_module}
variable           cos      equal     7.68690382840742e-08/2.05044061960859e-06*${dir_module}
variable           cos      equal     7.68690382840742e-08/2.05044061960859e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0374890340880721)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53329850579413/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.8515331157191-90.0)
print              "The dot product: ${dot}"
The dot product: 7.68690382840742e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.8515331157191

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0663842782851298^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0663842782851298^2+0.54676888151725^2+${new_z}^2)
variable           norm          equal     sqrt(0.0663842782851298^2+0.54676888151725^2+0.00415413949729881^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0663842782851298/${norm}
variable           unit_x        equal     0.0663842782851298/0.550799726828205
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.54676888151725/${norm}
variable           unit_y        equal     0.54676888151725/0.550799726828205
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00415413949729881/${norm}
variable           unit_z        equal     0.00415413949729881/0.550799726828205
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.2320205921699+${delta}*${unit_x}
variable           x_new         equal     1.2320205921699+0.03*${unit_x}
variable           x_new         equal     1.2320205921699+0.03*0.12052344082922
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.57145183677959+${delta}*${unit_y}
variable           y_new         equal     4.57145183677959+0.03*${unit_y}
variable           y_new         equal     4.57145183677959+0.03*0.992681831317952
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.32502246243+${delta}*${unit_z}
variable           z_new         equal     31.32502246243+0.03*${unit_z}
variable           z_new         equal     31.32502246243+0.03*0.00754201444728474

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23563629539478  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23563629539478  y  4.60123229171913  z   ${z_new}
set                atom          288751    x  1.23563629539478  y  4.60123229171913  z   31.3252487228634
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0663842782851298  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0663842782851298  0.54676888151725  ${new_z}
fix                hold    carbon   planeforce   0.0663842782851298  0.54676888151725  0.00415413949729881
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3405   -1152448.7            0   -1152448.7 -0.093438651   0.01138357 -0.0051332467 
    3576   -1152448.8            0   -1152448.8 -2.4358932e-06 3.4267134e-07 -6.1762519e-06 
Loop time of 1.98667 on 104 procs for 171 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.74123893  -1152448.76589501  -1152448.76589501
  Force two-norm initial, final = 0.3336031 0.00013001074
  Force max component initial, final = 0.28789399 4.8252314e-05
  Final line search alpha, max atom move = 1.0000000 4.8252314e-05
  Iterations, force evaluations = 171 342

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51877    | 1.4371     | 1.8711     |  32.3 | 72.34
Neigh   | 1.0138e-05 | 0.0029547  | 0.0042941  |   2.2 |  0.15
Comm    | 0.030933   | 0.324      | 0.98009    |  47.9 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0358e-05 | 0.0028253  | 0.0060857  |   2.5 |  0.14
Other   |            | 0.2198     |            |       | 11.06

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115521 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238171
Ave neighs/atom = 28.530364
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19873303163384-${x_0}
variable           new_x         equal     1.19873303163384-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.60573246523856-${y_0}
variable           new_y         equal     4.60573246523856-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3226589420591-${z_0}
variable           new_z         equal     31.3226589420591-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03309671774907*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03309671774907*0.03309671774907+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03309671774907*0.03309671774907+0.581049509976221*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03309671774907*0.03309671774907+0.581049509976221*0.581049509976221+${new_z}*${new_z})
variable           module        equal     sqrt(0.03309671774907*0.03309671774907+0.581049509976221*0.581049509976221+0.00179061912639966*${new_z})
variable           module        equal     sqrt(0.03309671774907*0.03309671774907+0.581049509976221*0.581049509976221+0.00179061912639966*0.00179061912639966)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.03309671774907/${module}
variable           unitx         equal     0.03309671774907/0.581994099700524
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.581049509976221/${module}
variable           unity         equal     0.581049509976221/0.581994099700524
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00179061912639966/${module}
variable           unitz         equal     0.00179061912639966/0.581994099700524
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43589319299843e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43589319299843e-06*-2.43589319299843e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43589319299843e-06*-2.43589319299843e-06+3.42671337235853e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43589319299843e-06*-2.43589319299843e-06+3.42671337235853e-07*3.42671337235853e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43589319299843e-06*-2.43589319299843e-06+3.42671337235853e-07*3.42671337235853e-07+-6.17625194200979e-06*${fz})
variable           f_module      equal     sqrt(-2.43589319299843e-06*-2.43589319299843e-06+3.42671337235853e-07*3.42671337235853e-07+-6.17625194200979e-06*-6.17625194200979e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0568677891512999*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0568677891512999*0.0568677891512999+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0568677891512999*0.0568677891512999+0.998376977146694*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0568677891512999*0.0568677891512999+0.998376977146694*0.998376977146694+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0568677891512999*0.0568677891512999+0.998376977146694*0.998376977146694+0.00307669635709547*${unitz})
variable           dir_module    equal     sqrt(0.0568677891512999*0.0568677891512999+0.998376977146694*0.998376977146694+0.00307669635709547*0.00307669635709547)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43589319299843e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43589319299843e-06*0.0568677891512999+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43589319299843e-06*0.0568677891512999+3.42671337235853e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43589319299843e-06*0.0568677891512999+3.42671337235853e-07*0.998376977146694+${fz}*${unitz}
variable           dot      equal     -2.43589319299843e-06*0.0568677891512999+3.42671337235853e-07*0.998376977146694+-6.17625194200979e-06*${unitz}
variable           dot      equal     -2.43589319299843e-06*0.0568677891512999+3.42671337235853e-07*0.998376977146694+-6.17625194200979e-06*0.00307669635709547
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.8458886147934e-07/${f_module}*${dir_module}
variable           cos      equal     1.8458886147934e-07/6.64808899942223e-06*${dir_module}
variable           cos      equal     1.8458886147934e-07/6.64808899942223e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0277657025192325)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54302705544898/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.4089379517254-90.0)
print              "The dot product: ${dot}"
The dot product: 1.8458886147934e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.4089379517254

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.03309671774907^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.03309671774907^2+0.581049509976221^2+${new_z}^2)
variable           norm          equal     sqrt(0.03309671774907^2+0.581049509976221^2+0.00179061912639966^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.03309671774907/${norm}
variable           unit_x        equal     0.03309671774907/0.581994099700524
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.581049509976221/${norm}
variable           unit_y        equal     0.581049509976221/0.581994099700524
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00179061912639966/${norm}
variable           unit_z        equal     0.00179061912639966/0.581994099700524
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19873303163384+${delta}*${unit_x}
variable           x_new         equal     1.19873303163384+0.03*${unit_x}
variable           x_new         equal     1.19873303163384+0.03*0.0568677891512999
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.60573246523856+${delta}*${unit_y}
variable           y_new         equal     4.60573246523856+0.03*${unit_y}
variable           y_new         equal     4.60573246523856+0.03*0.998376977146694
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3226589420591+${delta}*${unit_z}
variable           z_new         equal     31.3226589420591+0.03*${unit_z}
variable           z_new         equal     31.3226589420591+0.03*0.00307669635709547

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20043906530838  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20043906530838  y  4.63568377455296  z   ${z_new}
set                atom          288751    x  1.20043906530838  y  4.63568377455296  z   31.3227512429498
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.03309671774907  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.03309671774907  0.581049509976221  ${new_z}
fix                hold    carbon   planeforce   0.03309671774907  0.581049509976221  0.00179061912639966
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3576   -1152448.7            0   -1152448.7 -0.086779187 0.0049664517 -0.0076219782 
    3745   -1152448.7            0   -1152448.7 -8.9260782e-07 7.0903016e-08 -6.5093538e-06 
Loop time of 1.97155 on 104 procs for 169 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.72172998  -1152448.72688153  -1152448.72688153
  Force two-norm initial, final = 0.34066838 9.6249377e-05
  Force max component initial, final = 0.3016897 3.0911973e-05
  Final line search alpha, max atom move = 1.0000000 3.0911973e-05
  Iterations, force evaluations = 169 338

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51275    | 1.4188     | 1.8569     |  32.0 | 71.96
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032454   | 0.31976    | 0.95475    |  47.2 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9847e-05 | 0.0027934  | 0.0059608  |   2.5 |  0.14
Other   |            | 0.2302     |            |       | 11.68

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115487 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238176
Ave neighs/atom = 28.530381
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18135731023554-${x_0}
variable           new_x         equal     1.18135731023554-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.63677465098127-${y_0}
variable           new_y         equal     4.63677465098127-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3214613246901-${z_0}
variable           new_z         equal     31.3214613246901-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0157209963507698*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0157209963507698*0.0157209963507698+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0157209963507698*0.0157209963507698+0.61209169571893*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0157209963507698*0.0157209963507698+0.61209169571893*0.61209169571893+${new_z}*${new_z})
variable           module        equal     sqrt(0.0157209963507698*0.0157209963507698+0.61209169571893*0.61209169571893+0.000593001757401623*${new_z})
variable           module        equal     sqrt(0.0157209963507698*0.0157209963507698+0.61209169571893*0.61209169571893+0.000593001757401623*0.000593001757401623)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0157209963507698/${module}
variable           unitx         equal     0.0157209963507698/0.61229383905558
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.61209169571893/${module}
variable           unity         equal     0.61209169571893/0.61229383905558
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.000593001757401623/${module}
variable           unitz         equal     0.000593001757401623/0.61229383905558
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.92607822780529e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.92607822780529e-07*-8.92607822780529e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.92607822780529e-07*-8.92607822780529e-07+7.09030158712517e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.92607822780529e-07*-8.92607822780529e-07+7.09030158712517e-08*7.09030158712517e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-8.92607822780529e-07*-8.92607822780529e-07+7.09030158712517e-08*7.09030158712517e-08+-6.50935376715765e-06*${fz})
variable           f_module      equal     sqrt(-8.92607822780529e-07*-8.92607822780529e-07+7.09030158712517e-08*7.09030158712517e-08+-6.50935376715765e-06*-6.50935376715765e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0256755749413032*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0256755749413032*0.0256755749413032+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0256755749413032*0.0256755749413032+0.999669858940665*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0256755749413032*0.0256755749413032+0.999669858940665*0.999669858940665+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0256755749413032*0.0256755749413032+0.999669858940665*0.999669858940665+0.000968492118614628*${unitz})
variable           dir_module    equal     sqrt(0.0256755749413032*0.0256755749413032+0.999669858940665*0.999669858940665+0.000968492118614628*0.000968492118614628)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.92607822780529e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.92607822780529e-07*0.0256755749413032+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.92607822780529e-07*0.0256755749413032+7.09030158712517e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -8.92607822780529e-07*0.0256755749413032+7.09030158712517e-08*0.999669858940665+${fz}*${unitz}
variable           dot      equal     -8.92607822780529e-07*0.0256755749413032+7.09030158712517e-08*0.999669858940665+-6.50935376715765e-06*${unitz}
variable           dot      equal     -8.92607822780529e-07*0.0256755749413032+7.09030158712517e-08*0.999669858940665+-6.50935376715765e-06*0.000968492118614628
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.16571310067203e-08/${f_module}*${dir_module}
variable           cos      equal     4.16571310067203e-08/6.57065159850666e-06*${dir_module}
variable           cos      equal     4.16571310067203e-08/6.57065159850666e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00633987822702209)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5644564060962/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.6367493015171-90.0)
print              "The dot product: ${dot}"
The dot product: 4.16571310067203e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.6367493015171

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0157209963507698^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0157209963507698^2+0.61209169571893^2+${new_z}^2)
variable           norm          equal     sqrt(0.0157209963507698^2+0.61209169571893^2+0.000593001757401623^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0157209963507698/${norm}
variable           unit_x        equal     0.0157209963507698/0.61229383905558
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.61209169571893/${norm}
variable           unit_y        equal     0.61209169571893/0.61229383905558
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.000593001757401623/${norm}
variable           unit_z        equal     0.000593001757401623/0.61229383905558
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18135731023554+${delta}*${unit_x}
variable           x_new         equal     1.18135731023554+0.03*${unit_x}
variable           x_new         equal     1.18135731023554+0.03*0.0256755749413032
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.63677465098127+${delta}*${unit_y}
variable           y_new         equal     4.63677465098127+0.03*${unit_y}
variable           y_new         equal     4.63677465098127+0.03*0.999669858940665
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3214613246901+${delta}*${unit_z}
variable           z_new         equal     31.3214613246901+0.03*${unit_z}
variable           z_new         equal     31.3214613246901+0.03*0.000968492118614628

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18212757748378  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18212757748378  y  4.66676474674949  z   ${z_new}
set                atom          288751    x  1.18212757748378  y  4.66676474674949  z   31.3214903794537
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0157209963507698  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0157209963507698  0.61209169571893  ${new_z}
fix                hold    carbon   planeforce   0.0157209963507698  0.61209169571893  0.000593001757401623
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3745   -1152448.7            0   -1152448.7 -0.043275135 0.0011150317 -0.0036651079 
    3887   -1152448.7            0   -1152448.7 9.042684e-06 -2.3089938e-07 -1.3969795e-06 
Loop time of 1.64151 on 104 procs for 142 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.68078763  -1152448.68564614  -1152448.68564614
  Force two-norm initial, final = 0.34205671 6.5452078e-05
  Force max component initial, final = 0.30875096 1.7060679e-05
  Final line search alpha, max atom move = 1.0000000 1.7060679e-05
  Iterations, force evaluations = 142 284

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.42878    | 1.1896     | 1.5498     |  29.5 | 72.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025915   | 0.26599    | 0.80716    |  43.9 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6586e-05 | 0.0023439  | 0.0050207  |   2.3 |  0.14
Other   |            | 0.1835     |            |       | 11.18

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115485 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238170
Ave neighs/atom = 28.530360
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17274901842581-${x_0}
variable           new_x         equal     1.17274901842581-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.66700611591868-${y_0}
variable           new_y         equal     4.66700611591868-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3209848643318-${z_0}
variable           new_z         equal     31.3209848643318-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00711270454103996*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00711270454103996*0.00711270454103996+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00711270454103996*0.00711270454103996+0.64232316065634*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00711270454103996*0.00711270454103996+0.64232316065634*0.64232316065634+${new_z}*${new_z})
variable           module        equal     sqrt(0.00711270454103996*0.00711270454103996+0.64232316065634*0.64232316065634+0.000116541399098224*${new_z})
variable           module        equal     sqrt(0.00711270454103996*0.00711270454103996+0.64232316065634*0.64232316065634+0.000116541399098224*0.000116541399098224)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00711270454103996/${module}
variable           unitx         equal     0.00711270454103996/0.642362550950268
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.64232316065634/${module}
variable           unity         equal     0.64232316065634/0.642362550950268
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.000116541399098224/${module}
variable           unitz         equal     0.000116541399098224/0.642362550950268
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.04268403512473e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.04268403512473e-06*9.04268403512473e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.04268403512473e-06*9.04268403512473e-06+-2.30899377372615e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.04268403512473e-06*9.04268403512473e-06+-2.30899377372615e-07*-2.30899377372615e-07+${fz}*${fz})
variable           f_module      equal     sqrt(9.04268403512473e-06*9.04268403512473e-06+-2.30899377372615e-07*-2.30899377372615e-07+-1.39697951201361e-06*${fz})
variable           f_module      equal     sqrt(9.04268403512473e-06*9.04268403512473e-06+-2.30899377372615e-07*-2.30899377372615e-07+-1.39697951201361e-06*-1.39697951201361e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0110727260337918*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0110727260337918*0.0110727260337918+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0110727260337918*0.0110727260337918+0.999938679031227*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0110727260337918*0.0110727260337918+0.999938679031227*0.999938679031227+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0110727260337918*0.0110727260337918+0.999938679031227*0.999938679031227+0.000181426203824959*${unitz})
variable           dir_module    equal     sqrt(0.0110727260337918*0.0110727260337918+0.999938679031227*0.999938679031227+0.000181426203824959*0.000181426203824959)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.04268403512473e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.04268403512473e-06*0.0110727260337918+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.04268403512473e-06*0.0110727260337918+-2.30899377372615e-07*${unity}+${fz}*${unitz}
variable           dot      equal     9.04268403512473e-06*0.0110727260337918+-2.30899377372615e-07*0.999938679031227+${fz}*${unitz}
variable           dot      equal     9.04268403512473e-06*0.0110727260337918+-2.30899377372615e-07*0.999938679031227+-1.39697951201361e-06*${unitz}
variable           dot      equal     9.04268403512473e-06*0.0110727260337918+-2.30899377372615e-07*0.999938679031227+-1.39697951201361e-06*0.000181426203824959
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.31011504157712e-07/${f_module}*${dir_module}
variable           cos      equal     -1.31011504157712e-07/9.15286844866441e-06*${dir_module}
variable           cos      equal     -1.31011504157712e-07/9.15286844866441e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0143137099470526)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58511052555797/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8201431762355-90.0)
print              "The dot product: ${dot}"
The dot product: -1.31011504157712e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8201431762355

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00711270454103996^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00711270454103996^2+0.64232316065634^2+${new_z}^2)
variable           norm          equal     sqrt(0.00711270454103996^2+0.64232316065634^2+0.000116541399098224^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00711270454103996/${norm}
variable           unit_x        equal     0.00711270454103996/0.642362550950268
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.64232316065634/${norm}
variable           unit_y        equal     0.64232316065634/0.642362550950268
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.000116541399098224/${norm}
variable           unit_z        equal     0.000116541399098224/0.642362550950268
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17274901842581+${delta}*${unit_x}
variable           x_new         equal     1.17274901842581+0.03*${unit_x}
variable           x_new         equal     1.17274901842581+0.03*0.0110727260337918
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.66700611591868+${delta}*${unit_y}
variable           y_new         equal     4.66700611591868+0.03*${unit_y}
variable           y_new         equal     4.66700611591868+0.03*0.999938679031227
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3209848643318+${delta}*${unit_z}
variable           z_new         equal     31.3209848643318+0.03*${unit_z}
variable           z_new         equal     31.3209848643318+0.03*0.000181426203824959

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17308120020682  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17308120020682  y  4.69700427628962  z   ${z_new}
set                atom          288751    x  1.17308120020682  y  4.69700427628962  z   31.3209903071179
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00711270454103996  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00711270454103996  0.64232316065634  ${new_z}
fix                hold    carbon   planeforce   0.00711270454103996  0.64232316065634  0.000116541399098224
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3887   -1152448.6            0   -1152448.6 -0.020088908 0.00022269316 -0.0013257843 
    4000   -1152448.6            0   -1152448.6 -2.684811e-07 2.1625272e-09 4.4669585e-06 
    4006   -1152448.6            0   -1152448.6 6.6947711e-06 -7.1232902e-08 -1.5989043e-05 
Loop time of 1.38428 on 104 procs for 119 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.63835419  -1152448.64409425  -1152448.64409425
  Force two-norm initial, final = 0.35163506 0.00015275017
  Force max component initial, final = 0.31544597 6.1952934e-05
  Final line search alpha, max atom move = 1.0000000 6.1952934e-05
  Iterations, force evaluations = 119 238

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.3631     | 1.0031     | 1.3076     |  27.0 | 72.46
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.020385   | 0.22938    | 0.69554    |  39.8 | 16.57
Output  | 9.5955e-05 | 9.9305e-05 | 0.00022882 |   0.0 |  0.01
Modify  | 1.3939e-05 | 0.0019711  | 0.0042176  |   2.1 |  0.14
Other   |            | 0.1497     |            |       | 10.82

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115479 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16859103904164-${x_0}
variable           new_x         equal     1.16859103904164-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.69705402263412-${y_0}
variable           new_y         equal     4.69705402263412-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3208526778738-${z_0}
variable           new_z         equal     31.3208526778738-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00295472515687001*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00295472515687001*0.00295472515687001+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00295472515687001*0.00295472515687001+0.67237106737178*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00295472515687001*0.00295472515687001+0.67237106737178*0.67237106737178+${new_z}*${new_z})
variable           module        equal     sqrt(0.00295472515687001*0.00295472515687001+0.67237106737178*0.67237106737178+-1.56450589017254e-05*${new_z})
variable           module        equal     sqrt(0.00295472515687001*0.00295472515687001+0.67237106737178*0.67237106737178+-1.56450589017254e-05*-1.56450589017254e-05)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00295472515687001/${module}
variable           unitx         equal     0.00295472515687001/0.672377559771433
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.67237106737178/${module}
variable           unity         equal     0.67237106737178/0.672377559771433
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -1.56450589017254e-05/${module}
variable           unitz         equal     -1.56450589017254e-05/0.672377559771433
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.6947710532074e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.6947710532074e-06*6.6947710532074e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.6947710532074e-06*6.6947710532074e-06+-7.12329021676085e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.6947710532074e-06*6.6947710532074e-06+-7.12329021676085e-08*-7.12329021676085e-08+${fz}*${fz})
variable           f_module      equal     sqrt(6.6947710532074e-06*6.6947710532074e-06+-7.12329021676085e-08*-7.12329021676085e-08+-1.59890434394269e-05*${fz})
variable           f_module      equal     sqrt(6.6947710532074e-06*6.6947710532074e-06+-7.12329021676085e-08*-7.12329021676085e-08+-1.59890434394269e-05*-1.59890434394269e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0043944434401922*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0043944434401922*0.0043944434401922+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0043944434401922*0.0043944434401922+0.999990344116102*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0043944434401922*0.0043944434401922+0.999990344116102*0.999990344116102+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0043944434401922*0.0043944434401922+0.999990344116102*0.999990344116102+-2.32682644956857e-05*${unitz})
variable           dir_module    equal     sqrt(0.0043944434401922*0.0043944434401922+0.999990344116102*0.999990344116102+-2.32682644956857e-05*-2.32682644956857e-05)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.6947710532074e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.6947710532074e-06*0.0043944434401922+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.6947710532074e-06*0.0043944434401922+-7.12329021676085e-08*${unity}+${fz}*${unitz}
variable           dot      equal     6.6947710532074e-06*0.0043944434401922+-7.12329021676085e-08*0.999990344116102+${fz}*${unitz}
variable           dot      equal     6.6947710532074e-06*0.0043944434401922+-7.12329021676085e-08*0.999990344116102+-1.59890434394269e-05*${unitz}
variable           dot      equal     6.6947710532074e-06*0.0043944434401922+-7.12329021676085e-08*0.999990344116102+-1.59890434394269e-05*-2.32682644956857e-05
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.1440384320838e-08/${f_module}*${dir_module}
variable           cos      equal     -4.1440384320838e-08/1.73342015590305e-05*${dir_module}
variable           cos      equal     -4.1440384320838e-08/1.73342015590305e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00239067165451581)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57318700072666/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.136975526482-90.0)
print              "The dot product: ${dot}"
The dot product: -4.1440384320838e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.136975526482

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00295472515687001^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00295472515687001^2+0.67237106737178^2+${new_z}^2)
variable           norm          equal     sqrt(0.00295472515687001^2+0.67237106737178^2+-1.56450589017254e-05^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00295472515687001/${norm}
variable           unit_x        equal     0.00295472515687001/0.672377559771433
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.67237106737178/${norm}
variable           unit_y        equal     0.67237106737178/0.672377559771433
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -1.56450589017254e-05/${norm}
variable           unit_z        equal     -1.56450589017254e-05/0.672377559771433
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16859103904164+${delta}*${unit_x}
variable           x_new         equal     1.16859103904164+0.03*${unit_x}
variable           x_new         equal     1.16859103904164+0.03*0.0043944434401922
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.69705402263412+${delta}*${unit_y}
variable           y_new         equal     4.69705402263412+0.03*${unit_y}
variable           y_new         equal     4.69705402263412+0.03*0.999990344116102
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3208526778738+${delta}*${unit_z}
variable           z_new         equal     31.3208526778738+0.03*${unit_z}
variable           z_new         equal     31.3208526778738+0.03*-2.32682644956857e-05

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16872287234485  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16872287234485  y  4.7270537329576  z   ${z_new}
set                atom          288751    x  1.16872287234485  y  4.7270537329576  z   31.3208519798259
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00295472515687001  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00295472515687001  0.67237106737178  ${new_z}
fix                hold    carbon   planeforce   0.00295472515687001  0.67237106737178  -1.56450589017254e-05
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4006   -1152448.6            0   -1152448.6 -0.0083973042 3.6894691e-05 -0.00030701699 
    4155   -1152448.6            0   -1152448.6 -4.4934497e-06 1.9609073e-08 -5.9019062e-06 
Loop time of 1.73174 on 104 procs for 149 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.59731405  -1152448.60209627  -1152448.60209627
  Force two-norm initial, final = 0.3566324 5.0902943e-05
  Force max component initial, final = 0.32256522 1.4392107e-05
  Final line search alpha, max atom move = 1.0000000 1.4392107e-05
  Iterations, force evaluations = 149 298

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4536     | 1.2501     | 1.6334     |  30.1 | 72.18
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.027639   | 0.28185    | 0.84709    |  44.5 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7264e-05 | 0.0024584  | 0.0052572  |   2.3 |  0.14
Other   |            | 0.1974     |            |       | 11.40

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115479 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238165
Ave neighs/atom = 28.530343
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16688310203946-${x_0}
variable           new_x         equal     1.16688310203946-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.72706181736249-${y_0}
variable           new_y         equal     4.72706181736249-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3208330829921-${z_0}
variable           new_z         equal     31.3208330829921-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00124678815469004*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00124678815469004*0.00124678815469004+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00124678815469004*0.00124678815469004+0.70237886210015*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00124678815469004*0.00124678815469004+0.70237886210015*0.70237886210015+${new_z}*${new_z})
variable           module        equal     sqrt(0.00124678815469004*0.00124678815469004+0.70237886210015*0.70237886210015+-3.52399406011727e-05*${new_z})
variable           module        equal     sqrt(0.00124678815469004*0.00124678815469004+0.70237886210015*0.70237886210015+-3.52399406011727e-05*-3.52399406011727e-05)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00124678815469004/${module}
variable           unitx         equal     0.00124678815469004/0.702379969566087
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.70237886210015/${module}
variable           unity         equal     0.70237886210015/0.702379969566087
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -3.52399406011727e-05/${module}
variable           unitz         equal     -3.52399406011727e-05/0.702379969566087
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.49344971736524e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.49344971736524e-06*-4.49344971736524e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.49344971736524e-06*-4.49344971736524e-06+1.96090729249498e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.49344971736524e-06*-4.49344971736524e-06+1.96090729249498e-08*1.96090729249498e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-4.49344971736524e-06*-4.49344971736524e-06+1.96090729249498e-08*1.96090729249498e-08+-5.90190616762724e-06*${fz})
variable           f_module      equal     sqrt(-4.49344971736524e-06*-4.49344971736524e-06+1.96090729249498e-08*1.96090729249498e-08+-5.90190616762724e-06*-5.90190616762724e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00177509070405336*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00177509070405336*0.00177509070405336+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00177509070405336*0.00177509070405336+0.999998423266629*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00177509070405336*0.00177509070405336+0.999998423266629*0.999998423266629+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00177509070405336*0.00177509070405336+0.999998423266629*0.999998423266629+-5.01721890260382e-05*${unitz})
variable           dir_module    equal     sqrt(0.00177509070405336*0.00177509070405336+0.999998423266629*0.999998423266629+-5.01721890260382e-05*-5.01721890260382e-05)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.49344971736524e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.49344971736524e-06*0.00177509070405336+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.49344971736524e-06*0.00177509070405336+1.96090729249498e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -4.49344971736524e-06*0.00177509070405336+1.96090729249498e-08*0.999998423266629+${fz}*${unitz}
variable           dot      equal     -4.49344971736524e-06*0.00177509070405336+1.96090729249498e-08*0.999998423266629+-5.90190616762724e-06*${unitz}
variable           dot      equal     -4.49344971736524e-06*0.00177509070405336+1.96090729249498e-08*0.999998423266629+-5.90190616762724e-06*-5.01721890260382e-05
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.19288727361e-08/${f_module}*${dir_module}
variable           cos      equal     1.19288727361e-08/7.41781445506068e-06*${dir_module}
variable           cos      equal     1.19288727361e-08/7.41781445506068e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00160813846293523)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56918818763882/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9078604134871-90.0)
print              "The dot product: ${dot}"
The dot product: 1.19288727361e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9078604134871

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00124678815469004^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00124678815469004^2+0.70237886210015^2+${new_z}^2)
variable           norm          equal     sqrt(0.00124678815469004^2+0.70237886210015^2+-3.52399406011727e-05^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00124678815469004/${norm}
variable           unit_x        equal     0.00124678815469004/0.702379969566087
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.70237886210015/${norm}
variable           unit_y        equal     0.70237886210015/0.702379969566087
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -3.52399406011727e-05/${norm}
variable           unit_z        equal     -3.52399406011727e-05/0.702379969566087
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16688310203946+${delta}*${unit_x}
variable           x_new         equal     1.16688310203946+0.03*${unit_x}
variable           x_new         equal     1.16688310203946+0.03*0.00177509070405336
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.72706181736249+${delta}*${unit_y}
variable           y_new         equal     4.72706181736249+0.03*${unit_y}
variable           y_new         equal     4.72706181736249+0.03*0.999998423266629
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3208330829921+${delta}*${unit_z}
variable           z_new         equal     31.3208330829921+0.03*${unit_z}
variable           z_new         equal     31.3208330829921+0.03*-5.01721890260382e-05

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16693635476058  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16693635476058  y  4.75706177006049  z   ${z_new}
set                atom          288751    x  1.16693635476058  y  4.75706177006049  z   31.3208315778264
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00124678815469004  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00124678815469004  0.70237886210015  ${new_z}
fix                hold    carbon   planeforce   0.00124678815469004  0.70237886210015  -3.52399406011727e-05
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4155   -1152448.6            0   -1152448.6 -0.0031989002 5.6774155e-06 -1.8563349e-05 
    4318   -1152448.6            0   -1152448.6 -1.4428101e-07 2.5736777e-10 2.5019782e-08 
Loop time of 1.88793 on 104 procs for 163 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.55121063  -1152448.55616471  -1152448.55616471
  Force two-norm initial, final = 0.36314348 4.0660030e-05
  Force max component initial, final = 0.32940368 1.4700464e-05
  Final line search alpha, max atom move = 1.0000000 1.4700464e-05
  Iterations, force evaluations = 163 326

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49382    | 1.3715     | 1.7798     |  31.6 | 72.65
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.028907   | 0.30925    | 0.94343    |  46.9 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8945e-05 | 0.0026946  | 0.0057456  |   2.4 |  0.14
Other   |            | 0.2044     |            |       | 10.83

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238165
Ave neighs/atom = 28.530343
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16619652803255-${x_0}
variable           new_x         equal     1.16619652803255-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.75706308371823-${y_0}
variable           new_y         equal     4.75706308371823-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3208394724223-${z_0}
variable           new_z         equal     31.3208394724223-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000560214147779847*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000560214147779847*0.000560214147779847+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000560214147779847*0.000560214147779847+0.73238012845589*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000560214147779847*0.000560214147779847+0.73238012845589*0.73238012845589+${new_z}*${new_z})
variable           module        equal     sqrt(0.000560214147779847*0.000560214147779847+0.73238012845589*0.73238012845589+-2.88505104002468e-05*${new_z})
variable           module        equal     sqrt(0.000560214147779847*0.000560214147779847+0.73238012845589*0.73238012845589+-2.88505104002468e-05*-2.88505104002468e-05)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000560214147779847/${module}
variable           unitx         equal     0.000560214147779847/0.732380343284355
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.73238012845589/${module}
variable           unity         equal     0.73238012845589/0.732380343284355
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -2.88505104002468e-05/${module}
variable           unitz         equal     -2.88505104002468e-05/0.732380343284355
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44281012738295e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44281012738295e-07*-1.44281012738295e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44281012738295e-07*-1.44281012738295e-07+2.57367766710976e-10*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44281012738295e-07*-1.44281012738295e-07+2.57367766710976e-10*2.57367766710976e-10+${fz}*${fz})
variable           f_module      equal     sqrt(-1.44281012738295e-07*-1.44281012738295e-07+2.57367766710976e-10*2.57367766710976e-10+2.50197821031813e-08*${fz})
variable           f_module      equal     sqrt(-1.44281012738295e-07*-1.44281012738295e-07+2.57367766710976e-10*2.57367766710976e-10+2.50197821031813e-08*2.50197821031813e-08)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000764922424416213*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000764922424416213*0.000764922424416213+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000764922424416213*0.000764922424416213+0.999999706670903*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000764922424416213*0.000764922424416213+0.999999706670903*0.999999706670903+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000764922424416213*0.000764922424416213+0.999999706670903*0.999999706670903+-3.93927972873587e-05*${unitz})
variable           dir_module    equal     sqrt(0.000764922424416213*0.000764922424416213+0.999999706670903*0.999999706670903+-3.93927972873587e-05*-3.93927972873587e-05)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44281012738295e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44281012738295e-07*0.000764922424416213+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44281012738295e-07*0.000764922424416213+2.57367766710976e-10*${unity}+${fz}*${unitz}
variable           dot      equal     -1.44281012738295e-07*0.000764922424416213+2.57367766710976e-10*0.999999706670903+${fz}*${unitz}
variable           dot      equal     -1.44281012738295e-07*0.000764922424416213+2.57367766710976e-10*0.999999706670903+2.50197821031813e-08*${unitz}
variable           dot      equal     -1.44281012738295e-07*0.000764922424416213+2.57367766710976e-10*0.999999706670903+2.50197821031813e-08*-3.93927972873587e-05
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.46018309951954e-10/${f_module}*${dir_module}
variable           cos      equal     1.46018309951954e-10/1.46434512227979e-07*${dir_module}
variable           cos      equal     1.46018309951954e-10/1.46434512227979e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000997157758306478)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56979916887134/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9428670594722-90.0)
print              "The dot product: ${dot}"
The dot product: 1.46018309951954e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9428670594722

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4318   -1152448.6            0   -1152448.6 -0.002856494   -1.6091264 8.0758539e-05 
    4492   -1152449.3            0   -1152449.3 -1.635624e-05 4.3635644e-06 1.2096628e-05 
Loop time of 2.00266 on 104 procs for 174 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.55616471  -1152449.34502392  -1152449.34502392
  Force two-norm initial, final = 1.6091289 0.00029431085
  Force max component initial, final = 1.6091264 6.4033251e-05
  Final line search alpha, max atom move = 1.0000000 6.4033251e-05
  Iterations, force evaluations = 174 342

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53467    | 1.4406     | 1.8684     |  32.0 | 71.93
Neigh   | 4.0238e-05 | 0.011832   | 0.017166   |   4.5 |  0.59
Comm    | 0.031033   | 0.32613    | 0.98346    |  47.9 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8543e-05 | 0.0018465  | 0.0047458  |   2.7 |  0.09
Other   |            | 0.2223     |            |       | 11.10

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115519 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 4
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563820736056-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563820736056-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563820736056-1.16563631388477)^2+(4.02468279637027-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563820736056-1.16563631388477)^2+(4.02468279637027-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563820736056-1.16563631388477)^2+(4.02468279637027-4.02468295526234)^2+(31.3208659255863-${z_0})^2)
variable                displacement      equal     sqrt((1.16563820736056-1.16563631388477)^2+(4.02468279637027-4.02468295526234)^2+(31.3208659255863-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 10
10
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.341 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.93646 on 104 procs for 158 steps with 288751 atoms

99.8% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49893    | 1.3385     | 1.7471     |  30.7 | 69.12
Neigh   | 3.0227e-05 | 0.0088815  | 0.01297    |   3.9 |  0.46
Comm    | 0.036949   | 0.31817    | 0.91891    |  43.7 | 16.43
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8813e-05 | 0.0016946  | 0.004341   |   2.6 |  0.09
Other   |            | 0.2692     |            |       | 13.90

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,10)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,10)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,10)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.13596571418575
variable                y_1    equal     $y
variable                y_1    equal     4.0399444348785
variable                z_1    equal     $z
variable                z_1    equal     31.3363832462668

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.13596571418575  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.13596571418575  y  4.0399444348785  z  ${z_1}
set                atom        288751    x  1.13596571418575  y  4.0399444348785  z  31.3363832462668
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.13596571418575-${x_0}
variable           vector_x          equal     1.13596571418575-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.0399444348785-${y_0}
variable           vector_y          equal     4.0399444348785-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3363832462668-${z_0}
variable           vector_z          equal     31.3363832462668-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.0296705996990201  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.0296705996990201  0.0152614796161599  ${vector_z}
fix                hold    carbon   planeforce   -0.0296705996990201  0.0152614796161599  0.0155149233340985
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 0.0087794958  0.065574898 -0.047713872 
     410   -1152449.3            0   -1152449.3 3.3477304e-07 -4.6314898e-07 1.0958002e-06 
Loop time of 2.92789 on 104 procs for 252 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.3350829  -1152449.34190602  -1152449.34190602
  Force two-norm initial, final = 0.39588874 8.6976781e-06
  Force max component initial, final = 0.20180307 1.4091376e-06
  Final line search alpha, max atom move = 1.0000000 1.4091376e-06
  Iterations, force evaluations = 252 504

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.76304    | 2.1131     | 2.7625     |  39.3 | 72.17
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044318   | 0.47453    | 1.423      |  58.0 | 16.21
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.0858e-05 | 0.0041423  | 0.0089216  |   3.0 |  0.14
Other   |            | 0.3361     |            |       | 11.48

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.13674073276685-${x_0}
variable           new_x         equal     1.13674073276685-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.04176995962971-${y_0}
variable           new_y         equal     4.04176995962971-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3360696808952-${z_0}
variable           new_z         equal     31.3360696808952-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0288955811179201^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0288955811179201^2+0.0170870043673705^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0288955811179201^2+0.0170870043673705^2+0.0152013579624999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0288955811179201/${norm}
variable           unit_x        equal     -0.0288955811179201/0.0368510733940939
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0170870043673705/${norm}
variable           unit_y        equal     0.0170870043673705/0.0368510733940939
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0152013579624999/${norm}
variable           unit_z        equal     0.0152013579624999/0.0368510733940939
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.13674073276685+${delta}*${unit_x}
variable           x_new         equal     1.13674073276685+0.03*${unit_x}
variable           x_new         equal     1.13674073276685+0.03*-0.784117759852042
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.04176995962971+${delta}*${unit_y}
variable           y_new         equal     4.04176995962971+0.03*${unit_y}
variable           y_new         equal     4.04176995962971+0.03*0.463677249903636
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3360696808952+${delta}*${unit_z}
variable           z_new         equal     31.3360696808952+0.03*${unit_z}
variable           z_new         equal     31.3360696808952+0.03*0.412507874599284

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11321719997129  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11321719997129  y  4.05568027712682  z   ${z_new}
set                atom          288751    x  1.11321719997129  y  4.05568027712682  z   31.3484449171332
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0288955811179201  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0288955811179201  0.0170870043673705  ${new_z}
fix                hold    carbon   planeforce   -0.0288955811179201  0.0170870043673705  0.0152013579624999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     410   -1152449.3            0   -1152449.3   0.01626659  0.065283936 -0.042461624 
     622   -1152449.3            0   -1152449.3 -1.2146126e-06 4.6477419e-06 -7.5330719e-06 
Loop time of 2.48243 on 104 procs for 212 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33034227  -1152449.33480965  -1152449.33480965
  Force two-norm initial, final = 0.32160375 5.1876754e-05
  Force max component initial, final = 0.16080582 7.5330719e-06
  Final line search alpha, max atom move = 1.0000000 7.5330719e-06
  Iterations, force evaluations = 212 424

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64312    | 1.7853     | 2.3467     |  36.1 | 71.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040142   | 0.40584    | 1.1963     |  52.6 | 16.35
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6177e-05 | 0.0034924  | 0.0075167  |   2.8 |  0.14
Other   |            | 0.2878     |            |       | 11.59

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115495 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.11484813632932-${x_0}
variable           new_x         equal     1.11484813632932-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.05918767033144-${y_0}
variable           new_y         equal     4.05918767033144-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3476026246744-${z_0}
variable           new_z         equal     31.3476026246744-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0507881775554502*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0507881775554502*-0.0507881775554502+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0507881775554502*-0.0507881775554502+0.0345047150691*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0507881775554502*-0.0507881775554502+0.0345047150691*0.0345047150691+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0507881775554502*-0.0507881775554502+0.0345047150691*0.0345047150691+0.0267343017417012*${new_z})
variable           module        equal     sqrt(-0.0507881775554502*-0.0507881775554502+0.0345047150691*0.0345047150691+0.0267343017417012*0.0267343017417012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0507881775554502/${module}
variable           unitx         equal     -0.0507881775554502/0.0669681807354809
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0345047150691/${module}
variable           unity         equal     0.0345047150691/0.0669681807354809
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0267343017417012/${module}
variable           unitz         equal     0.0267343017417012/0.0669681807354809
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.21461261648147e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.21461261648147e-06*-1.21461261648147e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.21461261648147e-06*-1.21461261648147e-06+4.64774187886622e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.21461261648147e-06*-1.21461261648147e-06+4.64774187886622e-06*4.64774187886622e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.21461261648147e-06*-1.21461261648147e-06+4.64774187886622e-06*4.64774187886622e-06+-7.5330719434951e-06*${fz})
variable           f_module      equal     sqrt(-1.21461261648147e-06*-1.21461261648147e-06+4.64774187886622e-06*4.64774187886622e-06+-7.5330719434951e-06*-7.5330719434951e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.758392672425425*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.758392672425425*-0.758392672425425+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.758392672425425*-0.758392672425425+0.5152404424034*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.758392672425425*-0.758392672425425+0.5152404424034*0.5152404424034+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.758392672425425*-0.758392672425425+0.5152404424034*0.5152404424034+0.399209019090717*${unitz})
variable           dir_module    equal     sqrt(-0.758392672425425*-0.758392672425425+0.5152404424034*0.5152404424034+0.399209019090717*0.399209019090717)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.21461261648147e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.21461261648147e-06*-0.758392672425425+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.21461261648147e-06*-0.758392672425425+4.64774187886622e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.21461261648147e-06*-0.758392672425425+4.64774187886622e-06*0.5152404424034+${fz}*${unitz}
variable           dot      equal     -1.21461261648147e-06*-0.758392672425425+4.64774187886622e-06*0.5152404424034+-7.5330719434951e-06*${unitz}
variable           dot      equal     -1.21461261648147e-06*-0.758392672425425+4.64774187886622e-06*0.5152404424034+-7.5330719434951e-06*0.399209019090717
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.0858762871638e-07/${f_module}*${dir_module}
variable           cos      equal     3.0858762871638e-07/8.93442562712097e-06*${dir_module}
variable           cos      equal     3.0858762871638e-07/8.93442562712097e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.034539168111674)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53625028772015/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.020657762123-90.0)
print              "The dot product: ${dot}"
The dot product: 3.0858762871638e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.020657762123

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0507881775554502^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0507881775554502^2+0.0345047150691^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0507881775554502^2+0.0345047150691^2+0.0267343017417012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0507881775554502/${norm}
variable           unit_x        equal     -0.0507881775554502/0.0669681807354809
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0345047150691/${norm}
variable           unit_y        equal     0.0345047150691/0.0669681807354809
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0267343017417012/${norm}
variable           unit_z        equal     0.0267343017417012/0.0669681807354809
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.11484813632932+${delta}*${unit_x}
variable           x_new         equal     1.11484813632932+0.03*${unit_x}
variable           x_new         equal     1.11484813632932+0.03*-0.758392672425425
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.05918767033144+${delta}*${unit_y}
variable           y_new         equal     4.05918767033144+0.03*${unit_y}
variable           y_new         equal     4.05918767033144+0.03*0.5152404424034
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3476026246744+${delta}*${unit_z}
variable           z_new         equal     31.3476026246744+0.03*${unit_z}
variable           z_new         equal     31.3476026246744+0.03*0.399209019090717

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09209635615656  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09209635615656  y  4.07464488360354  z   ${z_new}
set                atom          288751    x  1.09209635615656  y  4.07464488360354  z   31.3595788952471
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0507881775554502  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0507881775554502  0.0345047150691  ${new_z}
fix                hold    carbon   planeforce   -0.0507881775554502  0.0345047150691  0.0267343017417012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     622   -1152449.3            0   -1152449.3  0.024310967  0.077843032 -0.054283891 
     833   -1152449.3            0   -1152449.3 5.8019436e-07 -4.2101807e-06 6.5361011e-06 
Loop time of 2.45401 on 104 procs for 211 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31943622  -1152449.32381165  -1152449.32381165
  Force two-norm initial, final = 0.32130488 4.9486421e-05
  Force max component initial, final = 0.15604468 9.5049868e-06
  Final line search alpha, max atom move = 1.0000000 9.5049868e-06
  Iterations, force evaluations = 211 422

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63926    | 1.7733     | 2.3135     |  36.0 | 72.26
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037714   | 0.39928    | 1.1964     |  53.1 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6256e-05 | 0.0034777  | 0.007462   |   2.8 |  0.14
Other   |            | 0.278      |            |       | 11.33

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115492 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.09446937757055-${x_0}
variable           new_x         equal     1.09446937757055-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.08038139029571-${y_0}
variable           new_y         equal     4.08038139029571-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3566831736108-${z_0}
variable           new_z         equal     31.3566831736108-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07116693631422*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07116693631422*-0.07116693631422+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07116693631422*-0.07116693631422+0.0556984350333698*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07116693631422*-0.07116693631422+0.0556984350333698*0.0556984350333698+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07116693631422*-0.07116693631422+0.0556984350333698*0.0556984350333698+0.0358148506781006*${new_z})
variable           module        equal     sqrt(-0.07116693631422*-0.07116693631422+0.0556984350333698*0.0556984350333698+0.0358148506781006*0.0358148506781006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.07116693631422/${module}
variable           unitx         equal     -0.07116693631422/0.0972098349891275
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0556984350333698/${module}
variable           unity         equal     0.0556984350333698/0.0972098349891275
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0358148506781006/${module}
variable           unitz         equal     0.0358148506781006/0.0972098349891275
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.80194362837543e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.80194362837543e-07*5.80194362837543e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.80194362837543e-07*5.80194362837543e-07+-4.21018068482348e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.80194362837543e-07*5.80194362837543e-07+-4.21018068482348e-06*-4.21018068482348e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.80194362837543e-07*5.80194362837543e-07+-4.21018068482348e-06*-4.21018068482348e-06+6.53610110825242e-06*${fz})
variable           f_module      equal     sqrt(5.80194362837543e-07*5.80194362837543e-07+-4.21018068482348e-06*-4.21018068482348e-06+6.53610110825242e-06*6.53610110825242e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.732096051003273*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.732096051003273*-0.732096051003273+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.732096051003273*-0.732096051003273+0.572971192056847*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.732096051003273*-0.732096051003273+0.572971192056847*0.572971192056847+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.732096051003273*-0.732096051003273+0.572971192056847*0.572971192056847+0.368428263273015*${unitz})
variable           dir_module    equal     sqrt(-0.732096051003273*-0.732096051003273+0.572971192056847*0.572971192056847+0.368428263273015*0.368428263273015)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.80194362837543e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.80194362837543e-07*-0.732096051003273+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.80194362837543e-07*-0.732096051003273+-4.21018068482348e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.80194362837543e-07*-0.732096051003273+-4.21018068482348e-06*0.572971192056847+${fz}*${unitz}
variable           dot      equal     5.80194362837543e-07*-0.732096051003273+-4.21018068482348e-06*0.572971192056847+6.53610110825242e-06*${unitz}
variable           dot      equal     5.80194362837543e-07*-0.732096051003273+-4.21018068482348e-06*0.572971192056847+6.53610110825242e-06*0.368428263273015
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.28985867715479e-07/${f_module}*${dir_module}
variable           cos      equal     -4.28985867715479e-07/7.79633661374544e-06*${dir_module}
variable           cos      equal     -4.28985867715479e-07/7.79633661374544e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0550240310249239)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62584816124647/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.1542377685281-90.0)
print              "The dot product: ${dot}"
The dot product: -4.28985867715479e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.1542377685281

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07116693631422^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07116693631422^2+0.0556984350333698^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07116693631422^2+0.0556984350333698^2+0.0358148506781006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.07116693631422/${norm}
variable           unit_x        equal     -0.07116693631422/0.0972098349891275
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0556984350333698/${norm}
variable           unit_y        equal     0.0556984350333698/0.0972098349891275
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0358148506781006/${norm}
variable           unit_z        equal     0.0358148506781006/0.0972098349891275
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.09446937757055+${delta}*${unit_x}
variable           x_new         equal     1.09446937757055+0.03*${unit_x}
variable           x_new         equal     1.09446937757055+0.03*-0.732096051003273
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.08038139029571+${delta}*${unit_y}
variable           y_new         equal     4.08038139029571+0.03*${unit_y}
variable           y_new         equal     4.08038139029571+0.03*0.572971192056847
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3566831736108+${delta}*${unit_z}
variable           z_new         equal     31.3566831736108+0.03*${unit_z}
variable           z_new         equal     31.3566831736108+0.03*0.368428263273015

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07250649604045  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07250649604045  y  4.09757052605741  z   ${z_new}
set                atom          288751    x  1.07250649604045  y  4.09757052605741  z   31.367736021509
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07116693631422  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07116693631422  0.0556984350333698  ${new_z}
fix                hold    carbon   planeforce   -0.07116693631422  0.0556984350333698  0.0358148506781006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     833   -1152449.3            0   -1152449.3  0.031040009  0.089153409  -0.07697039 
    1000   -1152449.3            0   -1152449.3 4.3697468e-06 2.7981865e-05 -3.4833723e-05 
    1013   -1152449.3            0   -1152449.3 2.6530951e-06 1.2459646e-05 -1.4105047e-05 
Loop time of 2.10243 on 104 procs for 180 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30523723  -1152449.30962075  -1152449.30962075
  Force two-norm initial, final = 0.32280778 9.6832773e-05
  Force max component initial, final = 0.14731246 1.4105047e-05
  Final line search alpha, max atom move = 1.0000000 1.4105047e-05
  Iterations, force evaluations = 180 360

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54623    | 1.5141     | 1.9813     |  33.3 | 72.02
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034333   | 0.34262    | 1.0189     |  48.7 | 16.30
Output  | 9.9171e-05 | 0.00010174 | 0.00025117 |   0.0 |  0.00
Modify  | 2.2047e-05 | 0.0029707  | 0.0063454  |   2.6 |  0.14
Other   |            | 0.2426     |            |       | 11.54

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115493 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07502004453435-${x_0}
variable           new_x         equal     1.07502004453435-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.10590405835059-${y_0}
variable           new_y         equal     4.10590405835059-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3597705223926-${z_0}
variable           new_z         equal     31.3597705223926-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09061626935042*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09061626935042*-0.09061626935042+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09061626935042*-0.09061626935042+0.0812211030882501*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09061626935042*-0.09061626935042+0.0812211030882501*0.0812211030882501+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09061626935042*-0.09061626935042+0.0812211030882501*0.0812211030882501+0.0389021994599013*${new_z})
variable           module        equal     sqrt(-0.09061626935042*-0.09061626935042+0.0812211030882501*0.0812211030882501+0.0389021994599013*0.0389021994599013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.09061626935042/${module}
variable           unitx         equal     -0.09061626935042/0.127755849105542
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0812211030882501/${module}
variable           unity         equal     0.0812211030882501/0.127755849105542
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0389021994599013/${module}
variable           unitz         equal     0.0389021994599013/0.127755849105542
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.65309512474316e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.65309512474316e-06*2.65309512474316e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.65309512474316e-06*2.65309512474316e-06+1.24596461292666e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.65309512474316e-06*2.65309512474316e-06+1.24596461292666e-05*1.24596461292666e-05+${fz}*${fz})
variable           f_module      equal     sqrt(2.65309512474316e-06*2.65309512474316e-06+1.24596461292666e-05*1.24596461292666e-05+-1.41050466246549e-05*${fz})
variable           f_module      equal     sqrt(2.65309512474316e-06*2.65309512474316e-06+1.24596461292666e-05*1.24596461292666e-05+-1.41050466246549e-05*-1.41050466246549e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.709292529342902*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.709292529342902*-0.709292529342902+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.709292529342902*-0.709292529342902+0.635752520584412*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.709292529342902*-0.709292529342902+0.635752520584412*0.635752520584412+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.709292529342902*-0.709292529342902+0.635752520584412*0.635752520584412+0.304504253482463*${unitz})
variable           dir_module    equal     sqrt(-0.709292529342902*-0.709292529342902+0.635752520584412*0.635752520584412+0.304504253482463*0.304504253482463)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.65309512474316e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.65309512474316e-06*-0.709292529342902+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.65309512474316e-06*-0.709292529342902+1.24596461292666e-05*${unity}+${fz}*${unitz}
variable           dot      equal     2.65309512474316e-06*-0.709292529342902+1.24596461292666e-05*0.635752520584412+${fz}*${unitz}
variable           dot      equal     2.65309512474316e-06*-0.709292529342902+1.24596461292666e-05*0.635752520584412+-1.41050466246549e-05*${unitz}
variable           dot      equal     2.65309512474316e-06*-0.709292529342902+1.24596461292666e-05*0.635752520584412+-1.41050466246549e-05*0.304504253482463
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.74438418787878e-06/${f_module}*${dir_module}
variable           cos      equal     1.74438418787878e-06/1.90061578361112e-05*${dir_module}
variable           cos      equal     1.74438418787878e-06/1.90061578361112e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.091779948526182)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.47888703507671/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(84.7339854865112-90.0)
print              "The dot product: ${dot}"
The dot product: 1.74438418787878e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 84.7339854865112

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09061626935042^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09061626935042^2+0.0812211030882501^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09061626935042^2+0.0812211030882501^2+0.0389021994599013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.09061626935042/${norm}
variable           unit_x        equal     -0.09061626935042/0.127755849105542
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0812211030882501/${norm}
variable           unit_y        equal     0.0812211030882501/0.127755849105542
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0389021994599013/${norm}
variable           unit_z        equal     0.0389021994599013/0.127755849105542
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07502004453435+${delta}*${unit_x}
variable           x_new         equal     1.07502004453435+0.03*${unit_x}
variable           x_new         equal     1.07502004453435+0.03*-0.709292529342902
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.10590405835059+${delta}*${unit_y}
variable           y_new         equal     4.10590405835059+0.03*${unit_y}
variable           y_new         equal     4.10590405835059+0.03*0.635752520584412
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3597705223926+${delta}*${unit_z}
variable           z_new         equal     31.3597705223926+0.03*${unit_z}
variable           z_new         equal     31.3597705223926+0.03*0.304504253482463

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05374126865406  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05374126865406  y  4.12497663396812  z   ${z_new}
set                atom          288751    x  1.05374126865406  y  4.12497663396812  z   31.3689056499971
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09061626935042  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09061626935042  0.0812211030882501  ${new_z}
fix                hold    carbon   planeforce   -0.09061626935042  0.0812211030882501  0.0389021994599013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1013   -1152449.3            0   -1152449.3  0.041245868  0.091231759 -0.094400765 
    1136   -1152449.3            0   -1152449.3 2.3235544e-06 9.4124628e-06 -1.4239266e-05 
Loop time of 1.43299 on 104 procs for 123 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.28838281  -1152449.29269605  -1152449.29269605
  Force two-norm initial, final = 0.31922843 0.00013920373
  Force max component initial, final = 0.13221237 2.0876103e-05
  Final line search alpha, max atom move = 1.0000000 2.0876103e-05
  Iterations, force evaluations = 123 246

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.37365    | 1.0359     | 1.3528     |  27.5 | 72.29
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.022009   | 0.23346    | 0.69856    |  40.7 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5384e-05 | 0.0020357  | 0.0043664  |   2.1 |  0.14
Other   |            | 0.1616     |            |       | 11.28

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05694779286685-${x_0}
variable           new_x         equal     1.05694779286685-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.13408854933668-${y_0}
variable           new_y         equal     4.13408854933668-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3573506078148-${z_0}
variable           new_z         equal     31.3573506078148-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10868852101792*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10868852101792*-0.10868852101792+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10868852101792*-0.10868852101792+0.109405594074341*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10868852101792*-0.10868852101792+0.109405594074341*0.109405594074341+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10868852101792*-0.10868852101792+0.109405594074341*0.109405594074341+0.0364822848821014*${new_z})
variable           module        equal     sqrt(-0.10868852101792*-0.10868852101792+0.109405594074341*0.109405594074341+0.0364822848821014*0.0364822848821014)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10868852101792/${module}
variable           unitx         equal     -0.10868852101792/0.158473138815514
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.109405594074341/${module}
variable           unity         equal     0.109405594074341/0.158473138815514
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0364822848821014/${module}
variable           unitz         equal     0.0364822848821014/0.158473138815514
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.32355442264435e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.32355442264435e-06*2.32355442264435e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.32355442264435e-06*2.32355442264435e-06+9.41246279862832e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.32355442264435e-06*2.32355442264435e-06+9.41246279862832e-06*9.41246279862832e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.32355442264435e-06*2.32355442264435e-06+9.41246279862832e-06*9.41246279862832e-06+-1.42392663033613e-05*${fz})
variable           f_module      equal     sqrt(2.32355442264435e-06*2.32355442264435e-06+9.41246279862832e-06*9.41246279862832e-06+-1.42392663033613e-05*-1.42392663033613e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.685848225322585*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.685848225322585*-0.685848225322585+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.685848225322585*-0.685848225322585+0.690373112390392*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.685848225322585*-0.685848225322585+0.690373112390392*0.690373112390392+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.685848225322585*-0.685848225322585+0.690373112390392*0.690373112390392+0.230211158526822*${unitz})
variable           dir_module    equal     sqrt(-0.685848225322585*-0.685848225322585+0.690373112390392*0.690373112390392+0.230211158526822*0.230211158526822)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.32355442264435e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.32355442264435e-06*-0.685848225322585+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.32355442264435e-06*-0.685848225322585+9.41246279862832e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.32355442264435e-06*-0.685848225322585+9.41246279862832e-06*0.690373112390392+${fz}*${unitz}
variable           dot      equal     2.32355442264435e-06*-0.685848225322585+9.41246279862832e-06*0.690373112390392+-1.42392663033613e-05*${unitz}
variable           dot      equal     2.32355442264435e-06*-0.685848225322585+9.41246279862832e-06*0.690373112390392+-1.42392663033613e-05*0.230211158526822
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.626467568068e-06/${f_module}*${dir_module}
variable           cos      equal     1.626467568068e-06/1.72264350911206e-05*${dir_module}
variable           cos      equal     1.626467568068e-06/1.72264350911206e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0944169562341058)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.47623852384954/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(84.5822369712014-90.0)
print              "The dot product: ${dot}"
The dot product: 1.626467568068e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 84.5822369712014

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10868852101792^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10868852101792^2+0.109405594074341^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10868852101792^2+0.109405594074341^2+0.0364822848821014^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10868852101792/${norm}
variable           unit_x        equal     -0.10868852101792/0.158473138815514
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.109405594074341/${norm}
variable           unit_y        equal     0.109405594074341/0.158473138815514
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0364822848821014/${norm}
variable           unit_z        equal     0.0364822848821014/0.158473138815514
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05694779286685+${delta}*${unit_x}
variable           x_new         equal     1.05694779286685+0.03*${unit_x}
variable           x_new         equal     1.05694779286685+0.03*-0.685848225322585
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.13408854933668+${delta}*${unit_y}
variable           y_new         equal     4.13408854933668+0.03*${unit_y}
variable           y_new         equal     4.13408854933668+0.03*0.690373112390392
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3573506078148+${delta}*${unit_z}
variable           z_new         equal     31.3573506078148+0.03*${unit_z}
variable           z_new         equal     31.3573506078148+0.03*0.230211158526822

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03637234610717  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03637234610717  y  4.15479974270839  z   ${z_new}
set                atom          288751    x  1.03637234610717  y  4.15479974270839  z   31.3642569425706
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10868852101792  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10868852101792  0.109405594074341  ${new_z}
fix                hold    carbon   planeforce   -0.10868852101792  0.109405594074341  0.0364822848821014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1136   -1152449.3            0   -1152449.3  0.052040845  0.084008186 -0.096888751 
    1343   -1152449.3            0   -1152449.3 6.222441e-06 1.0649943e-05 -1.3399802e-05 
Loop time of 2.4587 on 104 procs for 207 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
       -1152449.268835  -1152449.27292522  -1152449.27292522
  Force two-norm initial, final = 0.3093614 5.0676666e-05
  Force max component initial, final = 0.12658675 1.3399802e-05
  Final line search alpha, max atom move = 1.0000000 1.3399802e-05
  Iterations, force evaluations = 207 414

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62866    | 1.7467     | 2.3253     |  35.9 | 71.04
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038209   | 0.40904    | 1.1918     |  51.3 | 16.64
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5528e-05 | 0.0034141  | 0.0073586  |   2.8 |  0.14
Other   |            | 0.2996     |            |       | 12.19

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.04088229332825-${x_0}
variable           new_x         equal     1.04088229332825-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.1634305869459-${y_0}
variable           new_y         equal     4.1634305869459-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.351810267443-${z_0}
variable           new_z         equal     31.351810267443-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12475402055652*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12475402055652*-0.12475402055652+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12475402055652*-0.12475402055652+0.13874763168356*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12475402055652*-0.12475402055652+0.13874763168356*0.13874763168356+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12475402055652*-0.12475402055652+0.13874763168356*0.13874763168356+0.0309419445102996*${new_z})
variable           module        equal     sqrt(-0.12475402055652*-0.12475402055652+0.13874763168356*0.13874763168356+0.0309419445102996*0.0309419445102996)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.12475402055652/${module}
variable           unitx         equal     -0.12475402055652/0.189134541723324
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.13874763168356/${module}
variable           unity         equal     0.13874763168356/0.189134541723324
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0309419445102996/${module}
variable           unitz         equal     0.0309419445102996/0.189134541723324
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.22244104726903e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.22244104726903e-06*6.22244104726903e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.22244104726903e-06*6.22244104726903e-06+1.06499426207676e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.22244104726903e-06*6.22244104726903e-06+1.06499426207676e-05*1.06499426207676e-05+${fz}*${fz})
variable           f_module      equal     sqrt(6.22244104726903e-06*6.22244104726903e-06+1.06499426207676e-05*1.06499426207676e-05+-1.33998017479755e-05*${fz})
variable           f_module      equal     sqrt(6.22244104726903e-06*6.22244104726903e-06+1.06499426207676e-05*1.06499426207676e-05+-1.33998017479755e-05*-1.33998017479755e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.659604636042721*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.659604636042721*-0.659604636042721+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.659604636042721*-0.659604636042721+0.7335922376703*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.659604636042721*-0.659604636042721+0.7335922376703*0.7335922376703+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.659604636042721*-0.659604636042721+0.7335922376703*0.7335922376703+0.163597533419163*${unitz})
variable           dir_module    equal     sqrt(-0.659604636042721*-0.659604636042721+0.7335922376703*0.7335922376703+0.163597533419163*0.163597533419163)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.22244104726903e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.22244104726903e-06*-0.659604636042721+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.22244104726903e-06*-0.659604636042721+1.06499426207676e-05*${unity}+${fz}*${unitz}
variable           dot      equal     6.22244104726903e-06*-0.659604636042721+1.06499426207676e-05*0.7335922376703+${fz}*${unitz}
variable           dot      equal     6.22244104726903e-06*-0.659604636042721+1.06499426207676e-05*0.7335922376703+-1.33998017479755e-05*${unitz}
variable           dot      equal     6.22244104726903e-06*-0.659604636042721+1.06499426207676e-05*0.7335922376703+-1.33998017479755e-05*0.163597533419163
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.51618976167345e-06/${f_module}*${dir_module}
variable           cos      equal     1.51618976167345e-06/1.82124884982099e-05*${dir_module}
variable           cos      equal     1.51618976167345e-06/1.82124884982099e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0832500051721365)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.48744985890284/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(85.2245991524625-90.0)
print              "The dot product: ${dot}"
The dot product: 1.51618976167345e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 85.2245991524625

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12475402055652^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12475402055652^2+0.13874763168356^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12475402055652^2+0.13874763168356^2+0.0309419445102996^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.12475402055652/${norm}
variable           unit_x        equal     -0.12475402055652/0.189134541723324
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.13874763168356/${norm}
variable           unit_y        equal     0.13874763168356/0.189134541723324
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0309419445102996/${norm}
variable           unit_z        equal     0.0309419445102996/0.189134541723324
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.04088229332825+${delta}*${unit_x}
variable           x_new         equal     1.04088229332825+0.03*${unit_x}
variable           x_new         equal     1.04088229332825+0.03*-0.659604636042721
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.1634305869459+${delta}*${unit_y}
variable           y_new         equal     4.1634305869459+0.03*${unit_y}
variable           y_new         equal     4.1634305869459+0.03*0.7335922376703
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.351810267443+${delta}*${unit_z}
variable           z_new         equal     31.351810267443+0.03*${unit_z}
variable           z_new         equal     31.351810267443+0.03*0.163597533419163

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02109415424697  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02109415424697  y  4.18543835407601  z   ${z_new}
set                atom          288751    x  1.02109415424697  y  4.18543835407601  z   31.3567181934456
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12475402055652  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12475402055652  0.13874763168356  ${new_z}
fix                hold    carbon   planeforce   -0.12475402055652  0.13874763168356  0.0309419445102996
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1343   -1152449.2            0   -1152449.2  0.059902142  0.073204099 -0.086738644 
    1532   -1152449.3            0   -1152449.3 -1.2244187e-05 -1.6078664e-05 2.2731765e-05 
Loop time of 2.19053 on 104 procs for 189 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.24630608  -1152449.25010352  -1152449.25010352
  Force two-norm initial, final = 0.29632113 0.00010586204
  Force max component initial, final = 0.13859997 2.2731765e-05
  Final line search alpha, max atom move = 1.0000000 2.2731765e-05
  Iterations, force evaluations = 189 378

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5732     | 1.5874     | 2.0683     |  34.0 | 72.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034202   | 0.35718    | 1.074      |  50.5 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2515e-05 | 0.0031124  | 0.0066908  |   2.6 |  0.14
Other   |            | 0.2428     |            |       | 11.09

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115502 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238195
Ave neighs/atom = 28.530447
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.02721001945559-${x_0}
variable           new_x         equal     1.02721001945559-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.19332971160784-${y_0}
variable           new_y         equal     4.19332971160784-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3459907359559-${z_0}
variable           new_z         equal     31.3459907359559-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13842629442918*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13842629442918*-0.13842629442918+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13842629442918*-0.13842629442918+0.1686467563455*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13842629442918*-0.13842629442918+0.1686467563455*0.1686467563455+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13842629442918*-0.13842629442918+0.1686467563455*0.1686467563455+0.0251224130232011*${new_z})
variable           module        equal     sqrt(-0.13842629442918*-0.13842629442918+0.1686467563455*0.1686467563455+0.0251224130232011*0.0251224130232011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.13842629442918/${module}
variable           unitx         equal     -0.13842629442918/0.219624003814157
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.1686467563455/${module}
variable           unity         equal     0.1686467563455/0.219624003814157
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0251224130232011/${module}
variable           unitz         equal     0.0251224130232011/0.219624003814157
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.22441865951883e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.22441865951883e-05*-1.22441865951883e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.22441865951883e-05*-1.22441865951883e-05+-1.60786637601223e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.22441865951883e-05*-1.22441865951883e-05+-1.60786637601223e-05*-1.60786637601223e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-1.22441865951883e-05*-1.22441865951883e-05+-1.60786637601223e-05*-1.60786637601223e-05+2.27317649955369e-05*${fz})
variable           f_module      equal     sqrt(-1.22441865951883e-05*-1.22441865951883e-05+-1.60786637601223e-05*-1.60786637601223e-05+2.27317649955369e-05*2.27317649955369e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.630287637166994*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.630287637166994*-0.630287637166994+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.630287637166994*-0.630287637166994+0.767888543222291*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.630287637166994*-0.630287637166994+0.767888543222291*0.767888543222291+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.630287637166994*-0.630287637166994+0.767888543222291*0.767888543222291+0.11438828446302*${unitz})
variable           dir_module    equal     sqrt(-0.630287637166994*-0.630287637166994+0.767888543222291*0.767888543222291+0.11438828446302*0.11438828446302)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.22441865951883e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.22441865951883e-05*-0.630287637166994+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.22441865951883e-05*-0.630287637166994+-1.60786637601223e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -1.22441865951883e-05*-0.630287637166994+-1.60786637601223e-05*0.767888543222291+${fz}*${unitz}
variable           dot      equal     -1.22441865951883e-05*-0.630287637166994+-1.60786637601223e-05*0.767888543222291+2.27317649955369e-05*${unitz}
variable           dot      equal     -1.22441865951883e-05*-0.630287637166994+-1.60786637601223e-05*0.767888543222291+2.27317649955369e-05*0.11438828446302
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.02901465295235e-06/${f_module}*${dir_module}
variable           cos      equal     -2.02901465295235e-06/3.04167170072836e-05*${dir_module}
variable           cos      equal     -2.02901465295235e-06/3.04167170072836e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0667072206532506)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.63755311966839/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.8248824854802-90.0)
print              "The dot product: ${dot}"
The dot product: -2.02901465295235e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.8248824854802

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13842629442918^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13842629442918^2+0.1686467563455^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13842629442918^2+0.1686467563455^2+0.0251224130232011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.13842629442918/${norm}
variable           unit_x        equal     -0.13842629442918/0.219624003814157
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.1686467563455/${norm}
variable           unit_y        equal     0.1686467563455/0.219624003814157
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0251224130232011/${norm}
variable           unit_z        equal     0.0251224130232011/0.219624003814157
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.02721001945559+${delta}*${unit_x}
variable           x_new         equal     1.02721001945559+0.03*${unit_x}
variable           x_new         equal     1.02721001945559+0.03*-0.630287637166994
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.19332971160784+${delta}*${unit_y}
variable           y_new         equal     4.19332971160784+0.03*${unit_y}
variable           y_new         equal     4.19332971160784+0.03*0.767888543222291
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3459907359559+${delta}*${unit_z}
variable           z_new         equal     31.3459907359559+0.03*${unit_z}
variable           z_new         equal     31.3459907359559+0.03*0.11438828446302

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.00830139034058  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.00830139034058  y  4.21636636790451  z   ${z_new}
set                atom          288751    x  1.00830139034058  y  4.21636636790451  z   31.3494223844898
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13842629442918  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13842629442918  0.1686467563455  ${new_z}
fix                hold    carbon   planeforce   -0.13842629442918  0.1686467563455  0.0251224130232011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1532   -1152449.2            0   -1152449.2  0.064378976  0.063797281 -0.073538378 
    1715   -1152449.2            0   -1152449.2 -1.1572066e-05 -1.2238046e-05 1.8391093e-05 
Loop time of 2.16246 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.22055001  -1152449.22413109  -1152449.22413109
  Force two-norm initial, final = 0.28477404 0.00011588514
  Force max component initial, final = 0.14953138 2.3807123e-05
  Final line search alpha, max atom move = 1.0000000 2.3807123e-05
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5591     | 1.5448     | 2.0356     |  33.6 | 71.44
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03351    | 0.36043    | 1.0619     |  48.6 | 16.67
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3279e-05 | 0.0030245  | 0.0065095  |   2.6 |  0.14
Other   |            | 0.2542     |            |       | 11.75

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115499 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.01607992351732-${x_0}
variable           new_x         equal     1.01607992351732-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.22413627433231-${y_0}
variable           new_y         equal     4.22413627433231-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3401232780635-${z_0}
variable           new_z         equal     31.3401232780635-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14955639036745*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14955639036745*-0.14955639036745+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14955639036745*-0.14955639036745+0.199453319069971*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14955639036745*-0.14955639036745+0.199453319069971*0.199453319069971+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14955639036745*-0.14955639036745+0.199453319069971*0.199453319069971+0.0192549551308012*${new_z})
variable           module        equal     sqrt(-0.14955639036745*-0.14955639036745+0.199453319069971*0.199453319069971+0.0192549551308012*0.0192549551308012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.14955639036745/${module}
variable           unitx         equal     -0.14955639036745/0.25003898433016
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.199453319069971/${module}
variable           unity         equal     0.199453319069971/0.25003898433016
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0192549551308012/${module}
variable           unitz         equal     0.0192549551308012/0.25003898433016
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.15720658328913e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.15720658328913e-05*-1.15720658328913e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.15720658328913e-05*-1.15720658328913e-05+-1.22380464186745e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.15720658328913e-05*-1.15720658328913e-05+-1.22380464186745e-05*-1.22380464186745e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-1.15720658328913e-05*-1.15720658328913e-05+-1.22380464186745e-05*-1.22380464186745e-05+1.83910932439715e-05*${fz})
variable           f_module      equal     sqrt(-1.15720658328913e-05*-1.15720658328913e-05+-1.22380464186745e-05*-1.22380464186745e-05+1.83910932439715e-05*1.83910932439715e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.598132290323059*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.598132290323059*-0.598132290323059+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.598132290323059*-0.598132290323059+0.79768888681217*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.598132290323059*-0.598132290323059+0.79768888681217*0.79768888681217+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.598132290323059*-0.598132290323059+0.79768888681217*0.79768888681217+0.0770078121313127*${unitz})
variable           dir_module    equal     sqrt(-0.598132290323059*-0.598132290323059+0.79768888681217*0.79768888681217+0.0770078121313127*0.0770078121313127)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.15720658328913e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.15720658328913e-05*-0.598132290323059+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.15720658328913e-05*-0.598132290323059+-1.22380464186745e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -1.15720658328913e-05*-0.598132290323059+-1.22380464186745e-05*0.79768888681217+${fz}*${unitz}
variable           dot      equal     -1.15720658328913e-05*-0.598132290323059+-1.22380464186745e-05*0.79768888681217+1.83910932439715e-05*${unitz}
variable           dot      equal     -1.15720658328913e-05*-0.598132290323059+-1.22380464186745e-05*0.79768888681217+1.83910932439715e-05*0.0770078121313127
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.42426953065042e-06/${f_module}*${dir_module}
variable           cos      equal     -1.42426953065042e-06/2.49382196336237e-05*${dir_module}
variable           cos      equal     -1.42426953065042e-06/2.49382196336237e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0571119170323652)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62793933715404/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.2740533222513-90.0)
print              "The dot product: ${dot}"
The dot product: -1.42426953065042e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.2740533222513

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14955639036745^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14955639036745^2+0.199453319069971^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14955639036745^2+0.199453319069971^2+0.0192549551308012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.14955639036745/${norm}
variable           unit_x        equal     -0.14955639036745/0.25003898433016
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.199453319069971/${norm}
variable           unit_y        equal     0.199453319069971/0.25003898433016
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0192549551308012/${norm}
variable           unit_z        equal     0.0192549551308012/0.25003898433016
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.01607992351732+${delta}*${unit_x}
variable           x_new         equal     1.01607992351732+0.03*${unit_x}
variable           x_new         equal     1.01607992351732+0.03*-0.598132290323059
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.22413627433231+${delta}*${unit_y}
variable           y_new         equal     4.22413627433231+0.03*${unit_y}
variable           y_new         equal     4.22413627433231+0.03*0.79768888681217
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3401232780635+${delta}*${unit_z}
variable           z_new         equal     31.3401232780635+0.03*${unit_z}
variable           z_new         equal     31.3401232780635+0.03*0.0770078121313127

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.998135954807628  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.998135954807628  y  4.24806694093668  z   ${z_new}
set                atom          288751    x  0.998135954807628  y  4.24806694093668  z   31.3424335124274
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14955639036745  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14955639036745  0.199453319069971  ${new_z}
fix                hold    carbon   planeforce   -0.14955639036745  0.199453319069971  0.0192549551308012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1715   -1152449.2            0   -1152449.2  0.069701992  0.059095628 -0.070757931 
    1893   -1152449.2            0   -1152449.2 1.966868e-05 1.7381109e-05 -2.7273138e-05 
Loop time of 2.07188 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.19157454  -1152449.19516621  -1152449.19516621
  Force two-norm initial, final = 0.27957153 0.00014933357
  Force max component initial, final = 0.1602734 2.7607709e-05
  Final line search alpha, max atom move = 1.0000000 2.7607709e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54063    | 1.4948     | 1.9526     |  33.0 | 72.15
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031012   | 0.33557    | 1.0063     |  48.9 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1649e-05 | 0.0029323  | 0.0063059  |   2.6 |  0.14
Other   |            | 0.2386     |            |       | 11.52

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.06 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115531 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.00805078217883-${x_0}
variable           new_x         equal     1.00805078217883-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.25661543679871-${y_0}
variable           new_y         equal     4.25661543679871-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3308936216063-${z_0}
variable           new_z         equal     31.3308936216063-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15758553170594*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15758553170594*-0.15758553170594+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15758553170594*-0.15758553170594+0.23193248153637*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15758553170594*-0.15758553170594+0.23193248153637*0.23193248153637+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15758553170594*-0.15758553170594+0.23193248153637*0.23193248153637+0.0100252986736002*${new_z})
variable           module        equal     sqrt(-0.15758553170594*-0.15758553170594+0.23193248153637*0.23193248153637+0.0100252986736002*0.0100252986736002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.15758553170594/${module}
variable           unitx         equal     -0.15758553170594/0.28058222040635
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.23193248153637/${module}
variable           unity         equal     0.23193248153637/0.28058222040635
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0100252986736002/${module}
variable           unitz         equal     0.0100252986736002/0.28058222040635
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9668680074162e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9668680074162e-05*1.9668680074162e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9668680074162e-05*1.9668680074162e-05+1.73811087943345e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9668680074162e-05*1.9668680074162e-05+1.73811087943345e-05*1.73811087943345e-05+${fz}*${fz})
variable           f_module      equal     sqrt(1.9668680074162e-05*1.9668680074162e-05+1.73811087943345e-05*1.73811087943345e-05+-2.72731377125367e-05*${fz})
variable           f_module      equal     sqrt(1.9668680074162e-05*1.9668680074162e-05+1.73811087943345e-05*1.73811087943345e-05+-2.72731377125367e-05*-2.72731377125367e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.561637624357376*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.561637624357376*-0.561637624357376+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.561637624357376*-0.561637624357376+0.82661146953815*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.561637624357376*-0.561637624357376+0.82661146953815*0.82661146953815+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.561637624357376*-0.561637624357376+0.82661146953815*0.82661146953815+0.0357303419264456*${unitz})
variable           dir_module    equal     sqrt(-0.561637624357376*-0.561637624357376+0.82661146953815*0.82661146953815+0.0357303419264456*0.0357303419264456)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.9668680074162e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.9668680074162e-05*-0.561637624357376+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.9668680074162e-05*-0.561637624357376+1.73811087943345e-05*${unity}+${fz}*${unitz}
variable           dot      equal     1.9668680074162e-05*-0.561637624357376+1.73811087943345e-05*0.82661146953815+${fz}*${unitz}
variable           dot      equal     1.9668680074162e-05*-0.561637624357376+1.73811087943345e-05*0.82661146953815+-2.72731377125367e-05*${unitz}
variable           dot      equal     1.9668680074162e-05*-0.561637624357376+1.73811087943345e-05*0.82661146953815+-2.72731377125367e-05*0.0357303419264456
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.34627459571373e-06/${f_module}*${dir_module}
variable           cos      equal     2.34627459571373e-06/3.78521328258689e-05*${dir_module}
variable           cos      equal     2.34627459571373e-06/3.78521328258689e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0619852679506143)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.50877129703349/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.4462275704981-90.0)
print              "The dot product: ${dot}"
The dot product: 2.34627459571373e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.4462275704981

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15758553170594^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15758553170594^2+0.23193248153637^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15758553170594^2+0.23193248153637^2+0.0100252986736002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.15758553170594/${norm}
variable           unit_x        equal     -0.15758553170594/0.28058222040635
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.23193248153637/${norm}
variable           unit_y        equal     0.23193248153637/0.28058222040635
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0100252986736002/${norm}
variable           unit_z        equal     0.0100252986736002/0.28058222040635
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.00805078217883+${delta}*${unit_x}
variable           x_new         equal     1.00805078217883+0.03*${unit_x}
variable           x_new         equal     1.00805078217883+0.03*-0.561637624357376
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.25661543679871+${delta}*${unit_y}
variable           y_new         equal     4.25661543679871+0.03*${unit_y}
variable           y_new         equal     4.25661543679871+0.03*0.82661146953815
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3308936216063+${delta}*${unit_z}
variable           z_new         equal     31.3308936216063+0.03*${unit_z}
variable           z_new         equal     31.3308936216063+0.03*0.0357303419264456

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.991201653448109  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.991201653448109  y  4.28141378088485  z   ${z_new}
set                atom          288751    x  0.991201653448109  y  4.28141378088485  z   31.3319655318641
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15758553170594  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15758553170594  0.23193248153637  ${new_z}
fix                hold    carbon   planeforce   -0.15758553170594  0.23193248153637  0.0100252986736002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1893   -1152449.2            0   -1152449.2  0.074778853  0.054023995 -0.074397165 
    2000   -1152449.2            0   -1152449.2 -0.00014476361 -0.00010514415 0.00015697221 
    2078   -1152449.2            0   -1152449.2 -2.0474256e-05 -1.4720038e-05 1.8713503e-05 
Loop time of 2.16667 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.15964015  -1152449.16330976  -1152449.16330976
  Force two-norm initial, final = 0.27773363 0.00013748491
  Force max component initial, final = 0.1718686 2.5415442e-05
  Final line search alpha, max atom move = 1.0000000 2.5415442e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56205    | 1.5599     | 2.046      |  33.8 | 71.99
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032785   | 0.35599    | 1.0606     |  49.3 | 16.43
Output  | 0.0001118  | 0.00012085 | 0.00025788 |   0.0 |  0.01
Modify  | 2.3233e-05 | 0.0030568  | 0.0065659  |   2.6 |  0.14
Other   |            | 0.2476     |            |       | 11.43

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.06 ave        5427 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115529 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.00272763461825-${x_0}
variable           new_x         equal     1.00272763461825-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.28980921126563-${y_0}
variable           new_y         equal     4.28980921126563-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3189140373485-${z_0}
variable           new_z         equal     31.3189140373485-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290867926652*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290867926652*-0.16290867926652+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290867926652*-0.16290867926652+0.26512625600329*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290867926652*-0.16290867926652+0.26512625600329*0.26512625600329+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290867926652*-0.16290867926652+0.26512625600329*0.26512625600329+-0.00195428558420119*${new_z})
variable           module        equal     sqrt(-0.16290867926652*-0.16290867926652+0.26512625600329*0.26512625600329+-0.00195428558420119*-0.00195428558420119)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.16290867926652/${module}
variable           unitx         equal     -0.16290867926652/0.311183207507778
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.26512625600329/${module}
variable           unity         equal     0.26512625600329/0.311183207507778
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00195428558420119/${module}
variable           unitz         equal     -0.00195428558420119/0.311183207507778
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.04742560583006e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.04742560583006e-05*-2.04742560583006e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.04742560583006e-05*-2.04742560583006e-05+-1.47200382040894e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.04742560583006e-05*-2.04742560583006e-05+-1.47200382040894e-05*-1.47200382040894e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-2.04742560583006e-05*-2.04742560583006e-05+-1.47200382040894e-05*-1.47200382040894e-05+1.87135034953782e-05*${fz})
variable           f_module      equal     sqrt(-2.04742560583006e-05*-2.04742560583006e-05+-1.47200382040894e-05*-1.47200382040894e-05+1.87135034953782e-05*1.87135034953782e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.523513722257806*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.523513722257806*-0.523513722257806+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.523513722257806*-0.523513722257806+0.851994097389279*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.523513722257806*-0.523513722257806+0.851994097389279*0.851994097389279+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.523513722257806*-0.523513722257806+0.851994097389279*0.851994097389279+-0.00628017687667913*${unitz})
variable           dir_module    equal     sqrt(-0.523513722257806*-0.523513722257806+0.851994097389279*0.851994097389279+-0.00628017687667913*-0.00628017687667913)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.04742560583006e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.04742560583006e-05*-0.523513722257806+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.04742560583006e-05*-0.523513722257806+-1.47200382040894e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -2.04742560583006e-05*-0.523513722257806+-1.47200382040894e-05*0.851994097389279+${fz}*${unitz}
variable           dot      equal     -2.04742560583006e-05*-0.523513722257806+-1.47200382040894e-05*0.851994097389279+1.87135034953782e-05*${unitz}
variable           dot      equal     -2.04742560583006e-05*-0.523513722257806+-1.47200382040894e-05*0.851994097389279+1.87135034953782e-05*-0.00628017687667913
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.9403557756218e-06/${f_module}*${dir_module}
variable           cos      equal     -1.9403557756218e-06/3.14017499343945e-05*${dir_module}
variable           cos      equal     -1.9403557756218e-06/3.14017499343945e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0617913262692573)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.63262704239033/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.5426390478921-90.0)
print              "The dot product: ${dot}"
The dot product: -1.9403557756218e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.5426390478921

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16290867926652^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16290867926652^2+0.26512625600329^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16290867926652^2+0.26512625600329^2+-0.00195428558420119^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.16290867926652/${norm}
variable           unit_x        equal     -0.16290867926652/0.311183207507778
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.26512625600329/${norm}
variable           unit_y        equal     0.26512625600329/0.311183207507778
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00195428558420119/${norm}
variable           unit_z        equal     -0.00195428558420119/0.311183207507778
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.00272763461825+${delta}*${unit_x}
variable           x_new         equal     1.00272763461825+0.03*${unit_x}
variable           x_new         equal     1.00272763461825+0.03*-0.523513722257806
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.28980921126563+${delta}*${unit_y}
variable           y_new         equal     4.28980921126563+0.03*${unit_y}
variable           y_new         equal     4.28980921126563+0.03*0.851994097389279
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3189140373485+${delta}*${unit_z}
variable           z_new         equal     31.3189140373485+0.03*${unit_z}
variable           z_new         equal     31.3189140373485+0.03*-0.00628017687667913

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.987022222950516  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.987022222950516  y  4.31536903418731  z   ${z_new}
set                atom          288751    x  0.987022222950516  y  4.31536903418731  z   31.3187256320422
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.16290867926652  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.16290867926652  0.26512625600329  ${new_z}
fix                hold    carbon   planeforce   -0.16290867926652  0.26512625600329  -0.00195428558420119
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2078   -1152449.1            0   -1152449.1  0.076206547  0.046296364 -0.071804373 
    2284   -1152449.1            0   -1152449.1 1.765252e-05 1.0743999e-05 -1.3934696e-05 
Loop time of 2.42993 on 104 procs for 206 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.12462785  -1152449.12829153  -1152449.12829153
  Force two-norm initial, final = 0.27513771 9.7021613e-05
  Force max component initial, final = 0.18336859 2.1621443e-05
  Final line search alpha, max atom move = 1.0000000 2.1621443e-05
  Iterations, force evaluations = 206 412

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62497    | 1.7345     | 2.2596     |  35.5 | 71.38
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040958   | 0.39351    | 1.1733     |  52.5 | 16.19
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5168e-05 | 0.0034025  | 0.0072953  |   2.7 |  0.14
Other   |            | 0.2985     |            |       | 12.28

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.06 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115507 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.999493759241892-${x_0}
variable           new_x         equal     0.999493759241892-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.32293778626328-${y_0}
variable           new_y         equal     4.32293778626328-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3059093858842-${z_0}
variable           new_z         equal     31.3059093858842-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.166142554642878*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.166142554642878*-0.166142554642878+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.166142554642878*-0.166142554642878+0.29825483100094*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.166142554642878*-0.166142554642878+0.29825483100094*0.29825483100094+${new_z}*${new_z})
variable           module        equal     sqrt(-0.166142554642878*-0.166142554642878+0.29825483100094*0.29825483100094+-0.014958937048501*${new_z})
variable           module        equal     sqrt(-0.166142554642878*-0.166142554642878+0.29825483100094*0.29825483100094+-0.014958937048501*-0.014958937048501)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.166142554642878/${module}
variable           unitx         equal     -0.166142554642878/0.341735369074203
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.29825483100094/${module}
variable           unity         equal     0.29825483100094/0.341735369074203
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.014958937048501/${module}
variable           unitz         equal     -0.014958937048501/0.341735369074203
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.76525198918971e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.76525198918971e-05*1.76525198918971e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.76525198918971e-05*1.76525198918971e-05+1.07439993672264e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.76525198918971e-05*1.76525198918971e-05+1.07439993672264e-05*1.07439993672264e-05+${fz}*${fz})
variable           f_module      equal     sqrt(1.76525198918971e-05*1.76525198918971e-05+1.07439993672264e-05*1.07439993672264e-05+-1.39346955082601e-05*${fz})
variable           f_module      equal     sqrt(1.76525198918971e-05*1.76525198918971e-05+1.07439993672264e-05*1.07439993672264e-05+-1.39346955082601e-05*-1.39346955082601e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.486173131838755*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.486173131838755*-0.486173131838755+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.486173131838755*-0.486173131838755+0.872765472912399*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.486173131838755*-0.486173131838755+0.872765472912399*0.872765472912399+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.486173131838755*-0.486173131838755+0.872765472912399*0.872765472912399+-0.0437734528007046*${unitz})
variable           dir_module    equal     sqrt(-0.486173131838755*-0.486173131838755+0.872765472912399*0.872765472912399+-0.0437734528007046*-0.0437734528007046)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.76525198918971e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.76525198918971e-05*-0.486173131838755+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.76525198918971e-05*-0.486173131838755+1.07439993672264e-05*${unity}+${fz}*${unitz}
variable           dot      equal     1.76525198918971e-05*-0.486173131838755+1.07439993672264e-05*0.872765472912399+${fz}*${unitz}
variable           dot      equal     1.76525198918971e-05*-0.486173131838755+1.07439993672264e-05*0.872765472912399+-1.39346955082601e-05*${unitz}
variable           dot      equal     1.76525198918971e-05*-0.486173131838755+1.07439993672264e-05*0.872765472912399+-1.39346955082601e-05*-0.0437734528007046
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.40478054414134e-06/${f_module}*${dir_module}
variable           cos      equal     1.40478054414134e-06/2.49242997864475e-05*${dir_module}
variable           cos      equal     1.40478054414134e-06/2.49242997864475e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0563618860380256)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.51440455757372/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.7689896243509-90.0)
print              "The dot product: ${dot}"
The dot product: 1.40478054414134e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.7689896243509

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.166142554642878^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.166142554642878^2+0.29825483100094^2+${new_z}^2)
variable           norm          equal     sqrt(-0.166142554642878^2+0.29825483100094^2+-0.014958937048501^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.166142554642878/${norm}
variable           unit_x        equal     -0.166142554642878/0.341735369074203
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.29825483100094/${norm}
variable           unit_y        equal     0.29825483100094/0.341735369074203
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.014958937048501/${norm}
variable           unit_z        equal     -0.014958937048501/0.341735369074203
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.999493759241892+${delta}*${unit_x}
variable           x_new         equal     0.999493759241892+0.03*${unit_x}
variable           x_new         equal     0.999493759241892+0.03*-0.486173131838755
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.32293778626328+${delta}*${unit_y}
variable           y_new         equal     4.32293778626328+0.03*${unit_y}
variable           y_new         equal     4.32293778626328+0.03*0.872765472912399
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3059093858842+${delta}*${unit_z}
variable           z_new         equal     31.3059093858842+0.03*${unit_z}
variable           z_new         equal     31.3059093858842+0.03*-0.0437734528007046

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.984908565286729  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.984908565286729  y  4.34912075045065  z   ${z_new}
set                atom          288751    x  0.984908565286729  y  4.34912075045065  z   31.3045961823002
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.166142554642878  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.166142554642878  0.29825483100094  ${new_z}
fix                hold    carbon   planeforce   -0.166142554642878  0.29825483100094  -0.014958937048501
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2284   -1152449.1            0   -1152449.1  0.075268337  0.038716829 -0.064028106 
    2490   -1152449.1            0   -1152449.1 1.8777584e-05 9.8552104e-06 -1.2059125e-05 
Loop time of 2.447 on 104 procs for 206 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.08623751  -1152449.08985526  -1152449.08985526
  Force two-norm initial, final = 0.27342728 0.00010046608
  Force max component initial, final = 0.19421397 2.0704445e-05
  Final line search alpha, max atom move = 1.0000000 2.0704445e-05
  Iterations, force evaluations = 206 412

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62417    | 1.7372     | 2.2911     |  35.8 | 70.99
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03875    | 0.40065    | 1.1607     |  51.1 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.543e-05  | 0.0034088  | 0.0072632  |   2.7 |  0.14
Other   |            | 0.3057     |            |       | 12.49

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.997933679304391-${x_0}
variable           new_x         equal     0.997933679304391-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.35580983811622-${y_0}
variable           new_y         equal     4.35580983811622-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2933003926547-${z_0}
variable           new_z         equal     31.2933003926547-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167702634580379*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167702634580379*-0.167702634580379+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167702634580379*-0.167702634580379+0.33112688285388*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167702634580379*-0.167702634580379+0.33112688285388*0.33112688285388+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167702634580379*-0.167702634580379+0.33112688285388*0.33112688285388+-0.0275679302779999*${new_z})
variable           module        equal     sqrt(-0.167702634580379*-0.167702634580379+0.33112688285388*0.33112688285388+-0.0275679302779999*-0.0275679302779999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.167702634580379/${module}
variable           unitx         equal     -0.167702634580379/0.372195079190389
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.33112688285388/${module}
variable           unity         equal     0.33112688285388/0.372195079190389
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0275679302779999/${module}
variable           unitz         equal     -0.0275679302779999/0.372195079190389
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87775841004e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87775841004e-05*1.87775841004e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87775841004e-05*1.87775841004e-05+9.85521037329492e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.87775841004e-05*1.87775841004e-05+9.85521037329492e-06*9.85521037329492e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.87775841004e-05*1.87775841004e-05+9.85521037329492e-06*9.85521037329492e-06+-1.20591247583651e-05*${fz})
variable           f_module      equal     sqrt(1.87775841004e-05*1.87775841004e-05+9.85521037329492e-06*9.85521037329492e-06+-1.20591247583651e-05*-1.20591247583651e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.450577248213951*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.450577248213951*-0.450577248213951+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.450577248213951*-0.450577248213951+0.889659486025871*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.450577248213951*-0.450577248213951+0.889659486025871*0.889659486025871+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.450577248213951*-0.450577248213951+0.889659486025871*0.889659486025871+-0.0740684974609728*${unitz})
variable           dir_module    equal     sqrt(-0.450577248213951*-0.450577248213951+0.889659486025871*0.889659486025871+-0.0740684974609728*-0.0740684974609728)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.87775841004e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.87775841004e-05*-0.450577248213951+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.87775841004e-05*-0.450577248213951+9.85521037329492e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.87775841004e-05*-0.450577248213951+9.85521037329492e-06*0.889659486025871+${fz}*${unitz}
variable           dot      equal     1.87775841004e-05*-0.450577248213951+9.85521037329492e-06*0.889659486025871+-1.20591247583651e-05*${unitz}
variable           dot      equal     1.87775841004e-05*-0.450577248213951+9.85521037329492e-06*0.889659486025871+-1.20591247583651e-05*-0.0740684974609728
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.20023047486464e-06/${f_module}*${dir_module}
variable           cos      equal     1.20023047486464e-06/2.43956005477895e-05*${dir_module}
variable           cos      equal     1.20023047486464e-06/2.43956005477895e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0491986443421822)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52157781319568/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.1799868968577-90.0)
print              "The dot product: ${dot}"
The dot product: 1.20023047486464e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.1799868968577

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.167702634580379^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.167702634580379^2+0.33112688285388^2+${new_z}^2)
variable           norm          equal     sqrt(-0.167702634580379^2+0.33112688285388^2+-0.0275679302779999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.167702634580379/${norm}
variable           unit_x        equal     -0.167702634580379/0.372195079190389
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.33112688285388/${norm}
variable           unit_y        equal     0.33112688285388/0.372195079190389
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0275679302779999/${norm}
variable           unit_z        equal     -0.0275679302779999/0.372195079190389
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.997933679304391+${delta}*${unit_x}
variable           x_new         equal     0.997933679304391+0.03*${unit_x}
variable           x_new         equal     0.997933679304391+0.03*-0.450577248213951
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.35580983811622+${delta}*${unit_y}
variable           y_new         equal     4.35580983811622+0.03*${unit_y}
variable           y_new         equal     4.35580983811622+0.03*0.889659486025871
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2933003926547+${delta}*${unit_z}
variable           z_new         equal     31.2933003926547+0.03*${unit_z}
variable           z_new         equal     31.2933003926547+0.03*-0.0740684974609728

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.984416361857973  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.984416361857973  y  4.382499622697  z   ${z_new}
set                atom          288751    x  0.984416361857973  y  4.382499622697  z   31.2910783377309
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.167702634580379  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.167702634580379  0.33112688285388  ${new_z}
fix                hold    carbon   planeforce   -0.167702634580379  0.33112688285388  -0.0275679302779999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2490     -1152449            0     -1152449   0.07294664  0.032499889 -0.053386551 
    2708     -1152449            0     -1152449 5.9211385e-06 2.4226332e-06 -6.9207796e-06 
Loop time of 2.57808 on 104 procs for 218 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.04425858  -1152449.04784349  -1152449.04784349
  Force two-norm initial, final = 0.27338627 5.4952544e-05
  Force max component initial, final = 0.20445319 8.9959990e-06
  Final line search alpha, max atom move = 1.0000000 8.9959990e-06
  Iterations, force evaluations = 218 436

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.66957    | 1.8345     | 2.3936     |  36.5 | 71.16
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038739   | 0.41493    | 1.2362     |  53.8 | 16.09
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5996e-05 | 0.003589   | 0.0077462  |   2.8 |  0.14
Other   |            | 0.325      |            |       | 12.61

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.998259597040355-${x_0}
variable           new_x         equal     0.998259597040355-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.38877458175982-${y_0}
variable           new_y         equal     4.38877458175982-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2822369276505-${z_0}
variable           new_z         equal     31.2822369276505-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167376716844415*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167376716844415*-0.167376716844415+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167376716844415*-0.167376716844415+0.36409162649748*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167376716844415*-0.167376716844415+0.36409162649748*0.36409162649748+${new_z}*${new_z})
variable           module        equal     sqrt(-0.167376716844415*-0.167376716844415+0.36409162649748*0.36409162649748+-0.0386313952821986*${new_z})
variable           module        equal     sqrt(-0.167376716844415*-0.167376716844415+0.36409162649748*0.36409162649748+-0.0386313952821986*-0.0386313952821986)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.167376716844415/${module}
variable           unitx         equal     -0.167376716844415/0.402579262417534
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.36409162649748/${module}
variable           unity         equal     0.36409162649748/0.402579262417534
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0386313952821986/${module}
variable           unitz         equal     -0.0386313952821986/0.402579262417534
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.9211385491028e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.9211385491028e-06*5.9211385491028e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.9211385491028e-06*5.9211385491028e-06+2.42263315566099e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.9211385491028e-06*5.9211385491028e-06+2.42263315566099e-06*2.42263315566099e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.9211385491028e-06*5.9211385491028e-06+2.42263315566099e-06*2.42263315566099e-06+-6.92077959041987e-06*${fz})
variable           f_module      equal     sqrt(5.9211385491028e-06*5.9211385491028e-06+2.42263315566099e-06*2.42263315566099e-06+-6.92077959041987e-06*-6.92077959041987e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.41576090094482*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.41576090094482*-0.41576090094482+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.41576090094482*-0.41576090094482+0.904397370870692*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.41576090094482*-0.41576090094482+0.904397370870692*0.904397370870692+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.41576090094482*-0.41576090094482+0.904397370870692*0.904397370870692+-0.095959724925255*${unitz})
variable           dir_module    equal     sqrt(-0.41576090094482*-0.41576090094482+0.904397370870692*0.904397370870692+-0.095959724925255*-0.095959724925255)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.9211385491028e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.9211385491028e-06*-0.41576090094482+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.9211385491028e-06*-0.41576090094482+2.42263315566099e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.9211385491028e-06*-0.41576090094482+2.42263315566099e-06*0.904397370870692+${fz}*${unitz}
variable           dot      equal     5.9211385491028e-06*-0.41576090094482+2.42263315566099e-06*0.904397370870692+-6.92077959041987e-06*${unitz}
variable           dot      equal     5.9211385491028e-06*-0.41576090094482+2.42263315566099e-06*0.904397370870692+-6.92077959041987e-06*-0.095959724925255
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.93361264534893e-07/${f_module}*${dir_module}
variable           cos      equal     3.93361264534893e-07/9.42476648324781e-06*${dir_module}
variable           cos      equal     3.93361264534893e-07/9.42476648324781e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0417369772751483)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52904722254742/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.6079525281679-90.0)
print              "The dot product: ${dot}"
The dot product: 3.93361264534893e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.6079525281679

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.167376716844415^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.167376716844415^2+0.36409162649748^2+${new_z}^2)
variable           norm          equal     sqrt(-0.167376716844415^2+0.36409162649748^2+-0.0386313952821986^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.167376716844415/${norm}
variable           unit_x        equal     -0.167376716844415/0.402579262417534
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.36409162649748/${norm}
variable           unit_y        equal     0.36409162649748/0.402579262417534
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0386313952821986/${norm}
variable           unit_z        equal     -0.0386313952821986/0.402579262417534
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.998259597040355+${delta}*${unit_x}
variable           x_new         equal     0.998259597040355+0.03*${unit_x}
variable           x_new         equal     0.998259597040355+0.03*-0.41576090094482
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.38877458175982+${delta}*${unit_y}
variable           y_new         equal     4.38877458175982+0.03*${unit_y}
variable           y_new         equal     4.38877458175982+0.03*0.904397370870692
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2822369276505+${delta}*${unit_z}
variable           z_new         equal     31.2822369276505+0.03*${unit_z}
variable           z_new         equal     31.2822369276505+0.03*-0.095959724925255

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.98578677001201  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.98578677001201  y  4.41590650288594  z   ${z_new}
set                atom          288751    x  0.98578677001201  y  4.41590650288594  z   31.2793581359027
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.167376716844415  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.167376716844415  0.36409162649748  ${new_z}
fix                hold    carbon   planeforce   -0.167376716844415  0.36409162649748  -0.0386313952821986
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2708     -1152449            0     -1152449  0.072879334  0.029193815  -0.04061671 
    2902     -1152449            0     -1152449 2.5653381e-05 9.021025e-06 -2.6126393e-05 
Loop time of 2.29828 on 104 procs for 194 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.99860749  -1152449.00229378  -1152449.00229378
  Force two-norm initial, final = 0.27590819 0.00012590503
  Force max component initial, final = 0.21461878 2.6126393e-05
  Final line search alpha, max atom move = 1.0000000 2.6126393e-05
  Iterations, force evaluations = 194 388

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58737    | 1.6356     | 2.1745     |  34.8 | 71.17
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036715   | 0.38254    | 1.1193     |  49.9 | 16.64
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4019e-05 | 0.0031961  | 0.0068845  |   2.7 |  0.14
Other   |            | 0.2769     |            |       | 12.05

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115493 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.00273172657855-${x_0}
variable           new_x         equal     1.00273172657855-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.42315782942356-${y_0}
variable           new_y         equal     4.42315782942356-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2742834052995-${z_0}
variable           new_z         equal     31.2742834052995-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290458730622*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290458730622*-0.16290458730622+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290458730622*-0.16290458730622+0.39847487416122*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290458730622*-0.16290458730622+0.39847487416122*0.39847487416122+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16290458730622*-0.16290458730622+0.39847487416122*0.39847487416122+-0.0465849176332007*${new_z})
variable           module        equal     sqrt(-0.16290458730622*-0.16290458730622+0.39847487416122*0.39847487416122+-0.0465849176332007*-0.0465849176332007)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.16290458730622/${module}
variable           unitx         equal     -0.16290458730622/0.433001483200811
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.39847487416122/${module}
variable           unity         equal     0.39847487416122/0.433001483200811
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0465849176332007/${module}
variable           unitz         equal     -0.0465849176332007/0.433001483200811
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.56533808526427e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.56533808526427e-05*2.56533808526427e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.56533808526427e-05*2.56533808526427e-05+9.0210249614888e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.56533808526427e-05*2.56533808526427e-05+9.0210249614888e-06*9.0210249614888e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.56533808526427e-05*2.56533808526427e-05+9.0210249614888e-06*9.0210249614888e-06+-2.61263929215745e-05*${fz})
variable           f_module      equal     sqrt(2.56533808526427e-05*2.56533808526427e-05+9.0210249614888e-06*9.0210249614888e-06+-2.61263929215745e-05*-2.61263929215745e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37622177665999*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37622177665999*-0.37622177665999+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37622177665999*-0.37622177665999+0.920262146022306*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37622177665999*-0.37622177665999+0.920262146022306*0.920262146022306+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37622177665999*-0.37622177665999+0.920262146022306*0.920262146022306+-0.107586046331385*${unitz})
variable           dir_module    equal     sqrt(-0.37622177665999*-0.37622177665999+0.920262146022306*0.920262146022306+-0.107586046331385*-0.107586046331385)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.56533808526427e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.56533808526427e-05*-0.37622177665999+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.56533808526427e-05*-0.37622177665999+9.0210249614888e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.56533808526427e-05*-0.37622177665999+9.0210249614888e-06*0.920262146022306+${fz}*${unitz}
variable           dot      equal     2.56533808526427e-05*-0.37622177665999+9.0210249614888e-06*0.920262146022306+-2.61263929215745e-05*${unitz}
variable           dot      equal     2.56533808526427e-05*-0.37622177665999+9.0210249614888e-06*0.920262146022306+-2.61263929215745e-05*-0.107586046331385
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.46118258799635e-06/${f_module}*${dir_module}
variable           cos      equal     1.46118258799635e-06/3.77102538790053e-05*${dir_module}
variable           cos      equal     1.46118258799635e-06/3.77102538790053e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0387476200156224)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53203900441833/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.7793690025948-90.0)
print              "The dot product: ${dot}"
The dot product: 1.46118258799635e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.7793690025948

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16290458730622^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16290458730622^2+0.39847487416122^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16290458730622^2+0.39847487416122^2+-0.0465849176332007^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.16290458730622/${norm}
variable           unit_x        equal     -0.16290458730622/0.433001483200811
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.39847487416122/${norm}
variable           unit_y        equal     0.39847487416122/0.433001483200811
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0465849176332007/${norm}
variable           unit_z        equal     -0.0465849176332007/0.433001483200811
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.00273172657855+${delta}*${unit_x}
variable           x_new         equal     1.00273172657855+0.03*${unit_x}
variable           x_new         equal     1.00273172657855+0.03*-0.37622177665999
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.42315782942356+${delta}*${unit_y}
variable           y_new         equal     4.42315782942356+0.03*${unit_y}
variable           y_new         equal     4.42315782942356+0.03*0.920262146022306
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2742834052995+${delta}*${unit_z}
variable           z_new         equal     31.2742834052995+0.03*${unit_z}
variable           z_new         equal     31.2742834052995+0.03*-0.107586046331385

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.99144507327875  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.99144507327875  y  4.45076569380423  z   ${z_new}
set                atom          288751    x  0.99144507327875  y  4.45076569380423  z   31.2710558239096
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.16290458730622  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.16290458730622  0.39847487416122  ${new_z}
fix                hold    carbon   planeforce   -0.16290458730622  0.39847487416122  -0.0465849176332007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2902   -1152448.9            0   -1152448.9  0.082073832  0.030793283 -0.023609664 
    3000     -1152449            0     -1152449 8.4124492e-05 1.8886993e-05 -0.0001326239 
    3090     -1152449            0     -1152449 5.8588617e-06 1.8872057e-06 -4.3454276e-06 
Loop time of 2.20795 on 104 procs for 188 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.94945223  -1152448.95358356  -1152448.95358356
  Force two-norm initial, final = 0.28321548 0.0001107646
  Force max component initial, final = 0.22621087 5.8588617e-06
  Final line search alpha, max atom move = 1.0000000 5.8588617e-06
  Iterations, force evaluations = 188 376

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57263    | 1.5815     | 2.0564     |  33.9 | 71.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033762   | 0.35935    | 1.0929     |  50.3 | 16.28
Output  | 9.5705e-05 | 0.00010188 | 0.00024218 |   0.0 |  0.00
Modify  | 2.3076e-05 | 0.0031009  | 0.0066789  |   2.6 |  0.14
Other   |            | 0.2639     |            |       | 11.95

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.13 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115502 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.01374503338311-${x_0}
variable           new_x         equal     1.01374503338311-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.45986466056268-${y_0}
variable           new_y         equal     4.45986466056268-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2709043550663-${z_0}
variable           new_z         equal     31.2709043550663-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15189128050166*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15189128050166*-0.15189128050166+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15189128050166*-0.15189128050166+0.43518170530034*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15189128050166*-0.15189128050166+0.43518170530034*0.43518170530034+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15189128050166*-0.15189128050166+0.43518170530034*0.43518170530034+-0.0499639678664003*${new_z})
variable           module        equal     sqrt(-0.15189128050166*-0.15189128050166+0.43518170530034*0.43518170530034+-0.0499639678664003*-0.0499639678664003)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.15189128050166/${module}
variable           unitx         equal     -0.15189128050166/0.463627518386798
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.43518170530034/${module}
variable           unity         equal     0.43518170530034/0.463627518386798
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0499639678664003/${module}
variable           unitz         equal     -0.0499639678664003/0.463627518386798
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.85886169569461e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.85886169569461e-06*5.85886169569461e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.85886169569461e-06*5.85886169569461e-06+1.88720571212753e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.85886169569461e-06*5.85886169569461e-06+1.88720571212753e-06*1.88720571212753e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.85886169569461e-06*5.85886169569461e-06+1.88720571212753e-06*1.88720571212753e-06+-4.34542762106183e-06*${fz})
variable           f_module      equal     sqrt(5.85886169569461e-06*5.85886169569461e-06+1.88720571212753e-06*1.88720571212753e-06+-4.34542762106183e-06*-4.34542762106183e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.327614894452704*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.327614894452704*-0.327614894452704+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.327614894452704*-0.327614894452704+0.938645114971959*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.327614894452704*-0.327614894452704+0.938645114971959*0.938645114971959+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.327614894452704*-0.327614894452704+0.938645114971959*0.938645114971959+-0.107767476875081*${unitz})
variable           dir_module    equal     sqrt(-0.327614894452704*-0.327614894452704+0.938645114971959*0.938645114971959+-0.107767476875081*-0.107767476875081)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.85886169569461e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.85886169569461e-06*-0.327614894452704+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.85886169569461e-06*-0.327614894452704+1.88720571212753e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.85886169569461e-06*-0.327614894452704+1.88720571212753e-06*0.938645114971959+${fz}*${unitz}
variable           dot      equal     5.85886169569461e-06*-0.327614894452704+1.88720571212753e-06*0.938645114971959+-4.34542762106183e-06*${unitz}
variable           dot      equal     5.85886169569461e-06*-0.327614894452704+1.88720571212753e-06*0.938645114971959+-4.34542762106183e-06*-0.107767476875081
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.20261837252822e-07/${f_module}*${dir_module}
variable           cos      equal     3.20261837252822e-07/7.5346232141396e-06*${dir_module}
variable           cos      equal     3.20261837252822e-07/7.5346232141396e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.042505355364262)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52827816190553/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.563888599198-90.0)
print              "The dot product: ${dot}"
The dot product: 3.20261837252822e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.563888599198

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15189128050166^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15189128050166^2+0.43518170530034^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15189128050166^2+0.43518170530034^2+-0.0499639678664003^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.15189128050166/${norm}
variable           unit_x        equal     -0.15189128050166/0.463627518386798
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.43518170530034/${norm}
variable           unit_y        equal     0.43518170530034/0.463627518386798
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0499639678664003/${norm}
variable           unit_z        equal     -0.0499639678664003/0.463627518386798
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.01374503338311+${delta}*${unit_x}
variable           x_new         equal     1.01374503338311+0.03*${unit_x}
variable           x_new         equal     1.01374503338311+0.03*-0.327614894452704
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.45986466056268+${delta}*${unit_y}
variable           y_new         equal     4.45986466056268+0.03*${unit_y}
variable           y_new         equal     4.45986466056268+0.03*0.938645114971959
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2709043550663+${delta}*${unit_z}
variable           z_new         equal     31.2709043550663+0.03*${unit_z}
variable           z_new         equal     31.2709043550663+0.03*-0.107767476875081

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.00391658654953  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.00391658654953  y  4.48802401401184  z   ${z_new}
set                atom          288751    x  1.00391658654953  y  4.48802401401184  z   31.26767133076
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15189128050166  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15189128050166  0.43518170530034  ${new_z}
fix                hold    carbon   planeforce   -0.15189128050166  0.43518170530034  -0.0499639678664003
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3090   -1152448.9            0   -1152448.9  0.095908455    0.0330882 -0.0033679996 
    3217   -1152448.9            0   -1152448.9 -4.4334853e-06 5.9443248e-07 1.8655322e-05 
Loop time of 1.51758 on 104 procs for 127 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.89724287  -1152448.90194259  -1152448.90194259
  Force two-norm initial, final = 0.29499047 0.00020550366
  Force max component initial, final = 0.24016299 1.8655322e-05
  Final line search alpha, max atom move = 1.0000000 1.8655322e-05
  Iterations, force evaluations = 127 254

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.38737    | 1.0732     | 1.4279     |  28.0 | 70.72
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.023031   | 0.25109    | 0.73336    |  40.1 | 16.55
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5435e-05 | 0.0020997  | 0.0045264  |   2.2 |  0.14
Other   |            | 0.1912     |            |       | 12.60

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115502 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.02974194776323-${x_0}
variable           new_x         equal     1.02974194776323-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.49752530003615-${y_0}
variable           new_y         equal     4.49752530003615-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2719171638972-${z_0}
variable           new_z         equal     31.2719171638972-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13589436612154*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13589436612154*-0.13589436612154+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13589436612154*-0.13589436612154+0.47284234477381*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13589436612154*-0.13589436612154+0.47284234477381*0.47284234477381+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13589436612154*-0.13589436612154+0.47284234477381*0.47284234477381+-0.0489511590355001*${new_z})
variable           module        equal     sqrt(-0.13589436612154*-0.13589436612154+0.47284234477381*0.47284234477381+-0.0489511590355001*-0.0489511590355001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.13589436612154/${module}
variable           unitx         equal     -0.13589436612154/0.49441215369941
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.47284234477381/${module}
variable           unity         equal     0.47284234477381/0.49441215369941
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0489511590355001/${module}
variable           unitz         equal     -0.0489511590355001/0.49441215369941
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.43348532904761e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.43348532904761e-06*-4.43348532904761e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.43348532904761e-06*-4.43348532904761e-06+5.94432483189504e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.43348532904761e-06*-4.43348532904761e-06+5.94432483189504e-07*5.94432483189504e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-4.43348532904761e-06*-4.43348532904761e-06+5.94432483189504e-07*5.94432483189504e-07+1.86553219291019e-05*${fz})
variable           f_module      equal     sqrt(-4.43348532904761e-06*-4.43348532904761e-06+5.94432483189504e-07*5.94432483189504e-07+1.86553219291019e-05*1.86553219291019e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.274860488571566*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.274860488571566*-0.274860488571566+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.274860488571566*-0.274860488571566+0.956372818175676*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.274860488571566*-0.274860488571566+0.956372818175676*0.956372818175676+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.274860488571566*-0.274860488571566+0.956372818175676*0.956372818175676+-0.099008810097458*${unitz})
variable           dir_module    equal     sqrt(-0.274860488571566*-0.274860488571566+0.956372818175676*0.956372818175676+-0.099008810097458*-0.099008810097458)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.43348532904761e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.43348532904761e-06*-0.274860488571566+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.43348532904761e-06*-0.274860488571566+5.94432483189504e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -4.43348532904761e-06*-0.274860488571566+5.94432483189504e-07*0.956372818175676+${fz}*${unitz}
variable           dot      equal     -4.43348532904761e-06*-0.274860488571566+5.94432483189504e-07*0.956372818175676+1.86553219291019e-05*${unitz}
variable           dot      equal     -4.43348532904761e-06*-0.274860488571566+5.94432483189504e-07*0.956372818175676+1.86553219291019e-05*-0.099008810097458
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.99522134053868e-08/${f_module}*${dir_module}
variable           cos      equal     -5.99522134053868e-08/1.91841126565286e-05*${dir_module}
variable           cos      equal     -5.99522134053868e-08/1.91841126565286e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00312509702579255)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57392142890745/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.1790551615967-90.0)
print              "The dot product: ${dot}"
The dot product: -5.99522134053868e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.1790551615967

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13589436612154^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13589436612154^2+0.47284234477381^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13589436612154^2+0.47284234477381^2+-0.0489511590355001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.13589436612154/${norm}
variable           unit_x        equal     -0.13589436612154/0.49441215369941
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.47284234477381/${norm}
variable           unit_y        equal     0.47284234477381/0.49441215369941
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0489511590355001/${norm}
variable           unit_z        equal     -0.0489511590355001/0.49441215369941
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.02974194776323+${delta}*${unit_x}
variable           x_new         equal     1.02974194776323+0.03*${unit_x}
variable           x_new         equal     1.02974194776323+0.03*-0.274860488571566
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.49752530003615+${delta}*${unit_y}
variable           y_new         equal     4.49752530003615+0.03*${unit_y}
variable           y_new         equal     4.49752530003615+0.03*0.956372818175676
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2719171638972+${delta}*${unit_z}
variable           z_new         equal     31.2719171638972+0.03*${unit_z}
variable           z_new         equal     31.2719171638972+0.03*-0.099008810097458

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02149613310608  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02149613310608  y  4.52621648458142  z   ${z_new}
set                atom          288751    x  1.02149613310608  y  4.52621648458142  z   31.2689468995943
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13589436612154  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13589436612154  0.47284234477381  ${new_z}
fix                hold    carbon   planeforce   -0.13589436612154  0.47284234477381  -0.0489511590355001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3217   -1152448.8            0   -1152448.8   0.10532556   0.03188793     0.015624 
    3429   -1152448.8            0   -1152448.8 1.2233773e-06 2.2617893e-07 -1.2114749e-06 
Loop time of 2.46722 on 104 procs for 212 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.84220377  -1152448.84731685  -1152448.84731685
  Force two-norm initial, final = 0.30689403 6.7161875e-06
  Force max component initial, final = 0.25486483 1.9730980e-06
  Final line search alpha, max atom move = 1.0000000 1.9730980e-06
  Iterations, force evaluations = 212 424

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64567    | 1.7798     | 2.3235     |  36.0 | 72.14
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037395   | 0.39903    | 1.1998     |  53.4 | 16.17
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5788e-05 | 0.0034934  | 0.0074976  |   2.8 |  0.14
Other   |            | 0.2849     |            |       | 11.55

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238175
Ave neighs/atom = 28.530377
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.04881003586062-${x_0}
variable           new_x         equal     1.04881003586062-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.53484124541075-${y_0}
variable           new_y         equal     4.53484124541075-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2764308211137-${z_0}
variable           new_z         equal     31.2764308211137-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11682627802415*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11682627802415*-0.11682627802415+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11682627802415*-0.11682627802415+0.51015829014841*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11682627802415*-0.11682627802415+0.51015829014841*0.51015829014841+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11682627802415*-0.11682627802415+0.51015829014841*0.51015829014841+-0.0444375018190009*${new_z})
variable           module        equal     sqrt(-0.11682627802415*-0.11682627802415+0.51015829014841*0.51015829014841+-0.0444375018190009*-0.0444375018190009)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.11682627802415/${module}
variable           unitx         equal     -0.11682627802415/0.525247134035055
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.51015829014841/${module}
variable           unity         equal     0.51015829014841/0.525247134035055
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0444375018190009/${module}
variable           unitz         equal     -0.0444375018190009/0.525247134035055
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.22337727445479e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.22337727445479e-06*1.22337727445479e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.22337727445479e-06*1.22337727445479e-06+2.26178931985869e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.22337727445479e-06*1.22337727445479e-06+2.26178931985869e-07*2.26178931985869e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.22337727445479e-06*1.22337727445479e-06+2.26178931985869e-07*2.26178931985869e-07+-1.21147494481184e-06*${fz})
variable           f_module      equal     sqrt(1.22337727445479e-06*1.22337727445479e-06+2.26178931985869e-07*2.26178931985869e-07+-1.21147494481184e-06*-1.21147494481184e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.222421543029977*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.222421543029977*-0.222421543029977+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.222421543029977*-0.222421543029977+0.971272867743743*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.222421543029977*-0.222421543029977+0.971272867743743*0.971272867743743+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.222421543029977*-0.222421543029977+0.971272867743743*0.971272867743743+-0.0846030352943061*${unitz})
variable           dir_module    equal     sqrt(-0.222421543029977*-0.222421543029977+0.971272867743743*0.971272867743743+-0.0846030352943061*-0.0846030352943061)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.22337727445479e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.22337727445479e-06*-0.222421543029977+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.22337727445479e-06*-0.222421543029977+2.26178931985869e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.22337727445479e-06*-0.222421543029977+2.26178931985869e-07*0.971272867743743+${fz}*${unitz}
variable           dot      equal     1.22337727445479e-06*-0.222421543029977+2.26178931985869e-07*0.971272867743743+-1.21147494481184e-06*${unitz}
variable           dot      equal     1.22337727445479e-06*-0.222421543029977+2.26178931985869e-07*0.971272867743743+-1.21147494481184e-06*-0.0846030352943061
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.00704563151736e-08/${f_module}*${dir_module}
variable           cos      equal     5.00704563151736e-08/1.7365138660067e-06*${dir_module}
variable           cos      equal     5.00704563151736e-08/1.7365138660067e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0288338937542238)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54195843616018/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.3477105765709-90.0)
print              "The dot product: ${dot}"
The dot product: 5.00704563151736e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.3477105765709

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11682627802415^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11682627802415^2+0.51015829014841^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11682627802415^2+0.51015829014841^2+-0.0444375018190009^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.11682627802415/${norm}
variable           unit_x        equal     -0.11682627802415/0.525247134035055
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.51015829014841/${norm}
variable           unit_y        equal     0.51015829014841/0.525247134035055
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0444375018190009/${norm}
variable           unit_z        equal     -0.0444375018190009/0.525247134035055
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.04881003586062+${delta}*${unit_x}
variable           x_new         equal     1.04881003586062+0.03*${unit_x}
variable           x_new         equal     1.04881003586062+0.03*-0.222421543029977
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.53484124541075+${delta}*${unit_y}
variable           y_new         equal     4.53484124541075+0.03*${unit_y}
variable           y_new         equal     4.53484124541075+0.03*0.971272867743743
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2764308211137+${delta}*${unit_z}
variable           z_new         equal     31.2764308211137+0.03*${unit_z}
variable           z_new         equal     31.2764308211137+0.03*-0.0846030352943061

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04213738956972  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04213738956972  y  4.56397943144306  z   ${z_new}
set                atom          288751    x  1.04213738956972  y  4.56397943144306  z   31.2738927300549
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11682627802415  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11682627802415  0.51015829014841  ${new_z}
fix                hold    carbon   planeforce   -0.11682627802415  0.51015829014841  -0.0444375018190009
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3429   -1152448.8            0   -1152448.8   0.11181158  0.028358675  0.031614782 
    3625   -1152448.8            0   -1152448.8 -1.5100347e-05 -2.6263902e-06 9.5469499e-06 
Loop time of 2.29598 on 104 procs for 196 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.78459213  -1152448.79001596  -1152448.79001596
  Force two-norm initial, final = 0.31880685 9.9443842e-05
  Force max component initial, final = 0.26908103 3.6264504e-05
  Final line search alpha, max atom move = 1.0000000 3.6264504e-05
  Iterations, force evaluations = 196 392

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59181    | 1.6533     | 2.1636     |  34.9 | 72.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034278   | 0.38229    | 1.1336     |  50.7 | 16.65
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4298e-05 | 0.0032356  | 0.006954   |   2.7 |  0.14
Other   |            | 0.2572     |            |       | 11.20

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238174
Ave neighs/atom = 28.530374
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07065849572305-${x_0}
variable           new_x         equal     1.07065849572305-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.57138718204404-${y_0}
variable           new_y         equal     4.57138718204404-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2839542925833-${z_0}
variable           new_z         equal     31.2839542925833-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09497781816172*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09497781816172*-0.09497781816172+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09497781816172*-0.09497781816172+0.5467042267817*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09497781816172*-0.09497781816172+0.5467042267817*0.5467042267817+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09497781816172*-0.09497781816172+0.5467042267817*0.5467042267817+-0.0369140303494007*${new_z})
variable           module        equal     sqrt(-0.09497781816172*-0.09497781816172+0.5467042267817*0.5467042267817+-0.0369140303494007*-0.0369140303494007)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.09497781816172/${module}
variable           unitx         equal     -0.09497781816172/0.556119540351149
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.5467042267817/${module}
variable           unity         equal     0.5467042267817/0.556119540351149
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0369140303494007/${module}
variable           unitz         equal     -0.0369140303494007/0.556119540351149
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.5100346995102e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.5100346995102e-05*-1.5100346995102e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.5100346995102e-05*-1.5100346995102e-05+-2.62639019857711e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.5100346995102e-05*-1.5100346995102e-05+-2.62639019857711e-06*-2.62639019857711e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.5100346995102e-05*-1.5100346995102e-05+-2.62639019857711e-06*-2.62639019857711e-06+9.54694988719711e-06*${fz})
variable           f_module      equal     sqrt(-1.5100346995102e-05*-1.5100346995102e-05+-2.62639019857711e-06*-2.62639019857711e-06+9.54694988719711e-06*9.54694988719711e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170786694712702*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170786694712702*-0.170786694712702+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170786694712702*-0.170786694712702+0.983069622830545*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170786694712702*-0.170786694712702+0.983069622830545*0.983069622830545+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.170786694712702*-0.170786694712702+0.983069622830545*0.983069622830545+-0.0663778696322956*${unitz})
variable           dir_module    equal     sqrt(-0.170786694712702*-0.170786694712702+0.983069622830545*0.983069622830545+-0.0663778696322956*-0.0663778696322956)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.5100346995102e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.5100346995102e-05*-0.170786694712702+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.5100346995102e-05*-0.170786694712702+-2.62639019857711e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.5100346995102e-05*-0.170786694712702+-2.62639019857711e-06*0.983069622830545+${fz}*${unitz}
variable           dot      equal     -1.5100346995102e-05*-0.170786694712702+-2.62639019857711e-06*0.983069622830545+9.54694988719711e-06*${unitz}
variable           dot      equal     -1.5100346995102e-05*-0.170786694712702+-2.62639019857711e-06*0.983069622830545+9.54694988719711e-06*-0.0663778696322956
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.36692264611116e-07/${f_module}*${dir_module}
variable           cos      equal     -6.36692264611116e-07/1.80572051269381e-05*${dir_module}
variable           cos      equal     -6.36692264611116e-07/1.80572051269381e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0352597348335643)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.6060633718234/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.0206528360311-90.0)
print              "The dot product: ${dot}"
The dot product: -6.36692264611116e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.0206528360311

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09497781816172^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09497781816172^2+0.5467042267817^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09497781816172^2+0.5467042267817^2+-0.0369140303494007^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.09497781816172/${norm}
variable           unit_x        equal     -0.09497781816172/0.556119540351149
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.5467042267817/${norm}
variable           unit_y        equal     0.5467042267817/0.556119540351149
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0369140303494007/${norm}
variable           unit_z        equal     -0.0369140303494007/0.556119540351149
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07065849572305+${delta}*${unit_x}
variable           x_new         equal     1.07065849572305+0.03*${unit_x}
variable           x_new         equal     1.07065849572305+0.03*-0.170786694712702
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.57138718204404+${delta}*${unit_y}
variable           y_new         equal     4.57138718204404+0.03*${unit_y}
variable           y_new         equal     4.57138718204404+0.03*0.983069622830545
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2839542925833+${delta}*${unit_z}
variable           z_new         equal     31.2839542925833+0.03*${unit_z}
variable           z_new         equal     31.2839542925833+0.03*-0.0663778696322956

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06553489488167  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06553489488167  y  4.60087927072896  z   ${z_new}
set                atom          288751    x  1.06553489488167  y  4.60087927072896  z   31.2819629564943
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09497781816172  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09497781816172  0.5467042267817  ${new_z}
fix                hold    carbon   planeforce   -0.09497781816172  0.5467042267817  -0.0369140303494007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3625   -1152448.7            0   -1152448.7   0.12083826  0.024072516   0.04560846 
    3894   -1152448.8            0   -1152448.8 3.4725921e-06 5.857049e-07 -2.6038534e-07 
Loop time of 3.12929 on 104 procs for 269 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.72619346  -1152448.75492674  -1152448.75492674
  Force two-norm initial, final = 0.34413218 3.4066572e-05
  Force max component initial, final = 0.28275257 1.1296314e-05
  Final line search alpha, max atom move = 1.0000000 1.1296314e-05
  Iterations, force evaluations = 269 538

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.81808    | 2.2596     | 2.949      |  40.6 | 72.21
Neigh   | 1.0157e-05 | 0.0029592  | 0.0042954  |   2.2 |  0.09
Comm    | 0.050632   | 0.50662    | 1.5248     |  60.3 | 16.19
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.2746e-05 | 0.0044264  | 0.0094847  |   3.1 |  0.14
Other   |            | 0.3557     |            |       | 11.37

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.12 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115498 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238172
Ave neighs/atom = 28.530367
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.11802485761662-${x_0}
variable           new_x         equal     1.11802485761662-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.61142999659767-${y_0}
variable           new_y         equal     4.61142999659767-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3031674764165-${z_0}
variable           new_z         equal     31.3031674764165-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04761145626815*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04761145626815*-0.04761145626815+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04761145626815*-0.04761145626815+0.586747041335331*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04761145626815*-0.04761145626815+0.586747041335331*0.586747041335331+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04761145626815*-0.04761145626815+0.586747041335331*0.586747041335331+-0.017700846516199*${new_z})
variable           module        equal     sqrt(-0.04761145626815*-0.04761145626815+0.586747041335331*0.586747041335331+-0.017700846516199*-0.017700846516199)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.04761145626815/${module}
variable           unitx         equal     -0.04761145626815/0.588941645030413
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.586747041335331/${module}
variable           unity         equal     0.586747041335331/0.588941645030413
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.017700846516199/${module}
variable           unitz         equal     -0.017700846516199/0.588941645030413
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.47259208189356e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.47259208189356e-06*3.47259208189356e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.47259208189356e-06*3.47259208189356e-06+5.85704904620864e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.47259208189356e-06*3.47259208189356e-06+5.85704904620864e-07*5.85704904620864e-07+${fz}*${fz})
variable           f_module      equal     sqrt(3.47259208189356e-06*3.47259208189356e-06+5.85704904620864e-07*5.85704904620864e-07+-2.60385343484465e-07*${fz})
variable           f_module      equal     sqrt(3.47259208189356e-06*3.47259208189356e-06+5.85704904620864e-07*5.85704904620864e-07+-2.60385343484465e-07*-2.60385343484465e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0808424003802471*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0808424003802471*-0.0808424003802471+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0808424003802471*-0.0808424003802471+0.996273648308622*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0808424003802471*-0.0808424003802471+0.996273648308622*0.996273648308622+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0808424003802471*-0.0808424003802471+0.996273648308622*0.996273648308622+-0.030055348718437*${unitz})
variable           dir_module    equal     sqrt(-0.0808424003802471*-0.0808424003802471+0.996273648308622*0.996273648308622+-0.030055348718437*-0.030055348718437)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.47259208189356e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.47259208189356e-06*-0.0808424003802471+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.47259208189356e-06*-0.0808424003802471+5.85704904620864e-07*${unity}+${fz}*${unitz}
variable           dot      equal     3.47259208189356e-06*-0.0808424003802471+5.85704904620864e-07*0.996273648308622+${fz}*${unitz}
variable           dot      equal     3.47259208189356e-06*-0.0808424003802471+5.85704904620864e-07*0.996273648308622+-2.60385343484465e-07*${unitz}
variable           dot      equal     3.47259208189356e-06*-0.0808424003802471+5.85704904620864e-07*0.996273648308622+-2.60385343484465e-07*-0.030055348718437
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.10615655016762e-07/${f_module}*${dir_module}
variable           cos      equal     3.10615655016762e-07/3.53125282720288e-06*${dir_module}
variable           cos      equal     3.10615655016762e-07/3.53125282720288e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.087961884978596)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.482720613896/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(84.9536333732873-90.0)
print              "The dot product: ${dot}"
The dot product: 3.10615655016762e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 84.9536333732873

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04761145626815^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04761145626815^2+0.586747041335331^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04761145626815^2+0.586747041335331^2+-0.017700846516199^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.04761145626815/${norm}
variable           unit_x        equal     -0.04761145626815/0.588941645030413
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.586747041335331/${norm}
variable           unit_y        equal     0.586747041335331/0.588941645030413
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.017700846516199/${norm}
variable           unit_z        equal     -0.017700846516199/0.588941645030413
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.11802485761662+${delta}*${unit_x}
variable           x_new         equal     1.11802485761662+0.03*${unit_x}
variable           x_new         equal     1.11802485761662+0.03*-0.0808424003802471
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.61142999659767+${delta}*${unit_y}
variable           y_new         equal     4.61142999659767+0.03*${unit_y}
variable           y_new         equal     4.61142999659767+0.03*0.996273648308622
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3031674764165+${delta}*${unit_z}
variable           z_new         equal     31.3031674764165+0.03*${unit_z}
variable           z_new         equal     31.3031674764165+0.03*-0.030055348718437

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11559958560521  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11559958560521  y  4.64131820604693  z   ${z_new}
set                atom          288751    x  1.11559958560521  y  4.64131820604693  z   31.3022658159549
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04761145626815  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04761145626815  0.586747041335331  ${new_z}
fix                hold    carbon   planeforce   -0.04761145626815  0.586747041335331  -0.017700846516199
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3894   -1152448.7            0   -1152448.7   0.12399971  0.011649806  0.052634907 
    4000   -1152448.7            0   -1152448.7 -5.2912623e-05 3.3225234e-07 0.00015333702 
    4137   -1152448.7            0   -1152448.7 3.8083933e-06 2.4938385e-07 -1.9771887e-06 
Loop time of 2.8522 on 104 procs for 243 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.7099485  -1152448.71639848  -1152448.71639848
  Force two-norm initial, final = 0.35686563 2.6309550e-05
  Force max component initial, final = 0.30161957 9.2215952e-06
  Final line search alpha, max atom move = 1.0000000 9.2215952e-06
  Iterations, force evaluations = 243 486

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.73729    | 2.0446     | 2.6887     |  38.7 | 71.69
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.049011   | 0.46758    | 1.389      |  55.9 | 16.39
Output  | 0.00010087 | 0.00011661 | 0.0002542  |   0.0 |  0.00
Modify  | 3.0074e-05 | 0.0040064  | 0.0085507  |   3.0 |  0.14
Other   |            | 0.3359     |            |       | 11.78

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115496 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238175
Ave neighs/atom = 28.530377
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1432526981279-${x_0}
variable           new_x         equal     1.1432526981279-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.64388698817354-${y_0}
variable           new_y         equal     4.64388698817354-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3130348125078-${z_0}
variable           new_z         equal     31.3130348125078-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02238361575687*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02238361575687*-0.02238361575687+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02238361575687*-0.02238361575687+0.6192040329112*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02238361575687*-0.02238361575687+0.6192040329112*0.6192040329112+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02238361575687*-0.02238361575687+0.6192040329112*0.6192040329112+-0.00783351042489855*${new_z})
variable           module        equal     sqrt(-0.02238361575687*-0.02238361575687+0.6192040329112*0.6192040329112+-0.00783351042489855*-0.00783351042489855)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.02238361575687/${module}
variable           unitx         equal     -0.02238361575687/0.61965798995367
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.6192040329112/${module}
variable           unity         equal     0.6192040329112/0.61965798995367
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00783351042489855/${module}
variable           unitz         equal     -0.00783351042489855/0.61965798995367
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.80839326954772e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.80839326954772e-06*3.80839326954772e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.80839326954772e-06*3.80839326954772e-06+2.49383848869324e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.80839326954772e-06*3.80839326954772e-06+2.49383848869324e-07*2.49383848869324e-07+${fz}*${fz})
variable           f_module      equal     sqrt(3.80839326954772e-06*3.80839326954772e-06+2.49383848869324e-07*2.49383848869324e-07+-1.97718871983503e-06*${fz})
variable           f_module      equal     sqrt(3.80839326954772e-06*3.80839326954772e-06+2.49383848869324e-07*2.49383848869324e-07+-1.97718871983503e-06*-1.97718871983503e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0361225322997022*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0361225322997022*-0.0361225322997022+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0361225322997022*-0.0361225322997022+0.999267407102256*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0361225322997022*-0.0361225322997022+0.999267407102256*0.999267407102256+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0361225322997022*-0.0361225322997022+0.999267407102256*0.999267407102256+-0.0126416677455966*${unitz})
variable           dir_module    equal     sqrt(-0.0361225322997022*-0.0361225322997022+0.999267407102256*0.999267407102256+-0.0126416677455966*-0.0126416677455966)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.80839326954772e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.80839326954772e-06*-0.0361225322997022+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.80839326954772e-06*-0.0361225322997022+2.49383848869324e-07*${unity}+${fz}*${unitz}
variable           dot      equal     3.80839326954772e-06*-0.0361225322997022+2.49383848869324e-07*0.999267407102256+${fz}*${unitz}
variable           dot      equal     3.80839326954772e-06*-0.0361225322997022+2.49383848869324e-07*0.999267407102256+-1.97718871983503e-06*${unitz}
variable           dot      equal     3.80839326954772e-06*-0.0361225322997022+2.49383848869324e-07*0.999267407102256+-1.97718871983503e-06*-0.0126416677455966
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.3662730601012e-07/${f_module}*${dir_module}
variable           cos      equal     1.3662730601012e-07/4.2982934792143e-06*${dir_module}
variable           cos      equal     1.3662730601012e-07/4.2982934792143e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0317864070173018)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53900456464037/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.1784662052619-90.0)
print              "The dot product: ${dot}"
The dot product: 1.3662730601012e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.1784662052619

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02238361575687^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02238361575687^2+0.6192040329112^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02238361575687^2+0.6192040329112^2+-0.00783351042489855^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.02238361575687/${norm}
variable           unit_x        equal     -0.02238361575687/0.61965798995367
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.6192040329112/${norm}
variable           unit_y        equal     0.6192040329112/0.61965798995367
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00783351042489855/${norm}
variable           unit_z        equal     -0.00783351042489855/0.61965798995367
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1432526981279+${delta}*${unit_x}
variable           x_new         equal     1.1432526981279+0.03*${unit_x}
variable           x_new         equal     1.1432526981279+0.03*-0.0361225322997022
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.64388698817354+${delta}*${unit_y}
variable           y_new         equal     4.64388698817354+0.03*${unit_y}
variable           y_new         equal     4.64388698817354+0.03*0.999267407102256
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3130348125078+${delta}*${unit_z}
variable           z_new         equal     31.3130348125078+0.03*${unit_z}
variable           z_new         equal     31.3130348125078+0.03*-0.0126416677455966

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14216902215891  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14216902215891  y  4.67386501038661  z   ${z_new}
set                atom          288751    x  1.14216902215891  y  4.67386501038661  z   31.3126555624754
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02238361575687  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02238361575687  0.6192040329112  ${new_z}
fix                hold    carbon   planeforce   -0.02238361575687  0.6192040329112  -0.00783351042489855
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4137   -1152448.7            0   -1152448.7   0.06248035 0.0025841294  0.025731398 
    4340   -1152448.7            0   -1152448.7 -8.2948822e-06 -1.9189373e-07 8.5336051e-06 
Loop time of 2.36526 on 104 procs for 203 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.66980077  -1152448.67513259  -1152448.67513259
  Force two-norm initial, final = 0.34830165 7.3795983e-05
  Force max component initial, final = 0.31002564 2.3253445e-05
  Final line search alpha, max atom move = 1.0000000 2.3253445e-05
  Iterations, force evaluations = 203 406

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61869    | 1.705      | 2.2268     |  35.2 | 72.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038743   | 0.38278    | 1.1428     |  52.1 | 16.18
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4962e-05 | 0.0033422  | 0.0071729  |   2.7 |  0.14
Other   |            | 0.2741     |            |       | 11.59

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115486 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238170
Ave neighs/atom = 28.530360
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15574474663469-${x_0}
variable           new_x         equal     1.15574474663469-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.6744188513196-${y_0}
variable           new_y         equal     4.6744188513196-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3176426930333-${z_0}
variable           new_z         equal     31.3176426930333-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00989156725008011*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00989156725008011*-0.00989156725008011+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00989156725008011*-0.00989156725008011+0.64973589605726*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00989156725008011*-0.00989156725008011+0.64973589605726*0.64973589605726+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00989156725008011*-0.00989156725008011+0.64973589605726*0.64973589605726+-0.00322562989940067*${new_z})
variable           module        equal     sqrt(-0.00989156725008011*-0.00989156725008011+0.64973589605726*0.64973589605726+-0.00322562989940067*-0.00322562989940067)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00989156725008011/${module}
variable           unitx         equal     -0.00989156725008011/0.649819192095956
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.64973589605726/${module}
variable           unity         equal     0.64973589605726/0.649819192095956
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00322562989940067/${module}
variable           unitz         equal     -0.00322562989940067/0.649819192095956
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.29488223642606e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.29488223642606e-06*-8.29488223642606e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.29488223642606e-06*-8.29488223642606e-06+-1.91893731842968e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.29488223642606e-06*-8.29488223642606e-06+-1.91893731842968e-07*-1.91893731842968e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-8.29488223642606e-06*-8.29488223642606e-06+-1.91893731842968e-07*-1.91893731842968e-07+8.53360507127786e-06*${fz})
variable           f_module      equal     sqrt(-8.29488223642606e-06*-8.29488223642606e-06+-1.91893731842968e-07*-1.91893731842968e-07+8.53360507127786e-06*8.53360507127786e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0152220300206514*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0152220300206514*-0.0152220300206514+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0152220300206514*-0.0152220300206514+0.999871816591893*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0152220300206514*-0.0152220300206514+0.999871816591893*0.999871816591893+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0152220300206514*-0.0152220300206514+0.999871816591893*0.999871816591893+-0.0049638883225295*${unitz})
variable           dir_module    equal     sqrt(-0.0152220300206514*-0.0152220300206514+0.999871816591893*0.999871816591893+-0.0049638883225295*-0.0049638883225295)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.29488223642606e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.29488223642606e-06*-0.0152220300206514+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.29488223642606e-06*-0.0152220300206514+-1.91893731842968e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -8.29488223642606e-06*-0.0152220300206514+-1.91893731842968e-07*0.999871816591893+${fz}*${unitz}
variable           dot      equal     -8.29488223642606e-06*-0.0152220300206514+-1.91893731842968e-07*0.999871816591893+8.53360507127786e-06*${unitz}
variable           dot      equal     -8.29488223642606e-06*-0.0152220300206514+-1.91893731842968e-07*0.999871816591893+8.53360507127786e-06*-0.0049638883225295
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.07964050392175e-07/${f_module}*${dir_module}
variable           cos      equal     -1.07964050392175e-07/1.19022817154122e-05*${dir_module}
variable           cos      equal     -1.07964050392175e-07/1.19022817154122e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00907087002086104)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57986732121326/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.5197296961589-90.0)
print              "The dot product: ${dot}"
The dot product: -1.07964050392175e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.5197296961589

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00989156725008011^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00989156725008011^2+0.64973589605726^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00989156725008011^2+0.64973589605726^2+-0.00322562989940067^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00989156725008011/${norm}
variable           unit_x        equal     -0.00989156725008011/0.649819192095956
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.64973589605726/${norm}
variable           unit_y        equal     0.64973589605726/0.649819192095956
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00322562989940067/${norm}
variable           unit_z        equal     -0.00322562989940067/0.649819192095956
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15574474663469+${delta}*${unit_x}
variable           x_new         equal     1.15574474663469+0.03*${unit_x}
variable           x_new         equal     1.15574474663469+0.03*-0.0152220300206514
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.6744188513196+${delta}*${unit_y}
variable           y_new         equal     4.6744188513196+0.03*${unit_y}
variable           y_new         equal     4.6744188513196+0.03*0.999871816591893
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3176426930333+${delta}*${unit_z}
variable           z_new         equal     31.3176426930333+0.03*${unit_z}
variable           z_new         equal     31.3176426930333+0.03*-0.0049638883225295

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15528808573407  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15528808573407  y  4.70441500581736  z   ${z_new}
set                atom          288751    x  1.15528808573407  y  4.70441500581736  z   31.3174937763836
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00989156725008011  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00989156725008011  0.64973589605726  ${new_z}
fix                hold    carbon   planeforce   -0.00989156725008011  0.64973589605726  -0.00322562989940067
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4340   -1152448.6            0   -1152448.6   0.02853275 0.00048984248  0.011171344 
    4494   -1152448.6            0   -1152448.6 1.9181075e-05 3.1663397e-07 4.9595168e-06 
Loop time of 1.8143 on 104 procs for 154 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.6278364  -1152448.63384903  -1152448.63384903
  Force two-norm initial, final = 0.35547638 0.00012094324
  Force max component initial, final = 0.3170485 2.0463658e-05
  Final line search alpha, max atom move = 1.0000000 2.0463658e-05
  Iterations, force evaluations = 154 308

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46844    | 1.2985     | 1.716      |  30.8 | 71.57
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.027257   | 0.29727    | 0.8744     |  44.7 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8856e-05 | 0.0025389  | 0.0054695  |   2.4 |  0.14
Other   |            | 0.216      |            |       | 11.90

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115479 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238163
Ave neighs/atom = 28.530336
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16159372780987-${x_0}
variable           new_x         equal     1.16159372780987-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.70452160990296-${y_0}
variable           new_y         equal     4.70452160990296-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3196303570389-${z_0}
variable           new_z         equal     31.3196303570389-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00404258607490005*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00404258607490005*-0.00404258607490005+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00404258607490005*-0.00404258607490005+0.67983865464062*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00404258607490005*-0.00404258607490005+0.67983865464062*0.67983865464062+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00404258607490005*-0.00404258607490005+0.67983865464062*0.67983865464062+-0.00123796589380021*${new_z})
variable           module        equal     sqrt(-0.00404258607490005*-0.00404258607490005+0.67983865464062*0.67983865464062+-0.00123796589380021*-0.00123796589380021)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00404258607490005/${module}
variable           unitx         equal     -0.00404258607490005/0.679851801060566
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.67983865464062/${module}
variable           unity         equal     0.67983865464062/0.679851801060566
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00123796589380021/${module}
variable           unitz         equal     -0.00123796589380021/0.679851801060566
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.91810748520493e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.91810748520493e-05*1.91810748520493e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.91810748520493e-05*1.91810748520493e-05+3.16633971721235e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.91810748520493e-05*1.91810748520493e-05+3.16633971721235e-07*3.16633971721235e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.91810748520493e-05*1.91810748520493e-05+3.16633971721235e-07*3.16633971721235e-07+4.95951677575193e-06*${fz})
variable           f_module      equal     sqrt(1.91810748520493e-05*1.91810748520493e-05+3.16633971721235e-07*3.16633971721235e-07+4.95951677575193e-06*4.95951677575193e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00594627545090508*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00594627545090508*-0.00594627545090508+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00594627545090508*-0.00594627545090508+0.999980662815153*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00594627545090508*-0.00594627545090508+0.999980662815153*0.999980662815153+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00594627545090508*-0.00594627545090508+0.999980662815153*0.999980662815153+-0.00182093493297949*${unitz})
variable           dir_module    equal     sqrt(-0.00594627545090508*-0.00594627545090508+0.999980662815153*0.999980662815153+-0.00182093493297949*-0.00182093493297949)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.91810748520493e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.91810748520493e-05*-0.00594627545090508+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.91810748520493e-05*-0.00594627545090508+3.16633971721235e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.91810748520493e-05*-0.00594627545090508+3.16633971721235e-07*0.999980662815153+${fz}*${unitz}
variable           dot      equal     1.91810748520493e-05*-0.00594627545090508+3.16633971721235e-07*0.999980662815153+4.95951677575193e-06*${unitz}
variable           dot      equal     1.91810748520493e-05*-0.00594627545090508+3.16633971721235e-07*0.999980662815153+4.95951677575193e-06*-0.00182093493297949
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.93540937049217e-07/${f_module}*${dir_module}
variable           cos      equal     1.93540937049217e-07/1.98144062792941e-05*${dir_module}
variable           cos      equal     1.93540937049217e-07/1.98144062792941e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00976768792973957)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56102848353967/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.4403438065302-90.0)
print              "The dot product: ${dot}"
The dot product: 1.93540937049217e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.4403438065302

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00404258607490005^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00404258607490005^2+0.67983865464062^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00404258607490005^2+0.67983865464062^2+-0.00123796589380021^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00404258607490005/${norm}
variable           unit_x        equal     -0.00404258607490005/0.679851801060566
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.67983865464062/${norm}
variable           unit_y        equal     0.67983865464062/0.679851801060566
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00123796589380021/${norm}
variable           unit_z        equal     -0.00123796589380021/0.679851801060566
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16159372780987+${delta}*${unit_x}
variable           x_new         equal     1.16159372780987+0.03*${unit_x}
variable           x_new         equal     1.16159372780987+0.03*-0.00594627545090508
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.70452160990296+${delta}*${unit_y}
variable           y_new         equal     4.70452160990296+0.03*${unit_y}
variable           y_new         equal     4.70452160990296+0.03*0.999980662815153
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3196303570389+${delta}*${unit_z}
variable           z_new         equal     31.3196303570389+0.03*${unit_z}
variable           z_new         equal     31.3196303570389+0.03*-0.00182093493297949

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16141533954634  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16141533954634  y  4.73452102978741  z   ${z_new}
set                atom          288751    x  1.16141533954634  y  4.73452102978741  z   31.3195757289909
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00404258607490005  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00404258607490005  0.67983865464062  ${new_z}
fix                hold    carbon   planeforce   -0.00404258607490005  0.67983865464062  -0.00123796589380021
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4494   -1152448.6            0   -1152448.6  0.011470767 7.5767187e-05 0.0041502768 
    4716   -1152448.6            0   -1152448.6 7.8613589e-07 5.8185881e-09 6.2819088e-07 
Loop time of 2.57393 on 104 procs for 222 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.58640196  -1152448.59107223  -1152448.59107223
  Force two-norm initial, final = 0.35650881 3.4772659e-05
  Force max component initial, final = 0.32439758 1.0950609e-05
  Final line search alpha, max atom move = 1.0000000 1.0950609e-05
  Iterations, force evaluations = 222 444

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.67474    | 1.8655     | 2.4298     |  36.9 | 72.48
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038946   | 0.42039    | 1.2621     |  54.7 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7331e-05 | 0.0036547  | 0.0078332  |   2.9 |  0.14
Other   |            | 0.2844     |            |       | 11.05

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115478 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16392383392599-${x_0}
variable           new_x         equal     1.16392383392599-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.73453741936742-${y_0}
variable           new_y         equal     4.73453741936742-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3203846894534-${z_0}
variable           new_z         equal     31.3203846894534-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00171247995877999*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00171247995877999*-0.00171247995877999+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00171247995877999*-0.00171247995877999+0.709854464105081*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00171247995877999*-0.00171247995877999+0.709854464105081*0.709854464105081+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00171247995877999*-0.00171247995877999+0.709854464105081*0.709854464105081+-0.000483633479298362*${new_z})
variable           module        equal     sqrt(-0.00171247995877999*-0.00171247995877999+0.709854464105081*0.709854464105081+-0.000483633479298362*-0.000483633479298362)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00171247995877999/${module}
variable           unitx         equal     -0.00171247995877999/0.709856694480557
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.709854464105081/${module}
variable           unity         equal     0.709854464105081/0.709856694480557
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.000483633479298362/${module}
variable           unitz         equal     -0.000483633479298362/0.709856694480557
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.86135889762899e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.86135889762899e-07*7.86135889762899e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.86135889762899e-07*7.86135889762899e-07+5.81858813531215e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.86135889762899e-07*7.86135889762899e-07+5.81858813531215e-09*5.81858813531215e-09+${fz}*${fz})
variable           f_module      equal     sqrt(7.86135889762899e-07*7.86135889762899e-07+5.81858813531215e-09*5.81858813531215e-09+6.28190879159668e-07*${fz})
variable           f_module      equal     sqrt(7.86135889762899e-07*7.86135889762899e-07+5.81858813531215e-09*5.81858813531215e-09+6.28190879159668e-07*6.28190879159668e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00241243052590088*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00241243052590088*-0.00241243052590088+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00241243052590088*-0.00241243052590088+0.999996857991911*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00241243052590088*-0.00241243052590088+0.999996857991911*0.999996857991911+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00241243052590088*-0.00241243052590088+0.999996857991911*0.999996857991911+-0.0006813114295587*${unitz})
variable           dir_module    equal     sqrt(-0.00241243052590088*-0.00241243052590088+0.999996857991911*0.999996857991911+-0.0006813114295587*-0.0006813114295587)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.86135889762899e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.86135889762899e-07*-0.00241243052590088+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.86135889762899e-07*-0.00241243052590088+5.81858813531215e-09*${unity}+${fz}*${unitz}
variable           dot      equal     7.86135889762899e-07*-0.00241243052590088+5.81858813531215e-09*0.999996857991911+${fz}*${unitz}
variable           dot      equal     7.86135889762899e-07*-0.00241243052590088+5.81858813531215e-09*0.999996857991911+6.28190879159668e-07*${unitz}
variable           dot      equal     7.86135889762899e-07*-0.00241243052590088+5.81858813531215e-09*0.999996857991911+6.28190879159668e-07*-0.0006813114295587
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.49407800937489e-09/${f_module}*${dir_module}
variable           cos      equal     3.49407800937489e-09/1.00631370546196e-06*${dir_module}
variable           cos      equal     3.49407800937489e-09/1.00631370546196e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00347215584008258)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56732416397814/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8010597248176-90.0)
print              "The dot product: ${dot}"
The dot product: 3.49407800937489e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8010597248176

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00171247995877999^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00171247995877999^2+0.709854464105081^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00171247995877999^2+0.709854464105081^2+-0.000483633479298362^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00171247995877999/${norm}
variable           unit_x        equal     -0.00171247995877999/0.709856694480557
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.709854464105081/${norm}
variable           unit_y        equal     0.709854464105081/0.709856694480557
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.000483633479298362/${norm}
variable           unit_z        equal     -0.000483633479298362/0.709856694480557
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16392383392599+${delta}*${unit_x}
variable           x_new         equal     1.16392383392599+0.03*${unit_x}
variable           x_new         equal     1.16392383392599+0.03*-0.00241243052590088
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.73453741936742+${delta}*${unit_y}
variable           y_new         equal     4.73453741936742+0.03*${unit_y}
variable           y_new         equal     4.73453741936742+0.03*0.999996857991911
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3203846894534+${delta}*${unit_z}
variable           z_new         equal     31.3203846894534+0.03*${unit_z}
variable           z_new         equal     31.3203846894534+0.03*-0.0006813114295587

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16385146101021  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16385146101021  y  4.76453732510718  z   ${z_new}
set                atom          288751    x  1.16385146101021  y  4.76453732510718  z   31.3203642501105
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00171247995877999  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00171247995877999  0.709854464105081  ${new_z}
fix                hold    carbon   planeforce   -0.00171247995877999  0.709854464105081  -0.000483633479298362
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4716   -1152448.5            0   -1152448.5  0.004318371 1.1430444e-05 0.0014863067 
    4848   -1152448.5            0   -1152448.5 6.9418176e-07 2.0061338e-09 4.8650548e-07 
Loop time of 1.56605 on 104 procs for 132 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.53891955   -1152448.5439818   -1152448.5439818
  Force two-norm initial, final = 0.36581801 0.00021453495
  Force max component initial, final = 0.33106138 8.5005064e-05
  Final line search alpha, max atom move = 1.0000000 8.5005064e-05
  Iterations, force evaluations = 132 264

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.39988    | 1.1143     | 1.4806     |  28.7 | 71.15
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.023981   | 0.26137    | 0.76378    |  41.0 | 16.69
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6468e-05 | 0.0021795  | 0.0046958  |   2.2 |  0.14
Other   |            | 0.1882     |            |       | 12.02

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115480 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16486187784244-${x_0}
variable           new_x         equal     1.16486187784244-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.76453996603452-${y_0}
variable           new_y         equal     4.76453996603452-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3206627311301-${z_0}
variable           new_z         equal     31.3206627311301-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000774436042330073*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000774436042330073*-0.000774436042330073+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000774436042330073*-0.000774436042330073+0.73985701077218*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000774436042330073*-0.000774436042330073+0.73985701077218*0.73985701077218+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000774436042330073*-0.000774436042330073+0.73985701077218*0.73985701077218+-0.000205591802600935*${new_z})
variable           module        equal     sqrt(-0.000774436042330073*-0.000774436042330073+0.73985701077218*0.73985701077218+-0.000205591802600935*-0.000205591802600935)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000774436042330073/${module}
variable           unitx         equal     -0.000774436042330073/0.739857444652629
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.73985701077218/${module}
variable           unity         equal     0.73985701077218/0.739857444652629
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.000205591802600935/${module}
variable           unitz         equal     -0.000205591802600935/0.739857444652629
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94181758460213e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94181758460213e-07*6.94181758460213e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94181758460213e-07*6.94181758460213e-07+2.00613382381644e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.94181758460213e-07*6.94181758460213e-07+2.00613382381644e-09*2.00613382381644e-09+${fz}*${fz})
variable           f_module      equal     sqrt(6.94181758460213e-07*6.94181758460213e-07+2.00613382381644e-09*2.00613382381644e-09+4.86505478623419e-07*${fz})
variable           f_module      equal     sqrt(6.94181758460213e-07*6.94181758460213e-07+2.00613382381644e-09*2.00613382381644e-09+4.86505478623419e-07*4.86505478623419e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00104673683819412*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00104673683819412*-0.00104673683819412+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00104673683819412*-0.00104673683819412+0.999999413562096*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00104673683819412*-0.00104673683819412+0.999999413562096*0.999999413562096+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00104673683819412*-0.00104673683819412+0.999999413562096*0.999999413562096+-0.000277880291787106*${unitz})
variable           dir_module    equal     sqrt(-0.00104673683819412*-0.00104673683819412+0.999999413562096*0.999999413562096+-0.000277880291787106*-0.000277880291787106)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.94181758460213e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.94181758460213e-07*-0.00104673683819412+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.94181758460213e-07*-0.00104673683819412+2.00613382381644e-09*${unity}+${fz}*${unitz}
variable           dot      equal     6.94181758460213e-07*-0.00104673683819412+2.00613382381644e-09*0.999999413562096+${fz}*${unitz}
variable           dot      equal     6.94181758460213e-07*-0.00104673683819412+2.00613382381644e-09*0.999999413562096+4.86505478623419e-07*${unitz}
variable           dot      equal     6.94181758460213e-07*-0.00104673683819412+2.00613382381644e-09*0.999999413562096+4.86505478623419e-07*-0.000277880291787106
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.14431674400495e-09/${f_module}*${dir_module}
variable           cos      equal     1.14431674400495e-09/8.47690933703101e-07*${dir_module}
variable           cos      equal     1.14431674400495e-09/8.47690933703101e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00134992212197676)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56944640426293/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9226551362487-90.0)
print              "The dot product: ${dot}"
The dot product: 1.14431674400495e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9226551362487

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000774436042330073^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000774436042330073^2+0.73985701077218^2+${new_z}^2)
variable           norm          equal     sqrt(-0.000774436042330073^2+0.73985701077218^2+-0.000205591802600935^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.000774436042330073/${norm}
variable           unit_x        equal     -0.000774436042330073/0.739857444652629
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.73985701077218/${norm}
variable           unit_y        equal     0.73985701077218/0.739857444652629
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.000205591802600935/${norm}
variable           unit_z        equal     -0.000205591802600935/0.739857444652629
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16486187784244+${delta}*${unit_x}
variable           x_new         equal     1.16486187784244+0.03*${unit_x}
variable           x_new         equal     1.16486187784244+0.03*-0.00104673683819412
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.76453996603452+${delta}*${unit_y}
variable           y_new         equal     4.76453996603452+0.03*${unit_y}
variable           y_new         equal     4.76453996603452+0.03*0.999999413562096
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3206627311301+${delta}*${unit_z}
variable           z_new         equal     31.3206627311301+0.03*${unit_z}
variable           z_new         equal     31.3206627311301+0.03*-0.000277880291787106

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16483047573729  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16483047573729  y  4.79453994844138  z   ${z_new}
set                atom          288751    x  1.16483047573729  y  4.79453994844138  z   31.3206543947213
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000774436042330073  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.000774436042330073  0.73985701077218  ${new_z}
fix                hold    carbon   planeforce   -0.000774436042330073  0.73985701077218  -0.000205591802600935
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4848   -1152448.5            0   -1152448.5 0.0016708674 1.8922603e-06 0.00051569234 
    4993   -1152448.5            0   -1152448.5 -3.6009574e-08 -3.1849438e-12 1.2418229e-07 
Loop time of 1.69002 on 104 procs for 145 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.48658542  -1152448.49200319  -1152448.49200319
  Force two-norm initial, final = 0.37567625 0.00012054826
  Force max component initial, final = 0.33765683 5.3278433e-05
  Final line search alpha, max atom move = 1.0000000 5.3278433e-05
  Iterations, force evaluations = 145 290

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.43915    | 1.2185     | 1.5901     |  29.8 | 72.10
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025605   | 0.27515    | 0.82301    |  44.0 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7792e-05 | 0.0023918  | 0.0051339  |   2.3 |  0.14
Other   |            | 0.194      |            |       | 11.48

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238163
Ave neighs/atom = 28.530336
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16525949240423-${x_0}
variable           new_x         equal     1.16525949240423-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.79454043000024-${y_0}
variable           new_y         equal     4.79454043000024-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3207713193075-${z_0}
variable           new_z         equal     31.3207713193075-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000376821480539968*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000376821480539968*-0.000376821480539968+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000376821480539968*-0.000376821480539968+0.769857474737901*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000376821480539968*-0.000376821480539968+0.769857474737901*0.769857474737901+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000376821480539968*-0.000376821480539968+0.769857474737901*0.769857474737901+-9.70036251999318e-05*${new_z})
variable           module        equal     sqrt(-0.000376821480539968*-0.000376821480539968+0.769857474737901*0.769857474737901+-9.70036251999318e-05*-9.70036251999318e-05)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000376821480539968/${module}
variable           unitx         equal     -0.000376821480539968/0.769857573070467
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.769857474737901/${module}
variable           unity         equal     0.769857474737901/0.769857573070467
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -9.70036251999318e-05/${module}
variable           unitz         equal     -9.70036251999318e-05/0.769857573070467
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.60095741281629e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.60095741281629e-08*-3.60095741281629e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.60095741281629e-08*-3.60095741281629e-08+-3.18494378825989e-12*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.60095741281629e-08*-3.60095741281629e-08+-3.18494378825989e-12*-3.18494378825989e-12+${fz}*${fz})
variable           f_module      equal     sqrt(-3.60095741281629e-08*-3.60095741281629e-08+-3.18494378825989e-12*-3.18494378825989e-12+1.24182289657195e-07*${fz})
variable           f_module      equal     sqrt(-3.60095741281629e-08*-3.60095741281629e-08+-3.18494378825989e-12*-3.18494378825989e-12+1.24182289657195e-07*1.24182289657195e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000489469083270909*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000489469083270909*-0.000489469083270909+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000489469083270909*-0.000489469083270909+0.999999872271743*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000489469083270909*-0.000489469083270909+0.999999872271743*0.999999872271743+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.000489469083270909*-0.000489469083270909+0.999999872271743*0.999999872271743+-0.000126002040628173*${unitz})
variable           dir_module    equal     sqrt(-0.000489469083270909*-0.000489469083270909+0.999999872271743*0.999999872271743+-0.000126002040628173*-0.000126002040628173)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.60095741281629e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.60095741281629e-08*-0.000489469083270909+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.60095741281629e-08*-0.000489469083270909+-3.18494378825989e-12*${unity}+${fz}*${unitz}
variable           dot      equal     -3.60095741281629e-08*-0.000489469083270909+-3.18494378825989e-12*0.999999872271743+${fz}*${unitz}
variable           dot      equal     -3.60095741281629e-08*-0.000489469083270909+-3.18494378825989e-12*0.999999872271743+1.24182289657195e-07*${unitz}
variable           dot      equal     -3.60095741281629e-08*-0.000489469083270909+-3.18494378825989e-12*0.999999872271743+1.24182289657195e-07*-0.000126002040628173
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.20659205065027e-12/${f_module}*${dir_module}
variable           cos      equal     -1.20659205065027e-12/1.29297836422498e-07*${dir_module}
variable           cos      equal     -1.20659205065027e-12/1.29297836422498e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-9.33188121344559e-06)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57080565867611/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0005346774085-90.0)
print              "The dot product: ${dot}"
The dot product: -1.20659205065027e-12
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0005346774085

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4993   -1152448.5            0   -1152448.5  0.001901638   -1.8167632 0.00050496716 
    5000   -1152449.3            0   -1152449.3 -0.00016157416  0.061843312 6.8382008e-05 
    5217   -1152449.3            0   -1152449.3 -9.9483729e-06 -1.0611395e-06 3.9322849e-06 
Loop time of 2.61697 on 104 procs for 224 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.49200319  -1152449.34502405  -1152449.34502405
  Force two-norm initial, final = 1.8167642 5.9845167e-05
  Force max component initial, final = 1.8167632 1.5659178e-05
  Final line search alpha, max atom move = 1.0000000 1.5659178e-05
  Iterations, force evaluations = 224 442

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68906    | 1.8693     | 2.4527     |  36.6 | 71.43
Neigh   | 4.0167e-05 | 0.011821   | 0.017139   |   4.5 |  0.45
Comm    | 0.042045   | 0.43348    | 1.2754     |  53.4 | 16.56
Output  | 8.6421e-05 | 9.7397e-05 | 0.00018146 |   0.0 |  0.00
Modify  | 2.4945e-05 | 0.00238    | 0.0061359  |   3.0 |  0.09
Other   |            | 0.2999     |            |       | 11.46

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115510 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238166
Ave neighs/atom = 28.530346
Neighbor list builds = 4
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563797615347-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563797615347-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563797615347-1.16563631388477)^2+(4.02468238230596-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563797615347-1.16563631388477)^2+(4.02468238230596-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563797615347-1.16563631388477)^2+(4.02468238230596-4.02468295526234)^2+(31.3208641979819-${z_0})^2)
variable                displacement      equal     sqrt((1.16563797615347-1.16563631388477)^2+(4.02468238230596-4.02468295526234)^2+(31.3208641979819-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 11
11
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.341 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.83057 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48568    | 1.3209     | 1.7149     |  30.8 | 72.16
Neigh   | 3.0095e-05 | 0.0088855  | 0.012834   |   3.9 |  0.49
Comm    | 0.031075   | 0.29648    | 0.89294    |  46.1 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.771e-05  | 0.0016884  | 0.0043708  |   2.6 |  0.09
Other   |            | 0.2027     |            |       | 11.07

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,11)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,11)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,11)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.17004982086948
variable                y_1    equal     $y
variable                y_1    equal     4.03520950269428
variable                z_1    equal     $z
variable                z_1    equal     31.3374644447207

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.17004982086948  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.17004982086948  y  4.03520950269428  z  ${z_1}
set                atom        288751    x  1.17004982086948  y  4.03520950269428  z  31.3374644447207
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.17004982086948-${x_0}
variable           vector_x          equal     1.17004982086948-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.03520950269428-${y_0}
variable           vector_y          equal     4.03520950269428-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3374644447207-${z_0}
variable           vector_z          equal     31.3374644447207-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.00441350698470999  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.00441350698470999  0.0105265474319403  ${vector_z}
fix                hold    carbon   planeforce   0.00441350698470999  0.0105265474319403  0.0165961217879982
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3  0.025149861  0.019843469 -0.019274522 
     315   -1152449.3            0   -1152449.3 -6.3565384e-05 -1.1206051e-05 2.4012073e-05 
Loop time of 1.83043 on 104 procs for 157 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.34252041  -1152449.34414412  -1152449.34414412
  Force two-norm initial, final = 0.18164167 0.00027616894
  Force max component initial, final = 0.07564782 6.3565384e-05
  Final line search alpha, max atom move = 1.0000000 6.3565384e-05
  Iterations, force evaluations = 157 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.47355    | 1.3185     | 1.7289     |  31.1 | 72.03
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.028468   | 0.30092    | 0.89187    |  45.3 | 16.44
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7843e-05 | 0.0025901  | 0.0055766  |   2.4 |  0.14
Other   |            | 0.2084     |            |       | 11.39

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17015471790566-${x_0}
variable           new_x         equal     1.17015471790566-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.03576670782006-${y_0}
variable           new_y         equal     4.03576670782006-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.337083126117-${z_0}
variable           new_z         equal     31.337083126117-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00451840402088988^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00451840402088988^2+0.0110837525577203^2+${new_z}^2)
variable           norm          equal     sqrt(0.00451840402088988^2+0.0110837525577203^2+0.016214803184301^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00451840402088988/${norm}
variable           unit_x        equal     0.00451840402088988/0.0201540414796235
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0110837525577203/${norm}
variable           unit_y        equal     0.0110837525577203/0.0201540414796235
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.016214803184301/${norm}
variable           unit_z        equal     0.016214803184301/0.0201540414796235
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17015471790566+${delta}*${unit_x}
variable           x_new         equal     1.17015471790566+0.03*${unit_x}
variable           x_new         equal     1.17015471790566+0.03*0.224193446533201
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.03576670782006+${delta}*${unit_y}
variable           y_new         equal     4.03576670782006+0.03*${unit_y}
variable           y_new         equal     4.03576670782006+0.03*0.549951857989694
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.337083126117+${delta}*${unit_z}
variable           z_new         equal     31.337083126117+0.03*${unit_z}
variable           z_new         equal     31.337083126117+0.03*0.804543505613739

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17688052130166  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17688052130166  y  4.05226526355975  z   ${z_new}
set                atom          288751    x  1.17688052130166  y  4.05226526355975  z   31.3612194312854
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00451840402088988  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00451840402088988  0.0110837525577203  ${new_z}
fix                hold    carbon   planeforce   0.00451840402088988  0.0110837525577203  0.016214803184301
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     315   -1152449.3            0   -1152449.3  0.035279621  0.031727835 -0.031518795 
     507   -1152449.3            0   -1152449.3 3.9055825e-05 5.2682699e-06 -1.4484431e-05 
Loop time of 2.22068 on 104 procs for 192 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33602573  -1152449.33956846  -1152449.33956846
  Force two-norm initial, final = 0.26872097 0.00016649195
  Force max component initial, final = 0.11337885 3.9055825e-05
  Final line search alpha, max atom move = 1.0000000 3.9055825e-05
  Iterations, force evaluations = 192 384

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58324    | 1.6077     | 2.0959     |  34.2 | 72.40
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036275   | 0.3612     | 1.0842     |  50.7 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1951e-05 | 0.0031649  | 0.0067803  |   2.7 |  0.14
Other   |            | 0.2486     |            |       | 11.19

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115491 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17709788522563-${x_0}
variable           new_x         equal     1.17709788522563-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.05371446452723-${y_0}
variable           new_y         equal     4.05371446452723-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3601682484395-${z_0}
variable           new_z         equal     31.3601682484395-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0114615713408599*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0114615713408599*0.0114615713408599+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0114615713408599*0.0114615713408599+0.0290315092648905*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0114615713408599*0.0114615713408599+0.0290315092648905*0.0290315092648905+${new_z}*${new_z})
variable           module        equal     sqrt(0.0114615713408599*0.0114615713408599+0.0290315092648905*0.0290315092648905+0.0392999255067998*${new_z})
variable           module        equal     sqrt(0.0114615713408599*0.0114615713408599+0.0290315092648905*0.0290315092648905+0.0392999255067998*0.0392999255067998)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0114615713408599/${module}
variable           unitx         equal     0.0114615713408599/0.0501864552707108
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0290315092648905/${module}
variable           unity         equal     0.0290315092648905/0.0501864552707108
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0392999255067998/${module}
variable           unitz         equal     0.0392999255067998/0.0501864552707108
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.90558252850015e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.90558252850015e-05*3.90558252850015e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.90558252850015e-05*3.90558252850015e-05+5.26826991585258e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.90558252850015e-05*3.90558252850015e-05+5.26826991585258e-06*5.26826991585258e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.90558252850015e-05*3.90558252850015e-05+5.26826991585258e-06*5.26826991585258e-06+-1.44844310159883e-05*${fz})
variable           f_module      equal     sqrt(3.90558252850015e-05*3.90558252850015e-05+5.26826991585258e-06*5.26826991585258e-06+-1.44844310159883e-05*-1.44844310159883e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.228379774563376*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.228379774563376*0.228379774563376+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.228379774563376*0.228379774563376+0.578472998507099*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.228379774563376*0.228379774563376+0.578472998507099*0.578472998507099+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.228379774563376*0.228379774563376+0.578472998507099*0.578472998507099+0.783078328501426*${unitz})
variable           dir_module    equal     sqrt(0.228379774563376*0.228379774563376+0.578472998507099*0.578472998507099+0.783078328501426*0.783078328501426)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.90558252850015e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.90558252850015e-05*0.228379774563376+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.90558252850015e-05*0.228379774563376+5.26826991585258e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.90558252850015e-05*0.228379774563376+5.26826991585258e-06*0.578472998507099+${fz}*${unitz}
variable           dot      equal     3.90558252850015e-05*0.228379774563376+5.26826991585258e-06*0.578472998507099+-1.44844310159883e-05*${unitz}
variable           dot      equal     3.90558252850015e-05*0.228379774563376+5.26826991585258e-06*0.578472998507099+-1.44844310159883e-05*0.783078328501426
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.24668439848897e-07/${f_module}*${dir_module}
variable           cos      equal     6.24668439848897e-07/4.19870325035691e-05*${dir_module}
variable           cos      equal     6.24668439848897e-07/4.19870325035691e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0148776515652969)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55591812632716/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.1475419064491-90.0)
print              "The dot product: ${dot}"
The dot product: 6.24668439848897e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.1475419064491

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0114615713408599^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0114615713408599^2+0.0290315092648905^2+${new_z}^2)
variable           norm          equal     sqrt(0.0114615713408599^2+0.0290315092648905^2+0.0392999255067998^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0114615713408599/${norm}
variable           unit_x        equal     0.0114615713408599/0.0501864552707108
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0290315092648905/${norm}
variable           unit_y        equal     0.0290315092648905/0.0501864552707108
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0392999255067998/${norm}
variable           unit_z        equal     0.0392999255067998/0.0501864552707108
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17709788522563+${delta}*${unit_x}
variable           x_new         equal     1.17709788522563+0.03*${unit_x}
variable           x_new         equal     1.17709788522563+0.03*0.228379774563376
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.05371446452723+${delta}*${unit_y}
variable           y_new         equal     4.05371446452723+0.03*${unit_y}
variable           y_new         equal     4.05371446452723+0.03*0.578472998507099
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3601682484395+${delta}*${unit_z}
variable           z_new         equal     31.3601682484395+0.03*${unit_z}
variable           z_new         equal     31.3601682484395+0.03*0.783078328501426

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18394927846253  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18394927846253  y  4.07106865448244  z   ${z_new}
set                atom          288751    x  1.18394927846253  y  4.07106865448244  z   31.3836605982945
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0114615713408599  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0114615713408599  0.0290315092648905  ${new_z}
fix                hold    carbon   planeforce   0.0114615713408599  0.0290315092648905  0.0392999255067998
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     507   -1152449.3            0   -1152449.3  0.033417891  0.035158721 -0.035718446 
     702   -1152449.3            0   -1152449.3 -4.4662415e-05 -9.26616e-06 1.9870574e-05 
Loop time of 2.28707 on 104 procs for 195 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32760575  -1152449.33108894  -1152449.33108894
  Force two-norm initial, final = 0.26704655 0.00016340732
  Force max component initial, final = 0.11249436 4.4945904e-05
  Final line search alpha, max atom move = 1.0000000 4.4945904e-05
  Iterations, force evaluations = 195 390

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59648    | 1.6422     | 2.1559     |  34.6 | 71.81
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040344   | 0.37226    | 1.1013     |  50.5 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2001e-05 | 0.0032237  | 0.0069756  |   2.7 |  0.14
Other   |            | 0.2694     |            |       | 11.78

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115494 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18425983133508-${x_0}
variable           new_x         equal     1.18425983133508-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.07350887463878-${y_0}
variable           new_y         equal     4.07350887463878-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3817673962839-${z_0}
variable           new_z         equal     31.3817673962839-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01862351745031*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01862351745031*0.01862351745031+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01862351745031*0.01862351745031+0.0488259193764407*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01862351745031*0.01862351745031+0.0488259193764407*0.0488259193764407+${new_z}*${new_z})
variable           module        equal     sqrt(0.01862351745031*0.01862351745031+0.0488259193764407*0.0488259193764407+0.0608990733512016*${new_z})
variable           module        equal     sqrt(0.01862351745031*0.01862351745031+0.0488259193764407*0.0488259193764407+0.0608990733512016*0.0608990733512016)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.01862351745031/${module}
variable           unitx         equal     0.01862351745031/0.0802465135704457
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0488259193764407/${module}
variable           unity         equal     0.0488259193764407/0.0802465135704457
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0608990733512016/${module}
variable           unitz         equal     0.0608990733512016/0.0802465135704457
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46624154595961e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46624154595961e-05*-4.46624154595961e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46624154595961e-05*-4.46624154595961e-05+-9.26615999357354e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46624154595961e-05*-4.46624154595961e-05+-9.26615999357354e-06*-9.26615999357354e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46624154595961e-05*-4.46624154595961e-05+-9.26615999357354e-06*-9.26615999357354e-06+1.98705738159525e-05*${fz})
variable           f_module      equal     sqrt(-4.46624154595961e-05*-4.46624154595961e-05+-9.26615999357354e-06*-9.26615999357354e-06+1.98705738159525e-05*1.98705738159525e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.232078835848252*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.232078835848252*0.232078835848252+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.232078835848252*0.232078835848252+0.608449105188577*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.232078835848252*0.232078835848252+0.608449105188577*0.608449105188577+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.232078835848252*0.232078835848252+0.608449105188577*0.608449105188577+0.758899927754997*${unitz})
variable           dir_module    equal     sqrt(0.232078835848252*0.232078835848252+0.608449105188577*0.608449105188577+0.758899927754997*0.758899927754997)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46624154595961e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46624154595961e-05*0.232078835848252+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46624154595961e-05*0.232078835848252+-9.26615999357354e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46624154595961e-05*0.232078835848252+-9.26615999357354e-06*0.608449105188577+${fz}*${unitz}
variable           dot      equal     -4.46624154595961e-05*0.232078835848252+-9.26615999357354e-06*0.608449105188577+1.98705738159525e-05*${unitz}
variable           dot      equal     -4.46624154595961e-05*0.232078835848252+-9.26615999357354e-06*0.608449105188577+1.98705738159525e-05*0.758899927754997
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -9.23411109281359e-07/${f_module}*${dir_module}
variable           cos      equal     -9.23411109281359e-07/4.97537212627085e-05*${dir_module}
variable           cos      equal     -9.23411109281359e-07/4.97537212627085e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0185596390751474)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58935703154475/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.063450046955-90.0)
print              "The dot product: ${dot}"
The dot product: -9.23411109281359e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.063450046955

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01862351745031^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01862351745031^2+0.0488259193764407^2+${new_z}^2)
variable           norm          equal     sqrt(0.01862351745031^2+0.0488259193764407^2+0.0608990733512016^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01862351745031/${norm}
variable           unit_x        equal     0.01862351745031/0.0802465135704457
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0488259193764407/${norm}
variable           unit_y        equal     0.0488259193764407/0.0802465135704457
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0608990733512016/${norm}
variable           unit_z        equal     0.0608990733512016/0.0802465135704457
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18425983133508+${delta}*${unit_x}
variable           x_new         equal     1.18425983133508+0.03*${unit_x}
variable           x_new         equal     1.18425983133508+0.03*0.232078835848252
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.07350887463878+${delta}*${unit_y}
variable           y_new         equal     4.07350887463878+0.03*${unit_y}
variable           y_new         equal     4.07350887463878+0.03*0.608449105188577
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3817673962839+${delta}*${unit_z}
variable           z_new         equal     31.3817673962839+0.03*${unit_z}
variable           z_new         equal     31.3817673962839+0.03*0.758899927754997

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19122219641053  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19122219641053  y  4.09176234779444  z   ${z_new}
set                atom          288751    x  1.19122219641053  y  4.09176234779444  z   31.4045343941166
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01862351745031  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01862351745031  0.0488259193764407  ${new_z}
fix                hold    carbon   planeforce   0.01862351745031  0.0488259193764407  0.0608990733512016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     702   -1152449.3            0   -1152449.3  0.034414079  0.041251039 -0.043597233 
     902   -1152449.3            0   -1152449.3 3.0055259e-05 7.4122113e-06 -1.5133936e-05 
Loop time of 2.33597 on 104 procs for 200 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31553104  -1152449.31887733  -1152449.31887733
  Force two-norm initial, final = 0.26539886 0.00012124543
  Force max component initial, final = 0.11083575 3.0055259e-05
  Final line search alpha, max atom move = 1.0000000 3.0055259e-05
  Iterations, force evaluations = 200 400

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60934    | 1.6815     | 2.1946     |  35.0 | 71.98
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035081   | 0.38058    | 1.1409     |  51.8 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2709e-05 | 0.0032929  | 0.0070812  |   2.7 |  0.14
Other   |            | 0.2706     |            |       | 11.59

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115502 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19253153549653-${x_0}
variable           new_x         equal     1.19253153549653-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.09578792632904-${y_0}
variable           new_y         equal     4.09578792632904-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4009064723745-${z_0}
variable           new_z         equal     31.4009064723745-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0268952216117599*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0268952216117599*0.0268952216117599+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0268952216117599*0.0268952216117599+0.0711049710667*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0268952216117599*0.0268952216117599+0.0711049710667*0.0711049710667+${new_z}*${new_z})
variable           module        equal     sqrt(0.0268952216117599*0.0268952216117599+0.0711049710667*0.0711049710667+0.0800381494418012*${new_z})
variable           module        equal     sqrt(0.0268952216117599*0.0268952216117599+0.0711049710667*0.0711049710667+0.0800381494418012*0.0800381494418012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0268952216117599/${module}
variable           unitx         equal     0.0268952216117599/0.110387387060343
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0711049710667/${module}
variable           unity         equal     0.0711049710667/0.110387387060343
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0800381494418012/${module}
variable           unitz         equal     0.0800381494418012/0.110387387060343
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.00552587161229e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.00552587161229e-05*3.00552587161229e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.00552587161229e-05*3.00552587161229e-05+7.41221125185731e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.00552587161229e-05*3.00552587161229e-05+7.41221125185731e-06*7.41221125185731e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.00552587161229e-05*3.00552587161229e-05+7.41221125185731e-06*7.41221125185731e-06+-1.51339357635269e-05*${fz})
variable           f_module      equal     sqrt(3.00552587161229e-05*3.00552587161229e-05+7.41221125185731e-06*7.41221125185731e-06+-1.51339357635269e-05*-1.51339357635269e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.243643973537101*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.243643973537101*0.243643973537101+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.243643973537101*0.243643973537101+0.644140358425466*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.243643973537101*0.243643973537101+0.644140358425466*0.644140358425466+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.243643973537101*0.243643973537101+0.644140358425466*0.644140358425466+0.725066074786683*${unitz})
variable           dir_module    equal     sqrt(0.243643973537101*0.243643973537101+0.644140358425466*0.644140358425466+0.725066074786683*0.725066074786683)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.00552587161229e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.00552587161229e-05*0.243643973537101+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.00552587161229e-05*0.243643973537101+7.41221125185731e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.00552587161229e-05*0.243643973537101+7.41221125185731e-06*0.644140358425466+${fz}*${unitz}
variable           dot      equal     3.00552587161229e-05*0.243643973537101+7.41221125185731e-06*0.644140358425466+-1.51339357635269e-05*${unitz}
variable           dot      equal     3.00552587161229e-05*0.243643973537101+7.41221125185731e-06*0.644140358425466+-1.51339357635269e-05*0.725066074786683
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.12418367164416e-06/${f_module}*${dir_module}
variable           cos      equal     1.12418367164416e-06/3.44571540297483e-05*${dir_module}
variable           cos      equal     1.12418367164416e-06/3.44571540297483e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0326255520311865)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53816498407177/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.1303617821199-90.0)
print              "The dot product: ${dot}"
The dot product: 1.12418367164416e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.1303617821199

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0268952216117599^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0268952216117599^2+0.0711049710667^2+${new_z}^2)
variable           norm          equal     sqrt(0.0268952216117599^2+0.0711049710667^2+0.0800381494418012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0268952216117599/${norm}
variable           unit_x        equal     0.0268952216117599/0.110387387060343
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0711049710667/${norm}
variable           unit_y        equal     0.0711049710667/0.110387387060343
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0800381494418012/${norm}
variable           unit_z        equal     0.0800381494418012/0.110387387060343
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19253153549653+${delta}*${unit_x}
variable           x_new         equal     1.19253153549653+0.03*${unit_x}
variable           x_new         equal     1.19253153549653+0.03*0.243643973537101
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.09578792632904+${delta}*${unit_y}
variable           y_new         equal     4.09578792632904+0.03*${unit_y}
variable           y_new         equal     4.09578792632904+0.03*0.644140358425466
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4009064723745+${delta}*${unit_z}
variable           z_new         equal     31.4009064723745+0.03*${unit_z}
variable           z_new         equal     31.4009064723745+0.03*0.725066074786683

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19984085470264  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19984085470264  y  4.1151121370818  z   ${z_new}
set                atom          288751    x  1.19984085470264  y  4.1151121370818  z   31.4226584546181
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0268952216117599  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0268952216117599  0.0711049710667  ${new_z}
fix                hold    carbon   planeforce   0.0268952216117599  0.0711049710667  0.0800381494418012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     902   -1152449.3            0   -1152449.3  0.037879135  0.046699768 -0.054216064 
    1000   -1152449.3            0   -1152449.3 0.00015101724 3.8246956e-05 -8.4724484e-05 
    1084   -1152449.3            0   -1152449.3 3.1144842e-05 8.1499829e-06 -1.7705953e-05 
Loop time of 2.1114 on 104 procs for 182 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30065529  -1152449.30397471  -1152449.30397471
  Force two-norm initial, final = 0.26581848 0.00012953043
  Force max component initial, final = 0.11365126 3.1144842e-05
  Final line search alpha, max atom move = 1.0000000 3.1144842e-05
  Iterations, force evaluations = 182 364

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55315    | 1.5298     | 1.992      |  33.3 | 72.45
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033145   | 0.34345    | 1.0299     |  49.3 | 16.27
Output  | 0.00010347 | 0.00011181 | 0.00024177 |   0.0 |  0.01
Modify  | 2.0863e-05 | 0.0030025  | 0.0064549  |   2.6 |  0.14
Other   |            | 0.2351     |            |       | 11.13

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20326679649844-${x_0}
variable           new_x         equal     1.20326679649844-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.12105640287389-${y_0}
variable           new_y         equal     4.12105640287389-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4162264179634-${z_0}
variable           new_z         equal     31.4162264179634-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03763048261367*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03763048261367*0.03763048261367+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03763048261367*0.03763048261367+0.0963734476115503*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.03763048261367*0.03763048261367+0.0963734476115503*0.0963734476115503+${new_z}*${new_z})
variable           module        equal     sqrt(0.03763048261367*0.03763048261367+0.0963734476115503*0.0963734476115503+0.0953580950307007*${new_z})
variable           module        equal     sqrt(0.03763048261367*0.03763048261367+0.0963734476115503*0.0963734476115503+0.0953580950307007*0.0953580950307007)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.03763048261367/${module}
variable           unitx         equal     0.03763048261367/0.140702028820334
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0963734476115503/${module}
variable           unity         equal     0.0963734476115503/0.140702028820334
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0953580950307007/${module}
variable           unitz         equal     0.0953580950307007/0.140702028820334
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.11448418303683e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.11448418303683e-05*3.11448418303683e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.11448418303683e-05*3.11448418303683e-05+8.14998290034627e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.11448418303683e-05*3.11448418303683e-05+8.14998290034627e-06*8.14998290034627e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.11448418303683e-05*3.11448418303683e-05+8.14998290034627e-06*8.14998290034627e-06+-1.77059531148102e-05*${fz})
variable           f_module      equal     sqrt(3.11448418303683e-05*3.11448418303683e-05+8.14998290034627e-06*8.14998290034627e-06+-1.77059531148102e-05*-1.77059531148102e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.267448045555344*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.267448045555344*0.267448045555344+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.267448045555344*0.267448045555344+0.684947107156585*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.267448045555344*0.267448045555344+0.684947107156585*0.684947107156585+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.267448045555344*0.267448045555344+0.684947107156585*0.684947107156585+0.677730774958944*${unitz})
variable           dir_module    equal     sqrt(0.267448045555344*0.267448045555344+0.684947107156585*0.684947107156585+0.677730774958944*0.677730774958944)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.11448418303683e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.11448418303683e-05*0.267448045555344+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.11448418303683e-05*0.267448045555344+8.14998290034627e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.11448418303683e-05*0.267448045555344+8.14998290034627e-06*0.684947107156585+${fz}*${unitz}
variable           dot      equal     3.11448418303683e-05*0.267448045555344+8.14998290034627e-06*0.684947107156585+-1.77059531148102e-05*${unitz}
variable           dot      equal     3.11448418303683e-05*0.267448045555344+8.14998290034627e-06*0.684947107156585+-1.77059531148102e-05*0.677730774958944
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.91206496174309e-06/${f_module}*${dir_module}
variable           cos      equal     1.91206496174309e-06/3.67413142064686e-05*${dir_module}
variable           cos      equal     1.91206496174309e-06/3.67413142064686e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0520412784093187)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.51873152919129/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.0169068361105-90.0)
print              "The dot product: ${dot}"
The dot product: 1.91206496174309e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.0169068361105

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.03763048261367^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.03763048261367^2+0.0963734476115503^2+${new_z}^2)
variable           norm          equal     sqrt(0.03763048261367^2+0.0963734476115503^2+0.0953580950307007^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.03763048261367/${norm}
variable           unit_x        equal     0.03763048261367/0.140702028820334
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0963734476115503/${norm}
variable           unit_y        equal     0.0963734476115503/0.140702028820334
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0953580950307007/${norm}
variable           unit_z        equal     0.0953580950307007/0.140702028820334
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20326679649844+${delta}*${unit_x}
variable           x_new         equal     1.20326679649844+0.03*${unit_x}
variable           x_new         equal     1.20326679649844+0.03*0.267448045555344
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.12105640287389+${delta}*${unit_y}
variable           y_new         equal     4.12105640287389+0.03*${unit_y}
variable           y_new         equal     4.12105640287389+0.03*0.684947107156585
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4162264179634+${delta}*${unit_z}
variable           z_new         equal     31.4162264179634+0.03*${unit_z}
variable           z_new         equal     31.4162264179634+0.03*0.677730774958944

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2112902378651  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2112902378651  y  4.14160481608859  z   ${z_new}
set                atom          288751    x  1.2112902378651  y  4.14160481608859  z   31.4365583412122
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.03763048261367  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.03763048261367  0.0963734476115503  ${new_z}
fix                hold    carbon   planeforce   0.03763048261367  0.0963734476115503  0.0953580950307007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1084   -1152449.3            0   -1152449.3  0.037361574  0.045225139 -0.060450417 
    1256   -1152449.3            0   -1152449.3 7.2228797e-05 1.1630757e-05 -4.0257733e-05 
Loop time of 2.0433 on 104 procs for 172 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.28358892  -1152449.28685768  -1152449.28685768
  Force two-norm initial, final = 0.26168551 0.00021119768
  Force max component initial, final = 0.12391647 7.2228797e-05
  Final line search alpha, max atom move = 1.0000000 7.2228797e-05
  Iterations, force evaluations = 172 344

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.52248    | 1.4556     | 1.9094     |  32.6 | 71.24
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031667   | 0.33292    | 0.98291    |  47.4 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0079e-05 | 0.0028411  | 0.0061084  |   2.5 |  0.14
Other   |            | 0.252      |            |       | 12.33

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21569786803613-${x_0}
variable           new_x         equal     1.21569786803613-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.14793998042168-${y_0}
variable           new_y         equal     4.14793998042168-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4284163698544-${z_0}
variable           new_z         equal     31.4284163698544-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0500615541513598*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0500615541513598*0.0500615541513598+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0500615541513598*0.0500615541513598+0.12325702515934*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0500615541513598*0.0500615541513598+0.12325702515934*0.12325702515934+${new_z}*${new_z})
variable           module        equal     sqrt(0.0500615541513598*0.0500615541513598+0.12325702515934*0.12325702515934+0.1075480469217*${new_z})
variable           module        equal     sqrt(0.0500615541513598*0.0500615541513598+0.12325702515934*0.12325702515934+0.1075480469217*0.1075480469217)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0500615541513598/${module}
variable           unitx         equal     0.0500615541513598/0.171070265832061
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.12325702515934/${module}
variable           unity         equal     0.12325702515934/0.171070265832061
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1075480469217/${module}
variable           unitz         equal     0.1075480469217/0.171070265832061
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.22287972594541e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.22287972594541e-05*7.22287972594541e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.22287972594541e-05*7.22287972594541e-05+1.16307573698115e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(7.22287972594541e-05*7.22287972594541e-05+1.16307573698115e-05*1.16307573698115e-05+${fz}*${fz})
variable           f_module      equal     sqrt(7.22287972594541e-05*7.22287972594541e-05+1.16307573698115e-05*1.16307573698115e-05+-4.02577325427608e-05*${fz})
variable           f_module      equal     sqrt(7.22287972594541e-05*7.22287972594541e-05+1.16307573698115e-05*1.16307573698115e-05+-4.02577325427608e-05*-4.02577325427608e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292637378610875*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292637378610875*0.292637378610875+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292637378610875*0.292637378610875+0.720505252972138*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292637378610875*0.292637378610875+0.720505252972138*0.720505252972138+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.292637378610875*0.292637378610875+0.720505252972138*0.720505252972138+0.628677616174862*${unitz})
variable           dir_module    equal     sqrt(0.292637378610875*0.292637378610875+0.720505252972138*0.720505252972138+0.628677616174862*0.628677616174862)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.22287972594541e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.22287972594541e-05*0.292637378610875+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     7.22287972594541e-05*0.292637378610875+1.16307573698115e-05*${unity}+${fz}*${unitz}
variable           dot      equal     7.22287972594541e-05*0.292637378610875+1.16307573698115e-05*0.720505252972138+${fz}*${unitz}
variable           dot      equal     7.22287972594541e-05*0.292637378610875+1.16307573698115e-05*0.720505252972138+-4.02577325427608e-05*${unitz}
variable           dot      equal     7.22287972594541e-05*0.292637378610875+1.16307573698115e-05*0.720505252972138+-4.02577325427608e-05*0.628677616174862
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.20773234362857e-06/${f_module}*${dir_module}
variable           cos      equal     4.20773234362857e-06/8.35042436049044e-05*${dir_module}
variable           cos      equal     4.20773234362857e-06/8.35042436049044e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0503894432423963)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52038553521214/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.1116744003944-90.0)
print              "The dot product: ${dot}"
The dot product: 4.20773234362857e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.1116744003944

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0500615541513598^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0500615541513598^2+0.12325702515934^2+${new_z}^2)
variable           norm          equal     sqrt(0.0500615541513598^2+0.12325702515934^2+0.1075480469217^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0500615541513598/${norm}
variable           unit_x        equal     0.0500615541513598/0.171070265832061
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.12325702515934/${norm}
variable           unit_y        equal     0.12325702515934/0.171070265832061
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1075480469217/${norm}
variable           unit_z        equal     0.1075480469217/0.171070265832061
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21569786803613+${delta}*${unit_x}
variable           x_new         equal     1.21569786803613+0.03*${unit_x}
variable           x_new         equal     1.21569786803613+0.03*0.292637378610875
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.14793998042168+${delta}*${unit_y}
variable           y_new         equal     4.14793998042168+0.03*${unit_y}
variable           y_new         equal     4.14793998042168+0.03*0.720505252972138
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4284163698544+${delta}*${unit_z}
variable           z_new         equal     31.4284163698544+0.03*${unit_z}
variable           z_new         equal     31.4284163698544+0.03*0.628677616174862

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22447698939446  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22447698939446  y  4.16955513801084  z   ${z_new}
set                atom          288751    x  1.22447698939446  y  4.16955513801084  z   31.4472766983396
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0500615541513598  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0500615541513598  0.12325702515934  ${new_z}
fix                hold    carbon   planeforce   0.0500615541513598  0.12325702515934  0.1075480469217
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1256   -1152449.3            0   -1152449.3  0.032545502  0.039173762 -0.060044975 
    1425   -1152449.3            0   -1152449.3 -5.6019932e-05 1.1227901e-05 1.3208302e-05 
Loop time of 1.97566 on 104 procs for 169 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.26401978  -1152449.26718546  -1152449.26718546
  Force two-norm initial, final = 0.25560529 0.00024212825
  Force max component initial, final = 0.13388982 5.6019932e-05
  Final line search alpha, max atom move = 1.0000000 5.6019932e-05
  Iterations, force evaluations = 169 338

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51423    | 1.4206     | 1.8601     |  32.2 | 71.91
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030642   | 0.32862    | 0.96807    |  46.4 | 16.63
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9628e-05 | 0.0027948  | 0.0060348  |   2.5 |  0.14
Other   |            | 0.2236     |            |       | 11.32

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22883545666106-${x_0}
variable           new_x         equal     1.22883545666106-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.17532780914339-${y_0}
variable           new_y         equal     4.17532780914339-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.438632060499-${z_0}
variable           new_z         equal     31.438632060499-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0631991427762899*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0631991427762899*0.0631991427762899+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0631991427762899*0.0631991427762899+0.15064485388105*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0631991427762899*0.0631991427762899+0.15064485388105*0.15064485388105+${new_z}*${new_z})
variable           module        equal     sqrt(0.0631991427762899*0.0631991427762899+0.15064485388105*0.15064485388105+0.1177637375663*${new_z})
variable           module        equal     sqrt(0.0631991427762899*0.0631991427762899+0.15064485388105*0.15064485388105+0.1177637375663*0.1177637375663)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0631991427762899/${module}
variable           unitx         equal     0.0631991427762899/0.201385951680064
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.15064485388105/${module}
variable           unity         equal     0.15064485388105/0.201385951680064
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1177637375663/${module}
variable           unitz         equal     0.1177637375663/0.201385951680064
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.60199316488843e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.60199316488843e-05*-5.60199316488843e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.60199316488843e-05*-5.60199316488843e-05+1.12279013120191e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.60199316488843e-05*-5.60199316488843e-05+1.12279013120191e-05*1.12279013120191e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-5.60199316488843e-05*-5.60199316488843e-05+1.12279013120191e-05*1.12279013120191e-05+1.32083024094375e-05*${fz})
variable           f_module      equal     sqrt(-5.60199316488843e-05*-5.60199316488843e-05+1.12279013120191e-05*1.12279013120191e-05+1.32083024094375e-05*1.32083024094375e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313821010100509*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313821010100509*0.313821010100509+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313821010100509*0.313821010100509+0.748040529263804*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313821010100509*0.313821010100509+0.748040529263804*0.748040529263804+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313821010100509*0.313821010100509+0.748040529263804*0.748040529263804+0.584766397972922*${unitz})
variable           dir_module    equal     sqrt(0.313821010100509*0.313821010100509+0.748040529263804*0.748040529263804+0.584766397972922*0.584766397972922)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.60199316488843e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.60199316488843e-05*0.313821010100509+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.60199316488843e-05*0.313821010100509+1.12279013120191e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -5.60199316488843e-05*0.313821010100509+1.12279013120191e-05*0.748040529263804+${fz}*${unitz}
variable           dot      equal     -5.60199316488843e-05*0.313821010100509+1.12279013120191e-05*0.748040529263804+1.32083024094375e-05*${unitz}
variable           dot      equal     -5.60199316488843e-05*0.313821010100509+1.12279013120191e-05*0.748040529263804+1.32083024094375e-05*0.584766397972922
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.45753487254598e-06/${f_module}*${dir_module}
variable           cos      equal     -1.45753487254598e-06/5.86409222502278e-05*${dir_module}
variable           cos      equal     -1.45753487254598e-06/5.86409222502278e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0248552515311152)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5956541382319/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.4242476832723-90.0)
print              "The dot product: ${dot}"
The dot product: -1.45753487254598e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.4242476832723

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0631991427762899^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0631991427762899^2+0.15064485388105^2+${new_z}^2)
variable           norm          equal     sqrt(0.0631991427762899^2+0.15064485388105^2+0.1177637375663^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0631991427762899/${norm}
variable           unit_x        equal     0.0631991427762899/0.201385951680064
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.15064485388105/${norm}
variable           unit_y        equal     0.15064485388105/0.201385951680064
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1177637375663/${norm}
variable           unit_z        equal     0.1177637375663/0.201385951680064
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22883545666106+${delta}*${unit_x}
variable           x_new         equal     1.22883545666106+0.03*${unit_x}
variable           x_new         equal     1.22883545666106+0.03*0.313821010100509
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.17532780914339+${delta}*${unit_y}
variable           y_new         equal     4.17532780914339+0.03*${unit_y}
variable           y_new         equal     4.17532780914339+0.03*0.748040529263804
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.438632060499+${delta}*${unit_z}
variable           z_new         equal     31.438632060499+0.03*${unit_z}
variable           z_new         equal     31.438632060499+0.03*0.584766397972922

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23825008696408  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23825008696408  y  4.1977690250213  z   ${z_new}
set                atom          288751    x  1.23825008696408  y  4.1977690250213  z   31.4561750524382
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0631991427762899  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0631991427762899  0.15064485388105  ${new_z}
fix                hold    carbon   planeforce   0.0631991427762899  0.15064485388105  0.1177637375663
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1425   -1152449.2            0   -1152449.2  0.025848464  0.032267918 -0.055149375 
    1650   -1152449.2            0   -1152449.2 -9.3532755e-06 -3.1167089e-06 9.0064664e-06 
Loop time of 2.60592 on 104 procs for 225 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.24159071  -1152449.24462255  -1152449.24462255
  Force two-norm initial, final = 0.24986836 3.6451986e-05
  Force max component initial, final = 0.14270311 1.0660081e-05
  Final line search alpha, max atom move = 1.0000000 1.0660081e-05
  Iterations, force evaluations = 225 450

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68335    | 1.8889     | 2.4563     |  37.1 | 72.48
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042508   | 0.42643    | 1.2892     |  55.3 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5635e-05 | 0.00371    | 0.0079515  |   2.9 |  0.14
Other   |            | 0.2869     |            |       | 11.01

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238182
Ave neighs/atom = 28.530402
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.2419740527199-${x_0}
variable           new_x         equal     1.2419740527199-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.20261785305489-${y_0}
variable           new_y         equal     4.20261785305489-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4479738654342-${z_0}
variable           new_z         equal     31.4479738654342-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0763377388351298*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0763377388351298*0.0763377388351298+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0763377388351298*0.0763377388351298+0.17793489779255*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0763377388351298*0.0763377388351298+0.17793489779255*0.17793489779255+${new_z}*${new_z})
variable           module        equal     sqrt(0.0763377388351298*0.0763377388351298+0.17793489779255*0.17793489779255+0.1271055425015*${new_z})
variable           module        equal     sqrt(0.0763377388351298*0.0763377388351298+0.17793489779255*0.17793489779255+0.1271055425015*0.1271055425015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0763377388351298/${module}
variable           unitx         equal     0.0763377388351298/0.231611953831201
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.17793489779255/${module}
variable           unity         equal     0.17793489779255/0.231611953831201
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1271055425015/${module}
variable           unitz         equal     0.1271055425015/0.231611953831201
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.353275510561e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.353275510561e-06*-9.353275510561e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.353275510561e-06*-9.353275510561e-06+-3.11670888338626e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.353275510561e-06*-9.353275510561e-06+-3.11670888338626e-06*-3.11670888338626e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-9.353275510561e-06*-9.353275510561e-06+-3.11670888338626e-06*-3.11670888338626e-06+9.00646642783163e-06*${fz})
variable           f_module      equal     sqrt(-9.353275510561e-06*-9.353275510561e-06+-3.11670888338626e-06*-3.11670888338626e-06+9.00646642783163e-06*9.00646642783163e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.32959325964136*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.32959325964136*0.32959325964136+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.32959325964136*0.32959325964136+0.768245744009522*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.32959325964136*0.32959325964136+0.768245744009522*0.768245744009522+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.32959325964136*0.32959325964136+0.768245744009522*0.768245744009522+0.548786625210781*${unitz})
variable           dir_module    equal     sqrt(0.32959325964136*0.32959325964136+0.768245744009522*0.768245744009522+0.548786625210781*0.548786625210781)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.353275510561e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.353275510561e-06*0.32959325964136+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.353275510561e-06*0.32959325964136+-3.11670888338626e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -9.353275510561e-06*0.32959325964136+-3.11670888338626e-06*0.768245744009522+${fz}*${unitz}
variable           dot      equal     -9.353275510561e-06*0.32959325964136+-3.11670888338626e-06*0.768245744009522+9.00646642783163e-06*${unitz}
variable           dot      equal     -9.353275510561e-06*0.32959325964136+-3.11670888338626e-06*0.768245744009522+9.00646642783163e-06*0.548786625210781
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.34546582823751e-07/${f_module}*${dir_module}
variable           cos      equal     -5.34546582823751e-07/1.335342931819e-05*${dir_module}
variable           cos      equal     -5.34546582823751e-07/1.335342931819e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0400306595471766)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61083768527202/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.2942008467096-90.0)
print              "The dot product: ${dot}"
The dot product: -5.34546582823751e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.2942008467096

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0763377388351298^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0763377388351298^2+0.17793489779255^2+${new_z}^2)
variable           norm          equal     sqrt(0.0763377388351298^2+0.17793489779255^2+0.1271055425015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0763377388351298/${norm}
variable           unit_x        equal     0.0763377388351298/0.231611953831201
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.17793489779255/${norm}
variable           unit_y        equal     0.17793489779255/0.231611953831201
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1271055425015/${norm}
variable           unit_z        equal     0.1271055425015/0.231611953831201
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.2419740527199+${delta}*${unit_x}
variable           x_new         equal     1.2419740527199+0.03*${unit_x}
variable           x_new         equal     1.2419740527199+0.03*0.32959325964136
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.20261785305489+${delta}*${unit_y}
variable           y_new         equal     4.20261785305489+0.03*${unit_y}
variable           y_new         equal     4.20261785305489+0.03*0.768245744009522
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4479738654342+${delta}*${unit_z}
variable           z_new         equal     31.4479738654342+0.03*${unit_z}
variable           z_new         equal     31.4479738654342+0.03*0.548786625210781

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25186185050914  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25186185050914  y  4.22566522537518  z   ${z_new}
set                atom          288751    x  1.25186185050914  y  4.22566522537518  z   31.4644374641905
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0763377388351298  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0763377388351298  0.17793489779255  ${new_z}
fix                hold    carbon   planeforce   0.0763377388351298  0.17793489779255  0.1271055425015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1650   -1152449.2            0   -1152449.2  0.019374649  0.026096966 -0.048169243 
    1823   -1152449.2            0   -1152449.2 -5.7568632e-05 -1.7558486e-05 5.9154986e-05 
Loop time of 2.01571 on 104 procs for 173 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.21598492  -1152449.21889822  -1152449.21889822
  Force two-norm initial, final = 0.2454746 0.00023320154
  Force max component initial, final = 0.15018622 5.9154986e-05
  Final line search alpha, max atom move = 1.0000000 5.9154986e-05
  Iterations, force evaluations = 173 346

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5242     | 1.4534     | 1.9031     |  32.6 | 72.10
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03432    | 0.3313     | 0.9797     |  47.5 | 16.44
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9389e-05 | 0.0028525  | 0.0061294  |   2.5 |  0.14
Other   |            | 0.2282     |            |       | 11.32

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25478556303712-${x_0}
variable           new_x         equal     1.25478556303712-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.22968482341865-${y_0}
variable           new_y         equal     4.22968482341865-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4570544944793-${z_0}
variable           new_z         equal     31.4570544944793-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08914924915235*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08914924915235*0.08914924915235+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08914924915235*0.08914924915235+0.205001868156311*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08914924915235*0.08914924915235+0.205001868156311*0.205001868156311+${new_z}*${new_z})
variable           module        equal     sqrt(0.08914924915235*0.08914924915235+0.205001868156311*0.205001868156311+0.136186171546601*${new_z})
variable           module        equal     sqrt(0.08914924915235*0.08914924915235+0.205001868156311*0.205001868156311+0.136186171546601*0.136186171546601)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.08914924915235/${module}
variable           unitx         equal     0.08914924915235/0.261763305091691
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.205001868156311/${module}
variable           unity         equal     0.205001868156311/0.261763305091691
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.136186171546601/${module}
variable           unitz         equal     0.136186171546601/0.261763305091691
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.75686318250802e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.75686318250802e-05*-5.75686318250802e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.75686318250802e-05*-5.75686318250802e-05+-1.75584858630543e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.75686318250802e-05*-5.75686318250802e-05+-1.75584858630543e-05*-1.75584858630543e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-5.75686318250802e-05*-5.75686318250802e-05+-1.75584858630543e-05*-1.75584858630543e-05+5.91549858551986e-05*${fz})
variable           f_module      equal     sqrt(-5.75686318250802e-05*-5.75686318250802e-05+-1.75584858630543e-05*-1.75584858630543e-05+5.91549858551986e-05*5.91549858551986e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340571987815949*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340571987815949*0.340571987815949+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340571987815949*0.340571987815949+0.783157395130316*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340571987815949*0.340571987815949+0.783157395130316*0.783157395130316+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340571987815949*0.340571987815949+0.783157395130316*0.783157395130316+0.520264563052096*${unitz})
variable           dir_module    equal     sqrt(0.340571987815949*0.340571987815949+0.783157395130316*0.783157395130316+0.520264563052096*0.520264563052096)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.75686318250802e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.75686318250802e-05*0.340571987815949+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.75686318250802e-05*0.340571987815949+-1.75584858630543e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -5.75686318250802e-05*0.340571987815949+-1.75584858630543e-05*0.783157395130316+${fz}*${unitz}
variable           dot      equal     -5.75686318250802e-05*0.340571987815949+-1.75584858630543e-05*0.783157395130316+5.91549858551986e-05*${unitz}
variable           dot      equal     -5.75686318250802e-05*0.340571987815949+-1.75584858630543e-05*0.783157395130316+5.91549858551986e-05*0.520264563052096
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.58107855914633e-06/${f_module}*${dir_module}
variable           cos      equal     -2.58107855914633e-06/8.43905216688667e-05*${dir_module}
variable           cos      equal     -2.58107855914633e-06/8.43905216688667e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0305849342805821)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60138603146984/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.7526609744259-90.0)
print              "The dot product: ${dot}"
The dot product: -2.58107855914633e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.7526609744259

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08914924915235^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08914924915235^2+0.205001868156311^2+${new_z}^2)
variable           norm          equal     sqrt(0.08914924915235^2+0.205001868156311^2+0.136186171546601^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.08914924915235/${norm}
variable           unit_x        equal     0.08914924915235/0.261763305091691
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.205001868156311/${norm}
variable           unit_y        equal     0.205001868156311/0.261763305091691
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.136186171546601/${norm}
variable           unit_z        equal     0.136186171546601/0.261763305091691
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25478556303712+${delta}*${unit_x}
variable           x_new         equal     1.25478556303712+0.03*${unit_x}
variable           x_new         equal     1.25478556303712+0.03*0.340571987815949
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.22968482341865+${delta}*${unit_y}
variable           y_new         equal     4.22968482341865+0.03*${unit_y}
variable           y_new         equal     4.22968482341865+0.03*0.783157395130316
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4570544944793+${delta}*${unit_z}
variable           z_new         equal     31.4570544944793+0.03*${unit_z}
variable           z_new         equal     31.4570544944793+0.03*0.520264563052096

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2650027226716  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2650027226716  y  4.25317954527256  z   ${z_new}
set                atom          288751    x  1.2650027226716  y  4.25317954527256  z   31.4726624313709
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08914924915235  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08914924915235  0.205001868156311  ${new_z}
fix                hold    carbon   planeforce   0.08914924915235  0.205001868156311  0.136186171546601
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1823   -1152449.2            0   -1152449.2   0.01361081  0.021395624 -0.041116777 
    2000   -1152449.2            0   -1152449.2 -3.2753074e-05 -4.0203763e-06 2.7492488e-05 
    2024   -1152449.2            0   -1152449.2 -2.7603559e-05 2.5622498e-06 1.4212681e-05 
Loop time of 2.35235 on 104 procs for 201 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.1869854  -1152449.18981475  -1152449.18981475
  Force two-norm initial, final = 0.24272766 9.6280041e-05
  Force max component initial, final = 0.1566443 2.7603559e-05
  Final line search alpha, max atom move = 1.0000000 2.7603559e-05
  Iterations, force evaluations = 201 402

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60731    | 1.6846     | 2.1922     |  35.1 | 71.61
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03819    | 0.38478    | 1.1386     |  51.3 | 16.36
Output  | 0.00010739 | 0.00011537 | 0.0002634  |   0.0 |  0.00
Modify  | 2.282e-05  | 0.0033094  | 0.0070808  |   2.7 |  0.14
Other   |            | 0.2795     |            |       | 11.88

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115502 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.26709693635297-${x_0}
variable           new_x         equal     1.26709693635297-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.25657801786928-${y_0}
variable           new_y         equal     4.25657801786928-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4661757903382-${z_0}
variable           new_z         equal     31.4661757903382-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1014606224682*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1014606224682*0.1014606224682+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1014606224682*0.1014606224682+0.23189506260694*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1014606224682*0.1014606224682+0.23189506260694*0.23189506260694+${new_z}*${new_z})
variable           module        equal     sqrt(0.1014606224682*0.1014606224682+0.23189506260694*0.23189506260694+0.145307467405498*${new_z})
variable           module        equal     sqrt(0.1014606224682*0.1014606224682+0.23189506260694*0.23189506260694+0.145307467405498*0.145307467405498)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.1014606224682/${module}
variable           unitx         equal     0.1014606224682/0.291862704121152
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.23189506260694/${module}
variable           unity         equal     0.23189506260694/0.291862704121152
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.145307467405498/${module}
variable           unitz         equal     0.145307467405498/0.291862704121152
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.76035589573748e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.76035589573748e-05*-2.76035589573748e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.76035589573748e-05*-2.76035589573748e-05+2.5622497843309e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.76035589573748e-05*-2.76035589573748e-05+2.5622497843309e-06*2.5622497843309e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.76035589573748e-05*-2.76035589573748e-05+2.5622497843309e-06*2.5622497843309e-06+1.42126806308846e-05*${fz})
variable           f_module      equal     sqrt(-2.76035589573748e-05*-2.76035589573748e-05+2.5622497843309e-06*2.5622497843309e-06+1.42126806308846e-05*1.42126806308846e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.347631338418916*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.347631338418916*0.347631338418916+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.347631338418916*0.347631338418916+0.794534756693957*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.347631338418916*0.347631338418916+0.794534756693957*0.794534756693957+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.347631338418916*0.347631338418916+0.794534756693957*0.794534756693957+0.497862403636132*${unitz})
variable           dir_module    equal     sqrt(0.347631338418916*0.347631338418916+0.794534756693957*0.794534756693957+0.497862403636132*0.497862403636132)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.76035589573748e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.76035589573748e-05*0.347631338418916+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.76035589573748e-05*0.347631338418916+2.5622497843309e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.76035589573748e-05*0.347631338418916+2.5622497843309e-06*0.794534756693957+${fz}*${unitz}
variable           dot      equal     -2.76035589573748e-05*0.347631338418916+2.5622497843309e-06*0.794534756693957+1.42126806308846e-05*${unitz}
variable           dot      equal     -2.76035589573748e-05*0.347631338418916+2.5622497843309e-06*0.794534756693957+1.42126806308846e-05*0.497862403636132
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.84106295490261e-07/${f_module}*${dir_module}
variable           cos      equal     -4.84106295490261e-07/3.11532001853115e-05*${dir_module}
variable           cos      equal     -4.84106295490261e-07/3.11532001853115e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0155395366322113)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58633648890237/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8903857017073-90.0)
print              "The dot product: ${dot}"
The dot product: -4.84106295490261e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8903857017073

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1014606224682^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1014606224682^2+0.23189506260694^2+${new_z}^2)
variable           norm          equal     sqrt(0.1014606224682^2+0.23189506260694^2+0.145307467405498^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.1014606224682/${norm}
variable           unit_x        equal     0.1014606224682/0.291862704121152
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.23189506260694/${norm}
variable           unit_y        equal     0.23189506260694/0.291862704121152
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.145307467405498/${norm}
variable           unit_z        equal     0.145307467405498/0.291862704121152
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.26709693635297+${delta}*${unit_x}
variable           x_new         equal     1.26709693635297+0.03*${unit_x}
variable           x_new         equal     1.26709693635297+0.03*0.347631338418916
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.25657801786928+${delta}*${unit_y}
variable           y_new         equal     4.25657801786928+0.03*${unit_y}
variable           y_new         equal     4.25657801786928+0.03*0.794534756693957
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4661757903382+${delta}*${unit_z}
variable           z_new         equal     31.4661757903382+0.03*${unit_z}
variable           z_new         equal     31.4661757903382+0.03*0.497862403636132

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27752587650554  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27752587650554  y  4.2804140605701  z   ${z_new}
set                atom          288751    x  1.27752587650554  y  4.2804140605701  z   31.4811116624473
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1014606224682  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1014606224682  0.23189506260694  ${new_z}
fix                hold    carbon   planeforce   0.1014606224682  0.23189506260694  0.145307467405498
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2024   -1152449.2            0   -1152449.2 0.0084740188  0.018144022 -0.034872869 
    2223   -1152449.2            0   -1152449.2 -2.0082348e-05 -6.6479824e-06 2.4631919e-05 
Loop time of 2.33509 on 104 procs for 199 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.15443408  -1152449.15721397  -1152449.15721397
  Force two-norm initial, final = 0.2415708 0.00010391313
  Force max component initial, final = 0.16233118 2.4631919e-05
  Final line search alpha, max atom move = 1.0000000 2.4631919e-05
  Iterations, force evaluations = 199 398

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60161    | 1.6719     | 2.1974     |  35.0 | 71.60
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037053   | 0.38108    | 1.1333     |  51.1 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2842e-05 | 0.003292   | 0.0070773  |   2.7 |  0.14
Other   |            | 0.2789     |            |       | 11.94

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.27878726256429-${x_0}
variable           new_x         equal     1.27878726256429-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.28345508471664-${y_0}
variable           new_y         equal     4.28345508471664-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.475377755481-${z_0}
variable           new_z         equal     31.475377755481-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11315094867952*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11315094867952*0.11315094867952+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11315094867952*0.11315094867952+0.2587721294543*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.11315094867952*0.11315094867952+0.2587721294543*0.2587721294543+${new_z}*${new_z})
variable           module        equal     sqrt(0.11315094867952*0.11315094867952+0.2587721294543*0.2587721294543+0.154509432548299*${new_z})
variable           module        equal     sqrt(0.11315094867952*0.11315094867952+0.2587721294543*0.2587721294543+0.154509432548299*0.154509432548299)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.11315094867952/${module}
variable           unitx         equal     0.11315094867952/0.321930608851948
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.2587721294543/${module}
variable           unity         equal     0.2587721294543/0.321930608851948
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.154509432548299/${module}
variable           unitz         equal     0.154509432548299/0.321930608851948
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.00823479146862e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.00823479146862e-05*-2.00823479146862e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.00823479146862e-05*-2.00823479146862e-05+-6.64798237557088e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.00823479146862e-05*-2.00823479146862e-05+-6.64798237557088e-06*-6.64798237557088e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.00823479146862e-05*-2.00823479146862e-05+-6.64798237557088e-06*-6.64798237557088e-06+2.46319192885642e-05*${fz})
variable           f_module      equal     sqrt(-2.00823479146862e-05*-2.00823479146862e-05+-6.64798237557088e-06*-6.64798237557088e-06+2.46319192885642e-05*2.46319192885642e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.351476205021427*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.351476205021427*0.351476205021427+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.351476205021427*0.351476205021427+0.803813375736838*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.351476205021427*0.351476205021427+0.803813375736838*0.803813375736838+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.351476205021427*0.351476205021427+0.803813375736838*0.803813375736838+0.47994638689158*${unitz})
variable           dir_module    equal     sqrt(0.351476205021427*0.351476205021427+0.803813375736838*0.803813375736838+0.47994638689158*0.47994638689158)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.00823479146862e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.00823479146862e-05*0.351476205021427+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.00823479146862e-05*0.351476205021427+-6.64798237557088e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.00823479146862e-05*0.351476205021427+-6.64798237557088e-06*0.803813375736838+${fz}*${unitz}
variable           dot      equal     -2.00823479146862e-05*0.351476205021427+-6.64798237557088e-06*0.803813375736838+2.46319192885642e-05*${unitz}
variable           dot      equal     -2.00823479146862e-05*0.351476205021427+-6.64798237557088e-06*0.803813375736838+2.46319192885642e-05*0.47994638689158
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.80203923369103e-07/${f_module}*${dir_module}
variable           cos      equal     -5.80203923369103e-07/3.2468874561197e-05*${dir_module}
variable           cos      equal     -5.80203923369103e-07/3.2468874561197e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0178695421757086)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58866682012592/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.0239038456843-90.0)
print              "The dot product: ${dot}"
The dot product: -5.80203923369103e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.0239038456843

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11315094867952^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.11315094867952^2+0.2587721294543^2+${new_z}^2)
variable           norm          equal     sqrt(0.11315094867952^2+0.2587721294543^2+0.154509432548299^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.11315094867952/${norm}
variable           unit_x        equal     0.11315094867952/0.321930608851948
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.2587721294543/${norm}
variable           unit_y        equal     0.2587721294543/0.321930608851948
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.154509432548299/${norm}
variable           unit_z        equal     0.154509432548299/0.321930608851948
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.27878726256429+${delta}*${unit_x}
variable           x_new         equal     1.27878726256429+0.03*${unit_x}
variable           x_new         equal     1.27878726256429+0.03*0.351476205021427
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.28345508471664+${delta}*${unit_y}
variable           y_new         equal     4.28345508471664+0.03*${unit_y}
variable           y_new         equal     4.28345508471664+0.03*0.803813375736838
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.475377755481+${delta}*${unit_z}
variable           z_new         equal     31.475377755481+0.03*${unit_z}
variable           z_new         equal     31.475377755481+0.03*0.47994638689158

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28933154871493  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.28933154871493  y  4.30756948598875  z   ${z_new}
set                atom          288751    x  1.28933154871493  y  4.30756948598875  z   31.4897761470877
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11315094867952  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.11315094867952  0.2587721294543  ${new_z}
fix                hold    carbon   planeforce   0.11315094867952  0.2587721294543  0.154509432548299
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2223   -1152449.1            0   -1152449.1 0.0034609213  0.016212126 -0.029686555 
    2401   -1152449.1            0   -1152449.1 4.9498064e-05 7.0547135e-06 -4.8063837e-05 
Loop time of 2.09374 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.11818281  -1152449.12095196  -1152449.12095196
  Force two-norm initial, final = 0.24202348 0.00020057022
  Force max component initial, final = 0.16765076 5.9630315e-05
  Final line search alpha, max atom move = 1.0000000 5.9630315e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53727    | 1.4948     | 1.9611     |  33.2 | 71.39
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034402   | 0.34236    | 1.0078     |  48.2 | 16.35
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0428e-05 | 0.002936   | 0.0063148  |   2.6 |  0.14
Other   |            | 0.2536     |            |       | 12.11

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.28970979156537-${x_0}
variable           new_x         equal     1.28970979156537-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.31048406131608-${y_0}
variable           new_y         equal     4.31048406131608-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4846178251128-${z_0}
variable           new_z         equal     31.4846178251128-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1240734776806*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1240734776806*0.1240734776806+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1240734776806*0.1240734776806+0.28580110605374*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.1240734776806*0.1240734776806+0.28580110605374*0.28580110605374+${new_z}*${new_z})
variable           module        equal     sqrt(0.1240734776806*0.1240734776806+0.28580110605374*0.28580110605374+0.163749502180099*${new_z})
variable           module        equal     sqrt(0.1240734776806*0.1240734776806+0.28580110605374*0.28580110605374+0.163749502180099*0.163749502180099)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.1240734776806/${module}
variable           unitx         equal     0.1240734776806/0.351980680648143
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.28580110605374/${module}
variable           unity         equal     0.28580110605374/0.351980680648143
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.163749502180099/${module}
variable           unitz         equal     0.163749502180099/0.351980680648143
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.94980641010061e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.94980641010061e-05*4.94980641010061e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.94980641010061e-05*4.94980641010061e-05+7.05471352751406e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.94980641010061e-05*4.94980641010061e-05+7.05471352751406e-06*7.05471352751406e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.94980641010061e-05*4.94980641010061e-05+7.05471352751406e-06*7.05471352751406e-06+-4.80638368187614e-05*${fz})
variable           f_module      equal     sqrt(4.94980641010061e-05*4.94980641010061e-05+7.05471352751406e-06*7.05471352751406e-06+-4.80638368187614e-05*-4.80638368187614e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.35250081752251*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.35250081752251*0.35250081752251+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.35250081752251*0.35250081752251+0.811979525488334*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.35250081752251*0.35250081752251+0.811979525488334*0.811979525488334+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.35250081752251*0.35250081752251+0.811979525488334*0.811979525488334+0.465222982916471*${unitz})
variable           dir_module    equal     sqrt(0.35250081752251*0.35250081752251+0.811979525488334*0.811979525488334+0.465222982916471*0.465222982916471)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.94980641010061e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.94980641010061e-05*0.35250081752251+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.94980641010061e-05*0.35250081752251+7.05471352751406e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.94980641010061e-05*0.35250081752251+7.05471352751406e-06*0.811979525488334+${fz}*${unitz}
variable           dot      equal     4.94980641010061e-05*0.35250081752251+7.05471352751406e-06*0.811979525488334+-4.80638368187614e-05*${unitz}
variable           dot      equal     4.94980641010061e-05*0.35250081752251+7.05471352751406e-06*0.811979525488334+-4.80638368187614e-05*0.465222982916471
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.15989468678566e-07/${f_module}*${dir_module}
variable           cos      equal     8.15989468678566e-07/6.93538733052677e-05*${dir_module}
variable           cos      equal     8.15989468678566e-07/6.93538733052677e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0117655933229123)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55903046200482/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.325865605207-90.0)
print              "The dot product: ${dot}"
The dot product: 8.15989468678566e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.325865605207

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1240734776806^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.1240734776806^2+0.28580110605374^2+${new_z}^2)
variable           norm          equal     sqrt(0.1240734776806^2+0.28580110605374^2+0.163749502180099^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.1240734776806/${norm}
variable           unit_x        equal     0.1240734776806/0.351980680648143
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.28580110605374/${norm}
variable           unit_y        equal     0.28580110605374/0.351980680648143
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.163749502180099/${norm}
variable           unit_z        equal     0.163749502180099/0.351980680648143
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.28970979156537+${delta}*${unit_x}
variable           x_new         equal     1.28970979156537+0.03*${unit_x}
variable           x_new         equal     1.28970979156537+0.03*0.35250081752251
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.31048406131608+${delta}*${unit_y}
variable           y_new         equal     4.31048406131608+0.03*${unit_y}
variable           y_new         equal     4.31048406131608+0.03*0.811979525488334
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4846178251128+${delta}*${unit_z}
variable           z_new         equal     31.4846178251128+0.03*${unit_z}
variable           z_new         equal     31.4846178251128+0.03*0.465222982916471

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30028481609105  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.30028481609105  y  4.33484344708073  z   ${z_new}
set                atom          288751    x  1.30028481609105  y  4.33484344708073  z   31.4985745146003
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1240734776806  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.1240734776806  0.28580110605374  ${new_z}
fix                hold    carbon   planeforce   0.1240734776806  0.28580110605374  0.163749502180099
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2401   -1152449.1            0   -1152449.1 -0.0015946281  0.015452912 -0.025762572 
    2586   -1152449.1            0   -1152449.1 -1.2069766e-06 -3.9370229e-06 7.7860345e-06 
Loop time of 2.14776 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.07808635  -1152449.08088668  -1152449.08088668
  Force two-norm initial, final = 0.24425814 0.0001399758
  Force max component initial, final = 0.17281208 2.0254591e-05
  Final line search alpha, max atom move = 1.0000000 2.0254591e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56066    | 1.5534     | 2.0275     |  33.6 | 72.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033947   | 0.34987    | 1.0438     |  49.4 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0789e-05 | 0.0030499  | 0.0066156  |   2.6 |  0.14
Other   |            | 0.2414     |            |       | 11.24

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.14 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238179
Ave neighs/atom = 28.530391
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.29971134498355-${x_0}
variable           new_x         equal     1.29971134498355-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.33783712693221-${y_0}
variable           new_y         equal     4.33783712693221-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4937839995291-${z_0}
variable           new_z         equal     31.4937839995291-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13407503109878*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13407503109878*0.13407503109878+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13407503109878*0.13407503109878+0.31315417166987*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.13407503109878*0.13407503109878+0.31315417166987*0.31315417166987+${new_z}*${new_z})
variable           module        equal     sqrt(0.13407503109878*0.13407503109878+0.31315417166987*0.31315417166987+0.1729156765964*${new_z})
variable           module        equal     sqrt(0.13407503109878*0.13407503109878+0.31315417166987*0.31315417166987+0.1729156765964*0.1729156765964)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.13407503109878/${module}
variable           unitx         equal     0.13407503109878/0.382022879434167
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.31315417166987/${module}
variable           unity         equal     0.31315417166987/0.382022879434167
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.1729156765964/${module}
variable           unitz         equal     0.1729156765964/0.382022879434167
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.20697663792282e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.20697663792282e-06*-1.20697663792282e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.20697663792282e-06*-1.20697663792282e-06+-3.93702286085774e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.20697663792282e-06*-1.20697663792282e-06+-3.93702286085774e-06*-3.93702286085774e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.20697663792282e-06*-1.20697663792282e-06+-3.93702286085774e-06*-3.93702286085774e-06+7.78603452246555e-06*${fz})
variable           f_module      equal     sqrt(-1.20697663792282e-06*-1.20697663792282e-06+-3.93702286085774e-06*-3.93702286085774e-06+7.78603452246555e-06*7.78603452246555e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.350960736428575*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.350960736428575*0.350960736428575+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.350960736428575*0.350960736428575+0.81972622198361*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.350960736428575*0.350960736428575+0.81972622198361*0.81972622198361+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.350960736428575*0.350960736428575+0.81972622198361*0.81972622198361+0.452631729420274*${unitz})
variable           dir_module    equal     sqrt(0.350960736428575*0.350960736428575+0.81972622198361*0.81972622198361+0.452631729420274*0.452631729420274)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.20697663792282e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.20697663792282e-06*0.350960736428575+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.20697663792282e-06*0.350960736428575+-3.93702286085774e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.20697663792282e-06*0.350960736428575+-3.93702286085774e-06*0.81972622198361+${fz}*${unitz}
variable           dot      equal     -1.20697663792282e-06*0.350960736428575+-3.93702286085774e-06*0.81972622198361+7.78603452246555e-06*${unitz}
variable           dot      equal     -1.20697663792282e-06*0.350960736428575+-3.93702286085774e-06*0.81972622198361+7.78603452246555e-06*0.452631729420274
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.26676014061958e-07/${f_module}*${dir_module}
variable           cos      equal     -1.26676014061958e-07/8.80790980860007e-06*${dir_module}
variable           cos      equal     -1.26676014061958e-07/8.80790980860007e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0143820743870777)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58517889703591/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8240605733605-90.0)
print              "The dot product: ${dot}"
The dot product: -1.26676014061958e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8240605733605

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13407503109878^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.13407503109878^2+0.31315417166987^2+${new_z}^2)
variable           norm          equal     sqrt(0.13407503109878^2+0.31315417166987^2+0.1729156765964^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.13407503109878/${norm}
variable           unit_x        equal     0.13407503109878/0.382022879434167
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.31315417166987/${norm}
variable           unit_y        equal     0.31315417166987/0.382022879434167
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.1729156765964/${norm}
variable           unit_z        equal     0.1729156765964/0.382022879434167
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.29971134498355+${delta}*${unit_x}
variable           x_new         equal     1.29971134498355+0.03*${unit_x}
variable           x_new         equal     1.29971134498355+0.03*0.350960736428575
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.33783712693221+${delta}*${unit_y}
variable           y_new         equal     4.33783712693221+0.03*${unit_y}
variable           y_new         equal     4.33783712693221+0.03*0.81972622198361
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4937839995291+${delta}*${unit_z}
variable           z_new         equal     31.4937839995291+0.03*${unit_z}
variable           z_new         equal     31.4937839995291+0.03*0.452631729420274

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31024016707641  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31024016707641  y  4.36242891359172  z   ${z_new}
set                atom          288751    x  1.31024016707641  y  4.36242891359172  z   31.5073629514117
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13407503109878  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.13407503109878  0.31315417166987  ${new_z}
fix                hold    carbon   planeforce   0.13407503109878  0.31315417166987  0.1729156765964
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2586     -1152449            0     -1152449 -0.0064341956  0.015536961  -0.02314885 
    2760     -1152449            0     -1152449 -4.2433061e-05 -8.2201809e-06 4.7788599e-05 
Loop time of 2.01865 on 104 procs for 174 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.03401792  -1152449.03688563  -1152449.03688563
  Force two-norm initial, final = 0.24815695 0.00022371475
  Force max component initial, final = 0.17799753 5.6524796e-05
  Final line search alpha, max atom move = 1.0000000 5.6524796e-05
  Iterations, force evaluations = 174 348

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.52775    | 1.463      | 1.9064     |  32.8 | 72.48
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033945   | 0.33029    | 0.99623    |  48.8 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9839e-05 | 0.0028721  | 0.0061947  |   2.5 |  0.14
Other   |            | 0.2225     |            |       | 11.02

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.18 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238179
Ave neighs/atom = 28.530391
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.30860599003805-${x_0}
variable           new_x         equal     1.30860599003805-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.36572651506188-${y_0}
variable           new_y         equal     4.36572651506188-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5026580262387-${z_0}
variable           new_z         equal     31.5026580262387-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14296967615328*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14296967615328*0.14296967615328+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14296967615328*0.14296967615328+0.34104355979954*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.14296967615328*0.14296967615328+0.34104355979954*0.34104355979954+${new_z}*${new_z})
variable           module        equal     sqrt(0.14296967615328*0.14296967615328+0.34104355979954*0.34104355979954+0.181789703305999*${new_z})
variable           module        equal     sqrt(0.14296967615328*0.14296967615328+0.34104355979954*0.34104355979954+0.181789703305999*0.181789703305999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.14296967615328/${module}
variable           unitx         equal     0.14296967615328/0.412066176976708
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.34104355979954/${module}
variable           unity         equal     0.34104355979954/0.412066176976708
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.181789703305999/${module}
variable           unitz         equal     0.181789703305999/0.412066176976708
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.24330607023916e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.24330607023916e-05*-4.24330607023916e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.24330607023916e-05*-4.24330607023916e-05+-8.22018089205369e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.24330607023916e-05*-4.24330607023916e-05+-8.22018089205369e-06*-8.22018089205369e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.24330607023916e-05*-4.24330607023916e-05+-8.22018089205369e-06*-8.22018089205369e-06+4.77885986637945e-05*${fz})
variable           f_module      equal     sqrt(-4.24330607023916e-05*-4.24330607023916e-05+-8.22018089205369e-06*-8.22018089205369e-06+4.77885986637945e-05*4.77885986637945e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.346958047375389*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.346958047375389*0.346958047375389+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.346958047375389*0.346958047375389+0.827642691525292*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.346958047375389*0.346958047375389+0.827642691525292*0.827642691525292+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.346958047375389*0.346958047375389+0.827642691525292*0.827642691525292+0.441166282172862*${unitz})
variable           dir_module    equal     sqrt(0.346958047375389*0.346958047375389+0.827642691525292*0.827642691525292+0.441166282172862*0.441166282172862)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.24330607023916e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.24330607023916e-05*0.346958047375389+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.24330607023916e-05*0.346958047375389+-8.22018089205369e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.24330607023916e-05*0.346958047375389+-8.22018089205369e-06*0.827642691525292+${fz}*${unitz}
variable           dot      equal     -4.24330607023916e-05*0.346958047375389+-8.22018089205369e-06*0.827642691525292+4.77885986637945e-05*${unitz}
variable           dot      equal     -4.24330607023916e-05*0.346958047375389+-8.22018089205369e-06*0.827642691525292+4.77885986637945e-05*0.441166282172862
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.43146121030012e-07/${f_module}*${dir_module}
variable           cos      equal     -4.43146121030012e-07/6.44351315411101e-05*${dir_module}
variable           cos      equal     -4.43146121030012e-07/6.44351315411101e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00687739918319684)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5776737801945/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.3940490535952-90.0)
print              "The dot product: ${dot}"
The dot product: -4.43146121030012e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.3940490535952

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14296967615328^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.14296967615328^2+0.34104355979954^2+${new_z}^2)
variable           norm          equal     sqrt(0.14296967615328^2+0.34104355979954^2+0.181789703305999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.14296967615328/${norm}
variable           unit_x        equal     0.14296967615328/0.412066176976708
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.34104355979954/${norm}
variable           unit_y        equal     0.34104355979954/0.412066176976708
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.181789703305999/${norm}
variable           unit_z        equal     0.181789703305999/0.412066176976708
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.30860599003805+${delta}*${unit_x}
variable           x_new         equal     1.30860599003805+0.03*${unit_x}
variable           x_new         equal     1.30860599003805+0.03*0.346958047375389
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.36572651506188+${delta}*${unit_y}
variable           y_new         equal     4.36572651506188+0.03*${unit_y}
variable           y_new         equal     4.36572651506188+0.03*0.827642691525292
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5026580262387+${delta}*${unit_z}
variable           z_new         equal     31.5026580262387+0.03*${unit_z}
variable           z_new         equal     31.5026580262387+0.03*0.441166282172862

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31901473145931  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.31901473145931  y  4.39055579580764  z   ${z_new}
set                atom          288751    x  1.31901473145931  y  4.39055579580764  z   31.5158930147039
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14296967615328  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.14296967615328  0.34104355979954  ${new_z}
fix                hold    carbon   planeforce   0.14296967615328  0.34104355979954  0.181789703305999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2760     -1152449            0     -1152449 -0.010207732  0.016160687 -0.022290053 
    2944     -1152449            0     -1152449 1.2363151e-05 -1.0494226e-05 9.9644389e-06 
Loop time of 2.16302 on 104 procs for 184 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.9858726  -1152448.98884045  -1152448.98884045
  Force two-norm initial, final = 0.25330526 0.00015797371
  Force max component initial, final = 0.18352013 1.3945365e-05
  Final line search alpha, max atom move = 1.0000000 1.3945365e-05
  Iterations, force evaluations = 184 368

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55989    | 1.5475     | 2.024      |  33.5 | 71.54
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035317   | 0.35156    | 1.0482     |  49.2 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2558e-05 | 0.0030378  | 0.0065114  |   2.6 |  0.14
Other   |            | 0.2609     |            |       | 12.06

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115505 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238177
Ave neighs/atom = 28.530384
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.31631068754211-${x_0}
variable           new_x         equal     1.31631068754211-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.39431287636316-${y_0}
variable           new_y         equal     4.39431287636316-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5109712186524-${z_0}
variable           new_z         equal     31.5109712186524-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15067437365734*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15067437365734*0.15067437365734+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15067437365734*0.15067437365734+0.36962992110082*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15067437365734*0.15067437365734+0.36962992110082*0.36962992110082+${new_z}*${new_z})
variable           module        equal     sqrt(0.15067437365734*0.15067437365734+0.36962992110082*0.36962992110082+0.190102895719701*${new_z})
variable           module        equal     sqrt(0.15067437365734*0.15067437365734+0.36962992110082*0.36962992110082+0.190102895719701*0.190102895719701)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.15067437365734/${module}
variable           unitx         equal     0.15067437365734/0.442117808294402
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.36962992110082/${module}
variable           unity         equal     0.36962992110082/0.442117808294402
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.190102895719701/${module}
variable           unitz         equal     0.190102895719701/0.442117808294402
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.23631512225334e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.23631512225334e-05*1.23631512225334e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.23631512225334e-05*1.23631512225334e-05+-1.04942257773325e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.23631512225334e-05*1.23631512225334e-05+-1.04942257773325e-05*-1.04942257773325e-05+${fz}*${fz})
variable           f_module      equal     sqrt(1.23631512225334e-05*1.23631512225334e-05+-1.04942257773325e-05*-1.04942257773325e-05+9.96443889350933e-06*${fz})
variable           f_module      equal     sqrt(1.23631512225334e-05*1.23631512225334e-05+-1.04942257773325e-05*-1.04942257773325e-05+9.96443889350933e-06*9.96443889350933e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340801412724383*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340801412724383*0.340801412724383+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340801412724383*0.340801412724383+0.83604395517741*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340801412724383*0.340801412724383+0.83604395517741*0.83604395517741+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.340801412724383*0.340801412724383+0.83604395517741*0.83604395517741+0.429982443939723*${unitz})
variable           dir_module    equal     sqrt(0.340801412724383*0.340801412724383+0.83604395517741*0.83604395517741+0.429982443939723*0.429982443939723)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.23631512225334e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.23631512225334e-05*0.340801412724383+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.23631512225334e-05*0.340801412724383+-1.04942257773325e-05*${unity}+${fz}*${unitz}
variable           dot      equal     1.23631512225334e-05*0.340801412724383+-1.04942257773325e-05*0.83604395517741+${fz}*${unitz}
variable           dot      equal     1.23631512225334e-05*0.340801412724383+-1.04942257773325e-05*0.83604395517741+9.96443889350933e-06*${unitz}
variable           dot      equal     1.23631512225334e-05*0.340801412724383+-1.04942257773325e-05*0.83604395517741+9.96443889350933e-06*0.429982443939723
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.75720835122057e-07/${f_module}*${dir_module}
variable           cos      equal     -2.75720835122057e-07/1.90332951765936e-05*${dir_module}
variable           cos      equal     -2.75720835122057e-07/1.90332951765936e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0144862375413127)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58528307104282/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8300293042914-90.0)
print              "The dot product: ${dot}"
The dot product: -2.75720835122057e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8300293042914

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15067437365734^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15067437365734^2+0.36962992110082^2+${new_z}^2)
variable           norm          equal     sqrt(0.15067437365734^2+0.36962992110082^2+0.190102895719701^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.15067437365734/${norm}
variable           unit_x        equal     0.15067437365734/0.442117808294402
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.36962992110082/${norm}
variable           unit_y        equal     0.36962992110082/0.442117808294402
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.190102895719701/${norm}
variable           unit_z        equal     0.190102895719701/0.442117808294402
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.31631068754211+${delta}*${unit_x}
variable           x_new         equal     1.31631068754211+0.03*${unit_x}
variable           x_new         equal     1.31631068754211+0.03*0.340801412724383
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.39431287636316+${delta}*${unit_y}
variable           y_new         equal     4.39431287636316+0.03*${unit_y}
variable           y_new         equal     4.39431287636316+0.03*0.83604395517741
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5109712186524+${delta}*${unit_z}
variable           z_new         equal     31.5109712186524+0.03*${unit_z}
variable           z_new         equal     31.5109712186524+0.03*0.429982443939723

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32653472992384  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.32653472992384  y  4.41939419501848  z   ${z_new}
set                atom          288751    x  1.32653472992384  y  4.41939419501848  z   31.5238706919706
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15067437365734  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15067437365734  0.36962992110082  ${new_z}
fix                hold    carbon   planeforce   0.15067437365734  0.36962992110082  0.190102895719701
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2944   -1152448.9            0   -1152448.9  -0.01170947  0.016647202 -0.023087428 
    3000   -1152448.9            0   -1152448.9 0.00010890249 -4.2640002e-05 -3.4075942e-06 
    3147   -1152448.9            0   -1152448.9 4.1166088e-06 -1.2588152e-05 2.1213196e-05 
Loop time of 2.36163 on 104 procs for 203 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.93359218  -1152448.93667771  -1152448.93667771
  Force two-norm initial, final = 0.25873431 0.00011967366
  Force max component initial, final = 0.18953573 3.3855597e-05
  Final line search alpha, max atom move = 1.0000000 3.3855597e-05
  Iterations, force evaluations = 203 406

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61312    | 1.705      | 2.2227     |  35.4 | 72.20
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037546   | 0.38762    | 1.1674     |  52.3 | 16.41
Output  | 9.6498e-05 | 0.00010208 | 0.00019331 |   0.0 |  0.00
Modify  | 2.3401e-05 | 0.0033549  | 0.0072862  |   2.8 |  0.14
Other   |            | 0.2655     |            |       | 11.24

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238180
Ave neighs/atom = 28.530395
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32290920556403-${x_0}
variable           new_x         equal     1.32290920556403-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.42367636468897-${y_0}
variable           new_y         equal     4.42367636468897-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5184181478556-${z_0}
variable           new_z         equal     31.5184181478556-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15727289167926*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15727289167926*0.15727289167926+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15727289167926*0.15727289167926+0.39899340942663*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15727289167926*0.15727289167926+0.39899340942663*0.39899340942663+${new_z}*${new_z})
variable           module        equal     sqrt(0.15727289167926*0.15727289167926+0.39899340942663*0.39899340942663+0.197549824922898*${new_z})
variable           module        equal     sqrt(0.15727289167926*0.15727289167926+0.39899340942663*0.39899340942663+0.197549824922898*0.197549824922898)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.15727289167926/${module}
variable           unitx         equal     0.15727289167926/0.472182630504459
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.39899340942663/${module}
variable           unity         equal     0.39899340942663/0.472182630504459
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.197549824922898/${module}
variable           unitz         equal     0.197549824922898/0.472182630504459
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.11660876145701e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.11660876145701e-06*4.11660876145701e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.11660876145701e-06*4.11660876145701e-06+-1.2588151674076e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.11660876145701e-06*4.11660876145701e-06+-1.2588151674076e-05*-1.2588151674076e-05+${fz}*${fz})
variable           f_module      equal     sqrt(4.11660876145701e-06*4.11660876145701e-06+-1.2588151674076e-05*-1.2588151674076e-05+2.1213196401442e-05*${fz})
variable           f_module      equal     sqrt(4.11660876145701e-06*4.11660876145701e-06+-1.2588151674076e-05*-1.2588151674076e-05+2.1213196401442e-05*2.1213196401442e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.333076402050699*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.333076402050699*0.333076402050699+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.333076402050699*0.333076402050699+0.84499806568565*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.333076402050699*0.333076402050699+0.84499806568565*0.84499806568565+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.333076402050699*0.333076402050699+0.84499806568565*0.84499806568565+0.418375882890577*${unitz})
variable           dir_module    equal     sqrt(0.333076402050699*0.333076402050699+0.84499806568565*0.84499806568565+0.418375882890577*0.418375882890577)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.11660876145701e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.11660876145701e-06*0.333076402050699+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.11660876145701e-06*0.333076402050699+-1.2588151674076e-05*${unity}+${fz}*${unitz}
variable           dot      equal     4.11660876145701e-06*0.333076402050699+-1.2588151674076e-05*0.84499806568565+${fz}*${unitz}
variable           dot      equal     4.11660876145701e-06*0.333076402050699+-1.2588151674076e-05*0.84499806568565+2.1213196401442e-05*${unitz}
variable           dot      equal     4.11660876145701e-06*0.333076402050699+-1.2588151674076e-05*0.84499806568565+2.1213196401442e-05*0.418375882890577
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.90728806850803e-07/${f_module}*${dir_module}
variable           cos      equal     -3.90728806850803e-07/2.50081533070837e-05*${dir_module}
variable           cos      equal     -3.90728806850803e-07/2.50081533070837e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0156240567647243)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5864210192972/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8952289365717-90.0)
print              "The dot product: ${dot}"
The dot product: -3.90728806850803e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8952289365717

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15727289167926^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15727289167926^2+0.39899340942663^2+${new_z}^2)
variable           norm          equal     sqrt(0.15727289167926^2+0.39899340942663^2+0.197549824922898^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.15727289167926/${norm}
variable           unit_x        equal     0.15727289167926/0.472182630504459
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.39899340942663/${norm}
variable           unit_y        equal     0.39899340942663/0.472182630504459
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.197549824922898/${norm}
variable           unit_z        equal     0.197549824922898/0.472182630504459
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32290920556403+${delta}*${unit_x}
variable           x_new         equal     1.32290920556403+0.03*${unit_x}
variable           x_new         equal     1.32290920556403+0.03*0.333076402050699
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.42367636468897+${delta}*${unit_y}
variable           y_new         equal     4.42367636468897+0.03*${unit_y}
variable           y_new         equal     4.42367636468897+0.03*0.84499806568565
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5184181478556+${delta}*${unit_z}
variable           z_new         equal     31.5184181478556+0.03*${unit_z}
variable           z_new         equal     31.5184181478556+0.03*0.418375882890577

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33290149762555  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33290149762555  y  4.44902630665954  z   ${z_new}
set                atom          288751    x  1.33290149762555  y  4.44902630665954  z   31.5309694243423
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15727289167926  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15727289167926  0.39899340942663  ${new_z}
fix                hold    carbon   planeforce   0.15727289167926  0.39899340942663  0.197549824922898
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3147   -1152448.9            0   -1152448.9 -0.010378734   0.01628926 -0.024636894 
    3354   -1152448.9            0   -1152448.9 3.0655855e-06 -3.524697e-06 4.6783001e-06 
Loop time of 2.41781 on 104 procs for 207 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.87716519  -1152448.88035938  -1152448.88035938
  Force two-norm initial, final = 0.26332691 0.00010526258
  Force max component initial, final = 0.19600092 2.0278489e-05
  Final line search alpha, max atom move = 1.0000000 2.0278489e-05
  Iterations, force evaluations = 207 414

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62732    | 1.7392     | 2.2764     |  35.6 | 71.93
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039121   | 0.39913    | 1.1832     |  52.0 | 16.51
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5209e-05 | 0.0034109  | 0.0073491  |   2.8 |  0.14
Other   |            | 0.2761     |            |       | 11.42

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115501 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32842492657806-${x_0}
variable           new_x         equal     1.32842492657806-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.45390243804464-${y_0}
variable           new_y         equal     4.45390243804464-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5246849287053-${z_0}
variable           new_z         equal     31.5246849287053-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16278861269329*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16278861269329*0.16278861269329+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16278861269329*0.16278861269329+0.4292194827823*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16278861269329*0.16278861269329+0.4292194827823*0.4292194827823+${new_z}*${new_z})
variable           module        equal     sqrt(0.16278861269329*0.16278861269329+0.4292194827823*0.4292194827823+0.203816605772602*${new_z})
variable           module        equal     sqrt(0.16278861269329*0.16278861269329+0.4292194827823*0.4292194827823+0.203816605772602*0.203816605772602)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16278861269329/${module}
variable           unitx         equal     0.16278861269329/0.502265572791104
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.4292194827823/${module}
variable           unity         equal     0.4292194827823/0.502265572791104
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.203816605772602/${module}
variable           unitz         equal     0.203816605772602/0.502265572791104
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.06558550373658e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.06558550373658e-06*3.06558550373658e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.06558550373658e-06*3.06558550373658e-06+-3.52469699724666e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.06558550373658e-06*3.06558550373658e-06+-3.52469699724666e-06*-3.52469699724666e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.06558550373658e-06*3.06558550373658e-06+-3.52469699724666e-06*-3.52469699724666e-06+4.67830014773749e-06*${fz})
variable           f_module      equal     sqrt(3.06558550373658e-06*3.06558550373658e-06+-3.52469699724666e-06*-3.52469699724666e-06+4.67830014773749e-06*4.67830014773749e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.324108641945473*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.324108641945473*0.324108641945473+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.324108641945473*0.324108641945473+0.854566798988661*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.324108641945473*0.324108641945473+0.854566798988661*0.854566798988661+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.324108641945473*0.324108641945473+0.854566798988661*0.854566798988661+0.405794497600119*${unitz})
variable           dir_module    equal     sqrt(0.324108641945473*0.324108641945473+0.854566798988661*0.854566798988661+0.405794497600119*0.405794497600119)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.06558550373658e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.06558550373658e-06*0.324108641945473+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.06558550373658e-06*0.324108641945473+-3.52469699724666e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.06558550373658e-06*0.324108641945473+-3.52469699724666e-06*0.854566798988661+${fz}*${unitz}
variable           dot      equal     3.06558550373658e-06*0.324108641945473+-3.52469699724666e-06*0.854566798988661+4.67830014773749e-06*${unitz}
variable           dot      equal     3.06558550373658e-06*0.324108641945473+-3.52469699724666e-06*0.854566798988661+4.67830014773749e-06*0.405794497600119
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.20077817884535e-07/${f_module}*${dir_module}
variable           cos      equal     -1.20077817884535e-07/6.6111871608237e-06*${dir_module}
variable           cos      equal     -1.20077817884535e-07/6.6111871608237e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0181628223439335)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58896014790364/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.0407102893616-90.0)
print              "The dot product: ${dot}"
The dot product: -1.20077817884535e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.0407102893616

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16278861269329^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16278861269329^2+0.4292194827823^2+${new_z}^2)
variable           norm          equal     sqrt(0.16278861269329^2+0.4292194827823^2+0.203816605772602^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16278861269329/${norm}
variable           unit_x        equal     0.16278861269329/0.502265572791104
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.4292194827823/${norm}
variable           unit_y        equal     0.4292194827823/0.502265572791104
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.203816605772602/${norm}
variable           unit_z        equal     0.203816605772602/0.502265572791104
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32842492657806+${delta}*${unit_x}
variable           x_new         equal     1.32842492657806+0.03*${unit_x}
variable           x_new         equal     1.32842492657806+0.03*0.324108641945473
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.45390243804464+${delta}*${unit_y}
variable           y_new         equal     4.45390243804464+0.03*${unit_y}
variable           y_new         equal     4.45390243804464+0.03*0.854566798988661
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5246849287053+${delta}*${unit_z}
variable           z_new         equal     31.5246849287053+0.03*${unit_z}
variable           z_new         equal     31.5246849287053+0.03*0.405794497600119

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33814818583642  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33814818583642  y  4.4795394420143  z   ${z_new}
set                atom          288751    x  1.33814818583642  y  4.4795394420143  z   31.5368587636333
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16278861269329  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16278861269329  0.4292194827823  ${new_z}
fix                hold    carbon   planeforce   0.16278861269329  0.4292194827823  0.203816605772602
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3354   -1152448.8            0   -1152448.8 -0.0073999149   0.01549886 -0.026728886 
    3572   -1152448.8            0   -1152448.8 -7.1304486e-06 -4.4315902e-06 1.5027631e-05 
Loop time of 2.51797 on 104 procs for 218 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.81662747  -1152448.81991707  -1152448.81991707
  Force two-norm initial, final = 0.26657845 7.3895080e-05
  Force max component initial, final = 0.2030561 2.1071113e-05
  Final line search alpha, max atom move = 1.0000000 2.1071113e-05
  Iterations, force evaluations = 218 436

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.65868    | 1.8252     | 2.3761     |  36.4 | 72.49
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042277   | 0.41061    | 1.2363     |  54.1 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4987e-05 | 0.0035919  | 0.0076978  |   2.8 |  0.14
Other   |            | 0.2786     |            |       | 11.06

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115498 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238175
Ave neighs/atom = 28.530377
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.33239745141655-${x_0}
variable           new_x         equal     1.33239745141655-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.48541117866142-${y_0}
variable           new_y         equal     4.48541117866142-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5290865328933-${z_0}
variable           new_z         equal     31.5290865328933-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16676113753178*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16676113753178*0.16676113753178+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16676113753178*0.16676113753178+0.46072822339908*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16676113753178*0.16676113753178+0.46072822339908*0.46072822339908+${new_z}*${new_z})
variable           module        equal     sqrt(0.16676113753178*0.16676113753178+0.46072822339908*0.46072822339908+0.208218209960599*${new_z})
variable           module        equal     sqrt(0.16676113753178*0.16676113753178+0.46072822339908*0.46072822339908+0.208218209960599*0.208218209960599)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16676113753178/${module}
variable           unitx         equal     0.16676113753178/0.532385758437021
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.46072822339908/${module}
variable           unity         equal     0.46072822339908/0.532385758437021
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.208218209960599/${module}
variable           unitz         equal     0.208218209960599/0.532385758437021
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.13044862322672e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.13044862322672e-06*-7.13044862322672e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.13044862322672e-06*-7.13044862322672e-06+-4.43159019908341e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.13044862322672e-06*-7.13044862322672e-06+-4.43159019908341e-06*-4.43159019908341e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-7.13044862322672e-06*-7.13044862322672e-06+-4.43159019908341e-06*-4.43159019908341e-06+1.50276307489135e-05*${fz})
variable           f_module      equal     sqrt(-7.13044862322672e-06*-7.13044862322672e-06+-4.43159019908341e-06*-4.43159019908341e-06+1.50276307489135e-05*1.50276307489135e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313233656026708*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313233656026708*0.313233656026708+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313233656026708*0.313233656026708+0.865402982889112*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313233656026708*0.313233656026708+0.865402982889112*0.865402982889112+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.313233656026708*0.313233656026708+0.865402982889112*0.865402982889112+0.391104019333437*${unitz})
variable           dir_module    equal     sqrt(0.313233656026708*0.313233656026708+0.865402982889112*0.865402982889112+0.391104019333437*0.391104019333437)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.13044862322672e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.13044862322672e-06*0.313233656026708+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.13044862322672e-06*0.313233656026708+-4.43159019908341e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -7.13044862322672e-06*0.313233656026708+-4.43159019908341e-06*0.865402982889112+${fz}*${unitz}
variable           dot      equal     -7.13044862322672e-06*0.313233656026708+-4.43159019908341e-06*0.865402982889112+1.50276307489135e-05*${unitz}
variable           dot      equal     -7.13044862322672e-06*0.313233656026708+-4.43159019908341e-06*0.865402982889112+1.50276307489135e-05*0.391104019333437
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.91241081634031e-07/${f_module}*${dir_module}
variable           cos      equal     -1.91241081634031e-07/1.72137147410656e-05*${dir_module}
variable           cos      equal     -1.91241081634031e-07/1.72137147410656e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0111098089233348)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58190636427424/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.6365582577985-90.0)
print              "The dot product: ${dot}"
The dot product: -1.91241081634031e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.6365582577985

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16676113753178^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16676113753178^2+0.46072822339908^2+${new_z}^2)
variable           norm          equal     sqrt(0.16676113753178^2+0.46072822339908^2+0.208218209960599^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16676113753178/${norm}
variable           unit_x        equal     0.16676113753178/0.532385758437021
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.46072822339908/${norm}
variable           unit_y        equal     0.46072822339908/0.532385758437021
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.208218209960599/${norm}
variable           unit_z        equal     0.208218209960599/0.532385758437021
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.33239745141655+${delta}*${unit_x}
variable           x_new         equal     1.33239745141655+0.03*${unit_x}
variable           x_new         equal     1.33239745141655+0.03*0.313233656026708
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.48541117866142+${delta}*${unit_y}
variable           y_new         equal     4.48541117866142+0.03*${unit_y}
variable           y_new         equal     4.48541117866142+0.03*0.865402982889112
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5290865328933+${delta}*${unit_z}
variable           z_new         equal     31.5290865328933+0.03*${unit_z}
variable           z_new         equal     31.5290865328933+0.03*0.391104019333437

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34179446109735  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34179446109735  y  4.51137326814809  z   ${z_new}
set                atom          288751    x  1.34179446109735  y  4.51137326814809  z   31.5408196534733
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16676113753178  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16676113753178  0.46072822339908  ${new_z}
fix                hold    carbon   planeforce   0.16676113753178  0.46072822339908  0.208218209960599
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3572   -1152448.8            0   -1152448.8 -0.006038738  0.016680296 -0.032072394 
    3702   -1152448.8            0   -1152448.8 4.4136857e-07 -3.3225024e-06 6.9982712e-06 
Loop time of 1.51607 on 104 procs for 130 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.75212651  -1152448.75559405  -1152448.75559405
  Force two-norm initial, final = 0.26887322 0.00028322341
  Force max component initial, final = 0.21111359 6.9085662e-05
  Final line search alpha, max atom move = 1.0000000 6.9085662e-05
  Iterations, force evaluations = 130 260

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.39514    | 1.0939     | 1.4329     |  28.3 | 72.16
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.022764   | 0.25031    | 0.74419    |  41.3 | 16.51
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5128e-05 | 0.0021454  | 0.0046387  |   2.2 |  0.14
Other   |            | 0.1697     |            |       | 11.19

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3878.99 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115499 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238174
Ave neighs/atom = 28.530374
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.33243973454113-${x_0}
variable           new_x         equal     1.33243973454113-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.5202751758857-${y_0}
variable           new_y         equal     4.5202751758857-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5286144035315-${z_0}
variable           new_z         equal     31.5286144035315-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16680342065636*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16680342065636*0.16680342065636+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16680342065636*0.16680342065636+0.49559222062336*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.16680342065636*0.16680342065636+0.49559222062336*0.49559222062336+${new_z}*${new_z})
variable           module        equal     sqrt(0.16680342065636*0.16680342065636+0.49559222062336*0.49559222062336+0.207746080598799*${new_z})
variable           module        equal     sqrt(0.16680342065636*0.16680342065636+0.49559222062336*0.49559222062336+0.207746080598799*0.207746080598799)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.16680342065636/${module}
variable           unitx         equal     0.16680342065636/0.562666388092641
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.49559222062336/${module}
variable           unity         equal     0.49559222062336/0.562666388092641
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.207746080598799/${module}
variable           unitz         equal     0.207746080598799/0.562666388092641
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.41368572041103e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.41368572041103e-07*4.41368572041103e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.41368572041103e-07*4.41368572041103e-07+-3.32250237973373e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.41368572041103e-07*4.41368572041103e-07+-3.32250237973373e-06*-3.32250237973373e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.41368572041103e-07*4.41368572041103e-07+-3.32250237973373e-06*-3.32250237973373e-06+6.9982711592166e-06*${fz})
variable           f_module      equal     sqrt(4.41368572041103e-07*4.41368572041103e-07+-3.32250237973373e-06*-3.32250237973373e-06+6.9982711592166e-06*6.9982711592166e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.296451723767968*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.296451723767968*0.296451723767968+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.296451723767968*0.296451723767968+0.880792297374199*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.296451723767968*0.296451723767968+0.880792297374199*0.880792297374199+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.296451723767968*0.296451723767968+0.880792297374199*0.880792297374199+0.369217150686802*${unitz})
variable           dir_module    equal     sqrt(0.296451723767968*0.296451723767968+0.880792297374199*0.880792297374199+0.369217150686802*0.369217150686802)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.41368572041103e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.41368572041103e-07*0.296451723767968+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.41368572041103e-07*0.296451723767968+-3.32250237973373e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.41368572041103e-07*0.296451723767968+-3.32250237973373e-06*0.880792297374199+${fz}*${unitz}
variable           dot      equal     4.41368572041103e-07*0.296451723767968+-3.32250237973373e-06*0.880792297374199+6.9982711592166e-06*${unitz}
variable           dot      equal     4.41368572041103e-07*0.296451723767968+-3.32250237973373e-06*0.880792297374199+6.9982711592166e-06*0.369217150686802
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.11708292938748e-07/${f_module}*${dir_module}
variable           cos      equal     -2.11708292938748e-07/7.75948629083426e-06*${dir_module}
variable           cos      equal     -2.11708292938748e-07/7.75948629083426e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0272838026904982)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59808351565706/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.5634407565784-90.0)
print              "The dot product: ${dot}"
The dot product: -2.11708292938748e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.5634407565784

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16680342065636^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.16680342065636^2+0.49559222062336^2+${new_z}^2)
variable           norm          equal     sqrt(0.16680342065636^2+0.49559222062336^2+0.207746080598799^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.16680342065636/${norm}
variable           unit_x        equal     0.16680342065636/0.562666388092641
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.49559222062336/${norm}
variable           unit_y        equal     0.49559222062336/0.562666388092641
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.207746080598799/${norm}
variable           unit_z        equal     0.207746080598799/0.562666388092641
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.33243973454113+${delta}*${unit_x}
variable           x_new         equal     1.33243973454113+0.03*${unit_x}
variable           x_new         equal     1.33243973454113+0.03*0.296451723767968
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.5202751758857+${delta}*${unit_y}
variable           y_new         equal     4.5202751758857+0.03*${unit_y}
variable           y_new         equal     4.5202751758857+0.03*0.880792297374199
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5286144035315+${delta}*${unit_z}
variable           z_new         equal     31.5286144035315+0.03*${unit_z}
variable           z_new         equal     31.5286144035315+0.03*0.369217150686802

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34133328625417  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.34133328625417  y  4.54669894480693  z   ${z_new}
set                atom          288751    x  1.34133328625417  y  4.54669894480693  z   31.5396909180521
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16680342065636  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.16680342065636  0.49559222062336  ${new_z}
fix                hold    carbon   planeforce   0.16680342065636  0.49559222062336  0.207746080598799
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3702   -1152448.7            0   -1152448.7 -0.016803655  0.027630618 -0.052422707 
    3830   -1152448.7            0   -1152448.7 -2.4378303e-05 1.3632218e-05 -1.2946752e-05 
Loop time of 1.48553 on 104 procs for 128 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.68420656  -1152448.68866018  -1152448.68866018
  Force two-norm initial, final = 0.2752996 0.00020893688
  Force max component initial, final = 0.22219545 4.1018847e-05
  Final line search alpha, max atom move = 1.0000000 4.1018847e-05
  Iterations, force evaluations = 128 256

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.38863    | 1.0745     | 1.4021     |  28.0 | 72.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.024162   | 0.24264    | 0.72693    |  41.4 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5811e-05 | 0.0021178  | 0.0045821  |   2.2 |  0.14
Other   |            | 0.1663     |            |       | 11.19

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3878.93 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115493 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238168
Ave neighs/atom = 28.530353
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.32320537102542-${x_0}
variable           new_x         equal     1.32320537102542-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.56326310055104-${y_0}
variable           new_y         equal     4.56326310055104-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.5147312728761-${z_0}
variable           new_z         equal     31.5147312728761-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15756905714065*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15756905714065*0.15756905714065+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15756905714065*0.15756905714065+0.5385801452887*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.15756905714065*0.15756905714065+0.5385801452887*0.5385801452887+${new_z}*${new_z})
variable           module        equal     sqrt(0.15756905714065*0.15756905714065+0.5385801452887*0.5385801452887+0.193862949943401*${new_z})
variable           module        equal     sqrt(0.15756905714065*0.15756905714065+0.5385801452887*0.5385801452887+0.193862949943401*0.193862949943401)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.15756905714065/${module}
variable           unitx         equal     0.15756905714065/0.593699776004799
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.5385801452887/${module}
variable           unity         equal     0.5385801452887/0.593699776004799
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.193862949943401/${module}
variable           unitz         equal     0.193862949943401/0.593699776004799
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43783026855685e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43783026855685e-05*-2.43783026855685e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43783026855685e-05*-2.43783026855685e-05+1.36322180785137e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43783026855685e-05*-2.43783026855685e-05+1.36322180785137e-05*1.36322180785137e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43783026855685e-05*-2.43783026855685e-05+1.36322180785137e-05*1.36322180785137e-05+-1.29467518431977e-05*${fz})
variable           f_module      equal     sqrt(-2.43783026855685e-05*-2.43783026855685e-05+1.36322180785137e-05*1.36322180785137e-05+-1.29467518431977e-05*-1.29467518431977e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.265401914417054*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.265401914417054*0.265401914417054+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.265401914417054*0.265401914417054+0.907159084534245*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.265401914417054*0.265401914417054+0.907159084534245*0.907159084534245+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.265401914417054*0.265401914417054+0.907159084534245*0.907159084534245+0.326533641713609*${unitz})
variable           dir_module    equal     sqrt(0.265401914417054*0.265401914417054+0.907159084534245*0.907159084534245+0.326533641713609*0.326533641713609)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43783026855685e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43783026855685e-05*0.265401914417054+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43783026855685e-05*0.265401914417054+1.36322180785137e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43783026855685e-05*0.265401914417054+1.36322180785137e-05*0.907159084534245+${fz}*${unitz}
variable           dot      equal     -2.43783026855685e-05*0.265401914417054+1.36322180785137e-05*0.907159084534245+-1.29467518431977e-05*${unitz}
variable           dot      equal     -2.43783026855685e-05*0.265401914417054+1.36322180785137e-05*0.907159084534245+-1.29467518431977e-05*0.326533641713609
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.66899224156566e-06/${f_module}*${dir_module}
variable           cos      equal     1.66899224156566e-06/3.07856686602499e-05*${dir_module}
variable           cos      equal     1.66899224156566e-06/3.07856686602499e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0542132854083706)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5165564500021/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.8922839784632-90.0)
print              "The dot product: ${dot}"
The dot product: 1.66899224156566e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.8922839784632

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15756905714065^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.15756905714065^2+0.5385801452887^2+${new_z}^2)
variable           norm          equal     sqrt(0.15756905714065^2+0.5385801452887^2+0.193862949943401^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.15756905714065/${norm}
variable           unit_x        equal     0.15756905714065/0.593699776004799
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.5385801452887/${norm}
variable           unit_y        equal     0.5385801452887/0.593699776004799
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.193862949943401/${norm}
variable           unit_z        equal     0.193862949943401/0.593699776004799
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.32320537102542+${delta}*${unit_x}
variable           x_new         equal     1.32320537102542+0.03*${unit_x}
variable           x_new         equal     1.32320537102542+0.03*0.265401914417054
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.56326310055104+${delta}*${unit_y}
variable           y_new         equal     4.56326310055104+0.03*${unit_y}
variable           y_new         equal     4.56326310055104+0.03*0.907159084534245
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.5147312728761+${delta}*${unit_z}
variable           z_new         equal     31.5147312728761+0.03*${unit_z}
variable           z_new         equal     31.5147312728761+0.03*0.326533641713609

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33116742845793  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.33116742845793  y  4.59047787308707  z   ${z_new}
set                atom          288751    x  1.33116742845793  y  4.59047787308707  z   31.5245272821275
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15756905714065  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.15756905714065  0.5385801452887  ${new_z}
fix                hold    carbon   planeforce   0.15756905714065  0.5385801452887  0.193862949943401
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3830   -1152448.6            0   -1152448.6 -0.056111118  0.056988379  -0.11271588 
    4000   -1152448.7            0   -1152448.7 -0.00039609719 0.0001579304 -0.00011681199 
    4075   -1152448.7            0   -1152448.7 -4.402915e-06 5.1438935e-06 -1.0711875e-05 
Loop time of 2.8606 on 104 procs for 245 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.61550691  -1152448.66444479  -1152448.66444479
  Force two-norm initial, final = 0.31599707 0.00015483265
  Force max component initial, final = 0.24135829 3.6332440e-05
  Final line search alpha, max atom move = 1.0000000 3.6332440e-05
  Iterations, force evaluations = 245 490

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.74676    | 2.0593     | 2.6859     |  38.6 | 71.99
Neigh   | 2.0179e-05 | 0.0059194  | 0.0085924  |   3.2 |  0.21
Comm    | 0.046833   | 0.46572    | 1.3891     |  56.9 | 16.28
Output  | 0.00011958 | 0.00012187 | 0.00027064 |   0.0 |  0.00
Modify  | 2.9393e-05 | 0.0040372  | 0.008691   |   3.0 |  0.14
Other   |            | 0.3255     |            |       | 11.38

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3878.90 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115490 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238166
Ave neighs/atom = 28.530346
Neighbor list builds = 2
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.2520314282275-${x_0}
variable           new_x         equal     1.2520314282275-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.64991958620526-${y_0}
variable           new_y         equal     4.64991958620526-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4237099699435-${z_0}
variable           new_z         equal     31.4237099699435-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08639511434273*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08639511434273*0.08639511434273+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08639511434273*0.08639511434273+0.62523663094292*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08639511434273*0.08639511434273+0.62523663094292*0.62523663094292+${new_z}*${new_z})
variable           module        equal     sqrt(0.08639511434273*0.08639511434273+0.62523663094292*0.62523663094292+0.102841647010798*${new_z})
variable           module        equal     sqrt(0.08639511434273*0.08639511434273+0.62523663094292*0.62523663094292+0.102841647010798*0.102841647010798)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.08639511434273/${module}
variable           unitx         equal     0.08639511434273/0.639500871629617
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.62523663094292/${module}
variable           unity         equal     0.62523663094292/0.639500871629617
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.102841647010798/${module}
variable           unitz         equal     0.102841647010798/0.639500871629617
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.40291497363871e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.40291497363871e-06*-4.40291497363871e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.40291497363871e-06*-4.40291497363871e-06+5.14389351131497e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.40291497363871e-06*-4.40291497363871e-06+5.14389351131497e-06*5.14389351131497e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.40291497363871e-06*-4.40291497363871e-06+5.14389351131497e-06*5.14389351131497e-06+-1.07118753445617e-05*${fz})
variable           f_module      equal     sqrt(-4.40291497363871e-06*-4.40291497363871e-06+5.14389351131497e-06*5.14389351131497e-06+-1.07118753445617e-05*-1.07118753445617e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.135097727267474*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.135097727267474*0.135097727267474+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.135097727267474*0.135097727267474+0.977694728311553*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.135097727267474*0.135097727267474+0.977694728311553*0.977694728311553+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.135097727267474*0.135097727267474+0.977694728311553*0.977694728311553+0.160815491539097*${unitz})
variable           dir_module    equal     sqrt(0.135097727267474*0.135097727267474+0.977694728311553*0.977694728311553+0.160815491539097*0.160815491539097)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.40291497363871e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.40291497363871e-06*0.135097727267474+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.40291497363871e-06*0.135097727267474+5.14389351131497e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.40291497363871e-06*0.135097727267474+5.14389351131497e-06*0.977694728311553+${fz}*${unitz}
variable           dot      equal     -4.40291497363871e-06*0.135097727267474+5.14389351131497e-06*0.977694728311553+-1.07118753445617e-05*${unitz}
variable           dot      equal     -4.40291497363871e-06*0.135097727267474+5.14389351131497e-06*0.977694728311553+-1.07118753445617e-05*0.160815491539097
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.71169826387691e-06/${f_module}*${dir_module}
variable           cos      equal     2.71169826387691e-06/1.26723941746723e-05*${dir_module}
variable           cos      equal     2.71169826387691e-06/1.26723941746723e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.213984684069933)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.35514400683091/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(77.6440322238587-90.0)
print              "The dot product: ${dot}"
The dot product: 2.71169826387691e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 77.6440322238587

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08639511434273^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08639511434273^2+0.62523663094292^2+${new_z}^2)
variable           norm          equal     sqrt(0.08639511434273^2+0.62523663094292^2+0.102841647010798^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.08639511434273/${norm}
variable           unit_x        equal     0.08639511434273/0.639500871629617
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.62523663094292/${norm}
variable           unit_y        equal     0.62523663094292/0.639500871629617
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.102841647010798/${norm}
variable           unit_z        equal     0.102841647010798/0.639500871629617
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.2520314282275+${delta}*${unit_x}
variable           x_new         equal     1.2520314282275+0.03*${unit_x}
variable           x_new         equal     1.2520314282275+0.03*0.135097727267474
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.64991958620526+${delta}*${unit_y}
variable           y_new         equal     4.64991958620526+0.03*${unit_y}
variable           y_new         equal     4.64991958620526+0.03*0.977694728311553
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4237099699435+${delta}*${unit_z}
variable           z_new         equal     31.4237099699435+0.03*${unit_z}
variable           z_new         equal     31.4237099699435+0.03*0.160815491539097

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25608436004552  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25608436004552  y  4.67925042805461  z   ${z_new}
set                atom          288751    x  1.25608436004552  y  4.67925042805461  z   31.4285344346897
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08639511434273  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08639511434273  0.62523663094292  ${new_z}
fix                hold    carbon   planeforce   0.08639511434273  0.62523663094292  0.102841647010798
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4075   -1152448.6            0   -1152448.6  -0.18989267  0.069145353   -0.2608516 
    4375   -1152448.6            0   -1152448.6 2.8484219e-06 -2.378191e-07 -9.4705331e-07 
Loop time of 3.48719 on 104 procs for 300 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.61380062  -1152448.63537171  -1152448.63537171
  Force two-norm initial, final = 0.46819104 9.0700988e-06
  Force max component initial, final = 0.29850233 2.8484219e-06
  Final line search alpha, max atom move = 1.0000000 2.8484219e-06
  Iterations, force evaluations = 300 600

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.91815    | 2.5202     | 3.2849     |  42.7 | 72.27
Neigh   | 1.0172e-05 | 0.0029507  | 0.0042934  |   2.2 |  0.08
Comm    | 0.058817   | 0.57136    | 1.7136     |  63.2 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.4215e-05 | 0.0049447  | 0.010679   |   3.3 |  0.14
Other   |            | 0.3877     |            |       | 11.12

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115497 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238168
Ave neighs/atom = 28.530353
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20202045358093-${x_0}
variable           new_x         equal     1.20202045358093-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.69736299277787-${y_0}
variable           new_y         equal     4.69736299277787-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3638351444921-${z_0}
variable           new_z         equal     31.3638351444921-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0363841396961599*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0363841396961599*0.0363841396961599+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0363841396961599*0.0363841396961599+0.67268003751553*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0363841396961599*0.0363841396961599+0.67268003751553*0.67268003751553+${new_z}*${new_z})
variable           module        equal     sqrt(0.0363841396961599*0.0363841396961599+0.67268003751553*0.67268003751553+0.0429668215593999*${new_z})
variable           module        equal     sqrt(0.0363841396961599*0.0363841396961599+0.67268003751553*0.67268003751553+0.0429668215593999*0.0429668215593999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0363841396961599/${module}
variable           unitx         equal     0.0363841396961599/0.675032137196624
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.67268003751553/${module}
variable           unity         equal     0.67268003751553/0.675032137196624
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0429668215593999/${module}
variable           unitz         equal     0.0429668215593999/0.675032137196624
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.8484219093558e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.8484219093558e-06*2.8484219093558e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.8484219093558e-06*2.8484219093558e-06+-2.37819102544435e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.8484219093558e-06*2.8484219093558e-06+-2.37819102544435e-07*-2.37819102544435e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.8484219093558e-06*2.8484219093558e-06+-2.37819102544435e-07*-2.37819102544435e-07+-9.47053307155673e-07*${fz})
variable           f_module      equal     sqrt(2.8484219093558e-06*2.8484219093558e-06+-2.37819102544435e-07*-2.37819102544435e-07+-9.47053307155673e-07*-9.47053307155673e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0538998629713564*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0538998629713564*0.0538998629713564+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0538998629713564*0.0538998629713564+0.996515573775699*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0538998629713564*0.0538998629713564+0.996515573775699*0.996515573775699+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0538998629713564*0.0538998629713564+0.996515573775699*0.996515573775699+0.0636515199673886*${unitz})
variable           dir_module    equal     sqrt(0.0538998629713564*0.0538998629713564+0.996515573775699*0.996515573775699+0.0636515199673886*0.0636515199673886)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.8484219093558e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.8484219093558e-06*0.0538998629713564+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.8484219093558e-06*0.0538998629713564+-2.37819102544435e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.8484219093558e-06*0.0538998629713564+-2.37819102544435e-07*0.996515573775699+${fz}*${unitz}
variable           dot      equal     2.8484219093558e-06*0.0538998629713564+-2.37819102544435e-07*0.996515573775699+-9.47053307155673e-07*${unitz}
variable           dot      equal     2.8484219093558e-06*0.0538998629713564+-2.37819102544435e-07*0.996515573775699+-9.47053307155673e-07*0.0636515199673886
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.43742271318603e-07/${f_module}*${dir_module}
variable           cos      equal     -1.43742271318603e-07/3.01114185415229e-06*${dir_module}
variable           cos      equal     -1.43742271318603e-07/3.01114185415229e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0477367982914475)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61855127415487/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.7361569345959-90.0)
print              "The dot product: ${dot}"
The dot product: -1.43742271318603e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.7361569345959

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0363841396961599^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0363841396961599^2+0.67268003751553^2+${new_z}^2)
variable           norm          equal     sqrt(0.0363841396961599^2+0.67268003751553^2+0.0429668215593999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0363841396961599/${norm}
variable           unit_x        equal     0.0363841396961599/0.675032137196624
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.67268003751553/${norm}
variable           unit_y        equal     0.67268003751553/0.675032137196624
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0429668215593999/${norm}
variable           unit_z        equal     0.0429668215593999/0.675032137196624
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20202045358093+${delta}*${unit_x}
variable           x_new         equal     1.20202045358093+0.03*${unit_x}
variable           x_new         equal     1.20202045358093+0.03*0.0538998629713564
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.69736299277787+${delta}*${unit_y}
variable           y_new         equal     4.69736299277787+0.03*${unit_y}
variable           y_new         equal     4.69736299277787+0.03*0.996515573775699
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3638351444921+${delta}*${unit_z}
variable           z_new         equal     31.3638351444921+0.03*${unit_z}
variable           z_new         equal     31.3638351444921+0.03*0.0636515199673886

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20363744947007  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20363744947007  y  4.72725845999114  z   ${z_new}
set                atom          288751    x  1.20363744947007  y  4.72725845999114  z   31.3657446900911
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0363841396961599  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0363841396961599  0.67268003751553  ${new_z}
fix                hold    carbon   planeforce   0.0363841396961599  0.67268003751553  0.0429668215593999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4375   -1152448.6            0   -1152448.6  -0.10357596  0.014056955  -0.13236519 
    4593   -1152448.6            0   -1152448.6 -5.1065766e-06 1.1918573e-06 -1.4335251e-05 
Loop time of 2.53455 on 104 procs for 218 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.5880085  -1152448.59602149  -1152448.59602149
  Force two-norm initial, final = 0.39175623 0.0001480086
  Force max component initial, final = 0.32049496 3.6498658e-05
  Final line search alpha, max atom move = 1.0000000 3.6498658e-05
  Iterations, force evaluations = 218 436

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.65847    | 1.8282     | 2.3952     |  36.5 | 72.13
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.041517   | 0.41222    | 1.2273     |  53.4 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.485e-05  | 0.0035993  | 0.0077396  |   2.8 |  0.14
Other   |            | 0.2905     |            |       | 11.46

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115492 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238166
Ave neighs/atom = 28.530346
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1807113350566-${x_0}
variable           new_x         equal     1.1807113350566-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.73023641332162-${y_0}
variable           new_y         equal     4.73023641332162-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3385361890598-${z_0}
variable           new_z         equal     31.3385361890598-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01507502117183*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01507502117183*0.01507502117183+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01507502117183*0.01507502117183+0.70555345805928*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01507502117183*0.01507502117183+0.70555345805928*0.70555345805928+${new_z}*${new_z})
variable           module        equal     sqrt(0.01507502117183*0.01507502117183+0.70555345805928*0.70555345805928+0.0176678661270984*${new_z})
variable           module        equal     sqrt(0.01507502117183*0.01507502117183+0.70555345805928*0.70555345805928+0.0176678661270984*0.0176678661270984)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.01507502117183/${module}
variable           unitx         equal     0.01507502117183/0.705935614582679
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.70555345805928/${module}
variable           unity         equal     0.70555345805928/0.705935614582679
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0176678661270984/${module}
variable           unitz         equal     0.0176678661270984/0.705935614582679
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.10657655243016e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.10657655243016e-06*-5.10657655243016e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.10657655243016e-06*-5.10657655243016e-06+1.19185725338261e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.10657655243016e-06*-5.10657655243016e-06+1.19185725338261e-06*1.19185725338261e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-5.10657655243016e-06*-5.10657655243016e-06+1.19185725338261e-06*1.19185725338261e-06+-1.43352513694901e-05*${fz})
variable           f_module      equal     sqrt(-5.10657655243016e-06*-5.10657655243016e-06+1.19185725338261e-06*1.19185725338261e-06+-1.43352513694901e-05*-1.43352513694901e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.021354668698422*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.021354668698422*0.021354668698422+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.021354668698422*0.021354668698422+0.999458652438686*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.021354668698422*0.021354668698422+0.999458652438686*0.999458652438686+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.021354668698422*0.021354668698422+0.999458652438686*0.999458652438686+0.0250275885819175*${unitz})
variable           dir_module    equal     sqrt(0.021354668698422*0.021354668698422+0.999458652438686*0.999458652438686+0.0250275885819175*0.0250275885819175)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.10657655243016e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.10657655243016e-06*0.021354668698422+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.10657655243016e-06*0.021354668698422+1.19185725338261e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -5.10657655243016e-06*0.021354668698422+1.19185725338261e-06*0.999458652438686+${fz}*${unitz}
variable           dot      equal     -5.10657655243016e-06*0.021354668698422+1.19185725338261e-06*0.999458652438686+-1.43352513694901e-05*${unitz}
variable           dot      equal     -5.10657655243016e-06*0.021354668698422+1.19185725338261e-06*0.999458652438686+-1.43352513694901e-05*0.0250275885819175
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.23386020410813e-07/${f_module}*${dir_module}
variable           cos      equal     7.23386020410813e-07/1.52642418621017e-05*${dir_module}
variable           cos      equal     7.23386020410813e-07/1.52642418621017e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.04739089087725)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52338767879253/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.2836845570431-90.0)
print              "The dot product: ${dot}"
The dot product: 7.23386020410813e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.2836845570431

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01507502117183^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01507502117183^2+0.70555345805928^2+${new_z}^2)
variable           norm          equal     sqrt(0.01507502117183^2+0.70555345805928^2+0.0176678661270984^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01507502117183/${norm}
variable           unit_x        equal     0.01507502117183/0.705935614582679
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.70555345805928/${norm}
variable           unit_y        equal     0.70555345805928/0.705935614582679
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0176678661270984/${norm}
variable           unit_z        equal     0.0176678661270984/0.705935614582679
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1807113350566+${delta}*${unit_x}
variable           x_new         equal     1.1807113350566+0.03*${unit_x}
variable           x_new         equal     1.1807113350566+0.03*0.021354668698422
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.73023641332162+${delta}*${unit_y}
variable           y_new         equal     4.73023641332162+0.03*${unit_y}
variable           y_new         equal     4.73023641332162+0.03*0.999458652438686
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3385361890598+${delta}*${unit_z}
variable           z_new         equal     31.3385361890598+0.03*${unit_z}
variable           z_new         equal     31.3385361890598+0.03*0.0250275885819175

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18135197511755  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18135197511755  y  4.76022017289478  z   ${z_new}
set                atom          288751    x  1.18135197511755  y  4.76022017289478  z   31.3392870167173
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01507502117183  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01507502117183  0.70555345805928  ${new_z}
fix                hold    carbon   planeforce   0.01507502117183  0.70555345805928  0.0176678661270984
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4593   -1152448.5            0   -1152448.5 -0.039616049 0.0021328148 -0.051370214 
    4793   -1152448.6            0   -1152448.6 -2.4298443e-06 1.3452489e-07 -3.2989012e-06 
Loop time of 2.33488 on 104 procs for 200 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.54452709  -1152448.55003275  -1152448.55003275
  Force two-norm initial, final = 0.36945701 0.0001750371
  Force max component initial, final = 0.32977745 6.2626075e-05
  Final line search alpha, max atom move = 1.0000000 6.2626075e-05
  Iterations, force evaluations = 200 400

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60502    | 1.6814     | 2.1937     |  35.1 | 72.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039326   | 0.3807     | 1.1481     |  51.9 | 16.30
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2841e-05 | 0.0032993  | 0.0071015  |   2.7 |  0.14
Other   |            | 0.2695     |            |       | 11.54

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115514 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17227496715785-${x_0}
variable           new_x         equal     1.17227496715785-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.7606831464413-${y_0}
variable           new_y         equal     4.7606831464413-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3285434159685-${z_0}
variable           new_z         equal     31.3285434159685-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00663865327308*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00663865327308*0.00663865327308+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00663865327308*0.00663865327308+0.73600019117896*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00663865327308*0.00663865327308+0.73600019117896*0.73600019117896+${new_z}*${new_z})
variable           module        equal     sqrt(0.00663865327308*0.00663865327308+0.73600019117896*0.73600019117896+0.00767509303580027*${new_z})
variable           module        equal     sqrt(0.00663865327308*0.00663865327308+0.73600019117896*0.73600019117896+0.00767509303580027*0.00767509303580027)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00663865327308/${module}
variable           unitx         equal     0.00663865327308/0.736070146240054
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.73600019117896/${module}
variable           unity         equal     0.73600019117896/0.736070146240054
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00767509303580027/${module}
variable           unitz         equal     0.00767509303580027/0.736070146240054
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.42984433400924e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.42984433400924e-06*-2.42984433400924e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.42984433400924e-06*-2.42984433400924e-06+1.34524887690005e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.42984433400924e-06*-2.42984433400924e-06+1.34524887690005e-07*1.34524887690005e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.42984433400924e-06*-2.42984433400924e-06+1.34524887690005e-07*1.34524887690005e-07+-3.29890123145532e-06*${fz})
variable           f_module      equal     sqrt(-2.42984433400924e-06*-2.42984433400924e-06+1.34524887690005e-07*1.34524887690005e-07+-3.29890123145532e-06*-3.29890123145532e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00901904975631893*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00901904975631893*0.00901904975631893+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00901904975631893*0.00901904975631893+0.999904961420523*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00901904975631893*0.00901904975631893+0.999904961420523*0.999904961420523+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00901904975631893*0.00901904975631893+0.999904961420523*0.999904961420523+0.010427121755998*${unitz})
variable           dir_module    equal     sqrt(0.00901904975631893*0.00901904975631893+0.999904961420523*0.999904961420523+0.010427121755998*0.010427121755998)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.42984433400924e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.42984433400924e-06*0.00901904975631893+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.42984433400924e-06*0.00901904975631893+1.34524887690005e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.42984433400924e-06*0.00901904975631893+1.34524887690005e-07*0.999904961420523+${fz}*${unitz}
variable           dot      equal     -2.42984433400924e-06*0.00901904975631893+1.34524887690005e-07*0.999904961420523+-3.29890123145532e-06*${unitz}
variable           dot      equal     -2.42984433400924e-06*0.00901904975631893+1.34524887690005e-07*0.999904961420523+-3.29890123145532e-06*0.010427121755998
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.81991708858393e-08/${f_module}*${dir_module}
variable           cos      equal     7.81991708858393e-08/4.09938895054156e-06*${dir_module}
variable           cos      equal     7.81991708858393e-08/4.09938895054156e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0190758115000306)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55171935820007/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.9069702136128-90.0)
print              "The dot product: ${dot}"
The dot product: 7.81991708858393e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.9069702136128

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00663865327308^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00663865327308^2+0.73600019117896^2+${new_z}^2)
variable           norm          equal     sqrt(0.00663865327308^2+0.73600019117896^2+0.00767509303580027^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00663865327308/${norm}
variable           unit_x        equal     0.00663865327308/0.736070146240054
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.73600019117896/${norm}
variable           unit_y        equal     0.73600019117896/0.736070146240054
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00767509303580027/${norm}
variable           unit_z        equal     0.00767509303580027/0.736070146240054
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17227496715785+${delta}*${unit_x}
variable           x_new         equal     1.17227496715785+0.03*${unit_x}
variable           x_new         equal     1.17227496715785+0.03*0.00901904975631893
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.7606831464413+${delta}*${unit_y}
variable           y_new         equal     4.7606831464413+0.03*${unit_y}
variable           y_new         equal     4.7606831464413+0.03*0.999904961420523
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3285434159685+${delta}*${unit_z}
variable           z_new         equal     31.3285434159685+0.03*${unit_z}
variable           z_new         equal     31.3285434159685+0.03*0.010427121755998

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17254553865054  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17254553865054  y  4.79068029528392  z   ${z_new}
set                atom          288751    x  1.17254553865054  y  4.79068029528392  z   31.3288562296212
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00663865327308  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00663865327308  0.73600019117896  ${new_z}
fix                hold    carbon   planeforce   0.00663865327308  0.73600019117896  0.00767509303580027
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4793   -1152448.5            0   -1152448.5 -0.014890529 0.00034208046 -0.019923957 
    4942   -1152448.5            0   -1152448.5 9.4927935e-08 3.3546041e-09 -4.0379738e-07 
Loop time of 1.73715 on 104 procs for 149 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.4933125  -1152448.49877157  -1152448.49877157
  Force two-norm initial, final = 0.37517631 0.00024201607
  Force max component initial, final = 0.33672504 0.00010059203
  Final line search alpha, max atom move = 1.0000000 0.00010059203
  Iterations, force evaluations = 149 298

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.45303    | 1.2537     | 1.6405     |  30.2 | 72.17
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.027488   | 0.28763    | 0.84998    |  44.1 | 16.56
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7407e-05 | 0.0024642  | 0.0053352  |   2.3 |  0.14
Other   |            | 0.1934     |            |       | 11.13

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16879640475787-${x_0}
variable           new_x         equal     1.16879640475787-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.79075987478224-${y_0}
variable           new_y         equal     4.79075987478224-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3244678364476-${z_0}
variable           new_z         equal     31.3244678364476-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00316009087309999*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00316009087309999*0.00316009087309999+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00316009087309999*0.00316009087309999+0.7660769195199*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00316009087309999*0.00316009087309999+0.7660769195199*0.7660769195199+${new_z}*${new_z})
variable           module        equal     sqrt(0.00316009087309999*0.00316009087309999+0.7660769195199*0.7660769195199+0.0035995135148994*${new_z})
variable           module        equal     sqrt(0.00316009087309999*0.00316009087309999+0.7660769195199*0.7660769195199+0.0035995135148994*0.0035995135148994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00316009087309999/${module}
variable           unitx         equal     0.00316009087309999/0.766091893504278
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.7660769195199/${module}
variable           unity         equal     0.7660769195199/0.766091893504278
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0035995135148994/${module}
variable           unitz         equal     0.0035995135148994/0.766091893504278
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.4927934900601e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.4927934900601e-08*9.4927934900601e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.4927934900601e-08*9.4927934900601e-08+3.35460406993562e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.4927934900601e-08*9.4927934900601e-08+3.35460406993562e-09*3.35460406993562e-09+${fz}*${fz})
variable           f_module      equal     sqrt(9.4927934900601e-08*9.4927934900601e-08+3.35460406993562e-09*3.35460406993562e-09+-4.03797380386613e-07*${fz})
variable           f_module      equal     sqrt(9.4927934900601e-08*9.4927934900601e-08+3.35460406993562e-09*3.35460406993562e-09+-4.03797380386613e-07*-4.03797380386613e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00412495015270951*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00412495015270951*0.00412495015270951+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00412495015270951*0.00412495015270951+0.999980454062359*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00412495015270951*0.00412495015270951+0.999980454062359*0.999980454062359+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00412495015270951*0.00412495015270951+0.999980454062359*0.999980454062359+0.0046985401430557*${unitz})
variable           dir_module    equal     sqrt(0.00412495015270951*0.00412495015270951+0.999980454062359*0.999980454062359+0.0046985401430557*0.0046985401430557)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.4927934900601e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.4927934900601e-08*0.00412495015270951+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.4927934900601e-08*0.00412495015270951+3.35460406993562e-09*${unity}+${fz}*${unitz}
variable           dot      equal     9.4927934900601e-08*0.00412495015270951+3.35460406993562e-09*0.999980454062359+${fz}*${unitz}
variable           dot      equal     9.4927934900601e-08*0.00412495015270951+3.35460406993562e-09*0.999980454062359+-4.03797380386613e-07*${unitz}
variable           dot      equal     9.4927934900601e-08*0.00412495015270951+3.35460406993562e-09*0.999980454062359+-4.03797380386613e-07*0.0046985401430557
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.84885329921106e-09/${f_module}*${dir_module}
variable           cos      equal     1.84885329921106e-09/4.14819105876344e-07*${dir_module}
variable           cos      equal     1.84885329921106e-09/4.14819105876344e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00445701095494429)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56633930108344/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7446312375523-90.0)
print              "The dot product: ${dot}"
The dot product: 1.84885329921106e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7446312375523

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00316009087309999^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00316009087309999^2+0.7660769195199^2+${new_z}^2)
variable           norm          equal     sqrt(0.00316009087309999^2+0.7660769195199^2+0.0035995135148994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00316009087309999/${norm}
variable           unit_x        equal     0.00316009087309999/0.766091893504278
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.7660769195199/${norm}
variable           unit_y        equal     0.7660769195199/0.766091893504278
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0035995135148994/${norm}
variable           unit_z        equal     0.0035995135148994/0.766091893504278
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16879640475787+${delta}*${unit_x}
variable           x_new         equal     1.16879640475787+0.03*${unit_x}
variable           x_new         equal     1.16879640475787+0.03*0.00412495015270951
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.79075987478224+${delta}*${unit_y}
variable           y_new         equal     4.79075987478224+0.03*${unit_y}
variable           y_new         equal     4.79075987478224+0.03*0.999980454062359
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3244678364476+${delta}*${unit_z}
variable           z_new         equal     31.3244678364476+0.03*${unit_z}
variable           z_new         equal     31.3244678364476+0.03*0.0046985401430557

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16892015326245  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16892015326245  y  4.82075928840411  z   ${z_new}
set                atom          288751    x  1.16892015326245  y  4.82075928840411  z   31.3246087926519
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00316009087309999  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00316009087309999  0.7660769195199  ${new_z}
fix                hold    carbon   planeforce   0.00316009087309999  0.7660769195199  0.0035995135148994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4942   -1152448.4            0   -1152448.4 -0.0056307232 6.0018807e-05 -0.0078303432 
    5000   -1152448.4            0   -1152448.4 3.3731916e-06 -6.5051017e-08 1.0883274e-05 
    5125   -1152448.4            0   -1152448.4 -2.7995687e-07 1.6833605e-09 -1.1248589e-07 
Loop time of 2.16642 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.43671271  -1152448.44236559  -1152448.44236559
  Force two-norm initial, final = 0.38265708 0.00023963559
  Force max component initial, final = 0.34314438 0.00011568498
  Final line search alpha, max atom move = 1.0000000 0.00011568498
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56275    | 1.5453     | 2.0072     |  33.4 | 71.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035862   | 0.34817    | 1.0475     |  49.4 | 16.07
Output  | 0.00010025 | 0.00010683 | 0.0002395  |   0.0 |  0.00
Modify  | 2.0693e-05 | 0.003021   | 0.0065172  |   2.6 |  0.14
Other   |            | 0.2698     |            |       | 12.46

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.0 ave      115498 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238154
Ave neighs/atom = 28.530305
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16728142721734-${x_0}
variable           new_x         equal     1.16728142721734-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.82077513872961-${y_0}
variable           new_y         equal     4.82077513872961-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3226740741703-${z_0}
variable           new_z         equal     31.3226740741703-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00164511333256989*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00164511333256989*0.00164511333256989+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00164511333256989*0.00164511333256989+0.796092183467271*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00164511333256989*0.00164511333256989+0.796092183467271*0.796092183467271+${new_z}*${new_z})
variable           module        equal     sqrt(0.00164511333256989*0.00164511333256989+0.796092183467271*0.796092183467271+0.00180575123760107*${new_z})
variable           module        equal     sqrt(0.00164511333256989*0.00164511333256989+0.796092183467271*0.796092183467271+0.00180575123760107*0.00180575123760107)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00164511333256989/${module}
variable           unitx         equal     0.00164511333256989/0.79609593122506
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.796092183467271/${module}
variable           unity         equal     0.796092183467271/0.79609593122506
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00180575123760107/${module}
variable           unitz         equal     0.00180575123760107/0.79609593122506
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.79956873503067e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.79956873503067e-07*-2.79956873503067e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.79956873503067e-07*-2.79956873503067e-07+1.6833604720403e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.79956873503067e-07*-2.79956873503067e-07+1.6833604720403e-09*1.6833604720403e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-2.79956873503067e-07*-2.79956873503067e-07+1.6833604720403e-09*1.6833604720403e-09+-1.12485885557304e-07*${fz})
variable           f_module      equal     sqrt(-2.79956873503067e-07*-2.79956873503067e-07+1.6833604720403e-09*1.6833604720403e-09+-1.12485885557304e-07*-1.12485885557304e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00206647624745215*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00206647624745215*0.00206647624745215+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00206647624745215*0.00206647624745215+0.999995292328924*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00206647624745215*0.00206647624745215+0.999995292328924*0.999995292328924+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00206647624745215*0.00206647624745215+0.999995292328924*0.999995292328924+0.00226825834271294*${unitz})
variable           dir_module    equal     sqrt(0.00206647624745215*0.00206647624745215+0.999995292328924*0.999995292328924+0.00226825834271294*0.00226825834271294)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.79956873503067e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.79956873503067e-07*0.00206647624745215+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.79956873503067e-07*0.00206647624745215+1.6833604720403e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -2.79956873503067e-07*0.00206647624745215+1.6833604720403e-09*0.999995292328924+${fz}*${unitz}
variable           dot      equal     -2.79956873503067e-07*0.00206647624745215+1.6833604720403e-09*0.999995292328924+-1.12485885557304e-07*${unitz}
variable           dot      equal     -2.79956873503067e-07*0.00206647624745215+1.6833604720403e-09*0.999995292328924+-1.12485885557304e-07*0.00226825834271294
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.49681269575033e-10/${f_module}*${dir_module}
variable           cos      equal     8.49681269575033e-10/3.01714698305704e-07*${dir_module}
variable           cos      equal     8.49681269575033e-10/3.01714698305704e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00281617459920404)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56798014847324/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8386448678128-90.0)
print              "The dot product: ${dot}"
The dot product: 8.49681269575033e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8386448678128

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5125   -1152448.4            0   -1152448.4 -0.0081123206   -1.9665406 -0.0092401632 
    5327   -1152449.3            0   -1152449.3 2.4844827e-05 8.1635297e-07 -2.7373111e-05 
Loop time of 2.33934 on 104 procs for 202 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.44236559  -1152449.34502399  -1152449.34502399
  Force two-norm initial, final = 1.9665791 0.00016784424
  Force max component initial, final = 1.9665406 2.7373111e-05
  Final line search alpha, max atom move = 1.0000000 2.7373111e-05
  Iterations, force evaluations = 202 398

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62452    | 1.6783     | 2.191      |  34.4 | 71.74
Neigh   | 5.0473e-05 | 0.01479    | 0.021419   |   5.0 |  0.63
Comm    | 0.036576   | 0.38198    | 1.1327     |  50.9 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1507e-05 | 0.0021423  | 0.0055826  |   2.9 |  0.09
Other   |            | 0.2621     |            |       | 11.21

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115488 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238178
Ave neighs/atom = 28.530388
Neighbor list builds = 5
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563669057905-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563669057905-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563669057905-1.16563631388477)^2+(4.02468245689563-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563669057905-1.16563631388477)^2+(4.02468245689563-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563669057905-1.16563631388477)^2+(4.02468245689563-4.02468295526234)^2+(31.3208871812097-${z_0})^2)
variable                displacement      equal     sqrt((1.16563669057905-1.16563631388477)^2+(4.02468245689563-4.02468295526234)^2+(31.3208871812097-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 12
12
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.342 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.83719 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48642    | 1.3231     | 1.72       |  30.7 | 72.02
Neigh   | 3.0113e-05 | 0.008879   | 0.012944   |   3.9 |  0.48
Comm    | 0.032361   | 0.29774    | 0.89523    |  45.8 | 16.21
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8257e-05 | 0.0016901  | 0.0043869  |   2.6 |  0.09
Other   |            | 0.2058     |            |       | 11.20

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,12)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,12)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,12)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.1789128265076
variable                y_1    equal     $y
variable                y_1    equal     4.02399280500141
variable                z_1    equal     $z
variable                z_1    equal     31.303437250936

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.1789128265076  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.1789128265076  y  4.02399280500141  z  ${z_1}
set                atom        288751    x  1.1789128265076  y  4.02399280500141  z  31.303437250936
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.1789128265076-${x_0}
variable           vector_x          equal     1.1789128265076-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.02399280500141-${y_0}
variable           vector_y          equal     4.02399280500141-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.303437250936-${z_0}
variable           vector_z          equal     31.303437250936-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.01327651262283  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.01327651262283  -0.000690150260929556  ${vector_z}
fix                hold    carbon   planeforce   0.01327651262283  -0.000690150260929556  -0.0174310719967004
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3 -0.0086669494 -0.0032835933 -0.0064712423 
     369   -1152449.3            0   -1152449.3 4.7274712e-07 -6.0233383e-08 3.6245637e-07 
Loop time of 2.46781 on 104 procs for 211 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.34120784  -1152449.34390578  -1152449.34390578
  Force two-norm initial, final = 0.24384295 3.5156319e-05
  Force max component initial, final = 0.13657145 8.8856487e-07
  Final line search alpha, max atom move = 1.0000000 8.8856487e-07
  Iterations, force evaluations = 211 422

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64115    | 1.7734     | 2.3265     |  36.0 | 71.86
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040567   | 0.40564    | 1.2018     |  52.1 | 16.44
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6468e-05 | 0.0034704  | 0.0074459  |   2.8 |  0.14
Other   |            | 0.2853     |            |       | 11.56

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17841208035168-${x_0}
variable           new_x         equal     1.17841208035168-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.02392197239376-${y_0}
variable           new_y         equal     4.02392197239376-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.303058658184-${z_0}
variable           new_z         equal     31.303058658184-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0127757664669099^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0127757664669099^2+-0.000760982868579951^2+${new_z}^2)
variable           norm          equal     sqrt(0.0127757664669099^2+-0.000760982868579951^2+-0.0178096647487003^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0127757664669099/${norm}
variable           unit_x        equal     0.0127757664669099/0.0219313351669339
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.000760982868579951/${norm}
variable           unit_y        equal     -0.000760982868579951/0.0219313351669339
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0178096647487003/${norm}
variable           unit_z        equal     -0.0178096647487003/0.0219313351669339
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17841208035168+${delta}*${unit_x}
variable           x_new         equal     1.17841208035168+0.03*${unit_x}
variable           x_new         equal     1.17841208035168+0.03*0.582534823788205
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.02392197239376+${delta}*${unit_y}
variable           y_new         equal     4.02392197239376+0.03*${unit_y}
variable           y_new         equal     4.02392197239376+0.03*-0.0346984286541429
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.303058658184+${delta}*${unit_z}
variable           z_new         equal     31.303058658184+0.03*${unit_z}
variable           z_new         equal     31.303058658184+0.03*-0.812064774585731

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19588812506533  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19588812506533  y  4.02288101953414  z   ${z_new}
set                atom          288751    x  1.19588812506533  y  4.02288101953414  z   31.2786967149464
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0127757664669099  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0127757664669099  -0.000760982868579951  ${new_z}
fix                hold    carbon   planeforce   0.0127757664669099  -0.000760982868579951  -0.0178096647487003
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     369   -1152449.3            0   -1152449.3 -0.017471721 -0.0045824283 -0.012337541 
     573   -1152449.3            0   -1152449.3 -3.4139072e-06 9.7132186e-07 -2.4904703e-06 
Loop time of 2.37027 on 104 procs for 204 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33370405  -1152449.33873726  -1152449.33873726
  Force two-norm initial, final = 0.33408652 8.1437515e-05
  Force max component initial, final = 0.19217581 1.2895466e-05
  Final line search alpha, max atom move = 1.0000000 1.2895466e-05
  Iterations, force evaluations = 204 408

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62014    | 1.7144     | 2.2345     |  35.3 | 72.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.04239    | 0.38544    | 1.1606     |  52.0 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5516e-05 | 0.0033655  | 0.0072778  |   2.7 |  0.14
Other   |            | 0.267      |            |       | 11.27

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115501 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19475964985152-${x_0}
variable           new_x         equal     1.19475964985152-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.02273507034982-${y_0}
variable           new_y         equal     4.02273507034982-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2778934392436-${z_0}
variable           new_z         equal     31.2778934392436-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02912333596675*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02912333596675*0.02912333596675+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02912333596675*0.02912333596675+-0.00194788491251963*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02912333596675*0.02912333596675+-0.00194788491251963*-0.00194788491251963+${new_z}*${new_z})
variable           module        equal     sqrt(0.02912333596675*0.02912333596675+-0.00194788491251963*-0.00194788491251963+-0.0429748836891015*${new_z})
variable           module        equal     sqrt(0.02912333596675*0.02912333596675+-0.00194788491251963*-0.00194788491251963+-0.0429748836891015*-0.0429748836891015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.02912333596675/${module}
variable           unitx         equal     0.02912333596675/0.0519500104095891
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.00194788491251963/${module}
variable           unity         equal     -0.00194788491251963/0.0519500104095891
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0429748836891015/${module}
variable           unitz         equal     -0.0429748836891015/0.0519500104095891
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.41390721337956e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.41390721337956e-06*-3.41390721337956e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.41390721337956e-06*-3.41390721337956e-06+9.71321856639604e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.41390721337956e-06*-3.41390721337956e-06+9.71321856639604e-07*9.71321856639604e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-3.41390721337956e-06*-3.41390721337956e-06+9.71321856639604e-07*9.71321856639604e-07+-2.49047027093296e-06*${fz})
variable           f_module      equal     sqrt(-3.41390721337956e-06*-3.41390721337956e-06+9.71321856639604e-07*9.71321856639604e-07+-2.49047027093296e-06*-2.49047027093296e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.560603082408128*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.560603082408128*0.560603082408128+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.560603082408128*0.560603082408128+-0.0374953709760967*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.560603082408128*0.560603082408128+-0.0374953709760967*-0.0374953709760967+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.560603082408128*0.560603082408128+-0.0374953709760967*-0.0374953709760967+-0.827235323925345*${unitz})
variable           dir_module    equal     sqrt(0.560603082408128*0.560603082408128+-0.0374953709760967*-0.0374953709760967+-0.827235323925345*-0.827235323925345)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.41390721337956e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.41390721337956e-06*0.560603082408128+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.41390721337956e-06*0.560603082408128+9.71321856639604e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -3.41390721337956e-06*0.560603082408128+9.71321856639604e-07*-0.0374953709760967+${fz}*${unitz}
variable           dot      equal     -3.41390721337956e-06*0.560603082408128+9.71321856639604e-07*-0.0374953709760967+-2.49047027093296e-06*${unitz}
variable           dot      equal     -3.41390721337956e-06*0.560603082408128+9.71321856639604e-07*-0.0374953709760967+-2.49047027093296e-06*-0.827235323925345
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.09938001073852e-07/${f_module}*${dir_module}
variable           cos      equal     1.09938001073852e-07/4.33597402911407e-06*${dir_module}
variable           cos      equal     1.09938001073852e-07/4.33597402911407e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0253548569100435)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54543875245771/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.54711801179-90.0)
print              "The dot product: ${dot}"
The dot product: 1.09938001073852e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.54711801179

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02912333596675^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02912333596675^2+-0.00194788491251963^2+${new_z}^2)
variable           norm          equal     sqrt(0.02912333596675^2+-0.00194788491251963^2+-0.0429748836891015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.02912333596675/${norm}
variable           unit_x        equal     0.02912333596675/0.0519500104095891
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00194788491251963/${norm}
variable           unit_y        equal     -0.00194788491251963/0.0519500104095891
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0429748836891015/${norm}
variable           unit_z        equal     -0.0429748836891015/0.0519500104095891
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19475964985152+${delta}*${unit_x}
variable           x_new         equal     1.19475964985152+0.03*${unit_x}
variable           x_new         equal     1.19475964985152+0.03*0.560603082408128
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.02273507034982+${delta}*${unit_y}
variable           y_new         equal     4.02273507034982+0.03*${unit_y}
variable           y_new         equal     4.02273507034982+0.03*-0.0374953709760967
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2778934392436+${delta}*${unit_z}
variable           z_new         equal     31.2778934392436+0.03*${unit_z}
variable           z_new         equal     31.2778934392436+0.03*-0.827235323925345

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21157774232376  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21157774232376  y  4.02161020922054  z   ${z_new}
set                atom          288751    x  1.21157774232376  y  4.02161020922054  z   31.2530763795258
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02912333596675  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02912333596675  -0.00194788491251963  ${new_z}
fix                hold    carbon   planeforce   0.02912333596675  -0.00194788491251963  -0.0429748836891015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     573   -1152449.3            0   -1152449.3 -0.023858199 -0.0046855305 -0.015955912 
     792   -1152449.3            0   -1152449.3 2.4479773e-06 4.1755936e-07 1.6400256e-06 
Loop time of 2.55483 on 104 procs for 219 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32433812  -1152449.32935416  -1152449.32935416
  Force two-norm initial, final = 0.33432802 3.6142025e-05
  Force max component initial, final = 0.1961104 5.4872690e-06
  Final line search alpha, max atom move = 1.0000000 5.4872690e-06
  Iterations, force evaluations = 219 438

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.66654    | 1.8404     | 2.4139     |  36.6 | 72.04
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.048725   | 0.41994    | 1.2575     |  53.5 | 16.44
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.8099e-05 | 0.0036081  | 0.0077171  |   2.8 |  0.14
Other   |            | 0.2909     |            |       | 11.38

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115450 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20988010044867-${x_0}
variable           new_x         equal     1.20988010044867-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.0213905121256-${y_0}
variable           new_y         equal     4.0213905121256-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2519358749843-${z_0}
variable           new_z         equal     31.2519358749843-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0442437865638998*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0442437865638998*0.0442437865638998+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0442437865638998*0.0442437865638998+-0.00329244313673982*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0442437865638998*0.0442437865638998+-0.00329244313673982*-0.00329244313673982+${new_z}*${new_z})
variable           module        equal     sqrt(0.0442437865638998*0.0442437865638998+-0.00329244313673982*-0.00329244313673982+-0.0689324479483986*${new_z})
variable           module        equal     sqrt(0.0442437865638998*0.0442437865638998+-0.00329244313673982*-0.00329244313673982+-0.0689324479483986*-0.0689324479483986)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0442437865638998/${module}
variable           unitx         equal     0.0442437865638998/0.0819758208954279
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.00329244313673982/${module}
variable           unity         equal     -0.00329244313673982/0.0819758208954279
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0689324479483986/${module}
variable           unitz         equal     -0.0689324479483986/0.0819758208954279
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.44797729658972e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.44797729658972e-06*2.44797729658972e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.44797729658972e-06*2.44797729658972e-06+4.1755935514074e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.44797729658972e-06*2.44797729658972e-06+4.1755935514074e-07*4.1755935514074e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.44797729658972e-06*2.44797729658972e-06+4.1755935514074e-07*4.1755935514074e-07+1.64002555992285e-06*${fz})
variable           f_module      equal     sqrt(2.44797729658972e-06*2.44797729658972e-06+4.1755935514074e-07*4.1755935514074e-07+1.64002555992285e-06*1.64002555992285e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.539717517685357*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.539717517685357*0.539717517685357+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.539717517685357*0.539717517685357+-0.0401635884920239*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.539717517685357*0.539717517685357+-0.0401635884920239*-0.0401635884920239+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.539717517685357*0.539717517685357+-0.0401635884920239*-0.0401635884920239+-0.840887559227153*${unitz})
variable           dir_module    equal     sqrt(0.539717517685357*0.539717517685357+-0.0401635884920239*-0.0401635884920239+-0.840887559227153*-0.840887559227153)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.44797729658972e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.44797729658972e-06*0.539717517685357+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.44797729658972e-06*0.539717517685357+4.1755935514074e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.44797729658972e-06*0.539717517685357+4.1755935514074e-07*-0.0401635884920239+${fz}*${unitz}
variable           dot      equal     2.44797729658972e-06*0.539717517685357+4.1755935514074e-07*-0.0401635884920239+1.64002555992285e-06*${unitz}
variable           dot      equal     2.44797729658972e-06*0.539717517685357+4.1755935514074e-07*-0.0401635884920239+1.64002555992285e-06*-0.840887559227153
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.46315423990232e-08/${f_module}*${dir_module}
variable           cos      equal     -7.46315423990232e-08/2.97600949206896e-06*${dir_module}
variable           cos      equal     -7.46315423990232e-08/2.97600949206896e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0250777232390943)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59587667930892/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.4369983477539-90.0)
print              "The dot product: ${dot}"
The dot product: -7.46315423990232e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.4369983477539

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0442437865638998^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0442437865638998^2+-0.00329244313673982^2+${new_z}^2)
variable           norm          equal     sqrt(0.0442437865638998^2+-0.00329244313673982^2+-0.0689324479483986^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0442437865638998/${norm}
variable           unit_x        equal     0.0442437865638998/0.0819758208954279
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00329244313673982/${norm}
variable           unit_y        equal     -0.00329244313673982/0.0819758208954279
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0689324479483986/${norm}
variable           unit_z        equal     -0.0689324479483986/0.0819758208954279
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20988010044867+${delta}*${unit_x}
variable           x_new         equal     1.20988010044867+0.03*${unit_x}
variable           x_new         equal     1.20988010044867+0.03*0.539717517685357
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.0213905121256+${delta}*${unit_y}
variable           y_new         equal     4.0213905121256+0.03*${unit_y}
variable           y_new         equal     4.0213905121256+0.03*-0.0401635884920239
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2519358749843+${delta}*${unit_z}
variable           z_new         equal     31.2519358749843+0.03*${unit_z}
variable           z_new         equal     31.2519358749843+0.03*-0.840887559227153

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22607162597923  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22607162597923  y  4.02018560447084  z   ${z_new}
set                atom          288751    x  1.22607162597923  y  4.02018560447084  z   31.2267092482075
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0442437865638998  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0442437865638998  -0.00329244313673982  ${new_z}
fix                hold    carbon   planeforce   0.0442437865638998  -0.00329244313673982  -0.0689324479483986
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     792   -1152449.3            0   -1152449.3 -0.030119774 -0.0047900282 -0.019103369 
     970   -1152449.3            0   -1152449.3 -1.8300396e-05 -3.9923703e-07 -1.1726906e-05 
Loop time of 2.07331 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31076278  -1152449.31576199  -1152449.31576199
  Force two-norm initial, final = 0.33455254 0.00021795262
  Force max component initial, final = 0.19985635 1.8300396e-05
  Final line search alpha, max atom move = 1.0000000 1.8300396e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53916    | 1.496      | 1.9591     |  33.0 | 72.16
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033642   | 0.34016    | 1.0125     |  47.9 | 16.41
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3169e-05 | 0.0029328  | 0.0063911  |   2.6 |  0.14
Other   |            | 0.2342     |            |       | 11.30

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115450 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.223843674094-${x_0}
variable           new_x         equal     1.223843674094-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.01987226088813-${y_0}
variable           new_y         equal     4.01987226088813-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2252942199491-${z_0}
variable           new_z         equal     31.2252942199491-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0582073602092299*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0582073602092299*0.0582073602092299+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0582073602092299*0.0582073602092299+-0.00481069437420967*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0582073602092299*0.0582073602092299+-0.00481069437420967*-0.00481069437420967+${new_z}*${new_z})
variable           module        equal     sqrt(0.0582073602092299*0.0582073602092299+-0.00481069437420967*-0.00481069437420967+-0.0955741029836013*${new_z})
variable           module        equal     sqrt(0.0582073602092299*0.0582073602092299+-0.00481069437420967*-0.00481069437420967+-0.0955741029836013*-0.0955741029836013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0582073602092299/${module}
variable           unitx         equal     0.0582073602092299/0.112007360133203
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.00481069437420967/${module}
variable           unity         equal     -0.00481069437420967/0.112007360133203
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0955741029836013/${module}
variable           unitz         equal     -0.0955741029836013/0.112007360133203
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.83003955497737e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.83003955497737e-05*-1.83003955497737e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.83003955497737e-05*-1.83003955497737e-05+-3.9923703288827e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.83003955497737e-05*-1.83003955497737e-05+-3.9923703288827e-07*-3.9923703288827e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.83003955497737e-05*-1.83003955497737e-05+-3.9923703288827e-07*-3.9923703288827e-07+-1.17269058851586e-05*${fz})
variable           f_module      equal     sqrt(-1.83003955497737e-05*-1.83003955497737e-05+-3.9923703288827e-07*-3.9923703288827e-07+-1.17269058851586e-05*-1.17269058851586e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.519674422645152*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.519674422645152*0.519674422645152+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.519674422645152*0.519674422645152+-0.0429498058742624*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.519674422645152*0.519674422645152+-0.0429498058742624*-0.0429498058742624+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.519674422645152*0.519674422645152+-0.0429498058742624*-0.0429498058742624+-0.853284131238709*${unitz})
variable           dir_module    equal     sqrt(0.519674422645152*0.519674422645152+-0.0429498058742624*-0.0429498058742624+-0.853284131238709*-0.853284131238709)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.83003955497737e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.83003955497737e-05*0.519674422645152+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.83003955497737e-05*0.519674422645152+-3.9923703288827e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.83003955497737e-05*0.519674422645152+-3.9923703288827e-07*-0.0429498058742624+${fz}*${unitz}
variable           dot      equal     -1.83003955497737e-05*0.519674422645152+-3.9923703288827e-07*-0.0429498058742624+-1.17269058851586e-05*${unitz}
variable           dot      equal     -1.83003955497737e-05*0.519674422645152+-3.9923703288827e-07*-0.0429498058742624+-1.17269058851586e-05*-0.853284131238709
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.13282361889473e-07/${f_module}*${dir_module}
variable           cos      equal     5.13282361889473e-07/2.17390015669067e-05*${dir_module}
variable           cos      equal     5.13282361889473e-07/2.17390015669067e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0236111286118514)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54718300382261/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.6470562534087-90.0)
print              "The dot product: ${dot}"
The dot product: 5.13282361889473e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.6470562534087

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0582073602092299^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0582073602092299^2+-0.00481069437420967^2+${new_z}^2)
variable           norm          equal     sqrt(0.0582073602092299^2+-0.00481069437420967^2+-0.0955741029836013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0582073602092299/${norm}
variable           unit_x        equal     0.0582073602092299/0.112007360133203
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00481069437420967/${norm}
variable           unit_y        equal     -0.00481069437420967/0.112007360133203
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0955741029836013/${norm}
variable           unit_z        equal     -0.0955741029836013/0.112007360133203
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.223843674094+${delta}*${unit_x}
variable           x_new         equal     1.223843674094+0.03*${unit_x}
variable           x_new         equal     1.223843674094+0.03*0.519674422645152
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.01987226088813+${delta}*${unit_y}
variable           y_new         equal     4.01987226088813+0.03*${unit_y}
variable           y_new         equal     4.01987226088813+0.03*-0.0429498058742624
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2252942199491+${delta}*${unit_z}
variable           z_new         equal     31.2252942199491+0.03*${unit_z}
variable           z_new         equal     31.2252942199491+0.03*-0.853284131238709

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23943390677335  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23943390677335  y  4.0185837667119  z   ${z_new}
set                atom          288751    x  1.23943390677335  y  4.0185837667119  z   31.1996956960119
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0582073602092299  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0582073602092299  -0.00481069437420967  ${new_z}
fix                hold    carbon   planeforce   0.0582073602092299  -0.00481069437420967  -0.0955741029836013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     970   -1152449.3            0   -1152449.3 -0.036694304 -0.0042261372 -0.022135159 
    1000   -1152449.3            0   -1152449.3 0.00039386226 -4.0071806e-05 0.00024189038 
    1303   -1152449.3            0   -1152449.3 -5.2372051e-08 -1.230374e-09 -3.1834145e-08 
Loop time of 3.88144 on 104 procs for 333 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.29300185   -1152449.2979797   -1152449.2979797
  Force two-norm initial, final = 0.33474467 4.7188669e-07
  Force max component initial, final = 0.20343996 5.2372051e-08
  Final line search alpha, max atom move = 1.0000000 5.2372051e-08
  Iterations, force evaluations = 333 666

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 1.0105     | 2.7989     | 3.6579     |  45.2 | 72.11
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.0751     | 0.63599    | 1.9034     |  66.3 | 16.39
Output  | 9.8657e-05 | 0.00010492 | 0.00018923 |   0.0 |  0.00
Modify  | 4.1215e-05 | 0.0054807  | 0.011743   |   3.5 |  0.14
Other   |            | 0.4409     |            |       | 11.36

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 4 26 34
Nghost:        3879.07 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.23662686239344-${x_0}
variable           new_x         equal     1.23662686239344-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.01819471685037-${y_0}
variable           new_y         equal     4.01819471685037-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.19800570847-${z_0}
variable           new_z         equal     31.19800570847-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0709905485086699*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0709905485086699*0.0709905485086699+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0709905485086699*0.0709905485086699+-0.00648823841196933*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0709905485086699*0.0709905485086699+-0.00648823841196933*-0.00648823841196933+${new_z}*${new_z})
variable           module        equal     sqrt(0.0709905485086699*0.0709905485086699+-0.00648823841196933*-0.00648823841196933+-0.122862614462701*${new_z})
variable           module        equal     sqrt(0.0709905485086699*0.0709905485086699+-0.00648823841196933*-0.00648823841196933+-0.122862614462701*-0.122862614462701)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0709905485086699/${module}
variable           unitx         equal     0.0709905485086699/0.142045687185013
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.00648823841196933/${module}
variable           unity         equal     -0.00648823841196933/0.142045687185013
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.122862614462701/${module}
variable           unitz         equal     -0.122862614462701/0.142045687185013
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.23720506609445e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.23720506609445e-08*-5.23720506609445e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.23720506609445e-08*-5.23720506609445e-08+-1.23037402371683e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.23720506609445e-08*-5.23720506609445e-08+-1.23037402371683e-09*-1.23037402371683e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-5.23720506609445e-08*-5.23720506609445e-08+-1.23037402371683e-09*-1.23037402371683e-09+-3.18341451130639e-08*${fz})
variable           f_module      equal     sqrt(-5.23720506609445e-08*-5.23720506609445e-08+-1.23037402371683e-09*-1.23037402371683e-09+-3.18341451130639e-08*-3.18341451130639e-08)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.499772642982152*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.499772642982152*0.499772642982152+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.499772642982152*0.499772642982152+-0.0456771236110708*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.499772642982152*0.499772642982152+-0.0456771236110708*-0.0456771236110708+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.499772642982152*0.499772642982152+-0.0456771236110708*-0.0456771236110708+-0.864951389215174*${unitz})
variable           dir_module    equal     sqrt(0.499772642982152*0.499772642982152+-0.0456771236110708*-0.0456771236110708+-0.864951389215174*-0.864951389215174)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.23720506609445e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.23720506609445e-08*0.499772642982152+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.23720506609445e-08*0.499772642982152+-1.23037402371683e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -5.23720506609445e-08*0.499772642982152+-1.23037402371683e-09*-0.0456771236110708+${fz}*${unitz}
variable           dot      equal     -5.23720506609445e-08*0.499772642982152+-1.23037402371683e-09*-0.0456771236110708+-3.18341451130639e-08*${unitz}
variable           dot      equal     -5.23720506609445e-08*0.499772642982152+-1.23037402371683e-09*-0.0456771236110708+-3.18341451130639e-08*-0.864951389215174
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.41706980917583e-09/${f_module}*${dir_module}
variable           cos      equal     1.41706980917583e-09/6.13005571406197e-08*${dir_module}
variable           cos      equal     1.41706980917583e-09/6.13005571406197e-08*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.023116752526819)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54767751490142/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.6753896511469-90.0)
print              "The dot product: ${dot}"
The dot product: 1.41706980917583e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.6753896511469

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0709905485086699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0709905485086699^2+-0.00648823841196933^2+${new_z}^2)
variable           norm          equal     sqrt(0.0709905485086699^2+-0.00648823841196933^2+-0.122862614462701^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0709905485086699/${norm}
variable           unit_x        equal     0.0709905485086699/0.142045687185013
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00648823841196933/${norm}
variable           unit_y        equal     -0.00648823841196933/0.142045687185013
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.122862614462701/${norm}
variable           unit_z        equal     -0.122862614462701/0.142045687185013
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.23662686239344+${delta}*${unit_x}
variable           x_new         equal     1.23662686239344+0.03*${unit_x}
variable           x_new         equal     1.23662686239344+0.03*0.499772642982152
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.01819471685037+${delta}*${unit_y}
variable           y_new         equal     4.01819471685037+0.03*${unit_y}
variable           y_new         equal     4.01819471685037+0.03*-0.0456771236110708
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.19800570847+${delta}*${unit_z}
variable           z_new         equal     31.19800570847+0.03*${unit_z}
variable           z_new         equal     31.19800570847+0.03*-0.864951389215174

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2516200416829  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2516200416829  y  4.01682440314204  z   ${z_new}
set                atom          288751    x  1.2516200416829  y  4.01682440314204  z   31.1720571667935
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0709905485086699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0709905485086699  -0.00648823841196933  ${new_z}
fix                hold    carbon   planeforce   0.0709905485086699  -0.00648823841196933  -0.122862614462701
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1303   -1152449.3            0   -1152449.3 -0.046172468 0.0021250371 -0.026790872 
    1507   -1152449.3            0   -1152449.3 -5.5767031e-06 -1.3486977e-06 -3.1510199e-06 
Loop time of 2.36852 on 104 procs for 204 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.27117372   -1152449.2761088   -1152449.2761088
  Force two-norm initial, final = 0.33517916 7.1240670e-05
  Force max component initial, final = 0.20674636 9.9953290e-06
  Final line search alpha, max atom move = 1.0000000 9.9953290e-06
  Iterations, force evaluations = 204 408

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6212     | 1.7143     | 2.2271     |  35.3 | 72.38
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040407   | 0.38738    | 1.1596     |  51.7 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4885e-05 | 0.0033687  | 0.0072205  |   2.7 |  0.14
Other   |            | 0.2634     |            |       | 11.12

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 4 26 34
Nghost:        3879.09 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24756591190085-${x_0}
variable           new_x         equal     1.24756591190085-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.01773600363949-${y_0}
variable           new_y         equal     4.01773600363949-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1696665325097-${z_0}
variable           new_z         equal     31.1696665325097-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0819295980160799*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0819295980160799*0.0819295980160799+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0819295980160799*0.0819295980160799+-0.00694695162284997*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0819295980160799*0.0819295980160799+-0.00694695162284997*-0.00694695162284997+${new_z}*${new_z})
variable           module        equal     sqrt(0.0819295980160799*0.0819295980160799+-0.00694695162284997*-0.00694695162284997+-0.151201790422999*${new_z})
variable           module        equal     sqrt(0.0819295980160799*0.0819295980160799+-0.00694695162284997*-0.00694695162284997+-0.151201790422999*-0.151201790422999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0819295980160799/${module}
variable           unitx         equal     0.0819295980160799/0.172112464961278
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.00694695162284997/${module}
variable           unity         equal     -0.00694695162284997/0.172112464961278
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.151201790422999/${module}
variable           unitz         equal     -0.151201790422999/0.172112464961278
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.57670307937009e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.57670307937009e-06*-5.57670307937009e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.57670307937009e-06*-5.57670307937009e-06+-1.34869768530348e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.57670307937009e-06*-5.57670307937009e-06+-1.34869768530348e-06*-1.34869768530348e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-5.57670307937009e-06*-5.57670307937009e-06+-1.34869768530348e-06*-1.34869768530348e-06+-3.15101986118031e-06*${fz})
variable           f_module      equal     sqrt(-5.57670307937009e-06*-5.57670307937009e-06+-1.34869768530348e-06*-1.34869768530348e-06+-3.15101986118031e-06*-3.15101986118031e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.476023616502805*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.476023616502805*0.476023616502805+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.476023616502805*0.476023616502805+-0.0403628617161046*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.476023616502805*0.476023616502805+-0.0403628617161046*-0.0403628617161046+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.476023616502805*0.476023616502805+-0.0403628617161046*-0.0403628617161046+-0.878505751788614*${unitz})
variable           dir_module    equal     sqrt(0.476023616502805*0.476023616502805+-0.0403628617161046*-0.0403628617161046+-0.878505751788614*-0.878505751788614)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.57670307937009e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.57670307937009e-06*0.476023616502805+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.57670307937009e-06*0.476023616502805+-1.34869768530348e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -5.57670307937009e-06*0.476023616502805+-1.34869768530348e-06*-0.0403628617161046+${fz}*${unitz}
variable           dot      equal     -5.57670307937009e-06*0.476023616502805+-1.34869768530348e-06*-0.0403628617161046+-3.15101986118031e-06*${unitz}
variable           dot      equal     -5.57670307937009e-06*0.476023616502805+-1.34869768530348e-06*-0.0403628617161046+-3.15101986118031e-06*-0.878505751788614
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.67984002211717e-07/${f_module}*${dir_module}
variable           cos      equal     1.67984002211717e-07/6.54580238376867e-06*${dir_module}
variable           cos      equal     1.67984002211717e-07/6.54580238376867e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0256628587853888)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54513065032352/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.5294650598419-90.0)
print              "The dot product: ${dot}"
The dot product: 1.67984002211717e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.5294650598419

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0819295980160799^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0819295980160799^2+-0.00694695162284997^2+${new_z}^2)
variable           norm          equal     sqrt(0.0819295980160799^2+-0.00694695162284997^2+-0.151201790422999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0819295980160799/${norm}
variable           unit_x        equal     0.0819295980160799/0.172112464961278
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00694695162284997/${norm}
variable           unit_y        equal     -0.00694695162284997/0.172112464961278
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.151201790422999/${norm}
variable           unit_z        equal     -0.151201790422999/0.172112464961278
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24756591190085+${delta}*${unit_x}
variable           x_new         equal     1.24756591190085+0.03*${unit_x}
variable           x_new         equal     1.24756591190085+0.03*0.476023616502805
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.01773600363949+${delta}*${unit_y}
variable           y_new         equal     4.01773600363949+0.03*${unit_y}
variable           y_new         equal     4.01773600363949+0.03*-0.0403628617161046
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1696665325097+${delta}*${unit_z}
variable           z_new         equal     31.1696665325097+0.03*${unit_z}
variable           z_new         equal     31.1696665325097+0.03*-0.878505751788614

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26184662039593  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26184662039593  y  4.01652511778801  z   ${z_new}
set                atom          288751    x  1.26184662039593  y  4.01652511778801  z   31.143311359956
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0819295980160799  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0819295980160799  -0.00694695162284997  ${new_z}
fix                hold    carbon   planeforce   0.0819295980160799  -0.00694695162284997  -0.151201790422999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1507   -1152449.2            0   -1152449.2 -0.060570821  0.018919584 -0.033689922 
    1688   -1152449.3            0   -1152449.3 2.255594e-05 2.0784492e-06 1.2126577e-05 
Loop time of 2.1018 on 104 procs for 181 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.24554049  -1152449.25054063  -1152449.25054063
  Force two-norm initial, final = 0.33743656 0.0001373953
  Force max component initial, final = 0.20947258 2.2555940e-05
  Final line search alpha, max atom move = 1.0000000 2.2555940e-05
  Iterations, force evaluations = 181 362

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5499     | 1.5211     | 1.9859     |  33.3 | 72.37
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03637    | 0.34287    | 1.0263     |  49.3 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2641e-05 | 0.0029895  | 0.0064319  |   2.6 |  0.14
Other   |            | 0.2349     |            |       | 11.17

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 4 26 34
Nghost:        3879.16 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115423 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238197
Ave neighs/atom = 28.530454
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25499554675218-${x_0}
variable           new_x         equal     1.25499554675218-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.0220093371741-${y_0}
variable           new_y         equal     4.0220093371741-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1393470926368-${z_0}
variable           new_z         equal     31.1393470926368-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08935923286741*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08935923286741*0.08935923286741+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08935923286741*0.08935923286741+-0.00267361808823985*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.08935923286741*0.08935923286741+-0.00267361808823985*-0.00267361808823985+${new_z}*${new_z})
variable           module        equal     sqrt(0.08935923286741*0.08935923286741+-0.00267361808823985*-0.00267361808823985+-0.1815212302959*${new_z})
variable           module        equal     sqrt(0.08935923286741*0.08935923286741+-0.00267361808823985*-0.00267361808823985+-0.1815212302959*-0.1815212302959)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.08935923286741/${module}
variable           unitx         equal     0.08935923286741/0.202341735142483
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.00267361808823985/${module}
variable           unity         equal     -0.00267361808823985/0.202341735142483
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1815212302959/${module}
variable           unitz         equal     -0.1815212302959/0.202341735142483
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25559398532517e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25559398532517e-05*2.25559398532517e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25559398532517e-05*2.25559398532517e-05+2.07844920539812e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.25559398532517e-05*2.25559398532517e-05+2.07844920539812e-06*2.07844920539812e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.25559398532517e-05*2.25559398532517e-05+2.07844920539812e-06*2.07844920539812e-06+1.21265772967745e-05*${fz})
variable           f_module      equal     sqrt(2.25559398532517e-05*2.25559398532517e-05+2.07844920539812e-06*2.07844920539812e-06+1.21265772967745e-05*1.21265772967745e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.441625316717216*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.441625316717216*0.441625316717216+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.441625316717216*0.441625316717216+-0.0132133792682818*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.441625316717216*0.441625316717216+-0.0132133792682818*-0.0132133792682818+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.441625316717216*0.441625316717216+-0.0132133792682818*-0.0132133792682818+-0.897102271896987*${unitz})
variable           dir_module    equal     sqrt(0.441625316717216*0.441625316717216+-0.0132133792682818*-0.0132133792682818+-0.897102271896987*-0.897102271896987)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.25559398532517e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.25559398532517e-05*0.441625316717216+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.25559398532517e-05*0.441625316717216+2.07844920539812e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.25559398532517e-05*0.441625316717216+2.07844920539812e-06*-0.0132133792682818+${fz}*${unitz}
variable           dot      equal     2.25559398532517e-05*0.441625316717216+2.07844920539812e-06*-0.0132133792682818+1.21265772967745e-05*${unitz}
variable           dot      equal     2.25559398532517e-05*0.441625316717216+2.07844920539812e-06*-0.0132133792682818+1.21265772967745e-05*-0.897102271896987
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -9.44969299364856e-07/${f_module}*${dir_module}
variable           cos      equal     -9.44969299364856e-07/2.56932724793393e-05*${dir_module}
variable           cos      equal     -9.44969299364856e-07/2.56932724793393e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0367788610860969)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60758348463226/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.1077488843625-90.0)
print              "The dot product: ${dot}"
The dot product: -9.44969299364856e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.1077488843625

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08935923286741^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.08935923286741^2+-0.00267361808823985^2+${new_z}^2)
variable           norm          equal     sqrt(0.08935923286741^2+-0.00267361808823985^2+-0.1815212302959^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.08935923286741/${norm}
variable           unit_x        equal     0.08935923286741/0.202341735142483
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.00267361808823985/${norm}
variable           unit_y        equal     -0.00267361808823985/0.202341735142483
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1815212302959/${norm}
variable           unit_z        equal     -0.1815212302959/0.202341735142483
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25499554675218+${delta}*${unit_x}
variable           x_new         equal     1.25499554675218+0.03*${unit_x}
variable           x_new         equal     1.25499554675218+0.03*0.441625316717216
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.0220093371741+${delta}*${unit_y}
variable           y_new         equal     4.0220093371741+0.03*${unit_y}
variable           y_new         equal     4.0220093371741+0.03*-0.0132133792682818
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1393470926368+${delta}*${unit_z}
variable           z_new         equal     31.1393470926368+0.03*${unit_z}
variable           z_new         equal     31.1393470926368+0.03*-0.897102271896987

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2682443062537  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.2682443062537  y  4.02161293579605  z   ${z_new}
set                atom          288751    x  1.2682443062537  y  4.02161293579605  z   31.1124340244799
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08935923286741  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.08935923286741  -0.00267361808823985  ${new_z}
fix                hold    carbon   planeforce   0.08935923286741  -0.00267361808823985  -0.1815212302959
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1688   -1152449.2            0   -1152449.2 -0.080125789  0.044447884 -0.040098977 
    1851   -1152449.2            0   -1152449.2 3.2743232e-05 7.3804754e-07 1.6107961e-05 
Loop time of 1.91092 on 104 procs for 163 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.21655743  -1152449.22176947  -1152449.22176947
  Force two-norm initial, final = 0.34178612 0.00018490132
  Force max component initial, final = 0.21064477 3.2743232e-05
  Final line search alpha, max atom move = 1.0000000 3.2743232e-05
  Iterations, force evaluations = 163 326

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.49787    | 1.374      | 1.7795     |  31.4 | 71.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03243    | 0.31099    | 0.9337     |  46.4 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0771e-05 | 0.0026945  | 0.005732   |   2.4 |  0.14
Other   |            | 0.2232     |            |       | 11.68

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 6 24 34
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115416 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25859187974508-${x_0}
variable           new_x         equal     1.25859187974508-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.03227461871866-${y_0}
variable           new_y         equal     4.03227461871866-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1075252945479-${z_0}
variable           new_z         equal     31.1075252945479-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929555658603098*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929555658603098*0.0929555658603098+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929555658603098*0.0929555658603098+0.00759166345632067*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929555658603098*0.0929555658603098+0.00759166345632067*0.00759166345632067+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929555658603098*0.0929555658603098+0.00759166345632067*0.00759166345632067+-0.213343028384799*${new_z})
variable           module        equal     sqrt(0.0929555658603098*0.0929555658603098+0.00759166345632067*0.00759166345632067+-0.213343028384799*-0.213343028384799)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0929555658603098/${module}
variable           unitx         equal     0.0929555658603098/0.232838180586521
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.00759166345632067/${module}
variable           unity         equal     0.00759166345632067/0.232838180586521
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.213343028384799/${module}
variable           unitz         equal     -0.213343028384799/0.232838180586521
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27432320411023e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27432320411023e-05*3.27432320411023e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27432320411023e-05*3.27432320411023e-05+7.38047541635901e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.27432320411023e-05*3.27432320411023e-05+7.38047541635901e-07*7.38047541635901e-07+${fz}*${fz})
variable           f_module      equal     sqrt(3.27432320411023e-05*3.27432320411023e-05+7.38047541635901e-07*7.38047541635901e-07+1.61079606762683e-05*${fz})
variable           f_module      equal     sqrt(3.27432320411023e-05*3.27432320411023e-05+7.38047541635901e-07*7.38047541635901e-07+1.61079606762683e-05*1.61079606762683e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.399228191983609*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.399228191983609*0.399228191983609+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.399228191983609*0.399228191983609+0.032604890818152*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.399228191983609*0.399228191983609+0.032604890818152*0.032604890818152+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.399228191983609*0.399228191983609+0.032604890818152*0.032604890818152+-0.916271669222747*${unitz})
variable           dir_module    equal     sqrt(0.399228191983609*0.399228191983609+0.032604890818152*0.032604890818152+-0.916271669222747*-0.916271669222747)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.27432320411023e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.27432320411023e-05*0.399228191983609+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.27432320411023e-05*0.399228191983609+7.38047541635901e-07*${unity}+${fz}*${unitz}
variable           dot      equal     3.27432320411023e-05*0.399228191983609+7.38047541635901e-07*0.032604890818152+${fz}*${unitz}
variable           dot      equal     3.27432320411023e-05*0.399228191983609+7.38047541635901e-07*0.032604890818152+1.61079606762683e-05*${unitz}
variable           dot      equal     3.27432320411023e-05*0.399228191983609+7.38047541635901e-07*0.032604890818152+1.61079606762683e-05*-0.916271669222747
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.66318272963603e-06/${f_module}*${dir_module}
variable           cos      equal     -1.66318272963603e-06/3.64983610018229e-05*${dir_module}
variable           cos      equal     -1.66318272963603e-06/3.64983610018229e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0455686963464733)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61638080850866/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.6117984134899-90.0)
print              "The dot product: ${dot}"
The dot product: -1.66318272963603e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.6117984134899

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0929555658603098^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0929555658603098^2+0.00759166345632067^2+${new_z}^2)
variable           norm          equal     sqrt(0.0929555658603098^2+0.00759166345632067^2+-0.213343028384799^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0929555658603098/${norm}
variable           unit_x        equal     0.0929555658603098/0.232838180586521
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.00759166345632067/${norm}
variable           unit_y        equal     0.00759166345632067/0.232838180586521
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.213343028384799/${norm}
variable           unit_z        equal     -0.213343028384799/0.232838180586521
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25859187974508+${delta}*${unit_x}
variable           x_new         equal     1.25859187974508+0.03*${unit_x}
variable           x_new         equal     1.25859187974508+0.03*0.399228191983609
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.03227461871866+${delta}*${unit_y}
variable           y_new         equal     4.03227461871866+0.03*${unit_y}
variable           y_new         equal     4.03227461871866+0.03*0.032604890818152
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1075252945479+${delta}*${unit_z}
variable           z_new         equal     31.1075252945479+0.03*${unit_z}
variable           z_new         equal     31.1075252945479+0.03*-0.916271669222747

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27056872550459  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.27056872550459  y  4.0332527654432  z   ${z_new}
set                atom          288751    x  1.27056872550459  y  4.0332527654432  z   31.0800371444712
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0929555658603098  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0929555658603098  0.00759166345632067  ${new_z}
fix                hold    carbon   planeforce   0.0929555658603098  0.00759166345632067  -0.213343028384799
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1851   -1152449.2            0   -1152449.2  -0.09839084  0.070928123 -0.040345887 
    2000   -1152449.2            0   -1152449.2 -3.7331028e-05 7.4819053e-06 -1.5999242e-05 
    2018   -1152449.2            0   -1152449.2 -5.7888781e-05 -1.3885693e-06 -2.5272098e-05 
Loop time of 1.94637 on 104 procs for 167 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.18455164   -1152449.1899344   -1152449.1899344
  Force two-norm initial, final = 0.34654722 0.00023111225
  Force max component initial, final = 0.20949848 5.7888781e-05
  Final line search alpha, max atom move = 1.0000000 5.7888781e-05
  Iterations, force evaluations = 167 334

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.50755    | 1.4047     | 1.8217     |  32.0 | 72.17
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032896   | 0.31779    | 0.95514    |  47.0 | 16.33
Output  | 0.00016112 | 0.00017047 | 0.00031864 |   0.0 |  0.01
Modify  | 2.0633e-05 | 0.0027512  | 0.0059218  |   2.5 |  0.14
Other   |            | 0.2209     |            |       | 11.35

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 6 24 34
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115410 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25859421974921-${x_0}
variable           new_x         equal     1.25859421974921-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.04902094154735-${y_0}
variable           new_y         equal     4.04902094154735-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.0753808391793-${z_0}
variable           new_z         equal     31.0753808391793-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929579058644399*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929579058644399*0.0929579058644399+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929579058644399*0.0929579058644399+0.0243379862850102*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929579058644399*0.0929579058644399+0.0243379862850102*0.0243379862850102+${new_z}*${new_z})
variable           module        equal     sqrt(0.0929579058644399*0.0929579058644399+0.0243379862850102*0.0243379862850102+-0.245487483753401*${new_z})
variable           module        equal     sqrt(0.0929579058644399*0.0929579058644399+0.0243379862850102*0.0243379862850102+-0.245487483753401*-0.245487483753401)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0929579058644399/${module}
variable           unitx         equal     0.0929579058644399/0.263624002167268
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0243379862850102/${module}
variable           unity         equal     0.0243379862850102/0.263624002167268
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.245487483753401/${module}
variable           unitz         equal     -0.245487483753401/0.263624002167268
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.78887812239533e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.78887812239533e-05*-5.78887812239533e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.78887812239533e-05*-5.78887812239533e-05+-1.38856927485706e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.78887812239533e-05*-5.78887812239533e-05+-1.38856927485706e-06*-1.38856927485706e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-5.78887812239533e-05*-5.78887812239533e-05+-1.38856927485706e-06*-1.38856927485706e-06+-2.52720982119863e-05*${fz})
variable           f_module      equal     sqrt(-5.78887812239533e-05*-5.78887812239533e-05+-1.38856927485706e-06*-1.38856927485706e-06+-2.52720982119863e-05*-2.52720982119863e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352615486830591*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352615486830591*0.352615486830591+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352615486830591*0.352615486830591+0.0923208284713312*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352615486830591*0.352615486830591+0.0923208284713312*0.0923208284713312+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.352615486830591*0.352615486830591+0.0923208284713312*0.0923208284713312+-0.931203083692055*${unitz})
variable           dir_module    equal     sqrt(0.352615486830591*0.352615486830591+0.0923208284713312*0.0923208284713312+-0.931203083692055*-0.931203083692055)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.78887812239533e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.78887812239533e-05*0.352615486830591+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.78887812239533e-05*0.352615486830591+-1.38856927485706e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -5.78887812239533e-05*0.352615486830591+-1.38856927485706e-06*0.0923208284713312+${fz}*${unitz}
variable           dot      equal     -5.78887812239533e-05*0.352615486830591+-1.38856927485706e-06*0.0923208284713312+-2.52720982119863e-05*${unitz}
variable           dot      equal     -5.78887812239533e-05*0.352615486830591+-1.38856927485706e-06*0.0923208284713312+-2.52720982119863e-05*-0.931203083692055
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.99278114721161e-06/${f_module}*${dir_module}
variable           cos      equal     2.99278114721161e-06/6.31800448263697e-05*${dir_module}
variable           cos      equal     2.99278114721161e-06/6.31800448263697e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0473690886962223)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.52340950548629/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.2849351344762-90.0)
print              "The dot product: ${dot}"
The dot product: 2.99278114721161e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.2849351344762

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0929579058644399^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0929579058644399^2+0.0243379862850102^2+${new_z}^2)
variable           norm          equal     sqrt(0.0929579058644399^2+0.0243379862850102^2+-0.245487483753401^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0929579058644399/${norm}
variable           unit_x        equal     0.0929579058644399/0.263624002167268
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0243379862850102/${norm}
variable           unit_y        equal     0.0243379862850102/0.263624002167268
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.245487483753401/${norm}
variable           unit_z        equal     -0.245487483753401/0.263624002167268
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25859421974921+${delta}*${unit_x}
variable           x_new         equal     1.25859421974921+0.03*${unit_x}
variable           x_new         equal     1.25859421974921+0.03*0.352615486830591
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.04902094154735+${delta}*${unit_y}
variable           y_new         equal     4.04902094154735+0.03*${unit_y}
variable           y_new         equal     4.04902094154735+0.03*0.0923208284713312
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.0753808391793+${delta}*${unit_z}
variable           z_new         equal     31.0753808391793+0.03*${unit_z}
variable           z_new         equal     31.0753808391793+0.03*-0.931203083692055

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26917268435413  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26917268435413  y  4.05179056640149  z   ${z_new}
set                atom          288751    x  1.26917268435413  y  4.05179056640149  z   31.0474447466685
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0929579058644399  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0929579058644399  0.0243379862850102  ${new_z}
fix                hold    carbon   planeforce   0.0929579058644399  0.0243379862850102  -0.245487483753401
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2018   -1152449.1            0   -1152449.1  -0.11343214   0.09533335 -0.033501475 
    2249   -1152449.2            0   -1152449.2 4.5597475e-08 -1.3684263e-07 3.6994616e-09 
Loop time of 2.68538 on 104 procs for 231 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.14948671  -1152449.15505234  -1152449.15505234
  Force two-norm initial, final = 0.35042432 3.1295979e-05
  Force max component initial, final = 0.2056607 5.2775301e-06
  Final line search alpha, max atom move = 1.0000000 5.2775301e-06
  Iterations, force evaluations = 231 462

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.70052    | 1.9422     | 2.5216     |  37.6 | 72.32
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044863   | 0.43867    | 1.32       |  55.3 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7914e-05 | 0.003813   | 0.0082298  |   2.9 |  0.14
Other   |            | 0.3007     |            |       | 11.20

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 6 24 34
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115411 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.25547184684931-${x_0}
variable           new_x         equal     1.25547184684931-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.07165904201814-${y_0}
variable           new_y         equal     4.07165904201814-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.0442264869677-${z_0}
variable           new_z         equal     31.0442264869677-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0898355329645399*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0898355329645399*0.0898355329645399+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0898355329645399*0.0898355329645399+0.0469760867558007*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0898355329645399*0.0898355329645399+0.0469760867558007*0.0469760867558007+${new_z}*${new_z})
variable           module        equal     sqrt(0.0898355329645399*0.0898355329645399+0.0469760867558007*0.0469760867558007+-0.276641835965002*${new_z})
variable           module        equal     sqrt(0.0898355329645399*0.0898355329645399+0.0469760867558007*0.0469760867558007+-0.276641835965002*-0.276641835965002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0898355329645399/${module}
variable           unitx         equal     0.0898355329645399/0.294631772074905
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0469760867558007/${module}
variable           unity         equal     0.0469760867558007/0.294631772074905
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.276641835965002/${module}
variable           unitz         equal     -0.276641835965002/0.294631772074905
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.55974747627502e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.55974747627502e-08*4.55974747627502e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.55974747627502e-08*4.55974747627502e-08+-1.36842634857238e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.55974747627502e-08*4.55974747627502e-08+-1.36842634857238e-07*-1.36842634857238e-07+${fz}*${fz})
variable           f_module      equal     sqrt(4.55974747627502e-08*4.55974747627502e-08+-1.36842634857238e-07*-1.36842634857238e-07+3.69946155316949e-09*${fz})
variable           f_module      equal     sqrt(4.55974747627502e-08*4.55974747627502e-08+-1.36842634857238e-07*-1.36842634857238e-07+3.69946155316949e-09*3.69946155316949e-09)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.304907825560988*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.304907825560988*0.304907825560988+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.304907825560988*0.304907825560988+0.159439989872707*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.304907825560988*0.304907825560988+0.159439989872707*0.159439989872707+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.304907825560988*0.304907825560988+0.159439989872707*0.159439989872707+-0.938940949975587*${unitz})
variable           dir_module    equal     sqrt(0.304907825560988*0.304907825560988+0.159439989872707*0.159439989872707+-0.938940949975587*-0.938940949975587)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.55974747627502e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.55974747627502e-08*0.304907825560988+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.55974747627502e-08*0.304907825560988+-1.36842634857238e-07*${unity}+${fz}*${unitz}
variable           dot      equal     4.55974747627502e-08*0.304907825560988+-1.36842634857238e-07*0.159439989872707+${fz}*${unitz}
variable           dot      equal     4.55974747627502e-08*0.304907825560988+-1.36842634857238e-07*0.159439989872707+3.69946155316949e-09*${unitz}
variable           dot      equal     4.55974747627502e-08*0.304907825560988+-1.36842634857238e-07*0.159439989872707+3.69946155316949e-09*-0.938940949975587
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.13887373799415e-08/${f_module}*${dir_module}
variable           cos      equal     -1.13887373799415e-08/1.44286944784323e-07*${dir_module}
variable           cos      equal     -1.13887373799415e-08/1.44286944784323e-07*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0789311700858669)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.64980968608213/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(94.5271320123093-90.0)
print              "The dot product: ${dot}"
The dot product: -1.13887373799415e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 94.5271320123093

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0898355329645399^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0898355329645399^2+0.0469760867558007^2+${new_z}^2)
variable           norm          equal     sqrt(0.0898355329645399^2+0.0469760867558007^2+-0.276641835965002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0898355329645399/${norm}
variable           unit_x        equal     0.0898355329645399/0.294631772074905
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0469760867558007/${norm}
variable           unit_y        equal     0.0469760867558007/0.294631772074905
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.276641835965002/${norm}
variable           unit_z        equal     -0.276641835965002/0.294631772074905
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.25547184684931+${delta}*${unit_x}
variable           x_new         equal     1.25547184684931+0.03*${unit_x}
variable           x_new         equal     1.25547184684931+0.03*0.304907825560988
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.07165904201814+${delta}*${unit_y}
variable           y_new         equal     4.07165904201814+0.03*${unit_y}
variable           y_new         equal     4.07165904201814+0.03*0.159439989872707
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.0442264869677+${delta}*${unit_z}
variable           z_new         equal     31.0442264869677+0.03*${unit_z}
variable           z_new         equal     31.0442264869677+0.03*-0.938940949975587

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26461908161614  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.26461908161614  y  4.07644224171432  z   ${z_new}
set                atom          288751    x  1.26461908161614  y  4.07644224171432  z   31.0160582584684
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0898355329645399  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0898355329645399  0.0469760867558007  ${new_z}
fix                hold    carbon   planeforce   0.0898355329645399  0.0469760867558007  -0.276641835965002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2249   -1152449.1            0   -1152449.1  -0.12271907   0.11502383 -0.020319282 
    2481   -1152449.1            0   -1152449.1 1.324257e-05 -1.9528528e-06 3.9687271e-06 
Loop time of 2.68032 on 104 procs for 232 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.11135454  -1152449.11699968  -1152449.11699968
  Force two-norm initial, final = 0.35136691 4.4688108e-05
  Force max component initial, final = 0.19857673 1.3353829e-05
  Final line search alpha, max atom move = 1.0000000 1.3353829e-05
  Iterations, force evaluations = 232 464

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.70331    | 1.9474     | 2.5298     |  37.7 | 72.66
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.053869   | 0.43903    | 1.3288     |  55.6 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.877e-05  | 0.0038305  | 0.0081696  |   2.9 |  0.14
Other   |            | 0.2901     |            |       | 10.82

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 6 24 34
Nghost:        3879.03 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115415 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238201
Ave neighs/atom = 28.530467
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24998845105748-${x_0}
variable           new_x         equal     1.24998845105748-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.09882286787608-${y_0}
variable           new_y         equal     4.09882286787608-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.0151075842628-${z_0}
variable           new_z         equal     31.0151075842628-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0843521371727098*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0843521371727098*0.0843521371727098+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0843521371727098*0.0843521371727098+0.0741399126137399*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0843521371727098*0.0843521371727098+0.0741399126137399*0.0741399126137399+${new_z}*${new_z})
variable           module        equal     sqrt(0.0843521371727098*0.0843521371727098+0.0741399126137399*0.0741399126137399+-0.3057607386699*${new_z})
variable           module        equal     sqrt(0.0843521371727098*0.0843521371727098+0.0741399126137399*0.0741399126137399+-0.3057607386699*-0.3057607386699)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0843521371727098/${module}
variable           unitx         equal     0.0843521371727098/0.325732465376019
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0741399126137399/${module}
variable           unity         equal     0.0741399126137399/0.325732465376019
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.3057607386699/${module}
variable           unitz         equal     -0.3057607386699/0.325732465376019
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.32425701202555e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.32425701202555e-05*1.32425701202555e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.32425701202555e-05*1.32425701202555e-05+-1.95285278789401e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.32425701202555e-05*1.32425701202555e-05+-1.95285278789401e-06*-1.95285278789401e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.32425701202555e-05*1.32425701202555e-05+-1.95285278789401e-06*-1.95285278789401e-06+3.96872714035983e-06*${fz})
variable           f_module      equal     sqrt(1.32425701202555e-05*1.32425701202555e-05+-1.95285278789401e-06*-1.95285278789401e-06+3.96872714035983e-06*3.96872714035983e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.258961405874405*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.258961405874405*0.258961405874405+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.258961405874405*0.258961405874405+0.227609834740158*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.258961405874405*0.258961405874405+0.227609834740158*0.227609834740158+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.258961405874405*0.258961405874405+0.227609834740158*0.227609834740158+-0.93868671738611*${unitz})
variable           dir_module    equal     sqrt(0.258961405874405*0.258961405874405+0.227609834740158*0.227609834740158+-0.93868671738611*-0.93868671738611)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.32425701202555e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.32425701202555e-05*0.258961405874405+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.32425701202555e-05*0.258961405874405+-1.95285278789401e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.32425701202555e-05*0.258961405874405+-1.95285278789401e-06*0.227609834740158+${fz}*${unitz}
variable           dot      equal     1.32425701202555e-05*0.258961405874405+-1.95285278789401e-06*0.227609834740158+3.96872714035983e-06*${unitz}
variable           dot      equal     1.32425701202555e-05*0.258961405874405+-1.95285278789401e-06*0.227609834740158+3.96872714035983e-06*-0.93868671738611
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.40565376178191e-07/${f_module}*${dir_module}
variable           cos      equal     -7.40565376178191e-07/1.39617367299236e-05*${dir_module}
variable           cos      equal     -7.40565376178191e-07/1.39617367299236e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0530424968256971)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62386372773204/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.0405381034269-90.0)
print              "The dot product: ${dot}"
The dot product: -7.40565376178191e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.0405381034269

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0843521371727098^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0843521371727098^2+0.0741399126137399^2+${new_z}^2)
variable           norm          equal     sqrt(0.0843521371727098^2+0.0741399126137399^2+-0.3057607386699^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0843521371727098/${norm}
variable           unit_x        equal     0.0843521371727098/0.325732465376019
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0741399126137399/${norm}
variable           unit_y        equal     0.0741399126137399/0.325732465376019
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.3057607386699/${norm}
variable           unit_z        equal     -0.3057607386699/0.325732465376019
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24998845105748+${delta}*${unit_x}
variable           x_new         equal     1.24998845105748+0.03*${unit_x}
variable           x_new         equal     1.24998845105748+0.03*0.258961405874405
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.09882286787608+${delta}*${unit_y}
variable           y_new         equal     4.09882286787608+0.03*${unit_y}
variable           y_new         equal     4.09882286787608+0.03*0.227609834740158
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.0151075842628+${delta}*${unit_z}
variable           z_new         equal     31.0151075842628+0.03*${unit_z}
variable           z_new         equal     31.0151075842628+0.03*-0.93868671738611

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25775729323371  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.25775729323371  y  4.10565116291828  z   ${z_new}
set                atom          288751    x  1.25775729323371  y  4.10565116291828  z   30.9869469827412
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0843521371727098  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0843521371727098  0.0741399126137399  ${new_z}
fix                hold    carbon   planeforce   0.0843521371727098  0.0741399126137399  -0.3057607386699
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2481   -1152449.1            0   -1152449.1  -0.12511971   0.12794979 -0.0034926942 
    2688   -1152449.1            0   -1152449.1 1.1939666e-05 8.8358025e-07 3.5081186e-06 
Loop time of 2.43003 on 104 procs for 207 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.06993504  -1152449.07552596  -1152449.07552596
  Force two-norm initial, final = 0.34839135 0.00018136529
  Force max component initial, final = 0.18866878 2.3345551e-05
  Final line search alpha, max atom move = 1.0000000 2.3345551e-05
  Iterations, force evaluations = 207 414

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63721    | 1.7412     | 2.2683     |  35.3 | 71.66
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044332   | 0.39415    | 1.1966     |  52.1 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6878e-05 | 0.0034075  | 0.007326   |   2.8 |  0.14
Other   |            | 0.2912     |            |       | 11.98

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 6 24 34
Nghost:        3879.03 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115421 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238194
Ave neighs/atom = 28.530443
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.24274083930314-${x_0}
variable           new_x         equal     1.24274083930314-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.12915770765418-${y_0}
variable           new_y         equal     4.12915770765418-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9885040930254-${z_0}
variable           new_z         equal     30.9885040930254-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07710452541837*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07710452541837*0.07710452541837+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07710452541837*0.07710452541837+0.10447475239184*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.07710452541837*0.07710452541837+0.10447475239184*0.10447475239184+${new_z}*${new_z})
variable           module        equal     sqrt(0.07710452541837*0.07710452541837+0.10447475239184*0.10447475239184+-0.332364229907299*${new_z})
variable           module        equal     sqrt(0.07710452541837*0.07710452541837+0.10447475239184*0.10447475239184+-0.332364229907299*-0.332364229907299)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.07710452541837/${module}
variable           unitx         equal     0.07710452541837/0.356827777855369
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.10447475239184/${module}
variable           unity         equal     0.10447475239184/0.356827777855369
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.332364229907299/${module}
variable           unitz         equal     -0.332364229907299/0.356827777855369
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.19396664702901e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.19396664702901e-05*1.19396664702901e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.19396664702901e-05*1.19396664702901e-05+8.83580253146005e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.19396664702901e-05*1.19396664702901e-05+8.83580253146005e-07*8.83580253146005e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.19396664702901e-05*1.19396664702901e-05+8.83580253146005e-07*8.83580253146005e-07+3.50811863944996e-06*${fz})
variable           f_module      equal     sqrt(1.19396664702901e-05*1.19396664702901e-05+8.83580253146005e-07*8.83580253146005e-07+3.50811863944996e-06*3.50811863944996e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.216083304617676*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.216083304617676*0.216083304617676+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.216083304617676*0.216083304617676+0.292787610369802*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.216083304617676*0.216083304617676+0.292787610369802*0.292787610369802+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.216083304617676*0.216083304617676+0.292787610369802*0.292787610369802+-0.931441582000419*${unitz})
variable           dir_module    equal     sqrt(0.216083304617676*0.216083304617676+0.292787610369802*0.292787610369802+-0.931441582000419*-0.931441582000419)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.19396664702901e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.19396664702901e-05*0.216083304617676+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.19396664702901e-05*0.216083304617676+8.83580253146005e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.19396664702901e-05*0.216083304617676+8.83580253146005e-07*0.292787610369802+${fz}*${unitz}
variable           dot      equal     1.19396664702901e-05*0.216083304617676+8.83580253146005e-07*0.292787610369802+3.50811863944996e-06*${unitz}
variable           dot      equal     1.19396664702901e-05*0.216083304617676+8.83580253146005e-07*0.292787610369802+3.50811863944996e-06*-0.931441582000419
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.28943637552717e-07/${f_module}*${dir_module}
variable           cos      equal     -4.28943637552717e-07/1.24757062274637e-05*${dir_module}
variable           cos      equal     -4.28943637552717e-07/1.24757062274637e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0343823130916991)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60518541763046/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.9703497661698-90.0)
print              "The dot product: ${dot}"
The dot product: -4.28943637552717e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.9703497661698

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.07710452541837^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.07710452541837^2+0.10447475239184^2+${new_z}^2)
variable           norm          equal     sqrt(0.07710452541837^2+0.10447475239184^2+-0.332364229907299^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.07710452541837/${norm}
variable           unit_x        equal     0.07710452541837/0.356827777855369
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.10447475239184/${norm}
variable           unit_y        equal     0.10447475239184/0.356827777855369
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.332364229907299/${norm}
variable           unit_z        equal     -0.332364229907299/0.356827777855369
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.24274083930314+${delta}*${unit_x}
variable           x_new         equal     1.24274083930314+0.03*${unit_x}
variable           x_new         equal     1.24274083930314+0.03*0.216083304617676
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.12915770765418+${delta}*${unit_y}
variable           y_new         equal     4.12915770765418+0.03*${unit_y}
variable           y_new         equal     4.12915770765418+0.03*0.292787610369802
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9885040930254+${delta}*${unit_z}
variable           z_new         equal     30.9885040930254+0.03*${unit_z}
variable           z_new         equal     30.9885040930254+0.03*-0.931441582000419

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24922333844167  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.24922333844167  y  4.13794133596527  z   ${z_new}
set                atom          288751    x  1.24922333844167  y  4.13794133596527  z   30.9605608455654
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.07710452541837  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.07710452541837  0.10447475239184  ${new_z}
fix                hold    carbon   planeforce   0.07710452541837  0.10447475239184  -0.332364229907299
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2688     -1152449            0     -1152449  -0.12389247   0.13514613  0.013740011 
    2941     -1152449            0     -1152449 -2.8042894e-06 -8.9978628e-07 -9.3339875e-07 
Loop time of 2.93343 on 104 procs for 253 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.02490474  -1152449.03065891  -1152449.03065891
  Force two-norm initial, final = 0.34354123 2.6007425e-05
  Force max component initial, final = 0.17656706 7.0229523e-06
  Final line search alpha, max atom move = 1.0000000 7.0229523e-06
  Iterations, force evaluations = 253 506

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.76816    | 2.1276     | 2.769      |  39.5 | 72.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.054873   | 0.48427    | 1.4499     |  57.6 | 16.51
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.1665e-05 | 0.0041651  | 0.0089801  |   3.0 |  0.14
Other   |            | 0.3174     |            |       | 10.82

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 4 26 34
Nghost:        3879.01 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115422 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238196
Ave neighs/atom = 28.530450
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22984810991041-${x_0}
variable           new_x         equal     1.22984810991041-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.16478530473942-${y_0}
variable           new_y         equal     4.16478530473942-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9645041074214-${z_0}
variable           new_z         equal     30.9645041074214-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642117960256399*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642117960256399*0.0642117960256399+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642117960256399*0.0642117960256399+0.14010234947708*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642117960256399*0.0642117960256399+0.14010234947708*0.14010234947708+${new_z}*${new_z})
variable           module        equal     sqrt(0.0642117960256399*0.0642117960256399+0.14010234947708*0.14010234947708+-0.356364215511299*${new_z})
variable           module        equal     sqrt(0.0642117960256399*0.0642117960256399+0.14010234947708*0.14010234947708+-0.356364215511299*-0.356364215511299)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0642117960256399/${module}
variable           unitx         equal     0.0642117960256399/0.38826186675338
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.14010234947708/${module}
variable           unity         equal     0.14010234947708/0.38826186675338
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.356364215511299/${module}
variable           unitz         equal     -0.356364215511299/0.38826186675338
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.80428944292995e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.80428944292995e-06*-2.80428944292995e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.80428944292995e-06*-2.80428944292995e-06+-8.99786283215371e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.80428944292995e-06*-2.80428944292995e-06+-8.99786283215371e-07*-8.99786283215371e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.80428944292995e-06*-2.80428944292995e-06+-8.99786283215371e-07*-8.99786283215371e-07+-9.33398747167431e-07*${fz})
variable           f_module      equal     sqrt(-2.80428944292995e-06*-2.80428944292995e-06+-8.99786283215371e-07*-8.99786283215371e-07+-9.33398747167431e-07*-9.33398747167431e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165382700502047*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165382700502047*0.165382700502047+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165382700502047*0.165382700502047+0.360844990131549*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165382700502047*0.165382700502047+0.360844990131549*0.360844990131549+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165382700502047*0.165382700502047+0.360844990131549*0.360844990131549+-0.917845006235593*${unitz})
variable           dir_module    equal     sqrt(0.165382700502047*0.165382700502047+0.360844990131549*0.360844990131549+-0.917845006235593*-0.917845006235593)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.80428944292995e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.80428944292995e-06*0.165382700502047+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.80428944292995e-06*0.165382700502047+-8.99786283215371e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.80428944292995e-06*0.165382700502047+-8.99786283215371e-07*0.360844990131549+${fz}*${unitz}
variable           dot      equal     -2.80428944292995e-06*0.165382700502047+-8.99786283215371e-07*0.360844990131549+-9.33398747167431e-07*${unitz}
variable           dot      equal     -2.80428944292995e-06*0.165382700502047+-8.99786283215371e-07*0.360844990131549+-9.33398747167431e-07*-0.917845006235593
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.82510453656955e-08/${f_module}*${dir_module}
variable           cos      equal     6.82510453656955e-08/3.08948019194243e-06*${dir_module}
variable           cos      equal     6.82510453656955e-08/3.08948019194243e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0220914332267605)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5487030962878/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7341511361337-90.0)
print              "The dot product: ${dot}"
The dot product: 6.82510453656955e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7341511361337

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0642117960256399^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0642117960256399^2+0.14010234947708^2+${new_z}^2)
variable           norm          equal     sqrt(0.0642117960256399^2+0.14010234947708^2+-0.356364215511299^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0642117960256399/${norm}
variable           unit_x        equal     0.0642117960256399/0.38826186675338
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.14010234947708/${norm}
variable           unit_y        equal     0.14010234947708/0.38826186675338
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.356364215511299/${norm}
variable           unit_z        equal     -0.356364215511299/0.38826186675338
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22984810991041+${delta}*${unit_x}
variable           x_new         equal     1.22984810991041+0.03*${unit_x}
variable           x_new         equal     1.22984810991041+0.03*0.165382700502047
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.16478530473942+${delta}*${unit_y}
variable           y_new         equal     4.16478530473942+0.03*${unit_y}
variable           y_new         equal     4.16478530473942+0.03*0.360844990131549
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9645041074214+${delta}*${unit_z}
variable           z_new         equal     30.9645041074214+0.03*${unit_z}
variable           z_new         equal     30.9645041074214+0.03*-0.917845006235593

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23480959092547  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23480959092547  y  4.17561065444337  z   ${z_new}
set                atom          288751    x  1.23480959092547  y  4.17561065444337  z   30.9369687572343
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0642117960256399  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0642117960256399  0.14010234947708  ${new_z}
fix                hold    carbon   planeforce   0.0642117960256399  0.14010234947708  -0.356364215511299
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2941     -1152449            0     -1152449  -0.14080428   0.15085289  0.033935921 
    3000     -1152449            0     -1152449 8.741993e-05 6.2212141e-05 4.0210148e-05 
    3186     -1152449            0     -1152449 -1.5675054e-05 2.865845e-06 -1.6977342e-06 
Loop time of 2.8577 on 104 procs for 245 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.97643134   -1152448.9829932   -1152448.9829932
  Force two-norm initial, final = 0.35086169 4.2230023e-05
  Force max component initial, final = 0.15943739 1.5675054e-05
  Final line search alpha, max atom move = 1.0000000 1.5675054e-05
  Iterations, force evaluations = 245 490

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.74454    | 2.0588     | 2.678      |  38.6 | 72.04
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.047908   | 0.46285    | 1.3938     |  57.1 | 16.20
Output  | 0.00010503 | 0.00011277 | 0.00023664 |   0.0 |  0.00
Modify  | 3.1688e-05 | 0.0040329  | 0.0086679  |   3.0 |  0.14
Other   |            | 0.3319     |            |       | 11.62

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115491 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238197
Ave neighs/atom = 28.530454
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21003171366903-${x_0}
variable           new_x         equal     1.21003171366903-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.20552632557914-${y_0}
variable           new_y         equal     4.20552632557914-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9442652917869-${z_0}
variable           new_z         equal     30.9442652917869-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0443953997842599*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0443953997842599*0.0443953997842599+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0443953997842599*0.0443953997842599+0.180843370316801*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0443953997842599*0.0443953997842599+0.180843370316801*0.180843370316801+${new_z}*${new_z})
variable           module        equal     sqrt(0.0443953997842599*0.0443953997842599+0.180843370316801*0.180843370316801+-0.376603031145802*${new_z})
variable           module        equal     sqrt(0.0443953997842599*0.0443953997842599+0.180843370316801*0.180843370316801+-0.376603031145802*-0.376603031145802)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0443953997842599/${module}
variable           unitx         equal     0.0443953997842599/0.420125123240386
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.180843370316801/${module}
variable           unity         equal     0.180843370316801/0.420125123240386
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.376603031145802/${module}
variable           unitz         equal     -0.376603031145802/0.420125123240386
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.56750535899341e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.56750535899341e-05*-1.56750535899341e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.56750535899341e-05*-1.56750535899341e-05+2.86584504433776e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.56750535899341e-05*-1.56750535899341e-05+2.86584504433776e-06*2.86584504433776e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.56750535899341e-05*-1.56750535899341e-05+2.86584504433776e-06*2.86584504433776e-06+-1.69773421059417e-06*${fz})
variable           f_module      equal     sqrt(-1.56750535899341e-05*-1.56750535899341e-05+2.86584504433776e-06*2.86584504433776e-06+-1.69773421059417e-06*-1.69773421059417e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105671851856519*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105671851856519*0.105671851856519+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105671851856519*0.105671851856519+0.430451216347104*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105671851856519*0.105671851856519+0.430451216347104*0.430451216347104+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.105671851856519*0.105671851856519+0.430451216347104*0.430451216347104+-0.896406832900394*${unitz})
variable           dir_module    equal     sqrt(0.105671851856519*0.105671851856519+0.430451216347104*0.430451216347104+-0.896406832900394*-0.896406832900394)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.56750535899341e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.56750535899341e-05*0.105671851856519+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.56750535899341e-05*0.105671851856519+2.86584504433776e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.56750535899341e-05*0.105671851856519+2.86584504433776e-06*0.430451216347104+${fz}*${unitz}
variable           dot      equal     -1.56750535899341e-05*0.105671851856519+2.86584504433776e-06*0.430451216347104+-1.69773421059417e-06*${unitz}
variable           dot      equal     -1.56750535899341e-05*0.105671851856519+2.86584504433776e-06*0.430451216347104+-1.69773421059417e-06*-0.896406832900394
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.09905509122437e-06/${f_module}*${dir_module}
variable           cos      equal     1.09905509122437e-06/1.60250639410669e-05*${dir_module}
variable           cos      equal     1.09905509122437e-06/1.60250639410669e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0685835073898119)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.50215893926897/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.0673673779605-90.0)
print              "The dot product: ${dot}"
The dot product: 1.09905509122437e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.0673673779605

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0443953997842599^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0443953997842599^2+0.180843370316801^2+${new_z}^2)
variable           norm          equal     sqrt(0.0443953997842599^2+0.180843370316801^2+-0.376603031145802^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0443953997842599/${norm}
variable           unit_x        equal     0.0443953997842599/0.420125123240386
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.180843370316801/${norm}
variable           unit_y        equal     0.180843370316801/0.420125123240386
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.376603031145802/${norm}
variable           unit_z        equal     -0.376603031145802/0.420125123240386
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21003171366903+${delta}*${unit_x}
variable           x_new         equal     1.21003171366903+0.03*${unit_x}
variable           x_new         equal     1.21003171366903+0.03*0.105671851856519
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.20552632557914+${delta}*${unit_y}
variable           y_new         equal     4.20552632557914+0.03*${unit_y}
variable           y_new         equal     4.20552632557914+0.03*0.430451216347104
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9442652917869+${delta}*${unit_z}
variable           z_new         equal     30.9442652917869+0.03*${unit_z}
variable           z_new         equal     30.9442652917869+0.03*-0.896406832900394

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21320186922473  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21320186922473  y  4.21843986206955  z   ${z_new}
set                atom          288751    x  1.21320186922473  y  4.21843986206955  z   30.9173730867999
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0443953997842599  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0443953997842599  0.180843370316801  ${new_z}
fix                hold    carbon   planeforce   0.0443953997842599  0.180843370316801  -0.376603031145802
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3186   -1152448.9            0   -1152448.9  -0.15683419   0.15846654  0.057606828 
    3391   -1152448.9            0   -1152448.9 -7.0976915e-05 1.8701338e-06 -7.4689978e-06 
Loop time of 2.40678 on 104 procs for 205 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
       -1152448.925179  -1152448.93237427  -1152448.93237427
  Force two-norm initial, final = 0.35707294 0.00020948065
  Force max component initial, final = 0.15846654 7.0976915e-05
  Final line search alpha, max atom move = 1.0000000 7.0976915e-05
  Iterations, force evaluations = 205 410

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.62541    | 1.7287     | 2.2479     |  35.5 | 71.82
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039754   | 0.39316    | 1.1637     |  52.0 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5325e-05 | 0.0033798  | 0.0072458  |   2.7 |  0.14
Other   |            | 0.2816     |            |       | 11.70

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238201
Ave neighs/atom = 28.530467
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18502501390714-${x_0}
variable           new_x         equal     1.18502501390714-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.24924972659449-${y_0}
variable           new_y         equal     4.24924972659449-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9288462737523-${z_0}
variable           new_z         equal     30.9288462737523-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01938870002237*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01938870002237*0.01938870002237+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01938870002237*0.01938870002237+0.22456677133215*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01938870002237*0.01938870002237+0.22456677133215*0.22456677133215+${new_z}*${new_z})
variable           module        equal     sqrt(0.01938870002237*0.01938870002237+0.22456677133215*0.22456677133215+-0.392022049180401*${new_z})
variable           module        equal     sqrt(0.01938870002237*0.01938870002237+0.22456677133215*0.22456677133215+-0.392022049180401*-0.392022049180401)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.01938870002237/${module}
variable           unitx         equal     0.01938870002237/0.452202878715632
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.22456677133215/${module}
variable           unity         equal     0.22456677133215/0.452202878715632
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.392022049180401/${module}
variable           unitz         equal     -0.392022049180401/0.452202878715632
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.09769146715689e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.09769146715689e-05*-7.09769146715689e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.09769146715689e-05*-7.09769146715689e-05+1.87013382564294e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.09769146715689e-05*-7.09769146715689e-05+1.87013382564294e-06*1.87013382564294e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-7.09769146715689e-05*-7.09769146715689e-05+1.87013382564294e-06*1.87013382564294e-06+-7.46899776605109e-06*${fz})
variable           f_module      equal     sqrt(-7.09769146715689e-05*-7.09769146715689e-05+1.87013382564294e-06*1.87013382564294e-06+-7.46899776605109e-06*-7.46899776605109e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0428761092309689*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0428761092309689*0.0428761092309689+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0428761092309689*0.0428761092309689+0.496606240035391*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0428761092309689*0.0428761092309689+0.496606240035391*0.496606240035391+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0428761092309689*0.0428761092309689+0.496606240035391*0.496606240035391+-0.866916306003714*${unitz})
variable           dir_module    equal     sqrt(0.0428761092309689*0.0428761092309689+0.496606240035391*0.496606240035391+-0.866916306003714*-0.866916306003714)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.09769146715689e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.09769146715689e-05*0.0428761092309689+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.09769146715689e-05*0.0428761092309689+1.87013382564294e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -7.09769146715689e-05*0.0428761092309689+1.87013382564294e-06*0.496606240035391+${fz}*${unitz}
variable           dot      equal     -7.09769146715689e-05*0.0428761092309689+1.87013382564294e-06*0.496606240035391+-7.46899776605109e-06*${unitz}
variable           dot      equal     -7.09769146715689e-05*0.0428761092309689+1.87013382564294e-06*0.496606240035391+-7.46899776605109e-06*-0.866916306003714
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.3605021340752e-06/${f_module}*${dir_module}
variable           cos      equal     4.3605021340752e-06/7.13933172254257e-05*${dir_module}
variable           cos      equal     4.3605021340752e-06/7.13933172254257e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0610771750569712)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.50968111391698/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.4983562380518-90.0)
print              "The dot product: ${dot}"
The dot product: 4.3605021340752e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.4983562380518

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01938870002237^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01938870002237^2+0.22456677133215^2+${new_z}^2)
variable           norm          equal     sqrt(0.01938870002237^2+0.22456677133215^2+-0.392022049180401^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01938870002237/${norm}
variable           unit_x        equal     0.01938870002237/0.452202878715632
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.22456677133215/${norm}
variable           unit_y        equal     0.22456677133215/0.452202878715632
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.392022049180401/${norm}
variable           unit_z        equal     -0.392022049180401/0.452202878715632
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18502501390714+${delta}*${unit_x}
variable           x_new         equal     1.18502501390714+0.03*${unit_x}
variable           x_new         equal     1.18502501390714+0.03*0.0428761092309689
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.24924972659449+${delta}*${unit_y}
variable           y_new         equal     4.24924972659449+0.03*${unit_y}
variable           y_new         equal     4.24924972659449+0.03*0.496606240035391
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9288462737523+${delta}*${unit_z}
variable           z_new         equal     30.9288462737523+0.03*${unit_z}
variable           z_new         equal     30.9288462737523+0.03*-0.866916306003714

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18631129718407  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18631129718407  y  4.26414791379555  z   ${z_new}
set                atom          288751    x  1.18631129718407  y  4.26414791379555  z   30.9028387845722
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01938870002237  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01938870002237  0.22456677133215  ${new_z}
fix                hold    carbon   planeforce   0.01938870002237  0.22456677133215  -0.392022049180401
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3391   -1152448.9            0   -1152448.9  -0.16264381   0.15757346   0.08222066 
    3578   -1152448.9            0   -1152448.9 3.5923643e-05 -2.6645471e-05 -1.3486932e-05 
Loop time of 2.16345 on 104 procs for 187 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.87109858  -1152448.87847666  -1152448.87847666
  Force two-norm initial, final = 0.3552229 0.00027548965
  Force max component initial, final = 0.16264381 4.3619951e-05
  Final line search alpha, max atom move = 1.0000000 4.3619951e-05
  Iterations, force evaluations = 187 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56677    | 1.5727     | 2.0407     |  33.8 | 72.69
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035394   | 0.3557     | 1.0613     |  49.5 | 16.44
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2914e-05 | 0.003082   | 0.0066252  |   2.6 |  0.14
Other   |            | 0.232      |            |       | 10.72

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115500 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238196
Ave neighs/atom = 28.530450
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1567402086973-${x_0}
variable           new_x         equal     1.1567402086973-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.29414147740294-${y_0}
variable           new_y         equal     4.29414147740294-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.91855783096-${z_0}
variable           new_z         equal     30.91855783096-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00889610518747008*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00889610518747008*-0.00889610518747008+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00889610518747008*-0.00889610518747008+0.2694585221406*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00889610518747008*-0.00889610518747008+0.2694585221406*0.2694585221406+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00889610518747008*-0.00889610518747008+0.2694585221406*0.2694585221406+-0.402310491972699*${new_z})
variable           module        equal     sqrt(-0.00889610518747008*-0.00889610518747008+0.2694585221406*0.2694585221406+-0.402310491972699*-0.402310491972699)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00889610518747008/${module}
variable           unitx         equal     -0.00889610518747008/0.484294092254921
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.2694585221406/${module}
variable           unity         equal     0.2694585221406/0.484294092254921
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.402310491972699/${module}
variable           unitz         equal     -0.402310491972699/0.484294092254921
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.59236433677364e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.59236433677364e-05*3.59236433677364e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.59236433677364e-05*3.59236433677364e-05+-2.66454707194921e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.59236433677364e-05*3.59236433677364e-05+-2.66454707194921e-05*-2.66454707194921e-05+${fz}*${fz})
variable           f_module      equal     sqrt(3.59236433677364e-05*3.59236433677364e-05+-2.66454707194921e-05*-2.66454707194921e-05+-1.34869316562229e-05*${fz})
variable           f_module      equal     sqrt(3.59236433677364e-05*3.59236433677364e-05+-2.66454707194921e-05*-2.66454707194921e-05+-1.34869316562229e-05*-1.34869316562229e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0183692209542531*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0183692209542531*-0.0183692209542531+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0183692209542531*-0.0183692209542531+0.55639440259528*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0183692209542531*-0.0183692209542531+0.55639440259528*0.55639440259528+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0183692209542531*-0.0183692209542531+0.55639440259528*0.55639440259528+-0.830715258366051*${unitz})
variable           dir_module    equal     sqrt(-0.0183692209542531*-0.0183692209542531+0.55639440259528*0.55639440259528+-0.830715258366051*-0.830715258366051)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.59236433677364e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.59236433677364e-05*-0.0183692209542531+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.59236433677364e-05*-0.0183692209542531+-2.66454707194921e-05*${unity}+${fz}*${unitz}
variable           dot      equal     3.59236433677364e-05*-0.0183692209542531+-2.66454707194921e-05*0.55639440259528+${fz}*${unitz}
variable           dot      equal     3.59236433677364e-05*-0.0183692209542531+-2.66454707194921e-05*0.55639440259528+-1.34869316562229e-05*${unitz}
variable           dot      equal     3.59236433677364e-05*-0.0183692209542531+-2.66454707194921e-05*0.55639440259528+-1.34869316562229e-05*-0.830715258366051
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.28148018998109e-06/${f_module}*${dir_module}
variable           cos      equal     -4.28148018998109e-06/4.67160206800114e-05*${dir_module}
variable           cos      equal     -4.28148018998109e-06/4.67160206800114e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0916490772899462)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.66257419336475/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(95.2584844071674-90.0)
print              "The dot product: ${dot}"
The dot product: -4.28148018998109e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 95.2584844071674

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00889610518747008^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00889610518747008^2+0.2694585221406^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00889610518747008^2+0.2694585221406^2+-0.402310491972699^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00889610518747008/${norm}
variable           unit_x        equal     -0.00889610518747008/0.484294092254921
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.2694585221406/${norm}
variable           unit_y        equal     0.2694585221406/0.484294092254921
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.402310491972699/${norm}
variable           unit_z        equal     -0.402310491972699/0.484294092254921
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1567402086973+${delta}*${unit_x}
variable           x_new         equal     1.1567402086973+0.03*${unit_x}
variable           x_new         equal     1.1567402086973+0.03*-0.0183692209542531
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.29414147740294+${delta}*${unit_y}
variable           y_new         equal     4.29414147740294+0.03*${unit_y}
variable           y_new         equal     4.29414147740294+0.03*0.55639440259528
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.91855783096+${delta}*${unit_z}
variable           z_new         equal     30.91855783096+0.03*${unit_z}
variable           z_new         equal     30.91855783096+0.03*-0.830715258366051

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15618913206867  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15618913206867  y  4.3108333094808  z   ${z_new}
set                atom          288751    x  1.15618913206867  y  4.3108333094808  z   30.893636373209
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00889610518747008  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00889610518747008  0.2694585221406  ${new_z}
fix                hold    carbon   planeforce   -0.00889610518747008  0.2694585221406  -0.402310491972699
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3578   -1152448.8            0   -1152448.8  -0.15642804   0.14853941   0.10294738 
    3759   -1152448.8            0   -1152448.8 5.1115807e-05 1.8347932e-05 1.1158732e-05 
Loop time of 2.10599 on 104 procs for 181 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.81402179  -1152448.82110086  -1152448.82110086
  Force two-norm initial, final = 0.34319947 0.00026460489
  Force max component initial, final = 0.15642804 5.2957433e-05
  Final line search alpha, max atom move = 1.0000000 5.2957433e-05
  Iterations, force evaluations = 181 362

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55726    | 1.5261     | 1.9793     |  33.2 | 72.47
Neigh   | 2.2114e-05 | 0.0059245  | 0.0086426  |   3.2 |  0.28
Comm    | 0.042088   | 0.3432     | 1.0381     |  49.3 | 16.30
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.243e-05  | 0.0029946  | 0.0064468  |   2.6 |  0.14
Other   |            | 0.2278     |            |       | 10.81

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.16 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115489 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 2
Dangerous builds = 1
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12758404157608-${x_0}
variable           new_x         equal     1.12758404157608-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.33897551065802-${y_0}
variable           new_y         equal     4.33897551065802-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9131179179099-${z_0}
variable           new_z         equal     30.9131179179099-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03805227230869*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03805227230869*-0.03805227230869+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03805227230869*-0.03805227230869+0.314292555395681*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03805227230869*-0.03805227230869+0.314292555395681*0.314292555395681+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03805227230869*-0.03805227230869+0.314292555395681*0.314292555395681+-0.407750405022799*${new_z})
variable           module        equal     sqrt(-0.03805227230869*-0.03805227230869+0.314292555395681*0.314292555395681+-0.407750405022799*-0.407750405022799)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.03805227230869/${module}
variable           unitx         equal     -0.03805227230869/0.516224930239967
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.314292555395681/${module}
variable           unity         equal     0.314292555395681/0.516224930239967
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.407750405022799/${module}
variable           unitz         equal     -0.407750405022799/0.516224930239967
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.1115807124838e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.1115807124838e-05*5.1115807124838e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.1115807124838e-05*5.1115807124838e-05+1.83479318134388e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.1115807124838e-05*5.1115807124838e-05+1.83479318134388e-05*1.83479318134388e-05+${fz}*${fz})
variable           f_module      equal     sqrt(5.1115807124838e-05*5.1115807124838e-05+1.83479318134388e-05*1.83479318134388e-05+1.11587320824868e-05*${fz})
variable           f_module      equal     sqrt(5.1115807124838e-05*5.1115807124838e-05+1.83479318134388e-05*1.83479318134388e-05+1.11587320824868e-05*1.11587320824868e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0737125816279377*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0737125816279377*-0.0737125816279377+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0737125816279377*-0.0737125816279377+0.608828704281256*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0737125816279377*-0.0737125816279377+0.608828704281256*0.608828704281256+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0737125816279377*-0.0737125816279377+0.608828704281256*0.608828704281256+-0.78986965010244*${unitz})
variable           dir_module    equal     sqrt(-0.0737125816279377*-0.0737125816279377+0.608828704281256*0.608828704281256+-0.78986965010244*-0.78986965010244)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.1115807124838e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.1115807124838e-05*-0.0737125816279377+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.1115807124838e-05*-0.0737125816279377+1.83479318134388e-05*${unity}+${fz}*${unitz}
variable           dot      equal     5.1115807124838e-05*-0.0737125816279377+1.83479318134388e-05*0.608828704281256+${fz}*${unitz}
variable           dot      equal     5.1115807124838e-05*-0.0737125816279377+1.83479318134388e-05*0.608828704281256+1.11587320824868e-05*${unitz}
variable           dot      equal     5.1115807124838e-05*-0.0737125816279377+1.83479318134388e-05*0.608828704281256+1.11587320824868e-05*-0.78986965010244
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.41107435853148e-06/${f_module}*${dir_module}
variable           cos      equal     -1.41107435853148e-06/5.54435716881854e-05*${dir_module}
variable           cos      equal     -1.41107435853148e-06/5.54435716881854e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0254506395523607)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59624971469365/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.4583717009079-90.0)
print              "The dot product: ${dot}"
The dot product: -1.41107435853148e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.4583717009079

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03805227230869^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03805227230869^2+0.314292555395681^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03805227230869^2+0.314292555395681^2+-0.407750405022799^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.03805227230869/${norm}
variable           unit_x        equal     -0.03805227230869/0.516224930239967
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.314292555395681/${norm}
variable           unit_y        equal     0.314292555395681/0.516224930239967
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.407750405022799/${norm}
variable           unit_z        equal     -0.407750405022799/0.516224930239967
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12758404157608+${delta}*${unit_x}
variable           x_new         equal     1.12758404157608+0.03*${unit_x}
variable           x_new         equal     1.12758404157608+0.03*-0.0737125816279377
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.33897551065802+${delta}*${unit_y}
variable           y_new         equal     4.33897551065802+0.03*${unit_y}
variable           y_new         equal     4.33897551065802+0.03*0.608828704281256
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9131179179099+${delta}*${unit_z}
variable           z_new         equal     30.9131179179099+0.03*${unit_z}
variable           z_new         equal     30.9131179179099+0.03*-0.78986965010244

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12537266412724  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12537266412724  y  4.35724037178646  z   ${z_new}
set                atom          288751    x  1.12537266412724  y  4.35724037178646  z   30.8894218284068
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.03805227230869  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.03805227230869  0.314292555395681  ${new_z}
fix                hold    carbon   planeforce   -0.03805227230869  0.314292555395681  -0.407750405022799
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3759   -1152448.8            0   -1152448.8  -0.13459554   0.13163253   0.11402267 
    3969   -1152448.8            0   -1152448.8 -5.5247773e-06 3.2039801e-07 7.6254746e-07 
Loop time of 2.44243 on 104 procs for 210 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.75379884  -1152448.76010029  -1152448.76010029
  Force two-norm initial, final = 0.32105763 1.6120046e-05
  Force max component initial, final = 0.13459554 5.5247773e-06
  Final line search alpha, max atom move = 1.0000000 5.5247773e-06
  Iterations, force evaluations = 210 420

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.65351    | 1.7704     | 2.2905     |  35.5 | 72.49
Neigh   | 2.2136e-05 | 0.0059256  | 0.0086377  |   3.2 |  0.24
Comm    | 0.045526   | 0.39805    | 1.199      |  52.8 | 16.30
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5601e-05 | 0.0034726  | 0.0074425  |   2.8 |  0.14
Other   |            | 0.2646     |            |       | 10.83

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.16 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115507 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 2
Dangerous builds = 1
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10057395830198-${x_0}
variable           new_x         equal     1.10057395830198-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.38288771533066-${y_0}
variable           new_y         equal     4.38288771533066-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9115049854991-${z_0}
variable           new_z         equal     30.9115049854991-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0650623555827901*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0650623555827901*-0.0650623555827901+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0650623555827901*-0.0650623555827901+0.35820476006832*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0650623555827901*-0.0650623555827901+0.35820476006832*0.35820476006832+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0650623555827901*-0.0650623555827901+0.35820476006832*0.35820476006832+-0.4093633374336*${new_z})
variable           module        equal     sqrt(-0.0650623555827901*-0.0650623555827901+0.35820476006832*0.35820476006832+-0.4093633374336*-0.4093633374336)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0650623555827901/${module}
variable           unitx         equal     -0.0650623555827901/0.547834009791615
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.35820476006832/${module}
variable           unity         equal     0.35820476006832/0.547834009791615
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.4093633374336/${module}
variable           unitz         equal     -0.4093633374336/0.547834009791615
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.52477728033958e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.52477728033958e-06*-5.52477728033958e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.52477728033958e-06*-5.52477728033958e-06+3.2039800581857e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-5.52477728033958e-06*-5.52477728033958e-06+3.2039800581857e-07*3.2039800581857e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-5.52477728033958e-06*-5.52477728033958e-06+3.2039800581857e-07*3.2039800581857e-07+7.62547464925956e-07*${fz})
variable           f_module      equal     sqrt(-5.52477728033958e-06*-5.52477728033958e-06+3.2039800581857e-07*3.2039800581857e-07+7.62547464925956e-07*7.62547464925956e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.118762899746838*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.118762899746838*-0.118762899746838+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.118762899746838*-0.118762899746838+0.653856375591895*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.118762899746838*-0.118762899746838+0.653856375591895*0.653856375591895+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.118762899746838*-0.118762899746838+0.653856375591895*0.653856375591895+-0.747239729766528*${unitz})
variable           dir_module    equal     sqrt(-0.118762899746838*-0.118762899746838+0.653856375591895*0.653856375591895+-0.747239729766528*-0.747239729766528)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.52477728033958e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.52477728033958e-06*-0.118762899746838+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -5.52477728033958e-06*-0.118762899746838+3.2039800581857e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -5.52477728033958e-06*-0.118762899746838+3.2039800581857e-07*0.653856375591895+${fz}*${unitz}
variable           dot      equal     -5.52477728033958e-06*-0.118762899746838+3.2039800581857e-07*0.653856375591895+7.62547464925956e-07*${unitz}
variable           dot      equal     -5.52477728033958e-06*-0.118762899746838+3.2039800581857e-07*0.653856375591895+7.62547464925956e-07*-0.747239729766528
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.95827087474557e-07/${f_module}*${dir_module}
variable           cos      equal     2.95827087474557e-07/5.586349211762e-06*${dir_module}
variable           cos      equal     2.95827087474557e-07/5.586349211762e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0529553517441581)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.51781619358806/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.9644619692074-90.0)
print              "The dot product: ${dot}"
The dot product: 2.95827087474557e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.9644619692074

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0650623555827901^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0650623555827901^2+0.35820476006832^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0650623555827901^2+0.35820476006832^2+-0.4093633374336^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0650623555827901/${norm}
variable           unit_x        equal     -0.0650623555827901/0.547834009791615
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.35820476006832/${norm}
variable           unit_y        equal     0.35820476006832/0.547834009791615
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.4093633374336/${norm}
variable           unit_z        equal     -0.4093633374336/0.547834009791615
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10057395830198+${delta}*${unit_x}
variable           x_new         equal     1.10057395830198+0.03*${unit_x}
variable           x_new         equal     1.10057395830198+0.03*-0.118762899746838
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.38288771533066+${delta}*${unit_y}
variable           y_new         equal     4.38288771533066+0.03*${unit_y}
variable           y_new         equal     4.38288771533066+0.03*0.653856375591895
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9115049854991+${delta}*${unit_z}
variable           z_new         equal     30.9115049854991+0.03*${unit_z}
variable           z_new         equal     30.9115049854991+0.03*-0.747239729766528

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09701107130957  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09701107130957  y  4.40250340659842  z   ${z_new}
set                atom          288751    x  1.09701107130957  y  4.40250340659842  z   30.8890877936061
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0650623555827901  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0650623555827901  0.35820476006832  ${new_z}
fix                hold    carbon   planeforce   -0.0650623555827901  0.35820476006832  -0.4093633374336
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3969   -1152448.7            0   -1152448.7 -0.095318328   0.10802729   0.10967647 
    4000   -1152448.7            0   -1152448.7 0.00012972193 0.00011847704 8.3053422e-05 
    4166   -1152448.7            0   -1152448.7 1.7032229e-05 9.6378816e-06 5.7263998e-06 
Loop time of 2.27723 on 104 procs for 197 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.69029092  -1152448.69548522  -1152448.69548522
  Force two-norm initial, final = 0.29169885 0.0001711429
  Force max component initial, final = 0.12270113 4.2393174e-05
  Final line search alpha, max atom move = 1.0000000 4.2393174e-05
  Iterations, force evaluations = 197 394

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60119    | 1.6557     | 2.1492     |  34.7 | 72.71
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037117   | 0.37378    | 1.1311     |  51.0 | 16.41
Output  | 0.00010018 | 0.00010317 | 0.00018544 |   0.0 |  0.00
Modify  | 2.4643e-05 | 0.003245   | 0.0069361  |   2.7 |  0.14
Other   |            | 0.2444     |            |       | 10.73

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.12 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07889376404312-${x_0}
variable           new_x         equal     1.07889376404312-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.42526498163877-${y_0}
variable           new_y         equal     4.42526498163877-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9118843128844-${z_0}
variable           new_z         equal     30.9118843128844-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0867425498416501*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0867425498416501*-0.0867425498416501+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0867425498416501*-0.0867425498416501+0.40058202637643*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0867425498416501*-0.0867425498416501+0.40058202637643*0.40058202637643+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0867425498416501*-0.0867425498416501+0.40058202637643*0.40058202637643+-0.4089840100483*${new_z})
variable           module        equal     sqrt(-0.0867425498416501*-0.0867425498416501+0.40058202637643*0.40058202637643+-0.4089840100483*-0.4089840100483)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0867425498416501/${module}
variable           unitx         equal     -0.0867425498416501/0.579014810073167
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.40058202637643/${module}
variable           unity         equal     0.40058202637643/0.579014810073167
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.4089840100483/${module}
variable           unitz         equal     -0.4089840100483/0.579014810073167
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.70322289284813e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.70322289284813e-05*1.70322289284813e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.70322289284813e-05*1.70322289284813e-05+9.6378815921956e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.70322289284813e-05*1.70322289284813e-05+9.6378815921956e-06*9.6378815921956e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.70322289284813e-05*1.70322289284813e-05+9.6378815921956e-06*9.6378815921956e-06+5.7263997876251e-06*${fz})
variable           f_module      equal     sqrt(1.70322289284813e-05*1.70322289284813e-05+9.6378815921956e-06*9.6378815921956e-06+5.7263997876251e-06*5.7263997876251e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.149810589181111*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.149810589181111*-0.149810589181111+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.149810589181111*-0.149810589181111+0.691833817386831*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.149810589181111*-0.149810589181111+0.691833817386831*0.691833817386831+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.149810589181111*-0.149810589181111+0.691833817386831*0.691833817386831+-0.706344644270185*${unitz})
variable           dir_module    equal     sqrt(-0.149810589181111*-0.149810589181111+0.691833817386831*0.691833817386831+-0.706344644270185*-0.706344644270185)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.70322289284813e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.70322289284813e-05*-0.149810589181111+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.70322289284813e-05*-0.149810589181111+9.6378815921956e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.70322289284813e-05*-0.149810589181111+9.6378815921956e-06*0.691833817386831+${fz}*${unitz}
variable           dot      equal     1.70322289284813e-05*-0.149810589181111+9.6378815921956e-06*0.691833817386831+5.7263997876251e-06*${unitz}
variable           dot      equal     1.70322289284813e-05*-0.149810589181111+9.6378815921956e-06*0.691833817386831+5.7263997876251e-06*-0.706344644270185
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.13923416686901e-08/${f_module}*${dir_module}
variable           cos      equal     7.13923416686901e-08/2.03906164297476e-05*${dir_module}
variable           cos      equal     7.13923416686901e-08/2.03906164297476e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00350123508598478)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56729508455547/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7993935966279-90.0)
print              "The dot product: ${dot}"
The dot product: 7.13923416686901e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7993935966279

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0867425498416501^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0867425498416501^2+0.40058202637643^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0867425498416501^2+0.40058202637643^2+-0.4089840100483^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0867425498416501/${norm}
variable           unit_x        equal     -0.0867425498416501/0.579014810073167
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.40058202637643/${norm}
variable           unit_y        equal     0.40058202637643/0.579014810073167
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.4089840100483/${norm}
variable           unit_z        equal     -0.4089840100483/0.579014810073167
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07889376404312+${delta}*${unit_x}
variable           x_new         equal     1.07889376404312+0.03*${unit_x}
variable           x_new         equal     1.07889376404312+0.03*-0.149810589181111
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.42526498163877+${delta}*${unit_y}
variable           y_new         equal     4.42526498163877+0.03*${unit_y}
variable           y_new         equal     4.42526498163877+0.03*0.691833817386831
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9118843128844+${delta}*${unit_z}
variable           z_new         equal     30.9118843128844+0.03*${unit_z}
variable           z_new         equal     30.9118843128844+0.03*-0.706344644270185

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07439944636769  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07439944636769  y  4.44601999616037  z   ${z_new}
set                atom          288751    x  1.07439944636769  y  4.44601999616037  z   30.8906939735563
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0867425498416501  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0867425498416501  0.40058202637643  ${new_z}
fix                hold    carbon   planeforce   -0.0867425498416501  0.40058202637643  -0.4089840100483
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4166   -1152448.6            0   -1152448.6  -0.04603858  0.079988525  0.088109727 
    4385   -1152448.6            0   -1152448.6 -1.1740882e-05 1.5556588e-05 1.7727157e-05 
Loop time of 2.53304 on 104 procs for 219 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.62388278  -1152448.62821068  -1152448.62821068
  Force two-norm initial, final = 0.26751979 0.00011771682
  Force max component initial, final = 0.13598394 2.7051379e-05
  Final line search alpha, max atom move = 1.0000000 2.7051379e-05
  Iterations, force evaluations = 219 438

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.66619    | 1.8399     | 2.39       |  36.5 | 72.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.041911   | 0.41378    | 1.2381     |  53.8 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.657e-05  | 0.0036081  | 0.0077221  |   2.8 |  0.14
Other   |            | 0.2758     |            |       | 10.89

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.12 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115506 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06679329033407-${x_0}
variable           new_x         equal     1.06679329033407-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.46364847815361-${y_0}
variable           new_y         equal     4.46364847815361-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9095735146089-${z_0}
variable           new_z         equal     30.9095735146089-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988430235507001*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988430235507001*-0.0988430235507001+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988430235507001*-0.0988430235507001+0.43896552289127*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988430235507001*-0.0988430235507001+0.43896552289127*0.43896552289127+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988430235507001*-0.0988430235507001+0.43896552289127*0.43896552289127+-0.411294808323799*${new_z})
variable           module        equal     sqrt(-0.0988430235507001*-0.0988430235507001+0.43896552289127*0.43896552289127+-0.411294808323799*-0.411294808323799)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0988430235507001/${module}
variable           unitx         equal     -0.0988430235507001/0.609609787442722
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.43896552289127/${module}
variable           unity         equal     0.43896552289127/0.609609787442722
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.411294808323799/${module}
variable           unitz         equal     -0.411294808323799/0.609609787442722
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.17408821836043e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.17408821836043e-05*-1.17408821836043e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.17408821836043e-05*-1.17408821836043e-05+1.55565880101672e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.17408821836043e-05*-1.17408821836043e-05+1.55565880101672e-05*1.55565880101672e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-1.17408821836043e-05*-1.17408821836043e-05+1.55565880101672e-05*1.55565880101672e-05+1.7727156633165e-05*${fz})
variable           f_module      equal     sqrt(-1.17408821836043e-05*-1.17408821836043e-05+1.55565880101672e-05*1.55565880101672e-05+1.7727156633165e-05*1.7727156633165e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.162141464239511*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.162141464239511*-0.162141464239511+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.162141464239511*-0.162141464239511+0.720076238822715*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.162141464239511*-0.162141464239511+0.720076238822715*0.720076238822715+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.162141464239511*-0.162141464239511+0.720076238822715*0.720076238822715+-0.674685375458221*${unitz})
variable           dir_module    equal     sqrt(-0.162141464239511*-0.162141464239511+0.720076238822715*0.720076238822715+-0.674685375458221*-0.674685375458221)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.17408821836043e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.17408821836043e-05*-0.162141464239511+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.17408821836043e-05*-0.162141464239511+1.55565880101672e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -1.17408821836043e-05*-0.162141464239511+1.55565880101672e-05*0.720076238822715+${fz}*${unitz}
variable           dot      equal     -1.17408821836043e-05*-0.162141464239511+1.55565880101672e-05*0.720076238822715+1.7727156633165e-05*${unitz}
variable           dot      equal     -1.17408821836043e-05*-0.162141464239511+1.55565880101672e-05*0.720076238822715+1.7727156633165e-05*-0.674685375458221
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.14535988313531e-06/${f_module}*${dir_module}
variable           cos      equal     1.14535988313531e-06/2.63459261986388e-05*${dir_module}
variable           cos      equal     1.14535988313531e-06/2.63459261986388e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0434738894544723)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5273087315571/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.508344331701-90.0)
print              "The dot product: ${dot}"
The dot product: 1.14535988313531e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.508344331701

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0988430235507001^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0988430235507001^2+0.43896552289127^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0988430235507001^2+0.43896552289127^2+-0.411294808323799^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0988430235507001/${norm}
variable           unit_x        equal     -0.0988430235507001/0.609609787442722
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.43896552289127/${norm}
variable           unit_y        equal     0.43896552289127/0.609609787442722
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.411294808323799/${norm}
variable           unit_z        equal     -0.411294808323799/0.609609787442722
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06679329033407+${delta}*${unit_x}
variable           x_new         equal     1.06679329033407+0.03*${unit_x}
variable           x_new         equal     1.06679329033407+0.03*-0.162141464239511
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.46364847815361+${delta}*${unit_y}
variable           y_new         equal     4.46364847815361+0.03*${unit_y}
variable           y_new         equal     4.46364847815361+0.03*0.720076238822715
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9095735146089+${delta}*${unit_z}
variable           z_new         equal     30.9095735146089+0.03*${unit_z}
variable           z_new         equal     30.9095735146089+0.03*-0.674685375458221

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06192904640688  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06192904640688  y  4.48525076531829  z   ${z_new}
set                atom          288751    x  1.06192904640688  y  4.48525076531829  z   30.8893329533452
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0988430235507001  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0988430235507001  0.43896552289127  ${new_z}
fix                hold    carbon   planeforce   -0.0988430235507001  0.43896552289127  -0.411294808323799
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4385   -1152448.6            0   -1152448.6 0.0047148944  0.046223934  0.048200655 
    4610   -1152448.6            0   -1152448.6 2.9499631e-06 -2.1099345e-06 -2.9608246e-06 
Loop time of 2.61192 on 104 procs for 225 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.55683018  -1152448.56054213  -1152448.56054213
  Force two-norm initial, final = 0.24797039 5.5004889e-05
  Force max component initial, final = 0.14567009 6.4048214e-06
  Final line search alpha, max atom move = 1.0000000 6.4048214e-06
  Iterations, force evaluations = 225 450

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68548    | 1.8905     | 2.4606     |  37.1 | 72.38
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.045484   | 0.42803    | 1.2897     |  54.4 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.8117e-05 | 0.0037056  | 0.0079207  |   2.9 |  0.14
Other   |            | 0.2897     |            |       | 11.09

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.12 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115497 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06520645532106-${x_0}
variable           new_x         equal     1.06520645532106-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.49627346326471-${y_0}
variable           new_y         equal     4.49627346326471-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9003095941146-${z_0}
variable           new_z         equal     30.9003095941146-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10042985856371*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10042985856371*-0.10042985856371+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10042985856371*-0.10042985856371+0.47159050800237*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10042985856371*-0.10042985856371+0.47159050800237*0.47159050800237+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10042985856371*-0.10042985856371+0.47159050800237*0.47159050800237+-0.420558728818101*${new_z})
variable           module        equal     sqrt(-0.10042985856371*-0.10042985856371+0.47159050800237*0.47159050800237+-0.420558728818101*-0.420558728818101)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10042985856371/${module}
variable           unitx         equal     -0.10042985856371/0.639807321085151
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.47159050800237/${module}
variable           unity         equal     0.47159050800237/0.639807321085151
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.420558728818101/${module}
variable           unitz         equal     -0.420558728818101/0.639807321085151
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.94996307422244e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.94996307422244e-06*2.94996307422244e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.94996307422244e-06*2.94996307422244e-06+-2.1099345052323e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.94996307422244e-06*2.94996307422244e-06+-2.1099345052323e-06*-2.1099345052323e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.94996307422244e-06*2.94996307422244e-06+-2.1099345052323e-06*-2.1099345052323e-06+-2.96082456762009e-06*${fz})
variable           f_module      equal     sqrt(2.94996307422244e-06*2.94996307422244e-06+-2.1099345052323e-06*-2.1099345052323e-06+-2.96082456762009e-06*-2.96082456762009e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.156968911192474*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.156968911192474*-0.156968911192474+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.156968911192474*-0.156968911192474+0.737082075276233*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.156968911192474*-0.156968911192474+0.737082075276233*0.737082075276233+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.156968911192474*-0.156968911192474+0.737082075276233*0.737082075276233+-0.657320907339429*${unitz})
variable           dir_module    equal     sqrt(-0.156968911192474*-0.156968911192474+0.737082075276233*0.737082075276233+-0.657320907339429*-0.657320907339429)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.94996307422244e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.94996307422244e-06*-0.156968911192474+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.94996307422244e-06*-0.156968911192474+-2.1099345052323e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.94996307422244e-06*-0.156968911192474+-2.1099345052323e-06*0.737082075276233+${fz}*${unitz}
variable           dot      equal     2.94996307422244e-06*-0.156968911192474+-2.1099345052323e-06*0.737082075276233+-2.96082456762009e-06*${unitz}
variable           dot      equal     2.94996307422244e-06*-0.156968911192474+-2.1099345052323e-06*0.737082075276233+-2.96082456762009e-06*-0.657320907339429
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.20355043713455e-08/${f_module}*${dir_module}
variable           cos      equal     -7.20355043713455e-08/4.68194274589817e-06*${dir_module}
variable           cos      equal     -7.20355043713455e-08/4.68194274589817e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0153858148808965)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58618274877061/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8815770410157-90.0)
print              "The dot product: ${dot}"
The dot product: -7.20355043713455e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8815770410157

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10042985856371^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10042985856371^2+0.47159050800237^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10042985856371^2+0.47159050800237^2+-0.420558728818101^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10042985856371/${norm}
variable           unit_x        equal     -0.10042985856371/0.639807321085151
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.47159050800237/${norm}
variable           unit_y        equal     0.47159050800237/0.639807321085151
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.420558728818101/${norm}
variable           unit_z        equal     -0.420558728818101/0.639807321085151
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06520645532106+${delta}*${unit_x}
variable           x_new         equal     1.06520645532106+0.03*${unit_x}
variable           x_new         equal     1.06520645532106+0.03*-0.156968911192474
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.49627346326471+${delta}*${unit_y}
variable           y_new         equal     4.49627346326471+0.03*${unit_y}
variable           y_new         equal     4.49627346326471+0.03*0.737082075276233
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9003095941146+${delta}*${unit_z}
variable           z_new         equal     30.9003095941146+0.03*${unit_z}
variable           z_new         equal     30.9003095941146+0.03*-0.657320907339429

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06049738798529  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06049738798529  y  4.518385925523  z   ${z_new}
set                atom          288751    x  1.06049738798529  y  4.518385925523  z   30.8805899668944
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10042985856371  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10042985856371  0.47159050800237  ${new_z}
fix                hold    carbon   planeforce   -0.10042985856371  0.47159050800237  -0.420558728818101
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4610   -1152448.5            0   -1152448.5  0.040436253  0.018715435    0.0113302 
    4800   -1152448.5            0   -1152448.5 1.3142219e-05 -1.4344482e-05 -1.9223458e-05 
Loop time of 2.21029 on 104 procs for 190 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.49037687  -1152448.49326673  -1152448.49326673
  Force two-norm initial, final = 0.23431174 0.00011060235
  Force max component initial, final = 0.15044554 2.4337727e-05
  Final line search alpha, max atom move = 1.0000000 2.4337727e-05
  Iterations, force evaluations = 190 380

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58589    | 1.6044     | 2.0877     |  34.0 | 72.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038969   | 0.35963    | 1.0851     |  50.4 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3236e-05 | 0.0031343  | 0.006816   |   2.6 |  0.14
Other   |            | 0.2431     |            |       | 11.00

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.05 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115489 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.0705973256712-${x_0}
variable           new_x         equal     1.0705973256712-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.52536311423665-${y_0}
variable           new_y         equal     4.52536311423665-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.8860019117685-${z_0}
variable           new_z         equal     30.8860019117685-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09503898821357*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09503898821357*-0.09503898821357+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09503898821357*-0.09503898821357+0.50068015897431*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09503898821357*-0.09503898821357+0.50068015897431*0.50068015897431+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09503898821357*-0.09503898821357+0.50068015897431*0.50068015897431+-0.434866411164201*${new_z})
variable           module        equal     sqrt(-0.09503898821357*-0.09503898821357+0.50068015897431*0.50068015897431+-0.434866411164201*-0.434866411164201)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.09503898821357/${module}
variable           unitx         equal     -0.09503898821357/0.669941658974893
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.50068015897431/${module}
variable           unity         equal     0.50068015897431/0.669941658974893
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.434866411164201/${module}
variable           unitz         equal     -0.434866411164201/0.669941658974893
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.31422193436095e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.31422193436095e-05*1.31422193436095e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.31422193436095e-05*1.31422193436095e-05+-1.43444821974193e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.31422193436095e-05*1.31422193436095e-05+-1.43444821974193e-05*-1.43444821974193e-05+${fz}*${fz})
variable           f_module      equal     sqrt(1.31422193436095e-05*1.31422193436095e-05+-1.43444821974193e-05*-1.43444821974193e-05+-1.92234575634759e-05*${fz})
variable           f_module      equal     sqrt(1.31422193436095e-05*1.31422193436095e-05+-1.43444821974193e-05*-1.43444821974193e-05+-1.92234575634759e-05*-1.92234575634759e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.141861588901627*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.141861588901627*-0.141861588901627+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.141861588901627*-0.141861588901627+0.747348895634319*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.141861588901627*-0.141861588901627+0.747348895634319*0.747348895634319+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.141861588901627*-0.141861588901627+0.747348895634319*0.747348895634319+-0.649110867100889*${unitz})
variable           dir_module    equal     sqrt(-0.141861588901627*-0.141861588901627+0.747348895634319*0.747348895634319+-0.649110867100889*-0.649110867100889)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.31422193436095e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.31422193436095e-05*-0.141861588901627+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.31422193436095e-05*-0.141861588901627+-1.43444821974193e-05*${unity}+${fz}*${unitz}
variable           dot      equal     1.31422193436095e-05*-0.141861588901627+-1.43444821974193e-05*0.747348895634319+${fz}*${unitz}
variable           dot      equal     1.31422193436095e-05*-0.141861588901627+-1.43444821974193e-05*0.747348895634319+-1.92234575634759e-05*${unitz}
variable           dot      equal     1.31422193436095e-05*-0.141861588901627+-1.43444821974193e-05*0.747348895634319+-1.92234575634759e-05*-0.649110867100889
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.06553838760618e-07/${f_module}*${dir_module}
variable           cos      equal     -1.06553838760618e-07/2.73500168095448e-05*${dir_module}
variable           cos      equal     -1.06553838760618e-07/2.73500168095448e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0038959332092049)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57469226985977/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.2232210948405-90.0)
print              "The dot product: ${dot}"
The dot product: -1.06553838760618e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.2232210948405

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09503898821357^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09503898821357^2+0.50068015897431^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09503898821357^2+0.50068015897431^2+-0.434866411164201^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.09503898821357/${norm}
variable           unit_x        equal     -0.09503898821357/0.669941658974893
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.50068015897431/${norm}
variable           unit_y        equal     0.50068015897431/0.669941658974893
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.434866411164201/${norm}
variable           unit_z        equal     -0.434866411164201/0.669941658974893
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.0705973256712+${delta}*${unit_x}
variable           x_new         equal     1.0705973256712+0.03*${unit_x}
variable           x_new         equal     1.0705973256712+0.03*-0.141861588901627
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.52536311423665+${delta}*${unit_y}
variable           y_new         equal     4.52536311423665+0.03*${unit_y}
variable           y_new         equal     4.52536311423665+0.03*0.747348895634319
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.8860019117685+${delta}*${unit_z}
variable           z_new         equal     30.8860019117685+0.03*${unit_z}
variable           z_new         equal     30.8860019117685+0.03*-0.649110867100889

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06634147800415  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06634147800415  y  4.54778358110568  z   ${z_new}
set                atom          288751    x  1.06634147800415  y  4.54778358110568  z   30.8665285857555
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09503898821357  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09503898821357  0.50068015897431  ${new_z}
fix                hold    carbon   planeforce   -0.09503898821357  0.50068015897431  -0.434866411164201
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4800   -1152448.4            0   -1152448.4  0.058837876  0.011363584 0.00022450326 
    5000   -1152448.5            0   -1152448.5 -0.0001202977 4.1131764e-05 7.3647515e-05 
    5058   -1152448.5            0   -1152448.5 2.9957806e-06 -1.3800829e-05 -1.65442e-05 
Loop time of 2.98691 on 104 procs for 258 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.42406869  -1152448.46686252  -1152448.46686252
  Force two-norm initial, final = 0.23226919 8.7052460e-05
  Force max component initial, final = 0.15257336 3.8806036e-05
  Final line search alpha, max atom move = 1.0000000 3.8806036e-05
  Iterations, force evaluations = 258 516

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.78965    | 2.1669     | 2.8099     |  39.5 | 72.54
Neigh   | 2.0213e-05 | 0.0059308  | 0.008609   |   3.2 |  0.20
Comm    | 0.05121    | 0.48629    | 1.4504     |  58.7 | 16.28
Output  | 0.00010563 | 0.00011473 | 0.0002657  |   0.0 |  0.00
Modify  | 3.1986e-05 | 0.0042517  | 0.0091179  |   3.1 |  0.14
Other   |            | 0.3235     |            |       | 10.83

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.05 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115416 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238179
Ave neighs/atom = 28.530391
Neighbor list builds = 2
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12175048762178-${x_0}
variable           new_x         equal     1.12175048762178-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.65435321569934-${y_0}
variable           new_y         equal     4.65435321569934-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.9771172266425-${z_0}
variable           new_z         equal     30.9771172266425-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04388582626299*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04388582626299*-0.04388582626299+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04388582626299*-0.04388582626299+0.629670260437*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04388582626299*-0.04388582626299+0.629670260437*0.629670260437+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04388582626299*-0.04388582626299+0.629670260437*0.629670260437+-0.343751096290202*${new_z})
variable           module        equal     sqrt(-0.04388582626299*-0.04388582626299+0.629670260437*0.629670260437+-0.343751096290202*-0.343751096290202)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.04388582626299/${module}
variable           unitx         equal     -0.04388582626299/0.718731812866455
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.629670260437/${module}
variable           unity         equal     0.629670260437/0.718731812866455
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.343751096290202/${module}
variable           unitz         equal     -0.343751096290202/0.718731812866455
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.99578062325825e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.99578062325825e-06*2.99578062325825e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.99578062325825e-06*2.99578062325825e-06+-1.38008286737636e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.99578062325825e-06*2.99578062325825e-06+-1.38008286737636e-05*-1.38008286737636e-05+${fz}*${fz})
variable           f_module      equal     sqrt(2.99578062325825e-06*2.99578062325825e-06+-1.38008286737636e-05*-1.38008286737636e-05+-1.65442004009345e-05*${fz})
variable           f_module      equal     sqrt(2.99578062325825e-06*2.99578062325825e-06+-1.38008286737636e-05*-1.38008286737636e-05+-1.65442004009345e-05*-1.65442004009345e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0610600859421597*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0610600859421597*-0.0610600859421597+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0610600859421597*-0.0610600859421597+0.876085139359202*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0610600859421597*-0.0610600859421597+0.876085139359202*0.876085139359202+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0610600859421597*-0.0610600859421597+0.876085139359202*0.876085139359202+-0.478274497018922*${unitz})
variable           dir_module    equal     sqrt(-0.0610600859421597*-0.0610600859421597+0.876085139359202*0.876085139359202+-0.478274497018922*-0.478274497018922)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.99578062325825e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.99578062325825e-06*-0.0610600859421597+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.99578062325825e-06*-0.0610600859421597+-1.38008286737636e-05*${unity}+${fz}*${unitz}
variable           dot      equal     2.99578062325825e-06*-0.0610600859421597+-1.38008286737636e-05*0.876085139359202+${fz}*${unitz}
variable           dot      equal     2.99578062325825e-06*-0.0610600859421597+-1.38008286737636e-05*0.876085139359202+-1.65442004009345e-05*${unitz}
variable           dot      equal     2.99578062325825e-06*-0.0610600859421597+-1.38008286737636e-05*0.876085139359202+-1.65442004009345e-05*-0.478274497018922
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.36095440890946e-06/${f_module}*${dir_module}
variable           cos      equal     -4.36095440890946e-06/2.1751968658757e-05*${dir_module}
variable           cos      equal     -4.36095440890946e-06/2.1751968658757e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.200485504430598)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.77264978855247/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(101.565351438814-90.0)
print              "The dot product: ${dot}"
The dot product: -4.36095440890946e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 101.565351438814

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04388582626299^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04388582626299^2+0.629670260437^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04388582626299^2+0.629670260437^2+-0.343751096290202^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.04388582626299/${norm}
variable           unit_x        equal     -0.04388582626299/0.718731812866455
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.629670260437/${norm}
variable           unit_y        equal     0.629670260437/0.718731812866455
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.343751096290202/${norm}
variable           unit_z        equal     -0.343751096290202/0.718731812866455
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12175048762178+${delta}*${unit_x}
variable           x_new         equal     1.12175048762178+0.03*${unit_x}
variable           x_new         equal     1.12175048762178+0.03*-0.0610600859421597
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.65435321569934+${delta}*${unit_y}
variable           y_new         equal     4.65435321569934+0.03*${unit_y}
variable           y_new         equal     4.65435321569934+0.03*0.876085139359202
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.9771172266425+${delta}*${unit_z}
variable           z_new         equal     30.9771172266425+0.03*${unit_z}
variable           z_new         equal     30.9771172266425+0.03*-0.478274497018922

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11991868504352  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11991868504352  y  4.68063576988012  z   ${z_new}
set                atom          288751    x  1.11991868504352  y  4.68063576988012  z   30.9627689917319
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04388582626299  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04388582626299  0.629670260437  ${new_z}
fix                hold    carbon   planeforce   -0.04388582626299  0.629670260437  -0.343751096290202
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5058   -1152448.4            0   -1152448.4   0.11237133  0.099958453   0.16875395 
    5288   -1152448.4            0   -1152448.4 -1.6008946e-05 -1.1557803e-05 -1.9127325e-05 
Loop time of 2.65775 on 104 procs for 230 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.42322872  -1152448.44827245  -1152448.44827245
  Force two-norm initial, final = 0.35631513 0.00015778434
  Force max component initial, final = 0.22541481 7.0648696e-05
  Final line search alpha, max atom move = 1.0000000 7.0648696e-05
  Iterations, force evaluations = 230 460

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.70317    | 1.9333     | 2.5058     |  37.4 | 72.74
Neigh   | 1.0153e-05 | 0.0029585  | 0.0043132  |   2.2 |  0.11
Comm    | 0.044412   | 0.43491    | 1.3064     |  55.2 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9285e-05 | 0.0037928  | 0.0081084  |   2.9 |  0.14
Other   |            | 0.2827     |            |       | 10.64

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115470 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15060598362365-${x_0}
variable           new_x         equal     1.15060598362365-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.7441501781319-${y_0}
variable           new_y         equal     4.7441501781319-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.0751945140022-${z_0}
variable           new_z         equal     31.0751945140022-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0150303302611201*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0150303302611201*-0.0150303302611201+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0150303302611201*-0.0150303302611201+0.71946722286956*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0150303302611201*-0.0150303302611201+0.71946722286956*0.71946722286956+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0150303302611201*-0.0150303302611201+0.71946722286956*0.71946722286956+-0.245673808930501*${new_z})
variable           module        equal     sqrt(-0.0150303302611201*-0.0150303302611201+0.71946722286956*0.71946722286956+-0.245673808930501*-0.245673808930501)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0150303302611201/${module}
variable           unitx         equal     -0.0150303302611201/0.760404245126114
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.71946722286956/${module}
variable           unity         equal     0.71946722286956/0.760404245126114
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.245673808930501/${module}
variable           unitz         equal     -0.245673808930501/0.760404245126114
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.60089456209133e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.60089456209133e-05*-1.60089456209133e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.60089456209133e-05*-1.60089456209133e-05+-1.15578027192961e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.60089456209133e-05*-1.60089456209133e-05+-1.15578027192961e-05*-1.15578027192961e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-1.60089456209133e-05*-1.60089456209133e-05+-1.15578027192961e-05*-1.15578027192961e-05+-1.91273247219639e-05*${fz})
variable           f_module      equal     sqrt(-1.60089456209133e-05*-1.60089456209133e-05+-1.15578027192961e-05*-1.15578027192961e-05+-1.91273247219639e-05*-1.91273247219639e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0197662366530151*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0197662366530151*-0.0197662366530151+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0197662366530151*-0.0197662366530151+0.946164132408592*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0197662366530151*-0.0197662366530151+0.946164132408592*0.946164132408592+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0197662366530151*-0.0197662366530151+0.946164132408592*0.946164132408592+-0.323083163337358*${unitz})
variable           dir_module    equal     sqrt(-0.0197662366530151*-0.0197662366530151+0.946164132408592*0.946164132408592+-0.323083163337358*-0.323083163337358)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.60089456209133e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.60089456209133e-05*-0.0197662366530151+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.60089456209133e-05*-0.0197662366530151+-1.15578027192961e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -1.60089456209133e-05*-0.0197662366530151+-1.15578027192961e-05*0.946164132408592+${fz}*${unitz}
variable           dot      equal     -1.60089456209133e-05*-0.0197662366530151+-1.15578027192961e-05*0.946164132408592+-1.91273247219639e-05*${unitz}
variable           dot      equal     -1.60089456209133e-05*-0.0197662366530151+-1.15578027192961e-05*0.946164132408592+-1.91273247219639e-05*-0.323083163337358
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.43942519739129e-06/${f_module}*${dir_module}
variable           cos      equal     -4.43942519739129e-06/2.74904291456314e-05*${dir_module}
variable           cos      equal     -4.43942519739129e-06/2.74904291456314e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.161489847025425)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.73299645618285/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(99.2933828504056-90.0)
print              "The dot product: ${dot}"
The dot product: -4.43942519739129e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 99.2933828504056

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0150303302611201^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0150303302611201^2+0.71946722286956^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0150303302611201^2+0.71946722286956^2+-0.245673808930501^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0150303302611201/${norm}
variable           unit_x        equal     -0.0150303302611201/0.760404245126114
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.71946722286956/${norm}
variable           unit_y        equal     0.71946722286956/0.760404245126114
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.245673808930501/${norm}
variable           unit_z        equal     -0.245673808930501/0.760404245126114
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15060598362365+${delta}*${unit_x}
variable           x_new         equal     1.15060598362365+0.03*${unit_x}
variable           x_new         equal     1.15060598362365+0.03*-0.0197662366530151
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.7441501781319+${delta}*${unit_y}
variable           y_new         equal     4.7441501781319+0.03*${unit_y}
variable           y_new         equal     4.7441501781319+0.03*0.946164132408592
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.0751945140022+${delta}*${unit_z}
variable           z_new         equal     31.0751945140022+0.03*${unit_z}
variable           z_new         equal     31.0751945140022+0.03*-0.323083163337358

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15001299652406  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15001299652406  y  4.77253510210416  z   ${z_new}
set                atom          288751    x  1.15001299652406  y  4.77253510210416  z   31.0655020191021
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0150303302611201  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0150303302611201  0.71946722286956  ${new_z}
fix                hold    carbon   planeforce   -0.0150303302611201  0.71946722286956  -0.245673808930501
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5288   -1152448.4            0   -1152448.4  0.043570413  0.030522648  0.086721361 
    5522   -1152448.4            0   -1152448.4 3.8807107e-06 -7.3017879e-06 -2.1621049e-05 
Loop time of 2.71005 on 104 procs for 234 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.39799738  -1152448.41207397  -1152448.41207397
  Force two-norm initial, final = 0.34295235 0.00015956095
  Force max component initial, final = 0.28730555 7.2422244e-05
  Final line search alpha, max atom move = 1.0000000 7.2422244e-05
  Iterations, force evaluations = 234 468

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.71386    | 1.9659     | 2.5474     |  37.8 | 72.54
Neigh   | 1.0184e-05 | 0.0029696  | 0.0042906  |   2.2 |  0.11
Comm    | 0.044034   | 0.44427    | 1.3347     |  55.8 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.8417e-05 | 0.0038494  | 0.0082516  |   2.9 |  0.14
Other   |            | 0.2931     |            |       | 10.81

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.17 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115474 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238167
Ave neighs/atom = 28.530350
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15956340721531-${x_0}
variable           new_x         equal     1.15956340721531-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.80859103877987-${y_0}
variable           new_y         equal     4.80859103877987-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.170509219151-${z_0}
variable           new_z         equal     31.170509219151-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00607290666946003*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00607290666946003*-0.00607290666946003+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00607290666946003*-0.00607290666946003+0.78390808351753*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00607290666946003*-0.00607290666946003+0.78390808351753*0.78390808351753+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00607290666946003*-0.00607290666946003+0.78390808351753*0.78390808351753+-0.1503591037817*${new_z})
variable           module        equal     sqrt(-0.00607290666946003*-0.00607290666946003+0.78390808351753*0.78390808351753+-0.1503591037817*-0.1503591037817)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00607290666946003/${module}
variable           unitx         equal     -0.00607290666946003/0.798220911583741
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.78390808351753/${module}
variable           unity         equal     0.78390808351753/0.798220911583741
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1503591037817/${module}
variable           unitz         equal     -0.1503591037817/0.798220911583741
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.88071067898111e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.88071067898111e-06*3.88071067898111e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.88071067898111e-06*3.88071067898111e-06+-7.3017879247051e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.88071067898111e-06*3.88071067898111e-06+-7.3017879247051e-06*-7.3017879247051e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.88071067898111e-06*3.88071067898111e-06+-7.3017879247051e-06*-7.3017879247051e-06+-2.1621048928821e-05*${fz})
variable           f_module      equal     sqrt(3.88071067898111e-06*3.88071067898111e-06+-7.3017879247051e-06*-7.3017879247051e-06+-2.1621048928821e-05*-2.1621048928821e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00760805258460449*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00760805258460449*-0.00760805258460449+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00760805258460449*-0.00760805258460449+0.982069089072331*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00760805258460449*-0.00760805258460449+0.982069089072331*0.982069089072331+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00760805258460449*-0.00760805258460449+0.982069089072331*0.982069089072331+-0.188367783403938*${unitz})
variable           dir_module    equal     sqrt(-0.00760805258460449*-0.00760805258460449+0.982069089072331*0.982069089072331+-0.188367783403938*-0.188367783403938)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.88071067898111e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.88071067898111e-06*-0.00760805258460449+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.88071067898111e-06*-0.00760805258460449+-7.3017879247051e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.88071067898111e-06*-0.00760805258460449+-7.3017879247051e-06*0.982069089072331+${fz}*${unitz}
variable           dot      equal     3.88071067898111e-06*-0.00760805258460449+-7.3017879247051e-06*0.982069089072331+-2.1621048928821e-05*${unitz}
variable           dot      equal     3.88071067898111e-06*-0.00760805258460449+-7.3017879247051e-06*0.982069089072331+-2.1621048928821e-05*-0.188367783403938
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.12767580513571e-06/${f_module}*${dir_module}
variable           cos      equal     -3.12767580513571e-06/2.31483429008169e-05*${dir_module}
variable           cos      equal     -3.12767580513571e-06/2.31483429008169e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.135114458021327)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.70632530566732/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(97.7652384911076-90.0)
print              "The dot product: ${dot}"
The dot product: -3.12767580513571e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 97.7652384911076

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00607290666946003^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00607290666946003^2+0.78390808351753^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00607290666946003^2+0.78390808351753^2+-0.1503591037817^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00607290666946003/${norm}
variable           unit_x        equal     -0.00607290666946003/0.798220911583741
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.78390808351753/${norm}
variable           unit_y        equal     0.78390808351753/0.798220911583741
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1503591037817/${norm}
variable           unit_z        equal     -0.1503591037817/0.798220911583741
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15956340721531+${delta}*${unit_x}
variable           x_new         equal     1.15956340721531+0.03*${unit_x}
variable           x_new         equal     1.15956340721531+0.03*-0.00760805258460449
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.80859103877987+${delta}*${unit_y}
variable           y_new         equal     4.80859103877987+0.03*${unit_y}
variable           y_new         equal     4.80859103877987+0.03*0.982069089072331
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.170509219151+${delta}*${unit_z}
variable           z_new         equal     31.170509219151+0.03*${unit_z}
variable           z_new         equal     31.170509219151+0.03*-0.188367783403938

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15933516563777  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15933516563777  y  4.83805311145204  z   ${z_new}
set                atom          288751    x  1.15933516563777  y  4.83805311145204  z   31.1648581856489
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00607290666946003  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00607290666946003  0.78390808351753  ${new_z}
fix                hold    carbon   planeforce   -0.00607290666946003  0.78390808351753  -0.1503591037817
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5522   -1152448.3            0   -1152448.3 0.00071073363  0.022544999   0.11751128 
    5758   -1152448.4            0   -1152448.4 2.3613508e-06 -9.4589037e-07 -5.0268414e-06 
Loop time of 2.72622 on 104 procs for 236 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.34795374  -1152448.36125399  -1152448.36125399
  Force two-norm initial, final = 0.38927356 0.00017477579
  Force max component initial, final = 0.33107365 8.2102518e-05
  Final line search alpha, max atom move = 1.0000000 8.2102518e-05
  Iterations, force evaluations = 236 472

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.72577    | 1.9854     | 2.5667     |  37.7 | 72.83
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.050389   | 0.44627    | 1.3415     |  55.9 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.8142e-05 | 0.003886   | 0.0084058  |   2.9 |  0.14
Other   |            | 0.2907     |            |       | 10.66

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.16 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115466 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238160
Ave neighs/atom = 28.530325
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16186589399923-${x_0}
variable           new_x         equal     1.16186589399923-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.85138815958324-${y_0}
variable           new_y         equal     4.85138815958324-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2342792109446-${z_0}
variable           new_z         equal     31.2342792109446-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00377041988554017*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00377041988554017*-0.00377041988554017+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00377041988554017*-0.00377041988554017+0.8267052043209*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00377041988554017*-0.00377041988554017+0.8267052043209*0.8267052043209+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00377041988554017*-0.00377041988554017+0.8267052043209*0.8267052043209+-0.0865891119881006*${new_z})
variable           module        equal     sqrt(-0.00377041988554017*-0.00377041988554017+0.8267052043209*0.8267052043209+-0.0865891119881006*-0.0865891119881006)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00377041988554017/${module}
variable           unitx         equal     -0.00377041988554017/0.831236058669414
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.8267052043209/${module}
variable           unity         equal     0.8267052043209/0.831236058669414
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0865891119881006/${module}
variable           unitz         equal     -0.0865891119881006/0.831236058669414
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.36135080431786e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.36135080431786e-06*2.36135080431786e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.36135080431786e-06*2.36135080431786e-06+-9.45890373133997e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.36135080431786e-06*2.36135080431786e-06+-9.45890373133997e-07*-9.45890373133997e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.36135080431786e-06*2.36135080431786e-06+-9.45890373133997e-07*-9.45890373133997e-07+-5.02684143238303e-06*${fz})
variable           f_module      equal     sqrt(2.36135080431786e-06*2.36135080431786e-06+-9.45890373133997e-07*-9.45890373133997e-07+-5.02684143238303e-06*-5.02684143238303e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00453591954561692*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00453591954561692*-0.00453591954561692+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00453591954561692*-0.00453591954561692+0.994549256734884*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00453591954561692*-0.00453591954561692+0.994549256734884*0.994549256734884+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00453591954561692*-0.00453591954561692+0.994549256734884*0.994549256734884+-0.104169099842356*${unitz})
variable           dir_module    equal     sqrt(-0.00453591954561692*-0.00453591954561692+0.994549256734884*0.994549256734884+-0.104169099842356*-0.104169099842356)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.36135080431786e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.36135080431786e-06*-0.00453591954561692+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.36135080431786e-06*-0.00453591954561692+-9.45890373133997e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.36135080431786e-06*-0.00453591954561692+-9.45890373133997e-07*0.994549256734884+${fz}*${unitz}
variable           dot      equal     2.36135080431786e-06*-0.00453591954561692+-9.45890373133997e-07*0.994549256734884+-5.02684143238303e-06*${unitz}
variable           dot      equal     2.36135080431786e-06*-0.00453591954561692+-9.45890373133997e-07*0.994549256734884+-5.02684143238303e-06*-0.104169099842356
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.27803917758863e-07/${f_module}*${dir_module}
variable           cos      equal     -4.27803917758863e-07/5.63381052267139e-06*${dir_module}
variable           cos      equal     -4.27803917758863e-07/5.63381052267139e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0759350915401412)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.64680458371232/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(94.3549523295144-90.0)
print              "The dot product: ${dot}"
The dot product: -4.27803917758863e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 94.3549523295144

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00377041988554017^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00377041988554017^2+0.8267052043209^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00377041988554017^2+0.8267052043209^2+-0.0865891119881006^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00377041988554017/${norm}
variable           unit_x        equal     -0.00377041988554017/0.831236058669414
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.8267052043209/${norm}
variable           unit_y        equal     0.8267052043209/0.831236058669414
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0865891119881006/${norm}
variable           unit_z        equal     -0.0865891119881006/0.831236058669414
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16186589399923+${delta}*${unit_x}
variable           x_new         equal     1.16186589399923+0.03*${unit_x}
variable           x_new         equal     1.16186589399923+0.03*-0.00453591954561692
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.85138815958324+${delta}*${unit_y}
variable           y_new         equal     4.85138815958324+0.03*${unit_y}
variable           y_new         equal     4.85138815958324+0.03*0.994549256734884
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2342792109446+${delta}*${unit_z}
variable           z_new         equal     31.2342792109446+0.03*${unit_z}
variable           z_new         equal     31.2342792109446+0.03*-0.104169099842356

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16172981641286  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16172981641286  y  4.88122463728529  z   ${z_new}
set                atom          288751    x  1.16172981641286  y  4.88122463728529  z   31.2311541379493
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00377041988554017  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00377041988554017  0.8267052043209  ${new_z}
fix                hold    carbon   planeforce   -0.00377041988554017  0.8267052043209  -0.0865891119881006
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5758   -1152448.3            0   -1152448.3 -0.012715587  0.010063701  0.096636368 
    6000   -1152448.3            0   -1152448.3 -1.0235672e-05 5.4982945e-07 5.6951693e-06 
    6063   -1152448.3            0   -1152448.3 5.452944e-07 -1.6715412e-08 -1.8333374e-07 
Loop time of 3.51996 on 104 procs for 305 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.28880778  -1152448.29734442  -1152448.29734442
  Force two-norm initial, final = 0.39972174 8.5465112e-06
  Force max component initial, final = 0.35329142 4.3252378e-06
  Final line search alpha, max atom move = 1.0000000 4.3252378e-06
  Iterations, force evaluations = 305 610

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.92354    | 2.558      | 3.3198     |  43.1 | 72.67
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.067551   | 0.57497    | 1.7437     |  64.0 | 16.33
Output  | 0.00013597 | 0.00014266 | 0.00030079 |   0.0 |  0.00
Modify  | 3.773e-05  | 0.0050262  | 0.010793   |   3.3 |  0.14
Other   |            | 0.3818     |            |       | 10.85

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.12 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.0 ave      115470 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238153
Ave neighs/atom = 28.530301
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16193724682233-${x_0}
variable           new_x         equal     1.16193724682233-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.88514198872086-${y_0}
variable           new_y         equal     4.88514198872086-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2685458220222-${z_0}
variable           new_z         equal     31.2685458220222-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00369906706244016*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00369906706244016*-0.00369906706244016+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00369906706244016*-0.00369906706244016+0.86045903345852*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00369906706244016*-0.00369906706244016+0.86045903345852*0.86045903345852+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00369906706244016*-0.00369906706244016+0.86045903345852*0.86045903345852+-0.0523225009104991*${new_z})
variable           module        equal     sqrt(-0.00369906706244016*-0.00369906706244016+0.86045903345852*0.86045903345852+-0.0523225009104991*-0.0523225009104991)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00369906706244016/${module}
variable           unitx         equal     -0.00369906706244016/0.862056306431913
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.86045903345852/${module}
variable           unity         equal     0.86045903345852/0.862056306431913
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0523225009104991/${module}
variable           unitz         equal     -0.0523225009104991/0.862056306431913
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.4529440265895e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.4529440265895e-07*5.4529440265895e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.4529440265895e-07*5.4529440265895e-07+-1.67154116422174e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.4529440265895e-07*5.4529440265895e-07+-1.67154116422174e-08*-1.67154116422174e-08+${fz}*${fz})
variable           f_module      equal     sqrt(5.4529440265895e-07*5.4529440265895e-07+-1.67154116422174e-08*-1.67154116422174e-08+-1.8333374307913e-07*${fz})
variable           f_module      equal     sqrt(5.4529440265895e-07*5.4529440265895e-07+-1.67154116422174e-08*-1.67154116422174e-08+-1.8333374307913e-07*-1.8333374307913e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00429098080350546*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00429098080350546*-0.00429098080350546+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00429098080350546*-0.00429098080350546+0.998147136142413*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00429098080350546*-0.00429098080350546+0.998147136142413*0.998147136142413+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00429098080350546*-0.00429098080350546+0.998147136142413*0.998147136142413+-0.0606949923341598*${unitz})
variable           dir_module    equal     sqrt(-0.00429098080350546*-0.00429098080350546+0.998147136142413*0.998147136142413+-0.0606949923341598*-0.0606949923341598)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.4529440265895e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.4529440265895e-07*-0.00429098080350546+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.4529440265895e-07*-0.00429098080350546+-1.67154116422174e-08*${unity}+${fz}*${unitz}
variable           dot      equal     5.4529440265895e-07*-0.00429098080350546+-1.67154116422174e-08*0.998147136142413+${fz}*${unitz}
variable           dot      equal     5.4529440265895e-07*-0.00429098080350546+-1.67154116422174e-08*0.998147136142413+-1.8333374307913e-07*${unitz}
variable           dot      equal     5.4529440265895e-07*-0.00429098080350546+-1.67154116422174e-08*0.998147136142413+-1.8333374307913e-07*-0.0606949923341598
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.89684794340876e-09/${f_module}*${dir_module}
variable           cos      equal     -7.89684794340876e-09/5.75531625463757e-07*${dir_module}
variable           cos      equal     -7.89684794340876e-09/5.75531625463757e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0137209626613404)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5845177200218/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.786177920941-90.0)
print              "The dot product: ${dot}"
The dot product: -7.89684794340876e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.786177920941

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00369906706244016^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00369906706244016^2+0.86045903345852^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00369906706244016^2+0.86045903345852^2+-0.0523225009104991^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00369906706244016/${norm}
variable           unit_x        equal     -0.00369906706244016/0.862056306431913
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.86045903345852/${norm}
variable           unit_y        equal     0.86045903345852/0.862056306431913
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0523225009104991/${norm}
variable           unit_z        equal     -0.0523225009104991/0.862056306431913
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16193724682233+${delta}*${unit_x}
variable           x_new         equal     1.16193724682233+0.03*${unit_x}
variable           x_new         equal     1.16193724682233+0.03*-0.00429098080350546
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.88514198872086+${delta}*${unit_y}
variable           y_new         equal     4.88514198872086+0.03*${unit_y}
variable           y_new         equal     4.88514198872086+0.03*0.998147136142413
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2685458220222+${delta}*${unit_z}
variable           z_new         equal     31.2685458220222+0.03*${unit_z}
variable           z_new         equal     31.2685458220222+0.03*-0.0606949923341598

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16180851739822  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16180851739822  y  4.91508640280513  z   ${z_new}
set                atom          288751    x  1.16180851739822  y  4.91508640280513  z   31.2667249722522
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00369906706244016  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00369906706244016  0.86045903345852  ${new_z}
fix                hold    carbon   planeforce   -0.00369906706244016  0.86045903345852  -0.0523225009104991
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    6063   -1152448.2            0   -1152448.2 -0.015906359 0.0026379602  0.044506576 
    6296   -1152448.2            0   -1152448.2 -2.8102502e-06 3.1077772e-07 5.3095092e-06 
Loop time of 2.69932 on 104 procs for 233 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.21905916  -1152448.22559422  -1152448.22559422
  Force two-norm initial, final = 0.40650044 0.00013369989
  Force max component initial, final = 0.37248621 7.0013875e-05
  Final line search alpha, max atom move = 1.0000000 7.0013875e-05
  Iterations, force evaluations = 233 466

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.70737    | 1.9548     | 2.5413     |  37.7 | 72.42
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043701   | 0.44307    | 1.326      |  55.2 | 16.41
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9018e-05 | 0.0038378  | 0.0082875  |   2.9 |  0.14
Other   |            | 0.2976     |            |       | 11.03

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.07 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.0 ave      115475 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238150
Ave neighs/atom = 28.530291
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16095029936539-${x_0}
variable           new_x         equal     1.16095029936539-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.91628206684483-${y_0}
variable           new_y         equal     4.91628206684483-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2864486955429-${z_0}
variable           new_z         equal     31.2864486955429-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00468601451938011*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00468601451938011*-0.00468601451938011+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00468601451938011*-0.00468601451938011+0.89159911158249*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00468601451938011*-0.00468601451938011+0.89159911158249*0.89159911158249+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00468601451938011*-0.00468601451938011+0.89159911158249*0.89159911158249+-0.0344196273897985*${new_z})
variable           module        equal     sqrt(-0.00468601451938011*-0.00468601451938011+0.89159911158249*0.89159911158249+-0.0344196273897985*-0.0344196273897985)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00468601451938011/${module}
variable           unitx         equal     -0.00468601451938011/0.892275543347689
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.89159911158249/${module}
variable           unity         equal     0.89159911158249/0.892275543347689
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0344196273897985/${module}
variable           unitz         equal     -0.0344196273897985/0.892275543347689
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81025019088955e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81025019088955e-06*-2.81025019088955e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81025019088955e-06*-2.81025019088955e-06+3.10777721690708e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81025019088955e-06*-2.81025019088955e-06+3.10777721690708e-07*3.10777721690708e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81025019088955e-06*-2.81025019088955e-06+3.10777721690708e-07*3.10777721690708e-07+5.30950923221224e-06*${fz})
variable           f_module      equal     sqrt(-2.81025019088955e-06*-2.81025019088955e-06+3.10777721690708e-07*3.10777721690708e-07+5.30950923221224e-06*5.30950923221224e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00525175721145383*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00525175721145383*-0.00525175721145383+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00525175721145383*-0.00525175721145383+0.999241902604815*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00525175721145383*-0.00525175721145383+0.999241902604815*0.999241902604815+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00525175721145383*-0.00525175721145383+0.999241902604815*0.999241902604815+-0.0385751101735469*${unitz})
variable           dir_module    equal     sqrt(-0.00525175721145383*-0.00525175721145383+0.999241902604815*0.999241902604815+-0.0385751101735469*-0.0385751101735469)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81025019088955e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81025019088955e-06*-0.00525175721145383+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81025019088955e-06*-0.00525175721145383+3.10777721690708e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81025019088955e-06*-0.00525175721145383+3.10777721690708e-07*0.999241902604815+${fz}*${unitz}
variable           dot      equal     -2.81025019088955e-06*-0.00525175721145383+3.10777721690708e-07*0.999241902604815+5.30950923221224e-06*${unitz}
variable           dot      equal     -2.81025019088955e-06*-0.00525175721145383+3.10777721690708e-07*0.999241902604815+5.30950923221224e-06*-0.0385751101735469
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.20485970015355e-07/${f_module}*${dir_module}
variable           cos      equal     1.20485970015355e-07/6.01539501734018e-06*${dir_module}
variable           cos      equal     1.20485970015355e-07/6.01539501734018e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0200296023233783)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55076538496711/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.8523115735958-90.0)
print              "The dot product: ${dot}"
The dot product: 1.20485970015355e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.8523115735958

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00468601451938011^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00468601451938011^2+0.89159911158249^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00468601451938011^2+0.89159911158249^2+-0.0344196273897985^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00468601451938011/${norm}
variable           unit_x        equal     -0.00468601451938011/0.892275543347689
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.89159911158249/${norm}
variable           unit_y        equal     0.89159911158249/0.892275543347689
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0344196273897985/${norm}
variable           unit_z        equal     -0.0344196273897985/0.892275543347689
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16095029936539+${delta}*${unit_x}
variable           x_new         equal     1.16095029936539+0.03*${unit_x}
variable           x_new         equal     1.16095029936539+0.03*-0.00525175721145383
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.91628206684483+${delta}*${unit_y}
variable           y_new         equal     4.91628206684483+0.03*${unit_y}
variable           y_new         equal     4.91628206684483+0.03*0.999241902604815
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2864486955429+${delta}*${unit_z}
variable           z_new         equal     31.2864486955429+0.03*${unit_z}
variable           z_new         equal     31.2864486955429+0.03*-0.0385751101735469

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16079274664905  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16079274664905  y  4.94625932392297  z   ${z_new}
set                atom          288751    x  1.16079274664905  y  4.94625932392297  z   31.2852914422377
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00468601451938011  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00468601451938011  0.89159911158249  ${new_z}
fix                hold    carbon   planeforce   -0.00468601451938011  0.89159911158249  -0.0344196273897985
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    6296   -1152448.1            0   -1152448.1  -0.01983389 0.00032821057  0.011202159 
    6501   -1152448.1            0   -1152448.1 2.460001e-06 -1.0877396e-07 -3.1525723e-06 
Loop time of 2.38357 on 104 procs for 205 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.14201767   -1152448.1480443   -1152448.1480443
  Force two-norm initial, final = 0.42180767 0.00015453797
  Force max component initial, final = 0.3936403 3.4721866e-05
  Final line search alpha, max atom move = 1.0000000 3.4721866e-05
  Iterations, force evaluations = 205 410

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.63348    | 1.7255     | 2.2421     |  35.2 | 72.39
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.046696   | 0.39146    | 1.1775     |  51.9 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6153e-05 | 0.0033742  | 0.0072226  |   2.7 |  0.14
Other   |            | 0.2633     |            |       | 11.04

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.12 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.0 ave      115485 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238149
Ave neighs/atom = 28.530287
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15829968836742-${x_0}
variable           new_x         equal     1.15829968836742-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.94662846236219-${y_0}
variable           new_y         equal     4.94662846236219-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2951929443145-${z_0}
variable           new_z         equal     31.2951929443145-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00733662551735015*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00733662551735015*-0.00733662551735015+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00733662551735015*-0.00733662551735015+0.92194550709985*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00733662551735015*-0.00733662551735015+0.92194550709985*0.92194550709985+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00733662551735015*-0.00733662551735015+0.92194550709985*0.92194550709985+-0.0256753786181996*${new_z})
variable           module        equal     sqrt(-0.00733662551735015*-0.00733662551735015+0.92194550709985*0.92194550709985+-0.0256753786181996*-0.0256753786181996)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00733662551735015/${module}
variable           unitx         equal     -0.00733662551735015/0.922332136056621
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.92194550709985/${module}
variable           unity         equal     0.92194550709985/0.922332136056621
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0256753786181996/${module}
variable           unitz         equal     -0.0256753786181996/0.922332136056621
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.46000102428355e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.46000102428355e-06*2.46000102428355e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.46000102428355e-06*2.46000102428355e-06+-1.08773958010002e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.46000102428355e-06*2.46000102428355e-06+-1.08773958010002e-07*-1.08773958010002e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.46000102428355e-06*2.46000102428355e-06+-1.08773958010002e-07*-1.08773958010002e-07+-3.15257232016907e-06*${fz})
variable           f_module      equal     sqrt(2.46000102428355e-06*2.46000102428355e-06+-1.08773958010002e-07*-1.08773958010002e-07+-3.15257232016907e-06*-3.15257232016907e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0079544290289152*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0079544290289152*-0.0079544290289152+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0079544290289152*-0.0079544290289152+0.999580813741974*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0079544290289152*-0.0079544290289152+0.999580813741974*0.999580813741974+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0079544290289152*-0.0079544290289152+0.999580813741974*0.999580813741974+-0.0278374542255171*${unitz})
variable           dir_module    equal     sqrt(-0.0079544290289152*-0.0079544290289152+0.999580813741974*0.999580813741974+-0.0278374542255171*-0.0278374542255171)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.46000102428355e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.46000102428355e-06*-0.0079544290289152+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.46000102428355e-06*-0.0079544290289152+-1.08773958010002e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.46000102428355e-06*-0.0079544290289152+-1.08773958010002e-07*0.999580813741974+${fz}*${unitz}
variable           dot      equal     2.46000102428355e-06*-0.0079544290289152+-1.08773958010002e-07*0.999580813741974+-3.15257232016907e-06*${unitz}
variable           dot      equal     2.46000102428355e-06*-0.0079544290289152+-1.08773958010002e-07*0.999580813741974+-3.15257232016907e-06*-0.0278374542255171
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.05366773649566e-08/${f_module}*${dir_module}
variable           cos      equal     -4.05366773649566e-08/4.00026862189447e-06*${dir_module}
variable           cos      equal     -4.05366773649566e-08/4.00026862189447e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0101334888219979)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58092998905551/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.5806160785441-90.0)
print              "The dot product: ${dot}"
The dot product: -4.05366773649566e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.5806160785441

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00733662551735015^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00733662551735015^2+0.92194550709985^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00733662551735015^2+0.92194550709985^2+-0.0256753786181996^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00733662551735015/${norm}
variable           unit_x        equal     -0.00733662551735015/0.922332136056621
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.92194550709985/${norm}
variable           unit_y        equal     0.92194550709985/0.922332136056621
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0256753786181996/${norm}
variable           unit_z        equal     -0.0256753786181996/0.922332136056621
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15829968836742+${delta}*${unit_x}
variable           x_new         equal     1.15829968836742+0.03*${unit_x}
variable           x_new         equal     1.15829968836742+0.03*-0.0079544290289152
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.94662846236219+${delta}*${unit_y}
variable           y_new         equal     4.94662846236219+0.03*${unit_y}
variable           y_new         equal     4.94662846236219+0.03*0.999580813741974
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2951929443145+${delta}*${unit_z}
variable           z_new         equal     31.2951929443145+0.03*${unit_z}
variable           z_new         equal     31.2951929443145+0.03*-0.0278374542255171

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15806105549655  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15806105549655  y  4.97661588677445  z   ${z_new}
set                atom          288751    x  1.15806105549655  y  4.97661588677445  z   31.2943578206877
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00733662551735015  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00733662551735015  0.92194550709985  ${new_z}
fix                hold    carbon   planeforce   -0.00733662551735015  0.92194550709985  -0.0256753786181996
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    6501   -1152448.1            0   -1152448.1 -0.032618753 -0.00057954224 -0.011489404 
    6804   -1152448.9            0   -1152448.9 2.5916424e-07 4.0292686e-08 1.3727653e-06 
Loop time of 3.52896 on 104 procs for 303 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.05946386  -1152448.92854228  -1152448.92854228
  Force two-norm initial, final = 0.44337517 9.4368752e-05
  Force max component initial, final = 0.4179673 1.5636482e-05
  Final line search alpha, max atom move = 1.0000000 1.5636482e-05
  Iterations, force evaluations = 303 605

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.95063    | 2.5498     | 3.2938     |  42.3 | 72.25
Neigh   | 8.0027e-05 | 0.023686   | 0.03416    |   6.3 |  0.67
Comm    | 0.060133   | 0.57254    | 1.7216     |  63.9 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.746e-05  | 0.0049934  | 0.01078    |   3.3 |  0.14
Other   |            | 0.378      |            |       | 10.71

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.07 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115431 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238178
Ave neighs/atom = 28.530388
Neighbor list builds = 8
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.590317674716814-${x_0}
variable           new_x         equal     0.590317674716814-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.95188626850231-${y_0}
variable           new_y         equal     4.95188626850231-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.5686026074665-${z_0}
variable           new_z         equal     30.5686026074665-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.575318639167956*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.575318639167956*-0.575318639167956+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.575318639167956*-0.575318639167956+0.92720331323997*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.575318639167956*-0.575318639167956+0.92720331323997*0.92720331323997+${new_z}*${new_z})
variable           module        equal     sqrt(-0.575318639167956*-0.575318639167956+0.92720331323997*0.92720331323997+-0.752265715466201*${new_z})
variable           module        equal     sqrt(-0.575318639167956*-0.575318639167956+0.92720331323997*0.92720331323997+-0.752265715466201*-0.752265715466201)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.575318639167956/${module}
variable           unitx         equal     -0.575318639167956/1.32536833647221
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.92720331323997/${module}
variable           unity         equal     0.92720331323997/1.32536833647221
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.752265715466201/${module}
variable           unitz         equal     -0.752265715466201/1.32536833647221
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.59164244772748e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.59164244772748e-07*2.59164244772748e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.59164244772748e-07*2.59164244772748e-07+4.02926858966458e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.59164244772748e-07*2.59164244772748e-07+4.02926858966458e-08*4.02926858966458e-08+${fz}*${fz})
variable           f_module      equal     sqrt(2.59164244772748e-07*2.59164244772748e-07+4.02926858966458e-08*4.02926858966458e-08+1.3727653344778e-06*${fz})
variable           f_module      equal     sqrt(2.59164244772748e-07*2.59164244772748e-07+4.02926858966458e-08*4.02926858966458e-08+1.3727653344778e-06*1.3727653344778e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434082076156509*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434082076156509*-0.434082076156509+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434082076156509*-0.434082076156509+0.699581608919334*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434082076156509*-0.434082076156509+0.699581608919334*0.699581608919334+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434082076156509*-0.434082076156509+0.699581608919334*0.699581608919334+-0.567589925581397*${unitz})
variable           dir_module    equal     sqrt(-0.434082076156509*-0.434082076156509+0.699581608919334*0.699581608919334+-0.567589925581397*-0.567589925581397)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.59164244772748e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.59164244772748e-07*-0.434082076156509+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.59164244772748e-07*-0.434082076156509+4.02926858966458e-08*${unity}+${fz}*${unitz}
variable           dot      equal     2.59164244772748e-07*-0.434082076156509+4.02926858966458e-08*0.699581608919334+${fz}*${unitz}
variable           dot      equal     2.59164244772748e-07*-0.434082076156509+4.02926858966458e-08*0.699581608919334+1.3727653344778e-06*${unitz}
variable           dot      equal     2.59164244772748e-07*-0.434082076156509+4.02926858966458e-08*0.699581608919334+1.3727653344778e-06*-0.567589925581397
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.63478305446207e-07/${f_module}*${dir_module}
variable           cos      equal     -8.63478305446207e-07/1.39759588932185e-06*${dir_module}
variable           cos      equal     -8.63478305446207e-07/1.39759588932185e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.617831171401906)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (2.23677779778953/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(128.157927521907-90.0)
print              "The dot product: ${dot}"
The dot product: -8.63478305446207e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 128.157927521907

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.575318639167956^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.575318639167956^2+0.92720331323997^2+${new_z}^2)
variable           norm          equal     sqrt(-0.575318639167956^2+0.92720331323997^2+-0.752265715466201^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.575318639167956/${norm}
variable           unit_x        equal     -0.575318639167956/1.32536833647221
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.92720331323997/${norm}
variable           unit_y        equal     0.92720331323997/1.32536833647221
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.752265715466201/${norm}
variable           unit_z        equal     -0.752265715466201/1.32536833647221
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.590317674716814+${delta}*${unit_x}
variable           x_new         equal     0.590317674716814+0.03*${unit_x}
variable           x_new         equal     0.590317674716814+0.03*-0.434082076156509
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.95188626850231+${delta}*${unit_y}
variable           y_new         equal     4.95188626850231+0.03*${unit_y}
variable           y_new         equal     4.95188626850231+0.03*0.699581608919334
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.5686026074665+${delta}*${unit_z}
variable           z_new         equal     30.5686026074665+0.03*${unit_z}
variable           z_new         equal     30.5686026074665+0.03*-0.567589925581397

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.577295212432119  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.577295212432119  y  4.97287371676989  z   ${z_new}
set                atom          288751    x  0.577295212432119  y  4.97287371676989  z   30.5515749096991
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.575318639167956  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.575318639167956  0.92720331323997  ${new_z}
fix                hold    carbon   planeforce   -0.575318639167956  0.92720331323997  -0.752265715466201
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    6804   -1152448.9            0   -1152448.9  0.069997183  0.095791162  0.064534642 
    7000   -1152448.9            0   -1152448.9 2.5038406e-05 4.4447669e-05 3.5634967e-05 
    7099   -1152448.9            0   -1152448.9 -1.0073482e-06 -1.7368477e-06 -1.3703466e-06 
Loop time of 3.45215 on 104 procs for 295 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.93027793  -1152448.93501449  -1152448.93501449
  Force two-norm initial, final = 0.24766115 5.3157589e-06
  Force max component initial, final = 0.095791162 1.7368477e-06
  Final line search alpha, max atom move = 1.0000000 1.7368477e-06
  Iterations, force evaluations = 295 590

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.90408    | 2.4882     | 3.2155     |  42.1 | 72.08
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.059175   | 0.55997    | 1.6685     |  62.4 | 16.22
Output  | 0.0001002  | 0.00010709 | 0.00026053 |   0.0 |  0.00
Modify  | 3.7471e-05 | 0.004858   | 0.010449   |   3.3 |  0.14
Other   |            | 0.399      |            |       | 11.56

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.00 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238194
Ave neighs/atom = 28.530443
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.592514393987252-${x_0}
variable           new_x         equal     0.592514393987252-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.99447571231556-${y_0}
variable           new_y         equal     4.99447571231556-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.5665610546067-${z_0}
variable           new_z         equal     30.5665610546067-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.573121919897518*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.573121919897518*-0.573121919897518+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.573121919897518*-0.573121919897518+0.96979275705322*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.573121919897518*-0.573121919897518+0.96979275705322*0.96979275705322+${new_z}*${new_z})
variable           module        equal     sqrt(-0.573121919897518*-0.573121919897518+0.96979275705322*0.96979275705322+-0.754307268325999*${new_z})
variable           module        equal     sqrt(-0.573121919897518*-0.573121919897518+0.96979275705322*0.96979275705322+-0.754307268325999*-0.754307268325999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.573121919897518/${module}
variable           unitx         equal     -0.573121919897518/1.35570873780076
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.96979275705322/${module}
variable           unity         equal     0.96979275705322/1.35570873780076
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.754307268325999/${module}
variable           unitz         equal     -0.754307268325999/1.35570873780076
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.00734821913505e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.00734821913505e-06*-1.00734821913505e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.00734821913505e-06*-1.00734821913505e-06+-1.7368477082745e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.00734821913505e-06*-1.00734821913505e-06+-1.7368477082745e-06*-1.7368477082745e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.00734821913505e-06*-1.00734821913505e-06+-1.7368477082745e-06*-1.7368477082745e-06+-1.37034657025329e-06*${fz})
variable           f_module      equal     sqrt(-1.00734821913505e-06*-1.00734821913505e-06+-1.7368477082745e-06*-1.7368477082745e-06+-1.37034657025329e-06*-1.37034657025329e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422747087126723*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422747087126723*-0.422747087126723+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422747087126723*-0.422747087126723+0.715340050567517*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422747087126723*-0.422747087126723+0.715340050567517*0.715340050567517+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422747087126723*-0.422747087126723+0.715340050567517*0.715340050567517+-0.556393307274571*${unitz})
variable           dir_module    equal     sqrt(-0.422747087126723*-0.422747087126723+0.715340050567517*0.715340050567517+-0.556393307274571*-0.556393307274571)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.00734821913505e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.00734821913505e-06*-0.422747087126723+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.00734821913505e-06*-0.422747087126723+-1.7368477082745e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.00734821913505e-06*-0.422747087126723+-1.7368477082745e-06*0.715340050567517+${fz}*${unitz}
variable           dot      equal     -1.00734821913505e-06*-0.422747087126723+-1.7368477082745e-06*0.715340050567517+-1.37034657025329e-06*${unitz}
variable           dot      equal     -1.00734821913505e-06*-0.422747087126723+-1.7368477082745e-06*0.715340050567517+-1.37034657025329e-06*-0.556393307274571
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.41315417679294e-08/${f_module}*${dir_module}
variable           cos      equal     -5.41315417679294e-08/2.43089286455366e-06*${dir_module}
variable           cos      equal     -5.41315417679294e-08/2.43089286455366e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0222681725539017)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5930663401183/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.2759777731311-90.0)
print              "The dot product: ${dot}"
The dot product: -5.41315417679294e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.2759777731311

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.573121919897518^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.573121919897518^2+0.96979275705322^2+${new_z}^2)
variable           norm          equal     sqrt(-0.573121919897518^2+0.96979275705322^2+-0.754307268325999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.573121919897518/${norm}
variable           unit_x        equal     -0.573121919897518/1.35570873780076
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.96979275705322/${norm}
variable           unit_y        equal     0.96979275705322/1.35570873780076
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.754307268325999/${norm}
variable           unit_z        equal     -0.754307268325999/1.35570873780076
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.592514393987252+${delta}*${unit_x}
variable           x_new         equal     0.592514393987252+0.03*${unit_x}
variable           x_new         equal     0.592514393987252+0.03*-0.422747087126723
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.99447571231556+${delta}*${unit_y}
variable           y_new         equal     4.99447571231556+0.03*${unit_y}
variable           y_new         equal     4.99447571231556+0.03*0.715340050567517
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.5665610546067+${delta}*${unit_z}
variable           z_new         equal     30.5665610546067+0.03*${unit_z}
variable           z_new         equal     30.5665610546067+0.03*-0.556393307274571

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.57983198137345  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.57983198137345  y  5.01593591383259  z   ${z_new}
set                atom          288751    x  0.57983198137345  y  5.01593591383259  z   30.5498692553885
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.573121919897518  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.573121919897518  0.96979275705322  ${new_z}
fix                hold    carbon   planeforce   -0.573121919897518  0.96979275705322  -0.754307268325999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    7099   -1152448.9            0   -1152448.9   -0.0106406 -0.034401395  -0.03614424 
    7269   -1152448.9            0   -1152448.9 -2.3335261e-05 -3.8256377e-05 -3.1455096e-05 
Loop time of 2.03292 on 104 procs for 170 steps with 288751 atoms

99.8% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.93360667  -1152448.93601822  -1152448.93601822
  Force two-norm initial, final = 0.21541524 0.00028216652
  Force max component initial, final = 0.095041138 3.8256377e-05
  Final line search alpha, max atom move = 1.0000000 3.8256377e-05
  Iterations, force evaluations = 170 340

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51874    | 1.4351     | 1.8612     |  32.4 | 70.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034645   | 0.32848    | 0.96532    |  46.7 | 16.16
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1072e-05 | 0.0028136  | 0.0060255  |   2.5 |  0.14
Other   |            | 0.2666     |            |       | 13.11

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.00 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238192
Ave neighs/atom = 28.530436
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.579776918492161-${x_0}
variable           new_x         equal     0.579776918492161-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     5.01330381645003-${y_0}
variable           new_y         equal     5.01330381645003-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.5465270746366-${z_0}
variable           new_z         equal     30.5465270746366-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.585859395392609*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.585859395392609*-0.585859395392609+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.585859395392609*-0.585859395392609+0.98862086118769*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.585859395392609*-0.585859395392609+0.98862086118769*0.98862086118769+${new_z}*${new_z})
variable           module        equal     sqrt(-0.585859395392609*-0.585859395392609+0.98862086118769*0.98862086118769+-0.7743412482961*${new_z})
variable           module        equal     sqrt(-0.585859395392609*-0.585859395392609+0.98862086118769*0.98862086118769+-0.7743412482961*-0.7743412482961)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.585859395392609/${module}
variable           unitx         equal     -0.585859395392609/1.38571526915093
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.98862086118769/${module}
variable           unity         equal     0.98862086118769/1.38571526915093
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.7743412482961/${module}
variable           unitz         equal     -0.7743412482961/1.38571526915093
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33352606374355e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33352606374355e-05*-2.33352606374355e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33352606374355e-05*-2.33352606374355e-05+-3.82563768779114e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33352606374355e-05*-2.33352606374355e-05+-3.82563768779114e-05*-3.82563768779114e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33352606374355e-05*-2.33352606374355e-05+-3.82563768779114e-05*-3.82563768779114e-05+-3.14550963854788e-05*${fz})
variable           f_module      equal     sqrt(-2.33352606374355e-05*-2.33352606374355e-05+-3.82563768779114e-05*-3.82563768779114e-05+-3.14550963854788e-05*-3.14550963854788e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422784830646763*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422784830646763*-0.422784830646763+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422784830646763*-0.422784830646763+0.713437228553777*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422784830646763*-0.422784830646763+0.713437228553777*0.713437228553777+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422784830646763*-0.422784830646763+0.713437228553777*0.713437228553777+-0.558802566107655*${unitz})
variable           dir_module    equal     sqrt(-0.422784830646763*-0.422784830646763+0.713437228553777*0.713437228553777+-0.558802566107655*-0.558802566107655)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33352606374355e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33352606374355e-05*-0.422784830646763+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33352606374355e-05*-0.422784830646763+-3.82563768779114e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33352606374355e-05*-0.422784830646763+-3.82563768779114e-05*0.713437228553777+${fz}*${unitz}
variable           dot      equal     -2.33352606374355e-05*-0.422784830646763+-3.82563768779114e-05*0.713437228553777+-3.14550963854788e-05*${unitz}
variable           dot      equal     -2.33352606374355e-05*-0.422784830646763+-3.82563768779114e-05*0.713437228553777+-3.14550963854788e-05*-0.558802566107655
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.49459299779512e-07/${f_module}*${dir_module}
variable           cos      equal     1.49459299779512e-07/5.47495009060503e-05*${dir_module}
variable           cos      equal     1.49459299779512e-07/5.47495009060503e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00272987510947329)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56806644829481/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8435894833615-90.0)
print              "The dot product: ${dot}"
The dot product: 1.49459299779512e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8435894833615

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.585859395392609^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.585859395392609^2+0.98862086118769^2+${new_z}^2)
variable           norm          equal     sqrt(-0.585859395392609^2+0.98862086118769^2+-0.7743412482961^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.585859395392609/${norm}
variable           unit_x        equal     -0.585859395392609/1.38571526915093
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.98862086118769/${norm}
variable           unit_y        equal     0.98862086118769/1.38571526915093
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.7743412482961/${norm}
variable           unit_z        equal     -0.7743412482961/1.38571526915093
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.579776918492161+${delta}*${unit_x}
variable           x_new         equal     0.579776918492161+0.03*${unit_x}
variable           x_new         equal     0.579776918492161+0.03*-0.422784830646763
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     5.01330381645003+${delta}*${unit_y}
variable           y_new         equal     5.01330381645003+0.03*${unit_y}
variable           y_new         equal     5.01330381645003+0.03*0.713437228553777
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.5465270746366+${delta}*${unit_z}
variable           z_new         equal     30.5465270746366+0.03*${unit_z}
variable           z_new         equal     30.5465270746366+0.03*-0.558802566107655

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.567093373572758  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.567093373572758  y  5.03470693330664  z   ${z_new}
set                atom          288751    x  0.567093373572758  y  5.03470693330664  z   30.5297629976534
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.585859395392609  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.585859395392609  0.98862086118769  ${new_z}
fix                hold    carbon   planeforce   -0.585859395392609  0.98862086118769  -0.7743412482961
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    7269   -1152448.9            0   -1152448.9 -0.010449251 -0.034520633  -0.03616755 
    7471   -1152448.9            0   -1152448.9 -7.680352e-06 -1.2952033e-05 -1.0725302e-05 
Loop time of 2.33892 on 104 procs for 202 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.93220815  -1152448.93459272  -1152448.93459272
  Force two-norm initial, final = 0.21533723 0.00010458829
  Force max component initial, final = 0.097206237 2.6309236e-05
  Final line search alpha, max atom move = 1.0000000 2.6309236e-05
  Iterations, force evaluations = 202 404

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61139    | 1.6957     | 2.2001     |  35.2 | 72.50
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040034   | 0.38213    | 1.1559     |  51.9 | 16.34
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4675e-05 | 0.0033263  | 0.0072146  |   2.7 |  0.14
Other   |            | 0.2578     |            |       | 11.02

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.00 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.567149151942867-${x_0}
variable           new_x         equal     0.567149151942867-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     5.03217116275462-${y_0}
variable           new_y         equal     5.03217116275462-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.5264833144973-${z_0}
variable           new_z         equal     30.5264833144973-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.598487161941903*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.598487161941903*-0.598487161941903+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.598487161941903*-0.598487161941903+1.00748820749228*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.598487161941903*-0.598487161941903+1.00748820749228*1.00748820749228+${new_z}*${new_z})
variable           module        equal     sqrt(-0.598487161941903*-0.598487161941903+1.00748820749228*1.00748820749228+-0.794385008435402*${new_z})
variable           module        equal     sqrt(-0.598487161941903*-0.598487161941903+1.00748820749228*1.00748820749228+-0.794385008435402*-0.794385008435402)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.598487161941903/${module}
variable           unitx         equal     -0.598487161941903/1.41572134012036
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     1.00748820749228/${module}
variable           unity         equal     1.00748820749228/1.41572134012036
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.794385008435402/${module}
variable           unitz         equal     -0.794385008435402/1.41572134012036
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.68035202765432e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.68035202765432e-06*-7.68035202765432e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.68035202765432e-06*-7.68035202765432e-06+-1.29520332483885e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.68035202765432e-06*-7.68035202765432e-06+-1.29520332483885e-05*-1.29520332483885e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-7.68035202765432e-06*-7.68035202765432e-06+-1.29520332483885e-05*-1.29520332483885e-05+-1.07253021676396e-05*${fz})
variable           f_module      equal     sqrt(-7.68035202765432e-06*-7.68035202765432e-06+-1.29520332483885e-05*-1.29520332483885e-05+-1.07253021676396e-05*-1.07253021676396e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422743618381158*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422743618381158*-0.422743618381158+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422743618381158*-0.422743618381158+0.711643018255716*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422743618381158*-0.422743618381158+0.711643018255716*0.711643018255716+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422743618381158*-0.422743618381158+0.711643018255716*0.711643018255716+-0.561116786138059*${unitz})
variable           dir_module    equal     sqrt(-0.422743618381158*-0.422743618381158+0.711643018255716*0.711643018255716+-0.561116786138059*-0.561116786138059)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.68035202765432e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.68035202765432e-06*-0.422743618381158+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.68035202765432e-06*-0.422743618381158+-1.29520332483885e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -7.68035202765432e-06*-0.422743618381158+-1.29520332483885e-05*0.711643018255716+${fz}*${unitz}
variable           dot      equal     -7.68035202765432e-06*-0.422743618381158+-1.29520332483885e-05*0.711643018255716+-1.07253021676396e-05*${unitz}
variable           dot      equal     -7.68035202765432e-06*-0.422743618381158+-1.29520332483885e-05*0.711643018255716+-1.07253021676396e-05*-0.561116786138059
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.77428558455647e-08/${f_module}*${dir_module}
variable           cos      equal     4.77428558455647e-08/1.8487159844693e-05*${dir_module}
variable           cos      equal     4.77428558455647e-08/1.8487159844693e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00258248731804361)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56821383660631/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8520342115601-90.0)
print              "The dot product: ${dot}"
The dot product: 4.77428558455647e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8520342115601

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.598487161941903^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.598487161941903^2+1.00748820749228^2+${new_z}^2)
variable           norm          equal     sqrt(-0.598487161941903^2+1.00748820749228^2+-0.794385008435402^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.598487161941903/${norm}
variable           unit_x        equal     -0.598487161941903/1.41572134012036
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     1.00748820749228/${norm}
variable           unit_y        equal     1.00748820749228/1.41572134012036
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.794385008435402/${norm}
variable           unit_z        equal     -0.794385008435402/1.41572134012036
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.567149151942867+${delta}*${unit_x}
variable           x_new         equal     0.567149151942867+0.03*${unit_x}
variable           x_new         equal     0.567149151942867+0.03*-0.422743618381158
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     5.03217116275462+${delta}*${unit_y}
variable           y_new         equal     5.03217116275462+0.03*${unit_y}
variable           y_new         equal     5.03217116275462+0.03*0.711643018255716
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.5264833144973+${delta}*${unit_z}
variable           z_new         equal     30.5264833144973+0.03*${unit_z}
variable           z_new         equal     30.5264833144973+0.03*-0.561116786138059

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.554466843391432  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.554466843391432  y  5.05352045330229  z   ${z_new}
set                atom          288751    x  0.554466843391432  y  5.05352045330229  z   30.5096498109132
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.598487161941903  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.598487161941903  1.00748820749228  ${new_z}
fix                hold    carbon   planeforce   -0.598487161941903  1.00748820749228  -0.794385008435402
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    7471   -1152448.9            0   -1152448.9 -0.0091292978 -0.032933562 -0.034890397 
    7662   -1152448.9            0   -1152448.9 1.2714072e-05 2.1997679e-05 1.8320076e-05 
Loop time of 2.20351 on 104 procs for 191 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.92830496  -1152448.93070705  -1152448.93070705
  Force two-norm initial, final = 0.21575123 0.00013504674
  Force max component initial, final = 0.099175409 4.2902827e-05
  Final line search alpha, max atom move = 1.0000000 4.2902827e-05
  Iterations, force evaluations = 191 382

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58037    | 1.6053     | 2.081      |  34.2 | 72.85
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037188   | 0.36219    | 1.0871     |  50.3 | 16.44
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3775e-05 | 0.0031467  | 0.0067681  |   2.6 |  0.14
Other   |            | 0.2329     |            |       | 10.57

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.554463006079031-${x_0}
variable           new_x         equal     0.554463006079031-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     5.05073648946752-${y_0}
variable           new_y         equal     5.05073648946752-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.506121906784-${z_0}
variable           new_z         equal     30.506121906784-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.611173307805739*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.611173307805739*-0.611173307805739+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.611173307805739*-0.611173307805739+1.02605353420518*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.611173307805739*-0.611173307805739+1.02605353420518*1.02605353420518+${new_z}*${new_z})
variable           module        equal     sqrt(-0.611173307805739*-0.611173307805739+1.02605353420518*1.02605353420518+-0.814746416148701*${new_z})
variable           module        equal     sqrt(-0.611173307805739*-0.611173307805739+1.02605353420518*1.02605353420518+-0.814746416148701*-0.814746416148701)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.611173307805739/${module}
variable           unitx         equal     -0.611173307805739/1.44572832505153
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     1.02605353420518/${module}
variable           unity         equal     1.02605353420518/1.44572832505153
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.814746416148701/${module}
variable           unitz         equal     -0.814746416148701/1.44572832505153
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.27140716954337e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.27140716954337e-05*1.27140716954337e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.27140716954337e-05*1.27140716954337e-05+2.19976792904523e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.27140716954337e-05*1.27140716954337e-05+2.19976792904523e-05*2.19976792904523e-05+${fz}*${fz})
variable           f_module      equal     sqrt(1.27140716954337e-05*1.27140716954337e-05+2.19976792904523e-05*2.19976792904523e-05+1.83200760803085e-05*${fz})
variable           f_module      equal     sqrt(1.27140716954337e-05*1.27140716954337e-05+2.19976792904523e-05*2.19976792904523e-05+1.83200760803085e-05*1.83200760803085e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422744230167833*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422744230167833*-0.422744230167833+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422744230167833*-0.422744230167833+0.709713932020118*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422744230167833*-0.422744230167833+0.709713932020118*0.709713932020118+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422744230167833*-0.422744230167833+0.709713932020118*0.709713932020118+-0.563554301337813*${unitz})
variable           dir_module    equal     sqrt(-0.422744230167833*-0.422744230167833+0.709713932020118*0.709713932020118+-0.563554301337813*-0.563554301337813)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.27140716954337e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.27140716954337e-05*-0.422744230167833+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.27140716954337e-05*-0.422744230167833+2.19976792904523e-05*${unity}+${fz}*${unitz}
variable           dot      equal     1.27140716954337e-05*-0.422744230167833+2.19976792904523e-05*0.709713932020118+${fz}*${unitz}
variable           dot      equal     1.27140716954337e-05*-0.422744230167833+2.19976792904523e-05*0.709713932020118+1.83200760803085e-05*${unitz}
variable           dot      equal     1.27140716954337e-05*-0.422744230167833+2.19976792904523e-05*0.709713932020118+1.83200760803085e-05*-0.563554301337813
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.70986625341712e-08/${f_module}*${dir_module}
variable           cos      equal     -8.70986625341712e-08/3.1323644437238e-05*${dir_module}
variable           cos      equal     -8.70986625341712e-08/3.1323644437238e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0027806043676906)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57357693474576/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.159317100065-90.0)
print              "The dot product: ${dot}"
The dot product: -8.70986625341712e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.159317100065

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.611173307805739^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.611173307805739^2+1.02605353420518^2+${new_z}^2)
variable           norm          equal     sqrt(-0.611173307805739^2+1.02605353420518^2+-0.814746416148701^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.611173307805739/${norm}
variable           unit_x        equal     -0.611173307805739/1.44572832505153
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     1.02605353420518/${norm}
variable           unit_y        equal     1.02605353420518/1.44572832505153
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.814746416148701/${norm}
variable           unit_z        equal     -0.814746416148701/1.44572832505153
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.554463006079031+${delta}*${unit_x}
variable           x_new         equal     0.554463006079031+0.03*${unit_x}
variable           x_new         equal     0.554463006079031+0.03*-0.422744230167833
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     5.05073648946752+${delta}*${unit_y}
variable           y_new         equal     5.05073648946752+0.03*${unit_y}
variable           y_new         equal     5.05073648946752+0.03*0.709713932020118
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.506121906784+${delta}*${unit_z}
variable           z_new         equal     30.506121906784+0.03*${unit_z}
variable           z_new         equal     30.506121906784+0.03*-0.563554301337813

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.541780679173996  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.541780679173996  y  5.07202790742812  z   ${z_new}
set                atom          288751    x  0.541780679173996  y  5.07202790742812  z   30.4892152777439
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.611173307805739  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.611173307805739  1.02605353420518  ${new_z}
fix                hold    carbon   planeforce   -0.611173307805739  1.02605353420518  -0.814746416148701
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    7662   -1152448.9            0   -1152448.9 -0.0080857985 -0.031275369 -0.033321262 
    7848   -1152448.9            0   -1152448.9 -2.3228255e-05 -3.9625867e-05 -3.2478536e-05 
Loop time of 2.17807 on 104 procs for 186 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.92194359   -1152448.9243431   -1152448.9243431
  Force two-norm initial, final = 0.21570878 0.00018502082
  Force max component initial, final = 0.10092023 6.3555923e-05
  Final line search alpha, max atom move = 1.0000000 6.3555923e-05
  Iterations, force evaluations = 186 372

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57033    | 1.57       | 2.0237     |  33.7 | 72.08
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03556    | 0.35694    | 1.0665     |  49.7 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4263e-05 | 0.0030646  | 0.0065748  |   2.6 |  0.14
Other   |            | 0.248      |            |       | 11.39

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.541803708416239-${x_0}
variable           new_x         equal     0.541803708416239-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     5.06939772129561-${y_0}
variable           new_y         equal     5.06939772129561-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.4858856691917-${z_0}
variable           new_z         equal     30.4858856691917-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.623832605468531*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.623832605468531*-0.623832605468531+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.623832605468531*-0.623832605468531+1.04471476603327*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.623832605468531*-0.623832605468531+1.04471476603327*1.04471476603327+${new_z}*${new_z})
variable           module        equal     sqrt(-0.623832605468531*-0.623832605468531+1.04471476603327*1.04471476603327+-0.834982653741001*${new_z})
variable           module        equal     sqrt(-0.623832605468531*-0.623832605468531+1.04471476603327*1.04471476603327+-0.834982653741001*-0.834982653741001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.623832605468531/${module}
variable           unitx         equal     -0.623832605468531/1.47573442531574
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     1.04471476603327/${module}
variable           unity         equal     1.04471476603327/1.47573442531574
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.834982653741001/${module}
variable           unitz         equal     -0.834982653741001/1.47573442531574
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3228255392659e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3228255392659e-05*-2.3228255392659e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3228255392659e-05*-2.3228255392659e-05+-3.96258669129923e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3228255392659e-05*-2.3228255392659e-05+-3.96258669129923e-05*-3.96258669129923e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-2.3228255392659e-05*-2.3228255392659e-05+-3.96258669129923e-05*-3.96258669129923e-05+-3.24785363699569e-05*${fz})
variable           f_module      equal     sqrt(-2.3228255392659e-05*-2.3228255392659e-05+-3.96258669129923e-05*-3.96258669129923e-05+-3.24785363699569e-05*-3.24785363699569e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422726877388565*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422726877388565*-0.422726877388565+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422726877388565*-0.422726877388565+0.707928708656199*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422726877388565*-0.422726877388565+0.707928708656199*0.707928708656199+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422726877388565*-0.422726877388565+0.707928708656199*0.707928708656199+-0.565808210079773*${unitz})
variable           dir_module    equal     sqrt(-0.422726877388565*-0.422726877388565+0.707928708656199*0.707928708656199+-0.565808210079773*-0.565808210079773)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3228255392659e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3228255392659e-05*-0.422726877388565+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3228255392659e-05*-0.422726877388565+-3.96258669129923e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -2.3228255392659e-05*-0.422726877388565+-3.96258669129923e-05*0.707928708656199+${fz}*${unitz}
variable           dot      equal     -2.3228255392659e-05*-0.422726877388565+-3.96258669129923e-05*0.707928708656199+-3.24785363699569e-05*${unitz}
variable           dot      equal     -2.3228255392659e-05*-0.422726877388565+-3.96258669129923e-05*0.707928708656199+-3.24785363699569e-05*-0.565808210079773
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.43541605721919e-07/${f_module}*${dir_module}
variable           cos      equal     1.43541605721919e-07/5.62549242460372e-05*${dir_module}
variable           cos      equal     1.43541605721919e-07/5.62549242460372e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00255162739343712)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56824469663259/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8538023608215-90.0)
print              "The dot product: ${dot}"
The dot product: 1.43541605721919e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8538023608215

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.623832605468531^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.623832605468531^2+1.04471476603327^2+${new_z}^2)
variable           norm          equal     sqrt(-0.623832605468531^2+1.04471476603327^2+-0.834982653741001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.623832605468531/${norm}
variable           unit_x        equal     -0.623832605468531/1.47573442531574
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     1.04471476603327/${norm}
variable           unit_y        equal     1.04471476603327/1.47573442531574
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.834982653741001/${norm}
variable           unit_z        equal     -0.834982653741001/1.47573442531574
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.541803708416239+${delta}*${unit_x}
variable           x_new         equal     0.541803708416239+0.03*${unit_x}
variable           x_new         equal     0.541803708416239+0.03*-0.422726877388565
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     5.06939772129561+${delta}*${unit_y}
variable           y_new         equal     5.06939772129561+0.03*${unit_y}
variable           y_new         equal     5.06939772129561+0.03*0.707928708656199
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.4858856691917+${delta}*${unit_z}
variable           z_new         equal     30.4858856691917+0.03*${unit_z}
variable           z_new         equal     30.4858856691917+0.03*-0.565808210079773

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.529121902094582  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.529121902094582  y  5.0906355825553  z   ${z_new}
set                atom          288751    x  0.529121902094582  y  5.0906355825553  z   30.4689114228893
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.623832605468531  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.623832605468531  1.04471476603327  ${new_z}
fix                hold    carbon   planeforce   -0.623832605468531  1.04471476603327  -0.834982653741001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    7848   -1152448.9            0   -1152448.9 -0.0061984637 -0.028118821 -0.030550746 
    8000   -1152448.9            0   -1152448.9 -5.0354576e-05 -8.6161076e-05 -7.0182202e-05 
    8046   -1152448.9            0   -1152448.9 -9.5674221e-06 -1.6496711e-05 -1.3492361e-05 
Loop time of 2.29799 on 104 procs for 198 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.91294599  -1152448.91531089  -1152448.91531089
  Force two-norm initial, final = 0.21462823 0.00012669001
  Force max component initial, final = 0.10245101 1.6496711e-05
  Final line search alpha, max atom move = 1.0000000 1.6496711e-05
  Iterations, force evaluations = 198 396

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60538    | 1.6666     | 2.1683     |  34.7 | 72.52
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.041311   | 0.37569    | 1.126      |  50.9 | 16.35
Output  | 0.00014026 | 0.00014405 | 0.00029632 |   0.0 |  0.01
Modify  | 2.42e-05   | 0.0032641  | 0.0070064  |   2.7 |  0.14
Other   |            | 0.2523     |            |       | 10.98

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115432 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.529272442241712-${x_0}
variable           new_x         equal     0.529272442241712-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     5.08831030362335-${y_0}
variable           new_y         equal     5.08831030362335-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.4658896055182-${z_0}
variable           new_z         equal     30.4658896055182-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.636363871643058*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.636363871643058*-0.636363871643058+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.636363871643058*-0.636363871643058+1.06362734836101*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.636363871643058*-0.636363871643058+1.06362734836101*1.06362734836101+${new_z}*${new_z})
variable           module        equal     sqrt(-0.636363871643058*-0.636363871643058+1.06362734836101*1.06362734836101+-0.8549787174145*${new_z})
variable           module        equal     sqrt(-0.636363871643058*-0.636363871643058+1.06362734836101*1.06362734836101+-0.8549787174145*-0.8549787174145)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.636363871643058/${module}
variable           unitx         equal     -0.636363871643058/1.50573926047831
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     1.06362734836101/${module}
variable           unity         equal     1.06362734836101/1.50573926047831
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.8549787174145/${module}
variable           unitz         equal     -0.8549787174145/1.50573926047831
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.56742206101538e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.56742206101538e-06*-9.56742206101538e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.56742206101538e-06*-9.56742206101538e-06+-1.64967107050043e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.56742206101538e-06*-9.56742206101538e-06+-1.64967107050043e-05*-1.64967107050043e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-9.56742206101538e-06*-9.56742206101538e-06+-1.64967107050043e-05*-1.64967107050043e-05+-1.34923610474346e-05*${fz})
variable           f_module      equal     sqrt(-9.56742206101538e-06*-9.56742206101538e-06+-1.64967107050043e-05*-1.64967107050043e-05+-1.34923610474346e-05*-1.34923610474346e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422625542380367*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422625542380367*-0.422625542380367+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422625542380367*-0.422625542380367+0.706382158105607*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422625542380367*-0.422625542380367+0.706382158105607*0.706382158105607+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422625542380367*-0.422625542380367+0.706382158105607*0.706382158105607+-0.567813259476883*${unitz})
variable           dir_module    equal     sqrt(-0.422625542380367*-0.422625542380367+0.706382158105607*0.706382158105607+-0.567813259476883*-0.567813259476883)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.56742206101538e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.56742206101538e-06*-0.422625542380367+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.56742206101538e-06*-0.422625542380367+-1.64967107050043e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -9.56742206101538e-06*-0.422625542380367+-1.64967107050043e-05*0.706382158105607+${fz}*${unitz}
variable           dot      equal     -9.56742206101538e-06*-0.422625542380367+-1.64967107050043e-05*0.706382158105607+-1.34923610474346e-05*${unitz}
variable           dot      equal     -9.56742206101538e-06*-0.422625542380367+-1.64967107050043e-05*0.706382158105607+-1.34923610474346e-05*-0.567813259476883
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.15963326564771e-08/${f_module}*${dir_module}
variable           cos      equal     5.15963326564771e-08/2.33606685609068e-05*${dir_module}
variable           cos      equal     5.15963326564771e-08/2.33606685609068e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00220868390482717)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5685876410943/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8734516310849-90.0)
print              "The dot product: ${dot}"
The dot product: 5.15963326564771e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8734516310849

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.636363871643058^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.636363871643058^2+1.06362734836101^2+${new_z}^2)
variable           norm          equal     sqrt(-0.636363871643058^2+1.06362734836101^2+-0.8549787174145^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.636363871643058/${norm}
variable           unit_x        equal     -0.636363871643058/1.50573926047831
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     1.06362734836101/${norm}
variable           unit_y        equal     1.06362734836101/1.50573926047831
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.8549787174145/${norm}
variable           unit_z        equal     -0.8549787174145/1.50573926047831
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.529272442241712+${delta}*${unit_x}
variable           x_new         equal     0.529272442241712+0.03*${unit_x}
variable           x_new         equal     0.529272442241712+0.03*-0.422625542380367
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     5.08831030362335+${delta}*${unit_y}
variable           y_new         equal     5.08831030362335+0.03*${unit_y}
variable           y_new         equal     5.08831030362335+0.03*0.706382158105607
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.4658896055182+${delta}*${unit_z}
variable           z_new         equal     30.4658896055182+0.03*${unit_z}
variable           z_new         equal     30.4658896055182+0.03*-0.567813259476883

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.516593675970301  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.516593675970301  y  5.10950176836652  z   ${z_new}
set                atom          288751    x  0.516593675970301  y  5.10950176836652  z   30.4488552077339
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.636363871643058  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.636363871643058  1.06362734836101  ${new_z}
fix                hold    carbon   planeforce   -0.636363871643058  1.06362734836101  -0.8549787174145
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    8046   -1152448.9            0   -1152448.9 -0.00089870679 -0.019211734 -0.023231247 
    8231   -1152448.9            0   -1152448.9 2.1124232e-05 3.641498e-05 2.957883e-05 
Loop time of 2.15291 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.90132215  -1152448.90358763  -1152448.90358763
  Force two-norm initial, final = 0.21231481 0.00019716227
  Force max component initial, final = 0.10390331 6.4446033e-05
  Final line search alpha, max atom move = 1.0000000 6.4446033e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5727     | 1.5588     | 2.0266     |  33.5 | 72.40
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042053   | 0.35472    | 1.0625     |  49.6 | 16.48
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4626e-05 | 0.0030436  | 0.0065365  |   2.6 |  0.14
Other   |            | 0.2364     |            |       | 10.98

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115422 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.517361148817646-${x_0}
variable           new_x         equal     0.517361148817646-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     5.10829338616901-${y_0}
variable           new_y         equal     5.10829338616901-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.4467806995515-${z_0}
variable           new_z         equal     30.4467806995515-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.648275165067124*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.648275165067124*-0.648275165067124+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.648275165067124*-0.648275165067124+1.08361043090667*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.648275165067124*-0.648275165067124+1.08361043090667*1.08361043090667+${new_z}*${new_z})
variable           module        equal     sqrt(-0.648275165067124*-0.648275165067124+1.08361043090667*1.08361043090667+-0.8740876233812*${new_z})
variable           module        equal     sqrt(-0.648275165067124*-0.648275165067124+1.08361043090667*1.08361043090667+-0.8740876233812*-0.8740876233812)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.648275165067124/${module}
variable           unitx         equal     -0.648275165067124/1.5357413287923
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     1.08361043090667/${module}
variable           unity         equal     1.08361043090667/1.5357413287923
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.8740876233812/${module}
variable           unitz         equal     -0.8740876233812/1.5357413287923
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11242323530412e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11242323530412e-05*2.11242323530412e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11242323530412e-05*2.11242323530412e-05+3.64149796315281e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.11242323530412e-05*2.11242323530412e-05+3.64149796315281e-05*3.64149796315281e-05+${fz}*${fz})
variable           f_module      equal     sqrt(2.11242323530412e-05*2.11242323530412e-05+3.64149796315281e-05*3.64149796315281e-05+2.95788297712374e-05*${fz})
variable           f_module      equal     sqrt(2.11242323530412e-05*2.11242323530412e-05+3.64149796315281e-05*3.64149796315281e-05+2.95788297712374e-05*2.95788297712374e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422125232233559*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422125232233559*-0.422125232233559+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422125232233559*-0.422125232233559+0.705594367092287*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422125232233559*-0.422125232233559+0.705594367092287*0.705594367092287+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.422125232233559*-0.422125232233559+0.705594367092287*0.705594367092287+-0.569163313504481*${unitz})
variable           dir_module    equal     sqrt(-0.422125232233559*-0.422125232233559+0.705594367092287*0.705594367092287+-0.569163313504481*-0.569163313504481)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11242323530412e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11242323530412e-05*-0.422125232233559+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.11242323530412e-05*-0.422125232233559+3.64149796315281e-05*${unity}+${fz}*${unitz}
variable           dot      equal     2.11242323530412e-05*-0.422125232233559+3.64149796315281e-05*0.705594367092287+${fz}*${unitz}
variable           dot      equal     2.11242323530412e-05*-0.422125232233559+3.64149796315281e-05*0.705594367092287+2.95788297712374e-05*${unitz}
variable           dot      equal     2.11242323530412e-05*-0.422125232233559+3.64149796315281e-05*0.705594367092287+2.95788297712374e-05*-0.569163313504481
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.80517441790558e-08/${f_module}*${dir_module}
variable           cos      equal     -5.80517441790558e-08/5.14508610686519e-05*${dir_module}
variable           cos      equal     -5.80517441790558e-08/5.14508610686519e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00112829490067418)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57192462193497/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0646465495713-90.0)
print              "The dot product: ${dot}"
The dot product: -5.80517441790558e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0646465495713

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.648275165067124^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.648275165067124^2+1.08361043090667^2+${new_z}^2)
variable           norm          equal     sqrt(-0.648275165067124^2+1.08361043090667^2+-0.8740876233812^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.648275165067124/${norm}
variable           unit_x        equal     -0.648275165067124/1.5357413287923
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     1.08361043090667/${norm}
variable           unit_y        equal     1.08361043090667/1.5357413287923
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.8740876233812/${norm}
variable           unit_z        equal     -0.8740876233812/1.5357413287923
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.517361148817646+${delta}*${unit_x}
variable           x_new         equal     0.517361148817646+0.03*${unit_x}
variable           x_new         equal     0.517361148817646+0.03*-0.422125232233559
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     5.10829338616901+${delta}*${unit_y}
variable           y_new         equal     5.10829338616901+0.03*${unit_y}
variable           y_new         equal     5.10829338616901+0.03*0.705594367092287
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     30.4467806995515+${delta}*${unit_z}
variable           z_new         equal     30.4467806995515+0.03*${unit_z}
variable           z_new         equal     30.4467806995515+0.03*-0.569163313504481

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.504697391850639  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.504697391850639  y  5.12946121718178  z   ${z_new}
set                atom          288751    x  0.504697391850639  y  5.12946121718178  z   30.4297058001464
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.648275165067124  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.648275165067124  1.08361043090667  ${new_z}
fix                hold    carbon   planeforce   -0.648275165067124  1.08361043090667  -0.8740876233812
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    8231   -1152448.9            0   -1152448.9 0.0032987678 -0.011831227 -0.017113788 
    8467   -1152448.9            0   -1152448.9 -3.1071149e-06 -5.350478e-06 -4.3285916e-06 
Loop time of 2.72495 on 104 procs for 236 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.88727469   -1152448.8895144   -1152448.8895144
  Force two-norm initial, final = 0.21222982 2.7487940e-05
  Force max component initial, final = 0.10530481 5.3504780e-06
  Final line search alpha, max atom move = 1.0000000 5.3504780e-06
  Iterations, force evaluations = 236 472

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.71442    | 1.982      | 2.5718     |  38.0 | 72.74
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044718   | 0.44931    | 1.3446     |  55.6 | 16.49
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.8858e-05 | 0.0038827  | 0.0083523  |   2.9 |  0.14
Other   |            | 0.2897     |            |       | 10.63

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115422 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.506128510056923-${x_0}
variable           new_x         equal     0.506128510056923-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     5.12944772293605-${y_0}
variable           new_y         equal     5.12944772293605-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     30.4286276692226-${z_0}
variable           new_z         equal     30.4286276692226-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.659507803827847*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.659507803827847*-0.659507803827847+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.659507803827847*-0.659507803827847+1.10476476767371*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.659507803827847*-0.659507803827847+1.10476476767371*1.10476476767371+${new_z}*${new_z})
variable           module        equal     sqrt(-0.659507803827847*-0.659507803827847+1.10476476767371*1.10476476767371+-0.8922406537101*${new_z})
variable           module        equal     sqrt(-0.659507803827847*-0.659507803827847+1.10476476767371*1.10476476767371+-0.8922406537101*-0.8922406537101)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.659507803827847/${module}
variable           unitx         equal     -0.659507803827847/1.56574235407234
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     1.10476476767371/${module}
variable           unity         equal     1.10476476767371/1.56574235407234
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.8922406537101/${module}
variable           unitz         equal     -0.8922406537101/1.56574235407234
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.10711490200777e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.10711490200777e-06*-3.10711490200777e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.10711490200777e-06*-3.10711490200777e-06+-5.35047801044172e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.10711490200777e-06*-3.10711490200777e-06+-5.35047801044172e-06*-5.35047801044172e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.10711490200777e-06*-3.10711490200777e-06+-5.35047801044172e-06*-5.35047801044172e-06+-4.32859161401154e-06*${fz})
variable           f_module      equal     sqrt(-3.10711490200777e-06*-3.10711490200777e-06+-5.35047801044172e-06*-5.35047801044172e-06+-4.32859161401154e-06*-4.32859161401154e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.421210936852115*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.421210936852115*-0.421210936852115+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.421210936852115*-0.421210936852115+0.705585286621599*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.421210936852115*-0.421210936852115+0.705585286621599*0.705585286621599+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.421210936852115*-0.421210936852115+0.705585286621599*0.705585286621599+-0.569851515729565*${unitz})
variable           dir_module    equal     sqrt(-0.421210936852115*-0.421210936852115+0.705585286621599*0.705585286621599+-0.569851515729565*-0.569851515729565)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.10711490200777e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.10711490200777e-06*-0.421210936852115+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.10711490200777e-06*-0.421210936852115+-5.35047801044172e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.10711490200777e-06*-0.421210936852115+-5.35047801044172e-06*0.705585286621599+${fz}*${unitz}
variable           dot      equal     -3.10711490200777e-06*-0.421210936852115+-5.35047801044172e-06*0.705585286621599+-4.32859161401154e-06*${unitz}
variable           dot      equal     -3.10711490200777e-06*-0.421210936852115+-5.35047801044172e-06*0.705585286621599+-4.32859161401154e-06*-0.569851515729565
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.86710440536205e-10/${f_module}*${dir_module}
variable           cos      equal     1.86710440536205e-10/7.55105842351853e-06*${dir_module}
variable           cos      equal     1.86710440536205e-10/7.55105842351853e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(2.4726393316555e-05)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57077160040158/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9985832820204-90.0)
print              "The dot product: ${dot}"
The dot product: 1.86710440536205e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9985832820204

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    8467   -1152448.9            0   -1152448.9   0.21442806  -0.35843317   0.28911924 
    8718   -1152448.9            0   -1152448.9 1.4674487e-05 3.2526799e-05 2.128988e-05 
Loop time of 2.9019 on 104 procs for 251 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.8895144  -1152448.93602905  -1152448.93602905
  Force two-norm initial, final = 0.50797998 0.00011974295
  Force max component initial, final = 0.35843317 3.2526799e-05
  Final line search alpha, max atom move = 1.0000000 3.2526799e-05
  Iterations, force evaluations = 251 502

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.76541    | 2.1073     | 2.7367     |  39.0 | 72.62
Neigh   | 1.0198e-05 | 0.0029581  | 0.0043127  |   2.2 |  0.10
Comm    | 0.050896   | 0.4722     | 1.4131     |  58.0 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.8903e-05 | 0.0026933  | 0.0069047  |   3.2 |  0.09
Other   |            | 0.3168     |            |       | 10.92

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 3 27 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115431 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 1
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((0.580979828295528-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((0.580979828295528-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((0.580979828295528-1.16563631388477)^2+(5.01150260198205-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((0.580979828295528-1.16563631388477)^2+(5.01150260198205-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((0.580979828295528-1.16563631388477)^2+(5.01150260198205-4.02468295526234)^2+(30.5483941167459-${z_0})^2)
variable                displacement      equal     sqrt((0.580979828295528-1.16563631388477)^2+(5.01150260198205-4.02468295526234)^2+(30.5483941167459-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"
print '${x0} ${y0} ${z0}' append end_site.dat screen no

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 13
13
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.341 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.82676 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.48663    | 1.3229     | 1.711      |  30.8 | 72.42
Neigh   | 3.0055e-05 | 0.0088951  | 0.012947   |   3.9 |  0.49
Comm    | 0.029272   | 0.29813    | 0.90666    |  46.2 | 16.32
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7912e-05 | 0.0016873  | 0.004364   |   2.6 |  0.09
Other   |            | 0.1951     |            |       | 10.68

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,13)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,13)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,13)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.13845349523357
variable                y_1    equal     $y
variable                y_1    equal     4.05222206067768
variable                z_1    equal     $z
variable                z_1    equal     31.3124783266425

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.13845349523357  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.13845349523357  y  4.05222206067768  z  ${z_1}
set                atom        288751    x  1.13845349523357  y  4.05222206067768  z  31.3124783266425
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.13845349523357-${x_0}
variable           vector_x          equal     1.13845349523357-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.05222206067768-${y_0}
variable           vector_y          equal     4.05222206067768-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3124783266425-${z_0}
variable           vector_z          equal     31.3124783266425-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.0271828186512  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.0271828186512  0.0275391054153404  ${vector_z}
fix                hold    carbon   planeforce   -0.0271828186512  0.0275391054153404  -0.00838999629020165
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3  0.044541498  0.033857142 -0.033178567 
     336   -1152449.3            0   -1152449.3 3.1794842e-05 1.4755289e-05 -5.4579998e-05 
Loop time of 2.07378 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33586055  -1152449.34161622  -1152449.34161622
  Force two-norm initial, final = 0.34522194 0.00023191342
  Force max component initial, final = 0.15602449 5.4579998e-05
  Final line search alpha, max atom move = 1.0000000 5.4579998e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54186    | 1.496      | 1.9536     |  33.0 | 72.14
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034168   | 0.33829    | 1.0172     |  48.9 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1784e-05 | 0.0029392  | 0.0063155  |   2.6 |  0.14
Other   |            | 0.2365     |            |       | 11.40

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115468 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14007162182557-${x_0}
variable           new_x         equal     1.14007162182557-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.05369523714177-${y_0}
variable           new_y         equal     4.05369523714177-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3120712609362-${z_0}
variable           new_z         equal     31.3120712609362-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0255646920592001^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0255646920592001^2+0.0290122818794298^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0255646920592001^2+0.0290122818794298^2+-0.00879706199649988^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0255646920592001/${norm}
variable           unit_x        equal     -0.0255646920592001/0.0396567053561372
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0290122818794298/${norm}
variable           unit_y        equal     0.0290122818794298/0.0396567053561372
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00879706199649988/${norm}
variable           unit_z        equal     -0.00879706199649988/0.0396567053561372
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14007162182557+${delta}*${unit_x}
variable           x_new         equal     1.14007162182557+0.03*${unit_x}
variable           x_new         equal     1.14007162182557+0.03*-0.644649923124382
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.05369523714177+${delta}*${unit_y}
variable           y_new         equal     4.05369523714177+0.03*${unit_y}
variable           y_new         equal     4.05369523714177+0.03*0.73158578401521
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3120712609362+${delta}*${unit_z}
variable           z_new         equal     31.3120712609362+0.03*${unit_z}
variable           z_new         equal     31.3120712609362+0.03*-0.221830379440194

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12073212413184  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12073212413184  y  4.07564281066223  z   ${z_new}
set                atom          288751    x  1.12073212413184  y  4.07564281066223  z   31.305416349553
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0255646920592001  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0255646920592001  0.0290122818794298  ${new_z}
fix                hold    carbon   planeforce   -0.0255646920592001  0.0290122818794298  -0.00879706199649988
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     336   -1152449.3            0   -1152449.3  0.039491051  0.028073124  -0.02217913 
     511   -1152449.3            0   -1152449.3 -2.5018206e-05 -1.0080772e-05 3.9458233e-05 
Loop time of 2.02102 on 104 procs for 175 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33133886  -1152449.33456758  -1152449.33456758
  Force two-norm initial, final = 0.25780221 0.00021176674
  Force max component initial, final = 0.1265712 3.9458233e-05
  Final line search alpha, max atom move = 1.0000000 3.9458233e-05
  Iterations, force evaluations = 175 350

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5321     | 1.4676     | 1.9085     |  32.7 | 72.62
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030564   | 0.33358    | 1.0027     |  48.3 | 16.51
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0945e-05 | 0.002885   | 0.0061508  |   2.5 |  0.14
Other   |            | 0.2169     |            |       | 10.73

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115499 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12349725247133-${x_0}
variable           new_x         equal     1.12349725247133-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.07793824758446-${y_0}
variable           new_y         equal     4.07793824758446-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.304950990609-${z_0}
variable           new_z         equal     31.304950990609-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04213906141344*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04213906141344*-0.04213906141344+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04213906141344*-0.04213906141344+0.0532552923221203*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04213906141344*-0.04213906141344+0.0532552923221203*0.0532552923221203+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04213906141344*-0.04213906141344+0.0532552923221203*0.0532552923221203+-0.0159173323236992*${new_z})
variable           module        equal     sqrt(-0.04213906141344*-0.04213906141344+0.0532552923221203*0.0532552923221203+-0.0159173323236992*-0.0159173323236992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.04213906141344/${module}
variable           unitx         equal     -0.04213906141344/0.069750900534855
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0532552923221203/${module}
variable           unity         equal     0.0532552923221203/0.069750900534855
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0159173323236992/${module}
variable           unitz         equal     -0.0159173323236992/0.069750900534855
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50182057017125e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50182057017125e-05*-2.50182057017125e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50182057017125e-05*-2.50182057017125e-05+-1.00807722344432e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50182057017125e-05*-2.50182057017125e-05+-1.00807722344432e-05*-1.00807722344432e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50182057017125e-05*-2.50182057017125e-05+-1.00807722344432e-05*-1.00807722344432e-05+3.94582326630307e-05*${fz})
variable           f_module      equal     sqrt(-2.50182057017125e-05*-2.50182057017125e-05+-1.00807722344432e-05*-1.00807722344432e-05+3.94582326630307e-05*3.94582326630307e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.604136449713403*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.604136449713403*-0.604136449713403+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.604136449713403*-0.604136449713403+0.763506878244651*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.604136449713403*-0.604136449713403+0.763506878244651*0.763506878244651+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.604136449713403*-0.604136449713403+0.763506878244651*0.763506878244651+-0.228202535044622*${unitz})
variable           dir_module    equal     sqrt(-0.604136449713403*-0.604136449713403+0.763506878244651*0.763506878244651+-0.228202535044622*-0.228202535044622)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50182057017125e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50182057017125e-05*-0.604136449713403+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50182057017125e-05*-0.604136449713403+-1.00807722344432e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50182057017125e-05*-0.604136449713403+-1.00807722344432e-05*0.763506878244651+${fz}*${unitz}
variable           dot      equal     -2.50182057017125e-05*-0.604136449713403+-1.00807722344432e-05*0.763506878244651+3.94582326630307e-05*${unitz}
variable           dot      equal     -2.50182057017125e-05*-0.604136449713403+-1.00807722344432e-05*0.763506878244651+3.94582326630307e-05*-0.228202535044622
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.58679769026699e-06/${f_module}*${dir_module}
variable           cos      equal     -1.58679769026699e-06/4.77962834357001e-05*${dir_module}
variable           cos      equal     -1.58679769026699e-06/4.77962834357001e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0331991857149666)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60400161414924/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.902522822923-90.0)
print              "The dot product: ${dot}"
The dot product: -1.58679769026699e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.902522822923

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04213906141344^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04213906141344^2+0.0532552923221203^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04213906141344^2+0.0532552923221203^2+-0.0159173323236992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.04213906141344/${norm}
variable           unit_x        equal     -0.04213906141344/0.069750900534855
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0532552923221203/${norm}
variable           unit_y        equal     0.0532552923221203/0.069750900534855
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0159173323236992/${norm}
variable           unit_z        equal     -0.0159173323236992/0.069750900534855
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12349725247133+${delta}*${unit_x}
variable           x_new         equal     1.12349725247133+0.03*${unit_x}
variable           x_new         equal     1.12349725247133+0.03*-0.604136449713403
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.07793824758446+${delta}*${unit_y}
variable           y_new         equal     4.07793824758446+0.03*${unit_y}
variable           y_new         equal     4.07793824758446+0.03*0.763506878244651
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.304950990609+${delta}*${unit_z}
variable           z_new         equal     31.304950990609+0.03*${unit_z}
variable           z_new         equal     31.304950990609+0.03*-0.228202535044622

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10537315897993  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10537315897993  y  4.1008434539318  z   ${z_new}
set                atom          288751    x  1.10537315897993  y  4.1008434539318  z   31.2981049145577
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04213906141344  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04213906141344  0.0532552923221203  ${new_z}
fix                hold    carbon   planeforce   -0.04213906141344  0.0532552923221203  -0.0159173323236992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     511   -1152449.3            0   -1152449.3  0.037946976  0.024721598 -0.017747574 
     650   -1152449.3            0   -1152449.3 -6.0387624e-05 -2.1499119e-05 8.7937847e-05 
Loop time of 1.61481 on 104 procs for 139 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32101856  -1152449.32411308  -1152449.32411308
  Force two-norm initial, final = 0.25325068 0.00029040838
  Force max component initial, final = 0.13558969 8.7937847e-05
  Final line search alpha, max atom move = 1.0000000 8.7937847e-05
  Iterations, force evaluations = 139 278

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.42536    | 1.1686     | 1.5256     |  29.0 | 72.37
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026079   | 0.26234    | 0.7949     |  43.4 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7085e-05 | 0.0022936  | 0.0049195  |   2.3 |  0.14
Other   |            | 0.1816     |            |       | 11.24

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115502 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10820938010705-${x_0}
variable           new_x         equal     1.10820938010705-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.10302029719806-${y_0}
variable           new_y         equal     4.10302029719806-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2978795456518-${z_0}
variable           new_z         equal     31.2978795456518-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05742693377772*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05742693377772*-0.05742693377772+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05742693377772*-0.05742693377772+0.0783373419357201*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05742693377772*-0.05742693377772+0.0783373419357201*0.0783373419357201+${new_z}*${new_z})
variable           module        equal     sqrt(-0.05742693377772*-0.05742693377772+0.0783373419357201*0.0783373419357201+-0.0229887772809008*${new_z})
variable           module        equal     sqrt(-0.05742693377772*-0.05742693377772+0.0783373419357201*0.0783373419357201+-0.0229887772809008*-0.0229887772809008)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.05742693377772/${module}
variable           unitx         equal     -0.05742693377772/0.0998152079872373
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.0783373419357201/${module}
variable           unity         equal     0.0783373419357201/0.0998152079872373
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0229887772809008/${module}
variable           unitz         equal     -0.0229887772809008/0.0998152079872373
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.03876242833094e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.03876242833094e-05*-6.03876242833094e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.03876242833094e-05*-6.03876242833094e-05+-2.14991192272544e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.03876242833094e-05*-6.03876242833094e-05+-2.14991192272544e-05*-2.14991192272544e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-6.03876242833094e-05*-6.03876242833094e-05+-2.14991192272544e-05*-2.14991192272544e-05+8.79378466637547e-05*${fz})
variable           f_module      equal     sqrt(-6.03876242833094e-05*-6.03876242833094e-05+-2.14991192272544e-05*-2.14991192272544e-05+8.79378466637547e-05*8.79378466637547e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.575332506295662*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.575332506295662*-0.575332506295662+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.575332506295662*-0.575332506295662+0.784823710889192*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.575332506295662*-0.575332506295662+0.784823710889192*0.784823710889192+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.575332506295662*-0.575332506295662+0.784823710889192*0.784823710889192+-0.230313373527611*${unitz})
variable           dir_module    equal     sqrt(-0.575332506295662*-0.575332506295662+0.784823710889192*0.784823710889192+-0.230313373527611*-0.230313373527611)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.03876242833094e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.03876242833094e-05*-0.575332506295662+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.03876242833094e-05*-0.575332506295662+-2.14991192272544e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -6.03876242833094e-05*-0.575332506295662+-2.14991192272544e-05*0.784823710889192+${fz}*${unitz}
variable           dot      equal     -6.03876242833094e-05*-0.575332506295662+-2.14991192272544e-05*0.784823710889192+8.79378466637547e-05*${unitz}
variable           dot      equal     -6.03876242833094e-05*-0.575332506295662+-2.14991192272544e-05*0.784823710889192+8.79378466637547e-05*-0.230313373527611
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.38331743050892e-06/${f_module}*${dir_module}
variable           cos      equal     -2.38331743050892e-06/0.000108820688152519*${dir_module}
variable           cos      equal     -2.38331743050892e-06/0.000108820688152519*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0219013265856999)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59269940465328/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.2549539196318-90.0)
print              "The dot product: ${dot}"
The dot product: -2.38331743050892e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.2549539196318

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05742693377772^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05742693377772^2+0.0783373419357201^2+${new_z}^2)
variable           norm          equal     sqrt(-0.05742693377772^2+0.0783373419357201^2+-0.0229887772809008^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.05742693377772/${norm}
variable           unit_x        equal     -0.05742693377772/0.0998152079872373
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.0783373419357201/${norm}
variable           unit_y        equal     0.0783373419357201/0.0998152079872373
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0229887772809008/${norm}
variable           unit_z        equal     -0.0229887772809008/0.0998152079872373
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10820938010705+${delta}*${unit_x}
variable           x_new         equal     1.10820938010705+0.03*${unit_x}
variable           x_new         equal     1.10820938010705+0.03*-0.575332506295662
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.10302029719806+${delta}*${unit_y}
variable           y_new         equal     4.10302029719806+0.03*${unit_y}
variable           y_new         equal     4.10302029719806+0.03*0.784823710889192
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2978795456518+${delta}*${unit_z}
variable           z_new         equal     31.2978795456518+0.03*${unit_z}
variable           z_new         equal     31.2978795456518+0.03*-0.230313373527611

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09094940491818  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09094940491818  y  4.12656500852474  z   ${z_new}
set                atom          288751    x  1.09094940491818  y  4.12656500852474  z   31.290970144446
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.05742693377772  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.05742693377772  0.0783373419357201  ${new_z}
fix                hold    carbon   planeforce   -0.05742693377772  0.0783373419357201  -0.0229887772809008
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     650   -1152449.3            0   -1152449.3  0.033793938  0.020401172 -0.014898951 
     831   -1152449.3            0   -1152449.3 -3.3779372e-05 -1.1447718e-05 4.5372659e-05 
Loop time of 2.08697 on 104 procs for 181 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30775061  -1152449.31077488  -1152449.31077488
  Force two-norm initial, final = 0.24956141 0.00013761701
  Force max component initial, final = 0.14299105 4.5372659e-05
  Final line search alpha, max atom move = 1.0000000 4.5372659e-05
  Iterations, force evaluations = 181 362

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55038    | 1.5183     | 1.9706     |  33.2 | 72.75
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032821   | 0.34299    | 1.0346     |  49.4 | 16.44
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1668e-05 | 0.0029886  | 0.0064812  |   2.6 |  0.14
Other   |            | 0.2226     |            |       | 10.67

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115504 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.0931878147886-${x_0}
variable           new_x         equal     1.0931878147886-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.12821392413574-${y_0}
variable           new_y         equal     4.12821392413574-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2909974034276-${z_0}
variable           new_z         equal     31.2909974034276-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07244849909617*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07244849909617*-0.07244849909617+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07244849909617*-0.07244849909617+0.1035309688734*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07244849909617*-0.07244849909617+0.1035309688734*0.1035309688734+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07244849909617*-0.07244849909617+0.1035309688734*0.1035309688734+-0.0298709195051003*${new_z})
variable           module        equal     sqrt(-0.07244849909617*-0.07244849909617+0.1035309688734*0.1035309688734+-0.0298709195051003*-0.0298709195051003)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.07244849909617/${module}
variable           unitx         equal     -0.07244849909617/0.12984497822108
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.1035309688734/${module}
variable           unity         equal     0.1035309688734/0.12984497822108
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0298709195051003/${module}
variable           unitz         equal     -0.0298709195051003/0.12984497822108
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37793716482415e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37793716482415e-05*-3.37793716482415e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37793716482415e-05*-3.37793716482415e-05+-1.14477177267052e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37793716482415e-05*-3.37793716482415e-05+-1.14477177267052e-05*-1.14477177267052e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37793716482415e-05*-3.37793716482415e-05+-1.14477177267052e-05*-1.14477177267052e-05+4.53726593647128e-05*${fz})
variable           f_module      equal     sqrt(-3.37793716482415e-05*-3.37793716482415e-05+-1.14477177267052e-05*-1.14477177267052e-05+4.53726593647128e-05*4.53726593647128e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.557961502160029*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.557961502160029*-0.557961502160029+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.557961502160029*-0.557961502160029+0.797342879884992*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.557961502160029*-0.557961502160029+0.797342879884992*0.797342879884992+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.557961502160029*-0.557961502160029+0.797342879884992*0.797342879884992+-0.230050633565826*${unitz})
variable           dir_module    equal     sqrt(-0.557961502160029*-0.557961502160029+0.797342879884992*0.797342879884992+-0.230050633565826*-0.230050633565826)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37793716482415e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37793716482415e-05*-0.557961502160029+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37793716482415e-05*-0.557961502160029+-1.14477177267052e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37793716482415e-05*-0.557961502160029+-1.14477177267052e-05*0.797342879884992+${fz}*${unitz}
variable           dot      equal     -3.37793716482415e-05*-0.557961502160029+-1.14477177267052e-05*0.797342879884992+4.53726593647128e-05*${unitz}
variable           dot      equal     -3.37793716482415e-05*-0.557961502160029+-1.14477177267052e-05*0.797342879884992+4.53726593647128e-05*-0.230050633565826
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.1817630686546e-07/${f_module}*${dir_module}
variable           cos      equal     -7.1817630686546e-07/5.77128617201279e-05*${dir_module}
variable           cos      equal     -7.1817630686546e-07/5.77128617201279e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0124439559131234)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58324060389239/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.7130045567777-90.0)
print              "The dot product: ${dot}"
The dot product: -7.1817630686546e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.7130045567777

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07244849909617^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07244849909617^2+0.1035309688734^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07244849909617^2+0.1035309688734^2+-0.0298709195051003^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.07244849909617/${norm}
variable           unit_x        equal     -0.07244849909617/0.12984497822108
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.1035309688734/${norm}
variable           unit_y        equal     0.1035309688734/0.12984497822108
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0298709195051003/${norm}
variable           unit_z        equal     -0.0298709195051003/0.12984497822108
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.0931878147886+${delta}*${unit_x}
variable           x_new         equal     1.0931878147886+0.03*${unit_x}
variable           x_new         equal     1.0931878147886+0.03*-0.557961502160029
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.12821392413574+${delta}*${unit_y}
variable           y_new         equal     4.12821392413574+0.03*${unit_y}
variable           y_new         equal     4.12821392413574+0.03*0.797342879884992
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2909974034276+${delta}*${unit_z}
variable           z_new         equal     31.2909974034276+0.03*${unit_z}
variable           z_new         equal     31.2909974034276+0.03*-0.230050633565826

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0764489697238  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0764489697238  y  4.15213421053229  z   ${z_new}
set                atom          288751    x  1.0764489697238  y  4.15213421053229  z   31.2840958844206
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07244849909617  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07244849909617  0.1035309688734  ${new_z}
fix                hold    carbon   planeforce   -0.07244849909617  0.1035309688734  -0.0298709195051003
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     831   -1152449.3            0   -1152449.3  0.034192283  0.017932033 -0.020778028 
    1000   -1152449.3            0   -1152449.3 -3.473593e-05 -1.0840151e-05 4.6676657e-05 
    1046   -1152449.3            0   -1152449.3 -7.1455272e-06 -2.3063732e-06 9.3368959e-06 
Loop time of 2.48762 on 104 procs for 215 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.2915772  -1152449.29452531  -1152449.29452531
  Force two-norm initial, final = 0.2475066 4.2414252e-05
  Force max component initial, final = 0.14875981 9.3368959e-06
  Final line search alpha, max atom move = 1.0000000 9.3368959e-06
  Iterations, force evaluations = 215 430

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.65359    | 1.8026     | 2.3405     |  36.2 | 72.46
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038091   | 0.40413    | 1.222      |  53.8 | 16.25
Output  | 9.6667e-05 | 0.00010653 | 0.00027822 |   0.0 |  0.00
Modify  | 2.5854e-05 | 0.0035507  | 0.0076294  |   2.8 |  0.14
Other   |            | 0.2773     |            |       | 11.15

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      115504 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07896192216232-${x_0}
variable           new_x         equal     1.07896192216232-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.15355727670343-${y_0}
variable           new_y         equal     4.15355727670343-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2829332749809-${z_0}
variable           new_z         equal     31.2829332749809-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0866743917224502*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0866743917224502*-0.0866743917224502+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0866743917224502*-0.0866743917224502+0.12887432144109*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0866743917224502*-0.0866743917224502+0.12887432144109*0.12887432144109+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0866743917224502*-0.0866743917224502+0.12887432144109*0.12887432144109+-0.0379350479518017*${new_z})
variable           module        equal     sqrt(-0.0866743917224502*-0.0866743917224502+0.12887432144109*0.12887432144109+-0.0379350479518017*-0.0379350479518017)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0866743917224502/${module}
variable           unitx         equal     -0.0866743917224502/0.159875291306892
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.12887432144109/${module}
variable           unity         equal     0.12887432144109/0.159875291306892
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0379350479518017/${module}
variable           unitz         equal     -0.0379350479518017/0.159875291306892
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.14552719963925e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.14552719963925e-06*-7.14552719963925e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.14552719963925e-06*-7.14552719963925e-06+-2.3063732226335e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-7.14552719963925e-06*-7.14552719963925e-06+-2.3063732226335e-06*-2.3063732226335e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-7.14552719963925e-06*-7.14552719963925e-06+-2.3063732226335e-06*-2.3063732226335e-06+9.33689592330079e-06*${fz})
variable           f_module      equal     sqrt(-7.14552719963925e-06*-7.14552719963925e-06+-2.3063732226335e-06*-2.3063732226335e-06+9.33689592330079e-06*9.33689592330079e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.542137506139536*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.542137506139536*-0.542137506139536+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.542137506139536*-0.542137506139536+0.806092801380462*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.542137506139536*-0.542137506139536+0.806092801380462*0.806092801380462+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.542137506139536*-0.542137506139536+0.806092801380462*0.806092801380462+-0.237278991904901*${unitz})
variable           dir_module    equal     sqrt(-0.542137506139536*-0.542137506139536+0.806092801380462*0.806092801380462+-0.237278991904901*-0.237278991904901)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.14552719963925e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.14552719963925e-06*-0.542137506139536+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -7.14552719963925e-06*-0.542137506139536+-2.3063732226335e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -7.14552719963925e-06*-0.542137506139536+-2.3063732226335e-06*0.806092801380462+${fz}*${unitz}
variable           dot      equal     -7.14552719963925e-06*-0.542137506139536+-2.3063732226335e-06*0.806092801380462+9.33689592330079e-06*${unitz}
variable           dot      equal     -7.14552719963925e-06*-0.542137506139536+-2.3063732226335e-06*0.806092801380462+9.33689592330079e-06*-0.237278991904901
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.00741808198667e-07/${f_module}*${dir_module}
variable           cos      equal     -2.00741808198667e-07/1.19814665999374e-05*${dir_module}
variable           cos      equal     -2.00741808198667e-07/1.19814665999374e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0167543602883904)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58755147103112/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.9599990498686-90.0)
print              "The dot product: ${dot}"
The dot product: -2.00741808198667e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.9599990498686

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0866743917224502^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0866743917224502^2+0.12887432144109^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0866743917224502^2+0.12887432144109^2+-0.0379350479518017^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0866743917224502/${norm}
variable           unit_x        equal     -0.0866743917224502/0.159875291306892
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.12887432144109/${norm}
variable           unit_y        equal     0.12887432144109/0.159875291306892
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0379350479518017/${norm}
variable           unit_z        equal     -0.0379350479518017/0.159875291306892
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07896192216232+${delta}*${unit_x}
variable           x_new         equal     1.07896192216232+0.03*${unit_x}
variable           x_new         equal     1.07896192216232+0.03*-0.542137506139536
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.15355727670343+${delta}*${unit_y}
variable           y_new         equal     4.15355727670343+0.03*${unit_y}
variable           y_new         equal     4.15355727670343+0.03*0.806092801380462
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2829332749809+${delta}*${unit_z}
variable           z_new         equal     31.2829332749809+0.03*${unit_z}
variable           z_new         equal     31.2829332749809+0.03*-0.237278991904901

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06269779697813  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06269779697813  y  4.17774006074484  z   ${z_new}
set                atom          288751    x  1.06269779697813  y  4.17774006074484  z   31.2758149052238
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0866743917224502  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0866743917224502  0.12887432144109  ${new_z}
fix                hold    carbon   planeforce   -0.0866743917224502  0.12887432144109  -0.0379350479518017
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1046   -1152449.3            0   -1152449.3  0.038367606   0.01638526 -0.031998107 
    1243   -1152449.3            0   -1152449.3 -1.6875952e-05 -6.0714796e-06  1.79321e-05 
Loop time of 2.2821 on 104 procs for 197 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.27258902  -1152449.27553142  -1152449.27553142
  Force two-norm initial, final = 0.24783224 8.1344049e-05
  Force max component initial, final = 0.1538327 2.3546677e-05
  Final line search alpha, max atom move = 1.0000000 2.3546677e-05
  Iterations, force evaluations = 197 394

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59609    | 1.6524     | 2.1491     |  34.7 | 72.41
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038899   | 0.37307    | 1.1189     |  51.4 | 16.35
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4014e-05 | 0.0032487  | 0.0069665  |   2.7 |  0.14
Other   |            | 0.2534     |            |       | 11.10

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115503 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06679291443518-${x_0}
variable           new_x         equal     1.06679291443518-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.179242259418-${y_0}
variable           new_y         equal     4.179242259418-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2715616621507-${z_0}
variable           new_z         equal     31.2715616621507-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988433994495901*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988433994495901*-0.0988433994495901+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988433994495901*-0.0988433994495901+0.154559304155661*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988433994495901*-0.0988433994495901+0.154559304155661*0.154559304155661+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0988433994495901*-0.0988433994495901+0.154559304155661*0.154559304155661+-0.0493066607820012*${new_z})
variable           module        equal     sqrt(-0.0988433994495901*-0.0988433994495901+0.154559304155661*0.154559304155661+-0.0493066607820012*-0.0493066607820012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0988433994495901/${module}
variable           unitx         equal     -0.0988433994495901/0.189973005748987
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.154559304155661/${module}
variable           unity         equal     0.154559304155661/0.189973005748987
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0493066607820012/${module}
variable           unitz         equal     -0.0493066607820012/0.189973005748987
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68759520125717e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68759520125717e-05*-1.68759520125717e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68759520125717e-05*-1.68759520125717e-05+-6.07147956249013e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68759520125717e-05*-1.68759520125717e-05+-6.07147956249013e-06*-6.07147956249013e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68759520125717e-05*-1.68759520125717e-05+-6.07147956249013e-06*-6.07147956249013e-06+1.79320998241459e-05*${fz})
variable           f_module      equal     sqrt(-1.68759520125717e-05*-1.68759520125717e-05+-6.07147956249013e-06*-6.07147956249013e-06+1.79320998241459e-05*1.79320998241459e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.520302340113483*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.520302340113483*-0.520302340113483+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.520302340113483*-0.520302340113483+0.81358561205207*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.520302340113483*-0.520302340113483+0.81358561205207*0.81358561205207+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.520302340113483*-0.520302340113483+0.81358561205207*0.81358561205207+-0.259545615902664*${unitz})
variable           dir_module    equal     sqrt(-0.520302340113483*-0.520302340113483+0.81358561205207*0.81358561205207+-0.259545615902664*-0.259545615902664)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68759520125717e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68759520125717e-05*-0.520302340113483+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68759520125717e-05*-0.520302340113483+-6.07147956249013e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68759520125717e-05*-0.520302340113483+-6.07147956249013e-06*0.81358561205207+${fz}*${unitz}
variable           dot      equal     -1.68759520125717e-05*-0.520302340113483+-6.07147956249013e-06*0.81358561205207+1.79320998241459e-05*${unitz}
variable           dot      equal     -1.68759520125717e-05*-0.520302340113483+-6.07147956249013e-06*0.81358561205207+1.79320998241459e-05*-0.259545615902664
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.13268985412269e-07/${f_module}*${dir_module}
variable           cos      equal     -8.13268985412269e-07/2.53617985267507e-05*${dir_module}
variable           cos      equal     -8.13268985412269e-07/2.53617985267507e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0320666921375652)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60286851702786/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.8376011400895-90.0)
print              "The dot product: ${dot}"
The dot product: -8.13268985412269e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.8376011400895

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0988433994495901^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0988433994495901^2+0.154559304155661^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0988433994495901^2+0.154559304155661^2+-0.0493066607820012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0988433994495901/${norm}
variable           unit_x        equal     -0.0988433994495901/0.189973005748987
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.154559304155661/${norm}
variable           unit_y        equal     0.154559304155661/0.189973005748987
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0493066607820012/${norm}
variable           unit_z        equal     -0.0493066607820012/0.189973005748987
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06679291443518+${delta}*${unit_x}
variable           x_new         equal     1.06679291443518+0.03*${unit_x}
variable           x_new         equal     1.06679291443518+0.03*-0.520302340113483
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.179242259418+${delta}*${unit_y}
variable           y_new         equal     4.179242259418+0.03*${unit_y}
variable           y_new         equal     4.179242259418+0.03*0.81358561205207
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2715616621507+${delta}*${unit_z}
variable           z_new         equal     31.2715616621507+0.03*${unit_z}
variable           z_new         equal     31.2715616621507+0.03*-0.259545615902664

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05118384423178  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05118384423178  y  4.20364982777956  z   ${z_new}
set                atom          288751    x  1.05118384423178  y  4.20364982777956  z   31.2637752936736
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0988433994495901  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0988433994495901  0.154559304155661  ${new_z}
fix                hold    carbon   planeforce   -0.0988433994495901  0.154559304155661  -0.0493066607820012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1243   -1152449.3            0   -1152449.3  0.040249575  0.013757863 -0.037560831 
    1426   -1152449.3            0   -1152449.3 -3.3782394e-05 -1.2035035e-05 2.9996759e-05 
Loop time of 2.10949 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.25086186  -1152449.25380505  -1152449.25380505
  Force two-norm initial, final = 0.24688166 0.00014707023
  Force max component initial, final = 0.15873804 3.3782394e-05
  Final line search alpha, max atom move = 1.0000000 3.3782394e-05
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55553    | 1.5328     | 1.9899     |  33.4 | 72.66
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034596   | 0.3435     | 1.0427     |  49.8 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.243e-05  | 0.0030183  | 0.0064695  |   2.6 |  0.14
Other   |            | 0.2302     |            |       | 10.91

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115486 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05637899097733-${x_0}
variable           new_x         equal     1.05637899097733-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.20505500544359-${y_0}
variable           new_y         equal     4.20505500544359-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2577655035499-${z_0}
variable           new_z         equal     31.2577655035499-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10925732290744*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10925732290744*-0.10925732290744+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10925732290744*-0.10925732290744+0.18037205018125*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10925732290744*-0.10925732290744+0.18037205018125*0.18037205018125+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10925732290744*-0.10925732290744+0.18037205018125*0.18037205018125+-0.0631028193827987*${new_z})
variable           module        equal     sqrt(-0.10925732290744*-0.10925732290744+0.18037205018125*0.18037205018125+-0.0631028193827987*-0.0631028193827987)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10925732290744/${module}
variable           unitx         equal     -0.10925732290744/0.22012088703607
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.18037205018125/${module}
variable           unity         equal     0.18037205018125/0.22012088703607
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0631028193827987/${module}
variable           unitz         equal     -0.0631028193827987/0.22012088703607
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37823938072182e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37823938072182e-05*-3.37823938072182e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37823938072182e-05*-3.37823938072182e-05+-1.20350349173994e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37823938072182e-05*-3.37823938072182e-05+-1.20350349173994e-05*-1.20350349173994e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-3.37823938072182e-05*-3.37823938072182e-05+-1.20350349173994e-05*-1.20350349173994e-05+2.99967590517308e-05*${fz})
variable           f_module      equal     sqrt(-3.37823938072182e-05*-3.37823938072182e-05+-1.20350349173994e-05*-1.20350349173994e-05+2.99967590517308e-05*2.99967590517308e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.496351456595469*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.496351456595469*-0.496351456595469+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.496351456595469*-0.496351456595469+0.819422693638761*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.496351456595469*-0.496351456595469+0.819422693638761*0.819422693638761+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.496351456595469*-0.496351456595469+0.819422693638761*0.819422693638761+-0.286673473982768*${unitz})
variable           dir_module    equal     sqrt(-0.496351456595469*-0.496351456595469+0.819422693638761*0.819422693638761+-0.286673473982768*-0.286673473982768)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37823938072182e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37823938072182e-05*-0.496351456595469+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37823938072182e-05*-0.496351456595469+-1.20350349173994e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -3.37823938072182e-05*-0.496351456595469+-1.20350349173994e-05*0.819422693638761+${fz}*${unitz}
variable           dot      equal     -3.37823938072182e-05*-0.496351456595469+-1.20350349173994e-05*0.819422693638761+2.99967590517308e-05*${unitz}
variable           dot      equal     -3.37823938072182e-05*-0.496351456595469+-1.20350349173994e-05*0.819422693638761+2.99967590517308e-05*-0.286673473982768
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.69311548214116e-06/${f_module}*${dir_module}
variable           cos      equal     -1.69311548214116e-06/4.6753585428463e-05*${dir_module}
variable           cos      equal     -1.69311548214116e-06/4.6753585428463e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0362135965963887)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60701784329948/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.0753400232761-90.0)
print              "The dot product: ${dot}"
The dot product: -1.69311548214116e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.0753400232761

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10925732290744^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10925732290744^2+0.18037205018125^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10925732290744^2+0.18037205018125^2+-0.0631028193827987^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10925732290744/${norm}
variable           unit_x        equal     -0.10925732290744/0.22012088703607
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.18037205018125/${norm}
variable           unit_y        equal     0.18037205018125/0.22012088703607
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0631028193827987/${norm}
variable           unit_z        equal     -0.0631028193827987/0.22012088703607
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05637899097733+${delta}*${unit_x}
variable           x_new         equal     1.05637899097733+0.03*${unit_x}
variable           x_new         equal     1.05637899097733+0.03*-0.496351456595469
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.20505500544359+${delta}*${unit_y}
variable           y_new         equal     4.20505500544359+0.03*${unit_y}
variable           y_new         equal     4.20505500544359+0.03*0.819422693638761
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2577655035499+${delta}*${unit_z}
variable           z_new         equal     31.2577655035499+0.03*${unit_z}
variable           z_new         equal     31.2577655035499+0.03*-0.286673473982768

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04148844727947  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04148844727947  y  4.22963768625275  z   ${z_new}
set                atom          288751    x  1.04148844727947  y  4.22963768625275  z   31.2491652993304
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10925732290744  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10925732290744  0.18037205018125  ${new_z}
fix                hold    carbon   planeforce   -0.10925732290744  0.18037205018125  -0.0631028193827987
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1426   -1152449.2            0   -1152449.2  0.039675436  0.010909854 -0.037510197 
    1613   -1152449.2            0   -1152449.2 -2.6965916e-05 -5.6541639e-06 3.0527489e-05 
Loop time of 2.15498 on 104 procs for 187 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.22620521  -1152449.22912451  -1152449.22912451
  Force two-norm initial, final = 0.24531941 0.00014990926
  Force max component initial, final = 0.16330445 3.6851022e-05
  Final line search alpha, max atom move = 1.0000000 3.6851022e-05
  Iterations, force evaluations = 187 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56891    | 1.5672     | 2.034      |  33.7 | 72.73
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033549   | 0.35294    | 1.072      |  50.4 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.243e-05  | 0.003095   | 0.0066888  |   2.6 |  0.14
Other   |            | 0.2317     |            |       | 10.75

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.12 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115484 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.04716194557807-${x_0}
variable           new_x         equal     1.04716194557807-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.23081128869962-${y_0}
variable           new_y         equal     4.23081128869962-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2426967110777-${z_0}
variable           new_z         equal     31.2426967110777-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1184743683067*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1184743683067*-0.1184743683067+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1184743683067*-0.1184743683067+0.20612833343728*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1184743683067*-0.1184743683067+0.20612833343728*0.20612833343728+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1184743683067*-0.1184743683067+0.20612833343728*0.20612833343728+-0.0781716118550015*${new_z})
variable           module        equal     sqrt(-0.1184743683067*-0.1184743683067+0.20612833343728*0.20612833343728+-0.0781716118550015*-0.0781716118550015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.1184743683067/${module}
variable           unitx         equal     -0.1184743683067/0.250271585864858
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.20612833343728/${module}
variable           unity         equal     0.20612833343728/0.250271585864858
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0781716118550015/${module}
variable           unitz         equal     -0.0781716118550015/0.250271585864858
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69659157187423e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69659157187423e-05*-2.69659157187423e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69659157187423e-05*-2.69659157187423e-05+-5.65416386342232e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69659157187423e-05*-2.69659157187423e-05+-5.65416386342232e-06*-5.65416386342232e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.69659157187423e-05*-2.69659157187423e-05+-5.65416386342232e-06*-5.65416386342232e-06+3.0527489135271e-05*${fz})
variable           f_module      equal     sqrt(-2.69659157187423e-05*-2.69659157187423e-05+-5.65416386342232e-06*-5.65416386342232e-06+3.0527489135271e-05*3.0527489135271e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.473383216465788*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.473383216465788*-0.473383216465788+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.473383216465788*-0.473383216465788+0.823618601068782*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.473383216465788*-0.473383216465788+0.823618601068782*0.823618601068782+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.473383216465788*-0.473383216465788+0.823618601068782*0.823618601068782+-0.312347131157001*${unitz})
variable           dir_module    equal     sqrt(-0.473383216465788*-0.473383216465788+0.823618601068782*0.823618601068782+-0.312347131157001*-0.312347131157001)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69659157187423e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69659157187423e-05*-0.473383216465788+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69659157187423e-05*-0.473383216465788+-5.65416386342232e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.69659157187423e-05*-0.473383216465788+-5.65416386342232e-06*0.823618601068782+${fz}*${unitz}
variable           dot      equal     -2.69659157187423e-05*-0.473383216465788+-5.65416386342232e-06*0.823618601068782+3.0527489135271e-05*${unitz}
variable           dot      equal     -2.69659157187423e-05*-0.473383216465788+-5.65416386342232e-06*0.823618601068782+3.0527489135271e-05*-0.312347131157001
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.42683626635038e-06/${f_module}*${dir_module}
variable           cos      equal     -1.42683626635038e-06/4.11224728396631e-05*${dir_module}
variable           cos      equal     -1.42683626635038e-06/4.11224728396631e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0346972389504305)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60550053151141/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.9884044616142-90.0)
print              "The dot product: ${dot}"
The dot product: -1.42683626635038e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.9884044616142

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.1184743683067^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.1184743683067^2+0.20612833343728^2+${new_z}^2)
variable           norm          equal     sqrt(-0.1184743683067^2+0.20612833343728^2+-0.0781716118550015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.1184743683067/${norm}
variable           unit_x        equal     -0.1184743683067/0.250271585864858
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.20612833343728/${norm}
variable           unit_y        equal     0.20612833343728/0.250271585864858
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0781716118550015/${norm}
variable           unit_z        equal     -0.0781716118550015/0.250271585864858
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.04716194557807+${delta}*${unit_x}
variable           x_new         equal     1.04716194557807+0.03*${unit_x}
variable           x_new         equal     1.04716194557807+0.03*-0.473383216465788
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.23081128869962+${delta}*${unit_y}
variable           y_new         equal     4.23081128869962+0.03*${unit_y}
variable           y_new         equal     4.23081128869962+0.03*0.823618601068782
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2426967110777+${delta}*${unit_z}
variable           z_new         equal     31.2426967110777+0.03*${unit_z}
variable           z_new         equal     31.2426967110777+0.03*-0.312347131157001

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0329604490841  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0329604490841  y  4.25551984673168  z   ${z_new}
set                atom          288751    x  1.0329604490841  y  4.25551984673168  z   31.233326297143
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.1184743683067  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.1184743683067  0.20612833343728  ${new_z}
fix                hold    carbon   planeforce   -0.1184743683067  0.20612833343728  -0.0781716118550015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1613   -1152449.2            0   -1152449.2  0.037445257 0.0085785129 -0.034130402 
    1807   -1152449.2            0   -1152449.2 3.3298171e-05 4.6058744e-06 -3.8320542e-05 
Loop time of 2.24734 on 104 procs for 194 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.19837222  -1152449.20124706  -1152449.20124706
  Force two-norm initial, final = 0.24386999 0.00014598262
  Force max component initial, final = 0.16740263 3.8320542e-05
  Final line search alpha, max atom move = 1.0000000 3.8320542e-05
  Iterations, force evaluations = 194 388

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.59082    | 1.6263     | 2.1168     |  34.3 | 72.37
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03532    | 0.36581    | 1.0996     |  51.0 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4282e-05 | 0.0032001  | 0.00684    |   2.7 |  0.14
Other   |            | 0.252      |            |       | 11.21

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115487 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.03868084095205-${x_0}
variable           new_x         equal     1.03868084095205-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.25649593919107-${y_0}
variable           new_y         equal     4.25649593919107-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2272304844843-${z_0}
variable           new_z         equal     31.2272304844843-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12695547293272*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12695547293272*-0.12695547293272+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12695547293272*-0.12695547293272+0.23181298392873*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12695547293272*-0.12695547293272+0.23181298392873*0.23181298392873+${new_z}*${new_z})
variable           module        equal     sqrt(-0.12695547293272*-0.12695547293272+0.23181298392873*0.23181298392873+-0.0936378384484016*${new_z})
variable           module        equal     sqrt(-0.12695547293272*-0.12695547293272+0.23181298392873*0.23181298392873+-0.0936378384484016*-0.0936378384484016)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.12695547293272/${module}
variable           unitx         equal     -0.12695547293272/0.280397925125706
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.23181298392873/${module}
variable           unity         equal     0.23181298392873/0.280397925125706
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0936378384484016/${module}
variable           unitz         equal     -0.0936378384484016/0.280397925125706
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.3298170756083e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.3298170756083e-05*3.3298170756083e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.3298170756083e-05*3.3298170756083e-05+4.60587439450108e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.3298170756083e-05*3.3298170756083e-05+4.60587439450108e-06*4.60587439450108e-06+${fz}*${fz})
variable           f_module      equal     sqrt(3.3298170756083e-05*3.3298170756083e-05+4.60587439450108e-06*4.60587439450108e-06+-3.8320541972601e-05*${fz})
variable           f_module      equal     sqrt(3.3298170756083e-05*3.3298170756083e-05+4.60587439450108e-06*4.60587439450108e-06+-3.8320541972601e-05*-3.8320541972601e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.45276894568961*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.45276894568961*-0.45276894568961+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.45276894568961*-0.45276894568961+0.8267285994531*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.45276894568961*-0.45276894568961+0.8267285994531*0.8267285994531+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.45276894568961*-0.45276894568961+0.8267285994531*0.8267285994531+-0.333946260145907*${unitz})
variable           dir_module    equal     sqrt(-0.45276894568961*-0.45276894568961+0.8267285994531*0.8267285994531+-0.333946260145907*-0.333946260145907)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.3298170756083e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.3298170756083e-05*-0.45276894568961+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.3298170756083e-05*-0.45276894568961+4.60587439450108e-06*${unity}+${fz}*${unitz}
variable           dot      equal     3.3298170756083e-05*-0.45276894568961+4.60587439450108e-06*0.8267285994531+${fz}*${unitz}
variable           dot      equal     3.3298170756083e-05*-0.45276894568961+4.60587439450108e-06*0.8267285994531+-3.8320541972601e-05*${unitz}
variable           dot      equal     3.3298170756083e-05*-0.45276894568961+4.60587439450108e-06*0.8267285994531+-3.8320541972601e-05*-0.333946260145907
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.52843209931283e-06/${f_module}*${dir_module}
variable           cos      equal     1.52843209931283e-06/5.09749565150678e-05*${dir_module}
variable           cos      equal     1.52843209931283e-06/5.09749565150678e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0299839804446138)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54080785173662/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.2817869451274-90.0)
print              "The dot product: ${dot}"
The dot product: 1.52843209931283e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.2817869451274

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12695547293272^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12695547293272^2+0.23181298392873^2+${new_z}^2)
variable           norm          equal     sqrt(-0.12695547293272^2+0.23181298392873^2+-0.0936378384484016^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.12695547293272/${norm}
variable           unit_x        equal     -0.12695547293272/0.280397925125706
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.23181298392873/${norm}
variable           unit_y        equal     0.23181298392873/0.280397925125706
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0936378384484016/${norm}
variable           unit_z        equal     -0.0936378384484016/0.280397925125706
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.03868084095205+${delta}*${unit_x}
variable           x_new         equal     1.03868084095205+0.03*${unit_x}
variable           x_new         equal     1.03868084095205+0.03*-0.45276894568961
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.25649593919107+${delta}*${unit_y}
variable           y_new         equal     4.25649593919107+0.03*${unit_y}
variable           y_new         equal     4.25649593919107+0.03*0.8267285994531
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2272304844843+${delta}*${unit_z}
variable           z_new         equal     31.2272304844843+0.03*${unit_z}
variable           z_new         equal     31.2272304844843+0.03*-0.333946260145907

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02509777258136  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.02509777258136  y  4.28129779717466  z   ${z_new}
set                atom          288751    x  1.02509777258136  y  4.28129779717466  z   31.2172120966799
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12695547293272  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.12695547293272  0.23181298392873  ${new_z}
fix                hold    carbon   planeforce   -0.12695547293272  0.23181298392873  -0.0936378384484016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1807   -1152449.2            0   -1152449.2  0.034934826 0.0072244039 -0.029480141 
    2000   -1152449.2            0   -1152449.2 -3.1517906e-05 -5.3537135e-06 2.9478578e-05 
    2007   -1152449.2            0   -1152449.2 1.6786255e-05 -4.7525601e-06 -3.4524634e-05 
Loop time of 2.33504 on 104 procs for 200 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.16712223  -1152449.16996028  -1152449.16996028
  Force two-norm initial, final = 0.24326622 0.00012928521
  Force max component initial, final = 0.17122549 3.4524634e-05
  Final line search alpha, max atom move = 1.0000000 3.4524634e-05
  Iterations, force evaluations = 200 400

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61727    | 1.6798     | 2.1837     |  34.7 | 71.94
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043419   | 0.38119    | 1.1418     |  51.5 | 16.32
Output  | 0.00010697 | 0.00011242 | 0.00028615 |   0.0 |  0.00
Modify  | 2.3904e-05 | 0.0032974  | 0.0070483  |   2.7 |  0.14
Other   |            | 0.2706     |            |       | 11.59

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115487 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.03072149824899-${x_0}
variable           new_x         equal     1.03072149824899-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.28223580456514-${y_0}
variable           new_y         equal     4.28223580456514-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2119095345114-${z_0}
variable           new_z         equal     31.2119095345114-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13491481563578*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13491481563578*-0.13491481563578+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13491481563578*-0.13491481563578+0.2575528493028*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13491481563578*-0.13491481563578+0.2575528493028*0.2575528493028+${new_z}*${new_z})
variable           module        equal     sqrt(-0.13491481563578*-0.13491481563578+0.2575528493028*0.2575528493028+-0.108958788421301*${new_z})
variable           module        equal     sqrt(-0.13491481563578*-0.13491481563578+0.2575528493028*0.2575528493028+-0.108958788421301*-0.108958788421301)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.13491481563578/${module}
variable           unitx         equal     -0.13491481563578/0.310495563955856
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.2575528493028/${module}
variable           unity         equal     0.2575528493028/0.310495563955856
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.108958788421301/${module}
variable           unitz         equal     -0.108958788421301/0.310495563955856
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.67862548950722e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.67862548950722e-05*1.67862548950722e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.67862548950722e-05*1.67862548950722e-05+-4.75256014311733e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.67862548950722e-05*1.67862548950722e-05+-4.75256014311733e-06*-4.75256014311733e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.67862548950722e-05*1.67862548950722e-05+-4.75256014311733e-06*-4.75256014311733e-06+-3.45246337454197e-05*${fz})
variable           f_module      equal     sqrt(1.67862548950722e-05*1.67862548950722e-05+-4.75256014311733e-06*-4.75256014311733e-06+-3.45246337454197e-05*-3.45246337454197e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434514470728352*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434514470728352*-0.434514470728352+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434514470728352*-0.434514470728352+0.829489626265375*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434514470728352*-0.434514470728352+0.829489626265375*0.829489626265375+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.434514470728352*-0.434514470728352+0.829489626265375*0.829489626265375+-0.350918985872507*${unitz})
variable           dir_module    equal     sqrt(-0.434514470728352*-0.434514470728352+0.829489626265375*0.829489626265375+-0.350918985872507*-0.350918985872507)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.67862548950722e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.67862548950722e-05*-0.434514470728352+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.67862548950722e-05*-0.434514470728352+-4.75256014311733e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.67862548950722e-05*-0.434514470728352+-4.75256014311733e-06*0.829489626265375+${fz}*${unitz}
variable           dot      equal     1.67862548950722e-05*-0.434514470728352+-4.75256014311733e-06*0.829489626265375+-3.45246337454197e-05*${unitz}
variable           dot      equal     1.67862548950722e-05*-0.434514470728352+-4.75256014311733e-06*0.829489626265375+-3.45246337454197e-05*-0.350918985872507
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.79279463400798e-07/${f_module}*${dir_module}
variable           cos      equal     8.79279463400798e-07/3.86822377399712e-05*${dir_module}
variable           cos      equal     8.79279463400798e-07/3.86822377399712e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0227308324123198)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54806353645886/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.6975070571893-90.0)
print              "The dot product: ${dot}"
The dot product: 8.79279463400798e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.6975070571893

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13491481563578^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13491481563578^2+0.2575528493028^2+${new_z}^2)
variable           norm          equal     sqrt(-0.13491481563578^2+0.2575528493028^2+-0.108958788421301^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.13491481563578/${norm}
variable           unit_x        equal     -0.13491481563578/0.310495563955856
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.2575528493028/${norm}
variable           unit_y        equal     0.2575528493028/0.310495563955856
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.108958788421301/${norm}
variable           unit_z        equal     -0.108958788421301/0.310495563955856
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.03072149824899+${delta}*${unit_x}
variable           x_new         equal     1.03072149824899+0.03*${unit_x}
variable           x_new         equal     1.03072149824899+0.03*-0.434514470728352
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.28223580456514+${delta}*${unit_y}
variable           y_new         equal     4.28223580456514+0.03*${unit_y}
variable           y_new         equal     4.28223580456514+0.03*0.829489626265375
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2119095345114+${delta}*${unit_z}
variable           z_new         equal     31.2119095345114+0.03*${unit_z}
variable           z_new         equal     31.2119095345114+0.03*-0.350918985872507

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01768606412714  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01768606412714  y  4.3071204933531  z   ${z_new}
set                atom          288751    x  1.01768606412714  y  4.3071204933531  z   31.2013819649352
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13491481563578  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.13491481563578  0.2575528493028  ${new_z}
fix                hold    carbon   planeforce   -0.13491481563578  0.2575528493028  -0.108958788421301
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2007   -1152449.1            0   -1152449.1  0.033189141 0.0069660831 -0.024629242 
    2224   -1152449.1            0   -1152449.1 -8.015259e-06 -4.359826e-07 8.8940841e-06 
Loop time of 2.52682 on 104 procs for 217 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.13226187  -1152449.13508695  -1152449.13508695
  Force two-norm initial, final = 0.24391888 5.8518241e-05
  Force max component initial, final = 0.17496575 1.0804160e-05
  Final line search alpha, max atom move = 1.0000000 1.0804160e-05
  Iterations, force evaluations = 217 434

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.66354    | 1.8249     | 2.3863     |  36.4 | 72.22
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040934   | 0.40977    | 1.2383     |  54.4 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6091e-05 | 0.0035793  | 0.0076527  |   2.8 |  0.14
Other   |            | 0.2886     |            |       | 11.42

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.07 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115484 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.02327026035309-${x_0}
variable           new_x         equal     1.02327026035309-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.30820935694187-${y_0}
variable           new_y         equal     4.30820935694187-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1970413248514-${z_0}
variable           new_z         equal     31.1970413248514-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14236605353168*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14236605353168*-0.14236605353168+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14236605353168*-0.14236605353168+0.28352640167953*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14236605353168*-0.14236605353168+0.28352640167953*0.28352640167953+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14236605353168*-0.14236605353168+0.28352640167953*0.28352640167953+-0.123826998081299*${new_z})
variable           module        equal     sqrt(-0.14236605353168*-0.14236605353168+0.28352640167953*0.28352640167953+-0.123826998081299*-0.123826998081299)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.14236605353168/${module}
variable           unitx         equal     -0.14236605353168/0.340570754912035
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.28352640167953/${module}
variable           unity         equal     0.28352640167953/0.340570754912035
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.123826998081299/${module}
variable           unitz         equal     -0.123826998081299/0.340570754912035
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.01525899995861e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.01525899995861e-06*-8.01525899995861e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.01525899995861e-06*-8.01525899995861e-06+-4.35982596131166e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.01525899995861e-06*-8.01525899995861e-06+-4.35982596131166e-07*-4.35982596131166e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-8.01525899995861e-06*-8.01525899995861e-06+-4.35982596131166e-07*-4.35982596131166e-07+8.89408412485935e-06*${fz})
variable           f_module      equal     sqrt(-8.01525899995861e-06*-8.01525899995861e-06+-4.35982596131166e-07*-4.35982596131166e-07+8.89408412485935e-06*8.89408412485935e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.418021957194919*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.418021957194919*-0.418021957194919+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.418021957194919*-0.418021957194919+0.832503665068838*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.418021957194919*-0.418021957194919+0.832503665068838*0.832503665068838+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.418021957194919*-0.418021957194919+0.832503665068838*0.832503665068838+-0.363586703483339*${unitz})
variable           dir_module    equal     sqrt(-0.418021957194919*-0.418021957194919+0.832503665068838*0.832503665068838+-0.363586703483339*-0.363586703483339)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.01525899995861e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.01525899995861e-06*-0.418021957194919+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.01525899995861e-06*-0.418021957194919+-4.35982596131166e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -8.01525899995861e-06*-0.418021957194919+-4.35982596131166e-07*0.832503665068838+${fz}*${unitz}
variable           dot      equal     -8.01525899995861e-06*-0.418021957194919+-4.35982596131166e-07*0.832503665068838+8.89408412485935e-06*${unitz}
variable           dot      equal     -8.01525899995861e-06*-0.418021957194919+-4.35982596131166e-07*0.832503665068838+8.89408412485935e-06*-0.363586703483339
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.46173582059644e-07/${f_module}*${dir_module}
variable           cos      equal     -2.46173582059644e-07/1.19807842014044e-05*${dir_module}
variable           cos      equal     -2.46173582059644e-07/1.19807842014044e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0205473680120862)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59134514091213/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.1773603229163-90.0)
print              "The dot product: ${dot}"
The dot product: -2.46173582059644e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.1773603229163

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14236605353168^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14236605353168^2+0.28352640167953^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14236605353168^2+0.28352640167953^2+-0.123826998081299^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.14236605353168/${norm}
variable           unit_x        equal     -0.14236605353168/0.340570754912035
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.28352640167953/${norm}
variable           unit_y        equal     0.28352640167953/0.340570754912035
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.123826998081299/${norm}
variable           unit_z        equal     -0.123826998081299/0.340570754912035
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.02327026035309+${delta}*${unit_x}
variable           x_new         equal     1.02327026035309+0.03*${unit_x}
variable           x_new         equal     1.02327026035309+0.03*-0.418021957194919
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.30820935694187+${delta}*${unit_y}
variable           y_new         equal     4.30820935694187+0.03*${unit_y}
variable           y_new         equal     4.30820935694187+0.03*0.832503665068838
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1970413248514+${delta}*${unit_z}
variable           z_new         equal     31.1970413248514+0.03*${unit_z}
variable           z_new         equal     31.1970413248514+0.03*-0.363586703483339

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01072960163724  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.01072960163724  y  4.33318446689393  z   ${z_new}
set                atom          288751    x  1.01072960163724  y  4.33318446689393  z   31.1861337237469
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14236605353168  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14236605353168  0.28352640167953  ${new_z}
fix                hold    carbon   planeforce   -0.14236605353168  0.28352640167953  -0.123826998081299
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2224   -1152449.1            0   -1152449.1  0.032585532 0.0076328374 -0.019987262 
    2409   -1152449.1            0   -1152449.1 -3.1724727e-05 -1.3832307e-05 4.802668e-06 
Loop time of 2.16882 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.09363309  -1152449.09647635  -1152449.09647635
  Force two-norm initial, final = 0.24600564 0.00018641173
  Force max component initial, final = 0.17881686 4.2217896e-05
  Final line search alpha, max atom move = 1.0000000 4.2217896e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56539    | 1.5575     | 2.0244     |  33.7 | 71.82
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033598   | 0.35254    | 1.0605     |  49.4 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2127e-05 | 0.0030585  | 0.0065613  |   2.6 |  0.14
Other   |            | 0.2557     |            |       | 11.79

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.07 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115483 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238178
Ave neighs/atom = 28.530388
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.01645037443554-${x_0}
variable           new_x         equal     1.01645037443554-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.33461826171994-${y_0}
variable           new_y         equal     4.33461826171994-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1828394085734-${z_0}
variable           new_z         equal     31.1828394085734-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14918593944923*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14918593944923*-0.14918593944923+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14918593944923*-0.14918593944923+0.3099353064576*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14918593944923*-0.14918593944923+0.3099353064576*0.3099353064576+${new_z}*${new_z})
variable           module        equal     sqrt(-0.14918593944923*-0.14918593944923+0.3099353064576*0.3099353064576+-0.1380289143593*${new_z})
variable           module        equal     sqrt(-0.14918593944923*-0.14918593944923+0.3099353064576*0.3099353064576+-0.1380289143593*-0.1380289143593)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.14918593944923/${module}
variable           unitx         equal     -0.14918593944923/0.370632324436931
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.3099353064576/${module}
variable           unity         equal     0.3099353064576/0.370632324436931
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1380289143593/${module}
variable           unitz         equal     -0.1380289143593/0.370632324436931
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.17247267744843e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.17247267744843e-05*-3.17247267744843e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.17247267744843e-05*-3.17247267744843e-05+-1.38323068642392e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.17247267744843e-05*-3.17247267744843e-05+-1.38323068642392e-05*-1.38323068642392e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-3.17247267744843e-05*-3.17247267744843e-05+-1.38323068642392e-05*-1.38323068642392e-05+4.80266797543401e-06*${fz})
variable           f_module      equal     sqrt(-3.17247267744843e-05*-3.17247267744843e-05+-1.38323068642392e-05*-1.38323068642392e-05+4.80266797543401e-06*4.80266797543401e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.402517345662916*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.402517345662916*-0.402517345662916+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.402517345662916*-0.402517345662916+0.836233879299269*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.402517345662916*-0.402517345662916+0.836233879299269*0.836233879299269+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.402517345662916*-0.402517345662916+0.836233879299269*0.836233879299269+-0.37241466882036*${unitz})
variable           dir_module    equal     sqrt(-0.402517345662916*-0.402517345662916+0.836233879299269*0.836233879299269+-0.37241466882036*-0.37241466882036)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.17247267744843e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.17247267744843e-05*-0.402517345662916+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.17247267744843e-05*-0.402517345662916+-1.38323068642392e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -3.17247267744843e-05*-0.402517345662916+-1.38323068642392e-05*0.836233879299269+${fz}*${unitz}
variable           dot      equal     -3.17247267744843e-05*-0.402517345662916+-1.38323068642392e-05*0.836233879299269+4.80266797543401e-06*${unitz}
variable           dot      equal     -3.17247267744843e-05*-0.402517345662916+-1.38323068642392e-05*0.836233879299269+4.80266797543401e-06*-0.37241466882036
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.85874819119395e-07/${f_module}*${dir_module}
variable           cos      equal     -5.85874819119395e-07/3.49407587465473e-05*${dir_module}
variable           cos      equal     -5.85874819119395e-07/3.49407587465473e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0167676616117356)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58756477422324/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.9607612666311-90.0)
print              "The dot product: ${dot}"
The dot product: -5.85874819119395e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.9607612666311

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14918593944923^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14918593944923^2+0.3099353064576^2+${new_z}^2)
variable           norm          equal     sqrt(-0.14918593944923^2+0.3099353064576^2+-0.1380289143593^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.14918593944923/${norm}
variable           unit_x        equal     -0.14918593944923/0.370632324436931
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.3099353064576/${norm}
variable           unit_y        equal     0.3099353064576/0.370632324436931
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1380289143593/${norm}
variable           unit_z        equal     -0.1380289143593/0.370632324436931
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.01645037443554+${delta}*${unit_x}
variable           x_new         equal     1.01645037443554+0.03*${unit_x}
variable           x_new         equal     1.01645037443554+0.03*-0.402517345662916
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.33461826171994+${delta}*${unit_y}
variable           y_new         equal     4.33461826171994+0.03*${unit_y}
variable           y_new         equal     4.33461826171994+0.03*0.836233879299269
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1828394085734+${delta}*${unit_z}
variable           z_new         equal     31.1828394085734+0.03*${unit_z}
variable           z_new         equal     31.1828394085734+0.03*-0.37241466882036

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.00437485406565  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.00437485406565  y  4.35970527809892  z   ${z_new}
set                atom          288751    x  1.00437485406565  y  4.35970527809892  z   31.1716669685088
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14918593944923  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.14918593944923  0.3099353064576  ${new_z}
fix                hold    carbon   planeforce   -0.14918593944923  0.3099353064576  -0.1380289143593
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2409   -1152449.1            0   -1152449.1  0.032623303 0.0088896117 -0.015299212 
    2638   -1152449.1            0   -1152449.1 -8.1085491e-06 -6.2464545e-07 7.3613695e-06 
Loop time of 2.64222 on 104 procs for 229 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.05110917  -1152449.05399702  -1152449.05399702
  Force two-norm initial, final = 0.2492945 3.6183984e-05
  Force max component initial, final = 0.18293664 8.1085491e-06
  Final line search alpha, max atom move = 1.0000000 8.1085491e-06
  Iterations, force evaluations = 229 458

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.69531    | 1.9196     | 2.4959     |  37.4 | 72.65
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043471   | 0.42966    | 1.2957     |  55.5 | 16.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7474e-05 | 0.0037782  | 0.0081077  |   2.9 |  0.14
Other   |            | 0.2892     |            |       | 10.95

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115476 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238177
Ave neighs/atom = 28.530384
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.01042370583559-${x_0}
variable           new_x         equal     1.01042370583559-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.36164448967116-${y_0}
variable           new_y         equal     4.36164448967116-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1694835600369-${z_0}
variable           new_z         equal     31.1694835600369-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15521260804918*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15521260804918*-0.15521260804918+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15521260804918*-0.15521260804918+0.33696153440882*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15521260804918*-0.15521260804918+0.33696153440882*0.33696153440882+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15521260804918*-0.15521260804918+0.33696153440882*0.33696153440882+-0.151384762895802*${new_z})
variable           module        equal     sqrt(-0.15521260804918*-0.15521260804918+0.33696153440882*0.33696153440882+-0.151384762895802*-0.151384762895802)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.15521260804918/${module}
variable           unitx         equal     -0.15521260804918/0.400688626998063
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.33696153440882/${module}
variable           unity         equal     0.33696153440882/0.400688626998063
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.151384762895802/${module}
variable           unitz         equal     -0.151384762895802/0.400688626998063
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.10854912750908e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.10854912750908e-06*-8.10854912750908e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.10854912750908e-06*-8.10854912750908e-06+-6.24645446244566e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.10854912750908e-06*-8.10854912750908e-06+-6.24645446244566e-07*-6.24645446244566e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-8.10854912750908e-06*-8.10854912750908e-06+-6.24645446244566e-07*-6.24645446244566e-07+7.36136950761363e-06*${fz})
variable           f_module      equal     sqrt(-8.10854912750908e-06*-8.10854912750908e-06+-6.24645446244566e-07*-6.24645446244566e-07+7.36136950761363e-06*7.36136950761363e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.387364645740071*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.387364645740071*-0.387364645740071+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.387364645740071*-0.387364645740071+0.840956073381261*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.387364645740071*-0.387364645740071+0.840956073381261*0.840956073381261+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.387364645740071*-0.387364645740071+0.840956073381261*0.840956073381261+-0.377811479277483*${unitz})
variable           dir_module    equal     sqrt(-0.387364645740071*-0.387364645740071+0.840956073381261*0.840956073381261+-0.377811479277483*-0.377811479277483)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.10854912750908e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.10854912750908e-06*-0.387364645740071+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.10854912750908e-06*-0.387364645740071+-6.24645446244566e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -8.10854912750908e-06*-0.387364645740071+-6.24645446244566e-07*0.840956073381261+${fz}*${unitz}
variable           dot      equal     -8.10854912750908e-06*-0.387364645740071+-6.24645446244566e-07*0.840956073381261+7.36136950761363e-06*${unitz}
variable           dot      equal     -8.10854912750908e-06*-0.387364645740071+-6.24645446244566e-07*0.840956073381261+7.36136950761363e-06*-0.377811479277483
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.65544024665461e-07/${f_module}*${dir_module}
variable           cos      equal     -1.65544024665461e-07/1.09694353507538e-05*${dir_module}
variable           cos      equal     -1.65544024665461e-07/1.09694353507538e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0150913897910055)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58588828948874/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8647057669261-90.0)
print              "The dot product: ${dot}"
The dot product: -1.65544024665461e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8647057669261

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15521260804918^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15521260804918^2+0.33696153440882^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15521260804918^2+0.33696153440882^2+-0.151384762895802^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.15521260804918/${norm}
variable           unit_x        equal     -0.15521260804918/0.400688626998063
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.33696153440882/${norm}
variable           unit_y        equal     0.33696153440882/0.400688626998063
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.151384762895802/${norm}
variable           unit_z        equal     -0.151384762895802/0.400688626998063
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.01042370583559+${delta}*${unit_x}
variable           x_new         equal     1.01042370583559+0.03*${unit_x}
variable           x_new         equal     1.01042370583559+0.03*-0.387364645740071
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.36164448967116+${delta}*${unit_y}
variable           y_new         equal     4.36164448967116+0.03*${unit_y}
variable           y_new         equal     4.36164448967116+0.03*0.840956073381261
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1694835600369+${delta}*${unit_z}
variable           z_new         equal     31.1694835600369+0.03*${unit_z}
variable           z_new         equal     31.1694835600369+0.03*-0.377811479277483

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.998802766463388  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.998802766463388  y  4.3868731718726  z   ${z_new}
set                atom          288751    x  0.998802766463388  y  4.3868731718726  z   31.1581492156586
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15521260804918  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15521260804918  0.33696153440882  ${new_z}
fix                hold    carbon   planeforce   -0.15521260804918  0.33696153440882  -0.151384762895802
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2638     -1152449            0     -1152449  0.032181777  0.010301825 -0.010065073 
    2830     -1152449            0     -1152449 4.4563652e-06 -5.5885764e-06 -1.7008445e-05 
Loop time of 2.22687 on 104 procs for 192 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.00458008  -1152449.00753651  -1152449.00753651
  Force two-norm initial, final = 0.25340892 0.00016365328
  Force max component initial, final = 0.18758025 5.3586986e-05
  Final line search alpha, max atom move = 1.0000000 5.3586986e-05
  Iterations, force evaluations = 192 384

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5947     | 1.6151     | 2.0846     |  34.0 | 72.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037978   | 0.36728    | 1.1093     |  50.6 | 16.49
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4275e-05 | 0.0031763  | 0.0068449  |   2.7 |  0.14
Other   |            | 0.2413     |            |       | 10.84

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115468 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238177
Ave neighs/atom = 28.530384
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.00521435133178-${x_0}
variable           new_x         equal     1.00521435133178-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.38941988790331-${y_0}
variable           new_y         equal     4.38941988790331-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1572441479017-${z_0}
variable           new_z         equal     31.1572441479017-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16042196255299*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16042196255299*-0.16042196255299+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16042196255299*-0.16042196255299+0.36473693264097*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16042196255299*-0.16042196255299+0.36473693264097*0.36473693264097+${new_z}*${new_z})
variable           module        equal     sqrt(-0.16042196255299*-0.16042196255299+0.36473693264097*0.36473693264097+-0.163624175031*${new_z})
variable           module        equal     sqrt(-0.16042196255299*-0.16042196255299+0.36473693264097*0.36473693264097+-0.163624175031*-0.163624175031)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.16042196255299/${module}
variable           unitx         equal     -0.16042196255299/0.430744827892654
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.36473693264097/${module}
variable           unity         equal     0.36473693264097/0.430744827892654
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.163624175031/${module}
variable           unitz         equal     -0.163624175031/0.430744827892654
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45636524817619e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45636524817619e-06*4.45636524817619e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45636524817619e-06*4.45636524817619e-06+-5.58857640298232e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.45636524817619e-06*4.45636524817619e-06+-5.58857640298232e-06*-5.58857640298232e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.45636524817619e-06*4.45636524817619e-06+-5.58857640298232e-06*-5.58857640298232e-06+-1.7008444597397e-05*${fz})
variable           f_module      equal     sqrt(4.45636524817619e-06*4.45636524817619e-06+-5.58857640298232e-06*-5.58857640298232e-06+-1.7008444597397e-05*-1.7008444597397e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.372429225297555*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.372429225297555*-0.372429225297555+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.372429225297555*-0.372429225297555+0.846758704974784*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.372429225297555*-0.372429225297555+0.846758704974784*0.846758704974784+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.372429225297555*-0.372429225297555+0.846758704974784*0.846758704974784+-0.379863353975725*${unitz})
variable           dir_module    equal     sqrt(-0.372429225297555*-0.372429225297555+0.846758704974784*0.846758704974784+-0.379863353975725*-0.379863353975725)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.45636524817619e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.45636524817619e-06*-0.372429225297555+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.45636524817619e-06*-0.372429225297555+-5.58857640298232e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.45636524817619e-06*-0.372429225297555+-5.58857640298232e-06*0.846758704974784+${fz}*${unitz}
variable           dot      equal     4.45636524817619e-06*-0.372429225297555+-5.58857640298232e-06*0.846758704974784+-1.7008444597397e-05*${unitz}
variable           dot      equal     4.45636524817619e-06*-0.372429225297555+-5.58857640298232e-06*0.846758704974784+-1.7008444597397e-05*-0.379863353975725
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.90284360143741e-08/${f_module}*${dir_module}
variable           cos      equal     6.90284360143741e-08/1.84493513452329e-05*${dir_module}
variable           cos      equal     6.90284360143741e-08/1.84493513452329e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00374151018768528)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56705480787765/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7856267570734-90.0)
print              "The dot product: ${dot}"
The dot product: 6.90284360143741e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7856267570734

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16042196255299^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16042196255299^2+0.36473693264097^2+${new_z}^2)
variable           norm          equal     sqrt(-0.16042196255299^2+0.36473693264097^2+-0.163624175031^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.16042196255299/${norm}
variable           unit_x        equal     -0.16042196255299/0.430744827892654
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.36473693264097/${norm}
variable           unit_y        equal     0.36473693264097/0.430744827892654
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.163624175031/${norm}
variable           unit_z        equal     -0.163624175031/0.430744827892654
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.00521435133178+${delta}*${unit_x}
variable           x_new         equal     1.00521435133178+0.03*${unit_x}
variable           x_new         equal     1.00521435133178+0.03*-0.372429225297555
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.38941988790331+${delta}*${unit_y}
variable           y_new         equal     4.38941988790331+0.03*${unit_y}
variable           y_new         equal     4.38941988790331+0.03*0.846758704974784
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1572441479017+${delta}*${unit_z}
variable           z_new         equal     31.1572441479017+0.03*${unit_z}
variable           z_new         equal     31.1572441479017+0.03*-0.379863353975725

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.994041474572853  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.994041474572853  y  4.41482264905255  z   ${z_new}
set                atom          288751    x  0.994041474572853  y  4.41482264905255  z   31.1458482472824
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.16042196255299  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.16042196255299  0.36473693264097  ${new_z}
fix                hold    carbon   planeforce   -0.16042196255299  0.36473693264097  -0.163624175031
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2830     -1152449            0     -1152449  0.029845609  0.011391092 -0.0038694716 
    3000     -1152449            0     -1152449 -6.8101346e-05 5.7145647e-06 7.9506982e-05 
    3029     -1152449            0     -1152449 -2.8294543e-05 -2.3244659e-06 2.2559305e-05 
Loop time of 2.30038 on 104 procs for 199 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.95397068  -1152448.95701235  -1152448.95701235
  Force two-norm initial, final = 0.25774419 0.00014819022
  Force max component initial, final = 0.19283437 4.1405525e-05
  Final line search alpha, max atom move = 1.0000000 4.1405525e-05
  Iterations, force evaluations = 199 398

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60394    | 1.6675     | 2.1668     |  34.8 | 72.49
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.036319   | 0.37559    | 1.1365     |  51.6 | 16.33
Output  | 0.00015961 | 0.00016682 | 0.00034289 |   0.0 |  0.01
Modify  | 2.4736e-05 | 0.0032809  | 0.0070157  |   2.7 |  0.14
Other   |            | 0.2538     |            |       | 11.03

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115468 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238176
Ave neighs/atom = 28.530381
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.00074759296727-${x_0}
variable           new_x         equal     1.00074759296727-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.41800446576442-${y_0}
variable           new_y         equal     4.41800446576442-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1463660032547-${z_0}
variable           new_z         equal     31.1463660032547-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1648887209175*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1648887209175*-0.1648887209175+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1648887209175*-0.1648887209175+0.39332151050208*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1648887209175*-0.1648887209175+0.39332151050208*0.39332151050208+${new_z}*${new_z})
variable           module        equal     sqrt(-0.1648887209175*-0.1648887209175+0.39332151050208*0.39332151050208+-0.174502319678002*${new_z})
variable           module        equal     sqrt(-0.1648887209175*-0.1648887209175+0.39332151050208*0.39332151050208+-0.174502319678002*-0.174502319678002)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.1648887209175/${module}
variable           unitx         equal     -0.1648887209175/0.460804905011275
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.39332151050208/${module}
variable           unity         equal     0.39332151050208/0.460804905011275
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.174502319678002/${module}
variable           unitz         equal     -0.174502319678002/0.460804905011275
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.82945434853941e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.82945434853941e-05*-2.82945434853941e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.82945434853941e-05*-2.82945434853941e-05+-2.32446589925271e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.82945434853941e-05*-2.82945434853941e-05+-2.32446589925271e-06*-2.32446589925271e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.82945434853941e-05*-2.82945434853941e-05+-2.32446589925271e-06*-2.32446589925271e-06+2.25593047771978e-05*${fz})
variable           f_module      equal     sqrt(-2.82945434853941e-05*-2.82945434853941e-05+-2.32446589925271e-06*-2.32446589925271e-06+2.25593047771978e-05*2.25593047771978e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.35782761668621*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.35782761668621*-0.35782761668621+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.35782761668621*-0.35782761668621+0.853553220082274*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.35782761668621*-0.35782761668621+0.853553220082274*0.853553220082274+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.35782761668621*-0.35782761668621+0.853553220082274*0.853553220082274+-0.378690239145202*${unitz})
variable           dir_module    equal     sqrt(-0.35782761668621*-0.35782761668621+0.853553220082274*0.853553220082274+-0.378690239145202*-0.378690239145202)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.82945434853941e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.82945434853941e-05*-0.35782761668621+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.82945434853941e-05*-0.35782761668621+-2.32446589925271e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.82945434853941e-05*-0.35782761668621+-2.32446589925271e-06*0.853553220082274+${fz}*${unitz}
variable           dot      equal     -2.82945434853941e-05*-0.35782761668621+-2.32446589925271e-06*0.853553220082274+2.25593047771978e-05*${unitz}
variable           dot      equal     -2.82945434853941e-05*-0.35782761668621+-2.32446589925271e-06*0.853553220082274+2.25593047771978e-05*-0.378690239145202
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.02474813702223e-07/${f_module}*${dir_module}
variable           cos      equal     -4.02474813702223e-07/3.62616404040709e-05*${dir_module}
variable           cos      equal     -4.02474813702223e-07/3.62616404040709e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0110991893697407)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58189574406584/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.6359497646797-90.0)
print              "The dot product: ${dot}"
The dot product: -4.02474813702223e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.6359497646797

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.1648887209175^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.1648887209175^2+0.39332151050208^2+${new_z}^2)
variable           norm          equal     sqrt(-0.1648887209175^2+0.39332151050208^2+-0.174502319678002^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.1648887209175/${norm}
variable           unit_x        equal     -0.1648887209175/0.460804905011275
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.39332151050208/${norm}
variable           unit_y        equal     0.39332151050208/0.460804905011275
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.174502319678002/${norm}
variable           unit_z        equal     -0.174502319678002/0.460804905011275
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.00074759296727+${delta}*${unit_x}
variable           x_new         equal     1.00074759296727+0.03*${unit_x}
variable           x_new         equal     1.00074759296727+0.03*-0.35782761668621
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.41800446576442+${delta}*${unit_y}
variable           y_new         equal     4.41800446576442+0.03*${unit_y}
variable           y_new         equal     4.41800446576442+0.03*0.853553220082274
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1463660032547+${delta}*${unit_z}
variable           z_new         equal     31.1463660032547+0.03*${unit_z}
variable           z_new         equal     31.1463660032547+0.03*-0.378690239145202

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.990012764466684  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.990012764466684  y  4.44361106236689  z   ${z_new}
set                atom          288751    x  0.990012764466684  y  4.44361106236689  z   31.1350052960803
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.1648887209175  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.1648887209175  0.39332151050208  ${new_z}
fix                hold    carbon   planeforce   -0.1648887209175  0.39332151050208  -0.174502319678002
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3029   -1152448.9            0   -1152448.9  0.024855723  0.011845408 0.0032127088 
    3216   -1152448.9            0   -1152448.9 -2.3253968e-05 2.1364593e-06 2.6788369e-05 
Loop time of 2.1598 on 104 procs for 187 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.89923545  -1152448.90236808  -1152448.90236808
  Force two-norm initial, final = 0.26175667 0.00018218513
  Force max component initial, final = 0.19861388 3.0867896e-05
  Final line search alpha, max atom move = 1.0000000 3.0867896e-05
  Iterations, force evaluations = 187 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5662     | 1.5678     | 2.0401     |  33.8 | 72.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034555   | 0.35348    | 1.0646     |  50.0 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2433e-05 | 0.0030889  | 0.0065719  |   2.6 |  0.14
Other   |            | 0.2354     |            |       | 10.90

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115483 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238176
Ave neighs/atom = 28.530381
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.996941621813573-${x_0}
variable           new_x         equal     0.996941621813573-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.44753290444592-${y_0}
variable           new_y         equal     4.44753290444592-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1372978411072-${z_0}
variable           new_z         equal     31.1372978411072-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.168694692071197*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.168694692071197*-0.168694692071197+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.168694692071197*-0.168694692071197+0.42284994918358*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.168694692071197*-0.168694692071197+0.42284994918358*0.42284994918358+${new_z}*${new_z})
variable           module        equal     sqrt(-0.168694692071197*-0.168694692071197+0.42284994918358*0.42284994918358+-0.183570481825502*${new_z})
variable           module        equal     sqrt(-0.168694692071197*-0.168694692071197+0.42284994918358*0.42284994918358+-0.183570481825502*-0.183570481825502)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.168694692071197/${module}
variable           unitx         equal     -0.168694692071197/0.490874831759787
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.42284994918358/${module}
variable           unity         equal     0.42284994918358/0.490874831759787
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.183570481825502/${module}
variable           unitz         equal     -0.183570481825502/0.490874831759787
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.32539681758047e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.32539681758047e-05*-2.32539681758047e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.32539681758047e-05*-2.32539681758047e-05+2.13645934714729e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.32539681758047e-05*-2.32539681758047e-05+2.13645934714729e-06*2.13645934714729e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.32539681758047e-05*-2.32539681758047e-05+2.13645934714729e-06*2.13645934714729e-06+2.67883687449409e-05*${fz})
variable           f_module      equal     sqrt(-2.32539681758047e-05*-2.32539681758047e-05+2.13645934714729e-06*2.13645934714729e-06+2.67883687449409e-05*2.67883687449409e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.343661318846652*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.343661318846652*-0.343661318846652+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.343661318846652*-0.343661318846652+0.861421123726515*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.343661318846652*-0.343661318846652+0.861421123726515*0.861421123726515+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.343661318846652*-0.343661318846652+0.861421123726515*0.861421123726515+-0.373965968406654*${unitz})
variable           dir_module    equal     sqrt(-0.343661318846652*-0.343661318846652+0.861421123726515*0.861421123726515+-0.373965968406654*-0.373965968406654)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.32539681758047e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.32539681758047e-05*-0.343661318846652+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.32539681758047e-05*-0.343661318846652+2.13645934714729e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.32539681758047e-05*-0.343661318846652+2.13645934714729e-06*0.861421123726515+${fz}*${unitz}
variable           dot      equal     -2.32539681758047e-05*-0.343661318846652+2.13645934714729e-06*0.861421123726515+2.67883687449409e-05*${unitz}
variable           dot      equal     -2.32539681758047e-05*-0.343661318846652+2.13645934714729e-06*0.861421123726515+2.67883687449409e-05*-0.373965968406654
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.86057676405614e-07/${f_module}*${dir_module}
variable           cos      equal     -1.86057676405614e-07/3.55377010297273e-05*${dir_module}
variable           cos      equal     -1.86057676405614e-07/3.55377010297273e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00523550120054127)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57603185191366/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.2999734928399-90.0)
print              "The dot product: ${dot}"
The dot product: -1.86057676405614e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.2999734928399

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.168694692071197^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.168694692071197^2+0.42284994918358^2+${new_z}^2)
variable           norm          equal     sqrt(-0.168694692071197^2+0.42284994918358^2+-0.183570481825502^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.168694692071197/${norm}
variable           unit_x        equal     -0.168694692071197/0.490874831759787
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.42284994918358/${norm}
variable           unit_y        equal     0.42284994918358/0.490874831759787
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.183570481825502/${norm}
variable           unit_z        equal     -0.183570481825502/0.490874831759787
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.996941621813573+${delta}*${unit_x}
variable           x_new         equal     0.996941621813573+0.03*${unit_x}
variable           x_new         equal     0.996941621813573+0.03*-0.343661318846652
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.44753290444592+${delta}*${unit_y}
variable           y_new         equal     4.44753290444592+0.03*${unit_y}
variable           y_new         equal     4.44753290444592+0.03*0.861421123726515
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1372978411072+${delta}*${unit_z}
variable           z_new         equal     31.1372978411072+0.03*${unit_z}
variable           z_new         equal     31.1372978411072+0.03*-0.373965968406654

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.986631782248173  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.986631782248173  y  4.47337553815772  z   ${z_new}
set                atom          288751    x  0.986631782248173  y  4.47337553815772  z   31.126078862055
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.168694692071197  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.168694692071197  0.42284994918358  ${new_z}
fix                hold    carbon   planeforce   -0.168694692071197  0.42284994918358  -0.183570481825502
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3216   -1152448.8            0   -1152448.8  0.018360951  0.012346769  0.011567414 
    3418   -1152448.8            0   -1152448.8 4.2451039e-06 1.4330433e-06 -6.0011945e-07 
Loop time of 2.35635 on 104 procs for 202 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.84038263  -1152448.84362329  -1152448.84362329
  Force two-norm initial, final = 0.26527037 0.00012750847
  Force max component initial, final = 0.2050857 1.1811277e-05
  Final line search alpha, max atom move = 1.0000000 1.1811277e-05
  Iterations, force evaluations = 202 404

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61635    | 1.6967     | 2.2031     |  35.0 | 72.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039975   | 0.38286    | 1.1506     |  52.3 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4255e-05 | 0.0033285  | 0.0071263  |   2.7 |  0.14
Other   |            | 0.2734     |            |       | 11.60

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115496 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238175
Ave neighs/atom = 28.530377
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.994364725634678-${x_0}
variable           new_x         equal     0.994364725634678-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.47864212799386-${y_0}
variable           new_y         equal     4.47864212799386-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1311040204148-${z_0}
variable           new_z         equal     31.1311040204148-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.171271588250092*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.171271588250092*-0.171271588250092+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.171271588250092*-0.171271588250092+0.45395917273152*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.171271588250092*-0.171271588250092+0.45395917273152*0.45395917273152+${new_z}*${new_z})
variable           module        equal     sqrt(-0.171271588250092*-0.171271588250092+0.45395917273152*0.45395917273152+-0.189764302517901*${new_z})
variable           module        equal     sqrt(-0.171271588250092*-0.171271588250092+0.45395917273152*0.45395917273152+-0.189764302517901*-0.189764302517901)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.171271588250092/${module}
variable           unitx         equal     -0.171271588250092/0.520983087977816
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.45395917273152/${module}
variable           unity         equal     0.45395917273152/0.520983087977816
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.189764302517901/${module}
variable           unitz         equal     -0.189764302517901/0.520983087977816
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.24510393976046e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.24510393976046e-06*4.24510393976046e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.24510393976046e-06*4.24510393976046e-06+1.4330432982451e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.24510393976046e-06*4.24510393976046e-06+1.4330432982451e-06*1.4330432982451e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.24510393976046e-06*4.24510393976046e-06+1.4330432982451e-06*1.4330432982451e-06+-6.00119445682165e-07*${fz})
variable           f_module      equal     sqrt(4.24510393976046e-06*4.24510393976046e-06+1.4330432982451e-06*1.4330432982451e-06+-6.00119445682165e-07*-6.00119445682165e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.328746925192675*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.328746925192675*-0.328746925192675+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.328746925192675*-0.328746925192675+0.871351073013814*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.328746925192675*-0.328746925192675+0.871351073013814*0.871351073013814+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.328746925192675*-0.328746925192675+0.871351073013814*0.871351073013814+-0.364242730516391*${unitz})
variable           dir_module    equal     sqrt(-0.328746925192675*-0.328746925192675+0.871351073013814*0.871351073013814+-0.364242730516391*-0.364242730516391)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.24510393976046e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.24510393976046e-06*-0.328746925192675+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.24510393976046e-06*-0.328746925192675+1.4330432982451e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.24510393976046e-06*-0.328746925192675+1.4330432982451e-06*0.871351073013814+${fz}*${unitz}
variable           dot      equal     4.24510393976046e-06*-0.328746925192675+1.4330432982451e-06*0.871351073013814+-6.00119445682165e-07*${unitz}
variable           dot      equal     4.24510393976046e-06*-0.328746925192675+1.4330432982451e-06*0.871351073013814+-6.00119445682165e-07*-0.364242730516391
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.1708093812816e-08/${f_module}*${dir_module}
variable           cos      equal     7.1708093812816e-08/4.52047164608969e-06*${dir_module}
variable           cos      equal     7.1708093812816e-08/4.52047164608969e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0158629672801609)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55493269416312/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.0910808024532-90.0)
print              "The dot product: ${dot}"
The dot product: 7.1708093812816e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.0910808024532

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.171271588250092^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.171271588250092^2+0.45395917273152^2+${new_z}^2)
variable           norm          equal     sqrt(-0.171271588250092^2+0.45395917273152^2+-0.189764302517901^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.171271588250092/${norm}
variable           unit_x        equal     -0.171271588250092/0.520983087977816
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.45395917273152/${norm}
variable           unit_y        equal     0.45395917273152/0.520983087977816
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.189764302517901/${norm}
variable           unit_z        equal     -0.189764302517901/0.520983087977816
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.994364725634678+${delta}*${unit_x}
variable           x_new         equal     0.994364725634678+0.03*${unit_x}
variable           x_new         equal     0.994364725634678+0.03*-0.328746925192675
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.47864212799386+${delta}*${unit_y}
variable           y_new         equal     4.47864212799386+0.03*${unit_y}
variable           y_new         equal     4.47864212799386+0.03*0.871351073013814
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1311040204148+${delta}*${unit_z}
variable           z_new         equal     31.1311040204148+0.03*${unit_z}
variable           z_new         equal     31.1311040204148+0.03*-0.364242730516391

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.984502317878898  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.984502317878898  y  4.50478266018427  z   ${z_new}
set                atom          288751    x  0.984502317878898  y  4.50478266018427  z   31.1201767384993
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.171271588250092  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.171271588250092  0.45395917273152  ${new_z}
fix                hold    carbon   planeforce   -0.171271588250092  0.45395917273152  -0.189764302517901
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3418   -1152448.8            0   -1152448.8  0.014322939  0.015288228  0.023645749 
    3641   -1152448.8            0   -1152448.8 5.1254319e-06 -3.495849e-06 -1.2988816e-05 
Loop time of 2.61482 on 104 procs for 223 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.77754883   -1152448.7810396   -1152448.7810396
  Force two-norm initial, final = 0.26877225 5.7130540e-05
  Force max component initial, final = 0.21287372 1.2988816e-05
  Final line search alpha, max atom move = 1.0000000 1.2988816e-05
  Iterations, force evaluations = 223 446

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.68142    | 1.8758     | 2.4444     |  36.9 | 71.74
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.041528   | 0.42839    | 1.2799     |  53.9 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6701e-05 | 0.0036845  | 0.0079625  |   2.9 |  0.14
Other   |            | 0.3069     |            |       | 11.74

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.06 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115495 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238173
Ave neighs/atom = 28.530370
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     0.995932673365455-${x_0}
variable           new_x         equal     0.995932673365455-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.51387905499901-${y_0}
variable           new_y         equal     4.51387905499901-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1316209179232-${z_0}
variable           new_z         equal     31.1316209179232-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.169703640519315*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.169703640519315*-0.169703640519315+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.169703640519315*-0.169703640519315+0.48919609973667*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.169703640519315*-0.169703640519315+0.48919609973667*0.48919609973667+${new_z}*${new_z})
variable           module        equal     sqrt(-0.169703640519315*-0.169703640519315+0.48919609973667*0.48919609973667+-0.1892474050095*${new_z})
variable           module        equal     sqrt(-0.169703640519315*-0.169703640519315+0.48919609973667*0.48919609973667+-0.1892474050095*-0.1892474050095)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.169703640519315/${module}
variable           unitx         equal     -0.169703640519315/0.55129550143812
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.48919609973667/${module}
variable           unity         equal     0.48919609973667/0.55129550143812
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1892474050095/${module}
variable           unitz         equal     -0.1892474050095/0.55129550143812
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.12543186956899e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.12543186956899e-06*5.12543186956899e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.12543186956899e-06*5.12543186956899e-06+-3.49584901989093e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.12543186956899e-06*5.12543186956899e-06+-3.49584901989093e-06*-3.49584901989093e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.12543186956899e-06*5.12543186956899e-06+-3.49584901989093e-06*-3.49584901989093e-06+-1.29888158809869e-05*${fz})
variable           f_module      equal     sqrt(5.12543186956899e-06*5.12543186956899e-06+-3.49584901989093e-06*-3.49584901989093e-06+-1.29888158809869e-05*-1.29888158809869e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.307827000359377*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.307827000359377*-0.307827000359377+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.307827000359377*-0.307827000359377+0.88735732190911*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.307827000359377*-0.307827000359377+0.88735732190911*0.88735732190911+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.307827000359377*-0.307827000359377+0.88735732190911*0.88735732190911+-0.343277615209675*${unitz})
variable           dir_module    equal     sqrt(-0.307827000359377*-0.307827000359377+0.88735732190911*0.88735732190911+-0.343277615209675*-0.343277615209675)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.12543186956899e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.12543186956899e-06*-0.307827000359377+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.12543186956899e-06*-0.307827000359377+-3.49584901989093e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.12543186956899e-06*-0.307827000359377+-3.49584901989093e-06*0.88735732190911+${fz}*${unitz}
variable           dot      equal     5.12543186956899e-06*-0.307827000359377+-3.49584901989093e-06*0.88735732190911+-1.29888158809869e-05*${unitz}
variable           dot      equal     5.12543186956899e-06*-0.307827000359377+-3.49584901989093e-06*0.88735732190911+-1.29888158809869e-05*-0.343277615209675
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.21043802022042e-07/${f_module}*${dir_module}
variable           cos      equal     -2.21043802022042e-07/1.43944555371033e-05*${dir_module}
variable           cos      equal     -2.21043802022042e-07/1.43944555371033e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0153561766509527)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58615310703877/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.8798786948838-90.0)
print              "The dot product: ${dot}"
The dot product: -2.21043802022042e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.8798786948838

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.169703640519315^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.169703640519315^2+0.48919609973667^2+${new_z}^2)
variable           norm          equal     sqrt(-0.169703640519315^2+0.48919609973667^2+-0.1892474050095^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.169703640519315/${norm}
variable           unit_x        equal     -0.169703640519315/0.55129550143812
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.48919609973667/${norm}
variable           unit_y        equal     0.48919609973667/0.55129550143812
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1892474050095/${norm}
variable           unit_z        equal     -0.1892474050095/0.55129550143812
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     0.995932673365455+${delta}*${unit_x}
variable           x_new         equal     0.995932673365455+0.03*${unit_x}
variable           x_new         equal     0.995932673365455+0.03*-0.307827000359377
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.51387905499901+${delta}*${unit_y}
variable           y_new         equal     4.51387905499901+0.03*${unit_y}
variable           y_new         equal     4.51387905499901+0.03*0.88735732190911
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1316209179232+${delta}*${unit_z}
variable           z_new         equal     31.1316209179232+0.03*${unit_z}
variable           z_new         equal     31.1316209179232+0.03*-0.343277615209675

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.986697863354674  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.986697863354674  y  4.54049977465628  z   ${z_new}
set                atom          288751    x  0.986697863354674  y  4.54049977465628  z   31.1213225894669
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.169703640519315  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.169703640519315  0.48919609973667  ${new_z}
fix                hold    carbon   planeforce   -0.169703640519315  0.48919609973667  -0.1892474050095
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3641   -1152448.7            0   -1152448.7  0.025026312  0.028938022  0.052361675 
    3781   -1152448.7            0   -1152448.7 2.2443859e-05 -9.6442474e-07 -2.2619054e-05 
Loop time of 1.63121 on 104 procs for 140 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.71129661  -1152448.71583235  -1152448.71583235
  Force two-norm initial, final = 0.27805159 0.00015284366
  Force max component initial, final = 0.22461965 2.8132007e-05
  Final line search alpha, max atom move = 1.0000000 2.8132007e-05
  Iterations, force evaluations = 140 280

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.43451    | 1.1781     | 1.533      |  29.0 | 72.22
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025609   | 0.26452    | 0.79935    |  43.4 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7126e-05 | 0.0023083  | 0.0049386  |   2.3 |  0.14
Other   |            | 0.1863     |            |       | 11.42

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.06 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115493 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238168
Ave neighs/atom = 28.530353
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.00610126035675-${x_0}
variable           new_x         equal     1.00610126035675-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.55605075020808-${y_0}
variable           new_y         equal     4.55605075020808-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.1441215783206-${z_0}
variable           new_z         equal     31.1441215783206-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15953505352802*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15953505352802*-0.15953505352802+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15953505352802*-0.15953505352802+0.53136779494574*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15953505352802*-0.15953505352802+0.53136779494574*0.53136779494574+${new_z}*${new_z})
variable           module        equal     sqrt(-0.15953505352802*-0.15953505352802+0.53136779494574*0.53136779494574+-0.1767467446121*${new_z})
variable           module        equal     sqrt(-0.15953505352802*-0.15953505352802+0.53136779494574*0.53136779494574+-0.1767467446121*-0.1767467446121)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.15953505352802/${module}
variable           unitx         equal     -0.15953505352802/0.582273628580808
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.53136779494574/${module}
variable           unity         equal     0.53136779494574/0.582273628580808
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1767467446121/${module}
variable           unitz         equal     -0.1767467446121/0.582273628580808
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.2443858550927e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.2443858550927e-05*2.2443858550927e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.2443858550927e-05*2.2443858550927e-05+-9.64424739776625e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.2443858550927e-05*2.2443858550927e-05+-9.64424739776625e-07*-9.64424739776625e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.2443858550927e-05*2.2443858550927e-05+-9.64424739776625e-07*-9.64424739776625e-07+-2.26190542701739e-05*${fz})
variable           f_module      equal     sqrt(2.2443858550927e-05*2.2443858550927e-05+-9.64424739776625e-07*-9.64424739776625e-07+-2.26190542701739e-05*-2.26190542701739e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.273986396939974*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.273986396939974*-0.273986396939974+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.273986396939974*-0.273986396939974+0.91257403540816*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.273986396939974*-0.273986396939974+0.91257403540816*0.91257403540816+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.273986396939974*-0.273986396939974+0.91257403540816*0.91257403540816+-0.303545851875329*${unitz})
variable           dir_module    equal     sqrt(-0.273986396939974*-0.273986396939974+0.91257403540816*0.91257403540816+-0.303545851875329*-0.303545851875329)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.2443858550927e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.2443858550927e-05*-0.273986396939974+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.2443858550927e-05*-0.273986396939974+-9.64424739776625e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.2443858550927e-05*-0.273986396939974+-9.64424739776625e-07*0.91257403540816+${fz}*${unitz}
variable           dot      equal     2.2443858550927e-05*-0.273986396939974+-9.64424739776625e-07*0.91257403540816+-2.26190542701739e-05*${unitz}
variable           dot      equal     2.2443858550927e-05*-0.273986396939974+-9.64424739776625e-07*0.91257403540816+-2.26190542701739e-05*-0.303545851875329
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.63500817370099e-07/${f_module}*${dir_module}
variable           cos      equal     -1.63500817370099e-07/3.18791235420578e-05*${dir_module}
variable           cos      equal     -1.63500817370099e-07/3.18791235420578e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00512877391859265)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57592512319858/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.2938583879129-90.0)
print              "The dot product: ${dot}"
The dot product: -1.63500817370099e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.2938583879129

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15953505352802^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15953505352802^2+0.53136779494574^2+${new_z}^2)
variable           norm          equal     sqrt(-0.15953505352802^2+0.53136779494574^2+-0.1767467446121^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.15953505352802/${norm}
variable           unit_x        equal     -0.15953505352802/0.582273628580808
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.53136779494574/${norm}
variable           unit_y        equal     0.53136779494574/0.582273628580808
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1767467446121/${norm}
variable           unit_z        equal     -0.1767467446121/0.582273628580808
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.00610126035675+${delta}*${unit_x}
variable           x_new         equal     1.00610126035675+0.03*${unit_x}
variable           x_new         equal     1.00610126035675+0.03*-0.273986396939974
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.55605075020808+${delta}*${unit_y}
variable           y_new         equal     4.55605075020808+0.03*${unit_y}
variable           y_new         equal     4.55605075020808+0.03*0.91257403540816
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.1441215783206+${delta}*${unit_z}
variable           z_new         equal     31.1441215783206+0.03*${unit_z}
variable           z_new         equal     31.1441215783206+0.03*-0.303545851875329

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.997881668448551  y  ${y_new}  z   ${z_new}
set                atom          288751    x  0.997881668448551  y  4.58342797127032  z   ${z_new}
set                atom          288751    x  0.997881668448551  y  4.58342797127032  z   31.1350152027643
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15953505352802  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.15953505352802  0.53136779494574  ${new_z}
fix                hold    carbon   planeforce   -0.15953505352802  0.53136779494574  -0.1767467446121
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3781   -1152448.6            0   -1152448.6  0.059930169  0.052664036   0.10423394 
    4000   -1152448.7            0   -1152448.7 -7.8337778e-06 -1.9572748e-05 -5.1772189e-05 
    4033   -1152448.7            0   -1152448.7 2.3887172e-06 2.0576745e-06 4.0300478e-06 
Loop time of 2.91917 on 104 procs for 252 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.64380522  -1152448.68492545  -1152448.68492545
  Force two-norm initial, final = 0.31197798 0.00012103438
  Force max component initial, final = 0.24303837 4.9980102e-05
  Final line search alpha, max atom move = 1.0000000 4.9980102e-05
  Iterations, force evaluations = 252 504

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.77339    | 2.1144     | 2.7446     |  39.0 | 72.43
Neigh   | 2.0279e-05 | 0.005915   | 0.0085878  |   3.2 |  0.20
Comm    | 0.046018   | 0.47551    | 1.434      |  58.3 | 16.29
Output  | 0.00010583 | 0.00011295 | 0.00029408 |   0.0 |  0.00
Modify  | 3.04e-05   | 0.0041498  | 0.0089063  |   3.0 |  0.14
Other   |            | 0.3191     |            |       | 10.93

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.06 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115493 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238166
Ave neighs/atom = 28.530346
Neighbor list builds = 2
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07779423842599-${x_0}
variable           new_x         equal     1.07779423842599-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.63797368615799-${y_0}
variable           new_y         equal     4.63797368615799-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2268696816138-${z_0}
variable           new_z         equal     31.2268696816138-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0878420754587801*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0878420754587801*-0.0878420754587801+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0878420754587801*-0.0878420754587801+0.61329073089565*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0878420754587801*-0.0878420754587801+0.61329073089565*0.61329073089565+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0878420754587801*-0.0878420754587801+0.61329073089565*0.61329073089565+-0.0939986413189011*${new_z})
variable           module        equal     sqrt(-0.0878420754587801*-0.0878420754587801+0.61329073089565*0.61329073089565+-0.0939986413189011*-0.0939986413189011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0878420754587801/${module}
variable           unitx         equal     -0.0878420754587801/0.626639845041174
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.61329073089565/${module}
variable           unity         equal     0.61329073089565/0.626639845041174
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0939986413189011/${module}
variable           unitz         equal     -0.0939986413189011/0.626639845041174
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.38871719005615e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.38871719005615e-06*2.38871719005615e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.38871719005615e-06*2.38871719005615e-06+2.05767447165203e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.38871719005615e-06*2.38871719005615e-06+2.05767447165203e-06*2.05767447165203e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.38871719005615e-06*2.38871719005615e-06+2.05767447165203e-06*2.05767447165203e-06+4.03004775803552e-06*${fz})
variable           f_module      equal     sqrt(2.38871719005615e-06*2.38871719005615e-06+2.05767447165203e-06*2.05767447165203e-06+4.03004775803552e-06*4.03004775803552e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.140179524417265*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.140179524417265*-0.140179524417265+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.140179524417265*-0.140179524417265+0.978697310343158*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.140179524417265*-0.140179524417265+0.978697310343158*0.978697310343158+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.140179524417265*-0.140179524417265+0.978697310343158*0.978697310343158+-0.150004252143789*${unitz})
variable           dir_module    equal     sqrt(-0.140179524417265*-0.140179524417265+0.978697310343158*0.978697310343158+-0.150004252143789*-0.150004252143789)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.38871719005615e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.38871719005615e-06*-0.140179524417265+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.38871719005615e-06*-0.140179524417265+2.05767447165203e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.38871719005615e-06*-0.140179524417265+2.05767447165203e-06*0.978697310343158+${fz}*${unitz}
variable           dot      equal     2.38871719005615e-06*-0.140179524417265+2.05767447165203e-06*0.978697310343158+4.03004775803552e-06*${unitz}
variable           dot      equal     2.38871719005615e-06*-0.140179524417265+2.05767447165203e-06*0.978697310343158+4.03004775803552e-06*-0.150004252143789
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.07446693125033e-06/${f_module}*${dir_module}
variable           cos      equal     1.07446693125033e-06/5.11676450282846e-06*${dir_module}
variable           cos      equal     1.07446693125033e-06/5.11676450282846e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.209989521827003)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.35923208417507/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(77.8782618020022-90.0)
print              "The dot product: ${dot}"
The dot product: 1.07446693125033e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 77.8782618020022

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0878420754587801^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0878420754587801^2+0.61329073089565^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0878420754587801^2+0.61329073089565^2+-0.0939986413189011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0878420754587801/${norm}
variable           unit_x        equal     -0.0878420754587801/0.626639845041174
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.61329073089565/${norm}
variable           unit_y        equal     0.61329073089565/0.626639845041174
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0939986413189011/${norm}
variable           unit_z        equal     -0.0939986413189011/0.626639845041174
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07779423842599+${delta}*${unit_x}
variable           x_new         equal     1.07779423842599+0.03*${unit_x}
variable           x_new         equal     1.07779423842599+0.03*-0.140179524417265
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.63797368615799+${delta}*${unit_y}
variable           y_new         equal     4.63797368615799+0.03*${unit_y}
variable           y_new         equal     4.63797368615799+0.03*0.978697310343158
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2268696816138+${delta}*${unit_z}
variable           z_new         equal     31.2268696816138+0.03*${unit_z}
variable           z_new         equal     31.2268696816138+0.03*-0.150004252143789

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07358885269347  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07358885269347  y  4.66733460546828  z   ${z_new}
set                atom          288751    x  1.07358885269347  y  4.66733460546828  z   31.2223695540495
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0878420754587801  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0878420754587801  0.61329073089565  ${new_z}
fix                hold    carbon   planeforce   -0.0878420754587801  0.61329073089565  -0.0939986413189011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4033   -1152448.6            0   -1152448.6   0.19387566  0.064572678   0.24012459 
    4253   -1152448.7            0   -1152448.7 1.3324992e-05 8.3721752e-07 -6.9898585e-06 
Loop time of 2.56798 on 104 procs for 220 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.63503456  -1152448.65405215  -1152448.65405215
  Force two-norm initial, final = 0.45606323 0.00017884461
  Force max component initial, final = 0.29671078 7.6425350e-05
  Final line search alpha, max atom move = 1.0000000 7.6425350e-05
  Iterations, force evaluations = 220 440

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.67723    | 1.8481     | 2.3985     |  36.3 | 71.97
Neigh   | 1.0205e-05 | 0.0029592  | 0.0042929  |   2.2 |  0.12
Comm    | 0.041489   | 0.41606    | 1.255      |  54.5 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6747e-05 | 0.0036322  | 0.0077545  |   2.8 |  0.14
Other   |            | 0.2973     |            |       | 11.58

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.07 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115479 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238169
Ave neighs/atom = 28.530357
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12698507524281-${x_0}
variable           new_x         equal     1.12698507524281-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.68382681552499-${y_0}
variable           new_y         equal     4.68382681552499-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2800734152248-${z_0}
variable           new_z         equal     31.2800734152248-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03865123864196*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03865123864196*-0.03865123864196+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03865123864196*-0.03865123864196+0.65914386026265*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03865123864196*-0.03865123864196+0.65914386026265*0.65914386026265+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03865123864196*-0.03865123864196+0.65914386026265*0.65914386026265+-0.0407949077079017*${new_z})
variable           module        equal     sqrt(-0.03865123864196*-0.03865123864196+0.65914386026265*0.65914386026265+-0.0407949077079017*-0.0407949077079017)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.03865123864196/${module}
variable           unitx         equal     -0.03865123864196/0.661535162531367
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.65914386026265/${module}
variable           unity         equal     0.65914386026265/0.661535162531367
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0407949077079017/${module}
variable           unitz         equal     -0.0407949077079017/0.661535162531367
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.33249919736872e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.33249919736872e-05*1.33249919736872e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.33249919736872e-05*1.33249919736872e-05+8.37217523444694e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.33249919736872e-05*1.33249919736872e-05+8.37217523444694e-07*8.37217523444694e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.33249919736872e-05*1.33249919736872e-05+8.37217523444694e-07*8.37217523444694e-07+-6.98985851650173e-06*${fz})
variable           f_module      equal     sqrt(1.33249919736872e-05*1.33249919736872e-05+8.37217523444694e-07*8.37217523444694e-07+-6.98985851650173e-06*-6.98985851650173e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0584265823362448*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0584265823362448*-0.0584265823362448+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0584265823362448*-0.0584265823362448+0.996385222730162*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0584265823362448*-0.0584265823362448+0.996385222730162*0.996385222730162+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0584265823362448*-0.0584265823362448+0.996385222730162*0.996385222730162+-0.0616670284793326*${unitz})
variable           dir_module    equal     sqrt(-0.0584265823362448*-0.0584265823362448+0.996385222730162*0.996385222730162+-0.0616670284793326*-0.0616670284793326)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.33249919736872e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.33249919736872e-05*-0.0584265823362448+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.33249919736872e-05*-0.0584265823362448+8.37217523444694e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.33249919736872e-05*-0.0584265823362448+8.37217523444694e-07*0.996385222730162+${fz}*${unitz}
variable           dot      equal     1.33249919736872e-05*-0.0584265823362448+8.37217523444694e-07*0.996385222730162+-6.98985851650173e-06*${unitz}
variable           dot      equal     1.33249919736872e-05*-0.0584265823362448+8.37217523444694e-07*0.996385222730162+-6.98985851650173e-06*-0.0616670284793326
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.86701232094218e-07/${f_module}*${dir_module}
variable           cos      equal     4.86701232094218e-07/1.50703173941727e-05*${dir_module}
variable           cos      equal     4.86701232094218e-07/1.50703173941727e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0322953537980834)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53849535640578/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.1492907225266-90.0)
print              "The dot product: ${dot}"
The dot product: 4.86701232094218e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.1492907225266

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03865123864196^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03865123864196^2+0.65914386026265^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03865123864196^2+0.65914386026265^2+-0.0407949077079017^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.03865123864196/${norm}
variable           unit_x        equal     -0.03865123864196/0.661535162531367
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.65914386026265/${norm}
variable           unit_y        equal     0.65914386026265/0.661535162531367
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0407949077079017/${norm}
variable           unit_z        equal     -0.0407949077079017/0.661535162531367
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12698507524281+${delta}*${unit_x}
variable           x_new         equal     1.12698507524281+0.03*${unit_x}
variable           x_new         equal     1.12698507524281+0.03*-0.0584265823362448
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.68382681552499+${delta}*${unit_y}
variable           y_new         equal     4.68382681552499+0.03*${unit_y}
variable           y_new         equal     4.68382681552499+0.03*0.996385222730162
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2800734152248+${delta}*${unit_z}
variable           z_new         equal     31.2800734152248+0.03*${unit_z}
variable           z_new         equal     31.2800734152248+0.03*-0.0616670284793326

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12523227777272  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12523227777272  y  4.71371837220689  z   ${z_new}
set                atom          288751    x  1.12523227777272  y  4.71371837220689  z   31.2782234043704
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.03865123864196  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.03865123864196  0.65914386026265  ${new_z}
fix                hold    carbon   planeforce   -0.03865123864196  0.65914386026265  -0.0407949077079017
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4253   -1152448.6            0   -1152448.6   0.11042165  0.014302095   0.12646688 
    4463   -1152448.6            0   -1152448.6 -1.6825383e-05 -2.1303848e-06 -1.8480448e-05 
Loop time of 2.42501 on 104 procs for 210 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152448.6064582  -1152448.61545879  -1152448.61545879
  Force two-norm initial, final = 0.39302647 0.00018160537
  Force max component initial, final = 0.31722328 4.2268438e-05
  Final line search alpha, max atom move = 1.0000000 4.2268438e-05
  Iterations, force evaluations = 210 420

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64219    | 1.7634     | 2.28       |  35.7 | 72.72
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039044   | 0.39839    | 1.196      |  52.8 | 16.43
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5332e-05 | 0.0034662  | 0.0074578  |   2.8 |  0.14
Other   |            | 0.2598     |            |       | 10.71

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.11 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115480 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238167
Ave neighs/atom = 28.530350
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14990332675085-${x_0}
variable           new_x         equal     1.14990332675085-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.71678743763811-${y_0}
variable           new_y         equal     4.71678743763811-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3044371916822-${z_0}
variable           new_z         equal     31.3044371916822-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01573298713392*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01573298713392*-0.01573298713392+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01573298713392*-0.01573298713392+0.69210448237577*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01573298713392*-0.01573298713392+0.69210448237577*0.69210448237577+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01573298713392*-0.01573298713392+0.69210448237577*0.69210448237577+-0.0164311312504992*${new_z})
variable           module        equal     sqrt(-0.01573298713392*-0.01573298713392+0.69210448237577*0.69210448237577+-0.0164311312504992*-0.0164311312504992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.01573298713392/${module}
variable           unitx         equal     -0.01573298713392/0.692478247660502
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.69210448237577/${module}
variable           unity         equal     0.69210448237577/0.692478247660502
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0164311312504992/${module}
variable           unitz         equal     -0.0164311312504992/0.692478247660502
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68253829866866e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68253829866866e-05*-1.68253829866866e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68253829866866e-05*-1.68253829866866e-05+-2.13038480246618e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68253829866866e-05*-1.68253829866866e-05+-2.13038480246618e-06*-2.13038480246618e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.68253829866866e-05*-1.68253829866866e-05+-2.13038480246618e-06*-2.13038480246618e-06+-1.84804479755432e-05*${fz})
variable           f_module      equal     sqrt(-1.68253829866866e-05*-1.68253829866866e-05+-2.13038480246618e-06*-2.13038480246618e-06+-1.84804479755432e-05*-1.84804479755432e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0227198286546516*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0227198286546516*-0.0227198286546516+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0227198286546516*-0.0227198286546516+0.999460249782582*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0227198286546516*-0.0227198286546516+0.999460249782582*0.999460249782582+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0227198286546516*-0.0227198286546516+0.999460249782582*0.999460249782582+-0.023728010671831*${unitz})
variable           dir_module    equal     sqrt(-0.0227198286546516*-0.0227198286546516+0.999460249782582*0.999460249782582+-0.023728010671831*-0.023728010671831)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68253829866866e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68253829866866e-05*-0.0227198286546516+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68253829866866e-05*-0.0227198286546516+-2.13038480246618e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.68253829866866e-05*-0.0227198286546516+-2.13038480246618e-06*0.999460249782582+${fz}*${unitz}
variable           dot      equal     -1.68253829866866e-05*-0.0227198286546516+-2.13038480246618e-06*0.999460249782582+-1.84804479755432e-05*${unitz}
variable           dot      equal     -1.68253829866866e-05*-0.0227198286546516+-2.13038480246618e-06*0.999460249782582+-1.84804479755432e-05*-0.023728010671831
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.30846084151555e-06/${f_module}*${dir_module}
variable           cos      equal     -1.30846084151555e-06/2.5083042268274e-05*${dir_module}
variable           cos      equal     -1.30846084151555e-06/2.5083042268274e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0521651571416655)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.62298517162367/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.9902005463519-90.0)
print              "The dot product: ${dot}"
The dot product: -1.30846084151555e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.9902005463519

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01573298713392^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01573298713392^2+0.69210448237577^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01573298713392^2+0.69210448237577^2+-0.0164311312504992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.01573298713392/${norm}
variable           unit_x        equal     -0.01573298713392/0.692478247660502
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.69210448237577/${norm}
variable           unit_y        equal     0.69210448237577/0.692478247660502
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0164311312504992/${norm}
variable           unit_z        equal     -0.0164311312504992/0.692478247660502
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14990332675085+${delta}*${unit_x}
variable           x_new         equal     1.14990332675085+0.03*${unit_x}
variable           x_new         equal     1.14990332675085+0.03*-0.0227198286546516
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.71678743763811+${delta}*${unit_y}
variable           y_new         equal     4.71678743763811+0.03*${unit_y}
variable           y_new         equal     4.71678743763811+0.03*0.999460249782582
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3044371916822+${delta}*${unit_z}
variable           z_new         equal     31.3044371916822+0.03*${unit_z}
variable           z_new         equal     31.3044371916822+0.03*-0.023728010671831

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14922173189121  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.14922173189121  y  4.74677124513159  z   ${z_new}
set                atom          288751    x  1.14922173189121  y  4.74677124513159  z   31.303725351362
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01573298713392  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01573298713392  0.69210448237577  ${new_z}
fix                hold    carbon   planeforce   -0.01573298713392  0.69210448237577  -0.0164311312504992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4463   -1152448.6            0   -1152448.6  0.043568647 0.0021759125  0.049935323 
    4657   -1152448.6            0   -1152448.6 -2.3389688e-06 -1.4385787e-07 -3.8199262e-06 
Loop time of 2.25026 on 104 procs for 194 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.56617948  -1152448.57147787  -1152448.57147787
  Force two-norm initial, final = 0.36499409 0.00020080093
  Force max component initial, final = 0.32684042 9.1700418e-05
  Final line search alpha, max atom move = 1.0000000 9.1700418e-05
  Iterations, force evaluations = 194 388

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60218    | 1.6313     | 2.1148     |  34.1 | 72.50
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038083   | 0.36706    | 1.1126     |  51.1 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3499e-05 | 0.0031971  | 0.0068602  |   2.7 |  0.14
Other   |            | 0.2487     |            |       | 11.05

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.07 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115488 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15890353451935-${x_0}
variable           new_x         equal     1.15890353451935-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.74723367713701-${y_0}
variable           new_y         equal     4.74723367713701-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3139332661359-${z_0}
variable           new_z         equal     31.3139332661359-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00673277936542016*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00673277936542016*-0.00673277936542016+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00673277936542016*-0.00673277936542016+0.72255072187467*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00673277936542016*-0.00673277936542016+0.72255072187467*0.72255072187467+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00673277936542016*-0.00673277936542016+0.72255072187467*0.72255072187467+-0.00693505679679873*${new_z})
variable           module        equal     sqrt(-0.00673277936542016*-0.00673277936542016+0.72255072187467*0.72255072187467+-0.00693505679679873*-0.00693505679679873)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00673277936542016/${module}
variable           unitx         equal     -0.00673277936542016/0.722615368652207
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.72255072187467/${module}
variable           unity         equal     0.72255072187467/0.722615368652207
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00693505679679873/${module}
variable           unitz         equal     -0.00693505679679873/0.722615368652207
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33896876805955e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33896876805955e-06*-2.33896876805955e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33896876805955e-06*-2.33896876805955e-06+-1.4385786749223e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33896876805955e-06*-2.33896876805955e-06+-1.4385786749223e-07*-1.4385786749223e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-2.33896876805955e-06*-2.33896876805955e-06+-1.4385786749223e-07*-1.4385786749223e-07+-3.81992624456669e-06*${fz})
variable           f_module      equal     sqrt(-2.33896876805955e-06*-2.33896876805955e-06+-1.4385786749223e-07*-1.4385786749223e-07+-3.81992624456669e-06*-3.81992624456669e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00931723799063099*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00931723799063099*-0.00931723799063099+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00931723799063099*-0.00931723799063099+0.999910537776608*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00931723799063099*-0.00931723799063099+0.999910537776608*0.999910537776608+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00931723799063099*-0.00931723799063099+0.999910537776608*0.999910537776608+-0.00959716205556729*${unitz})
variable           dir_module    equal     sqrt(-0.00931723799063099*-0.00931723799063099+0.999910537776608*0.999910537776608+-0.00959716205556729*-0.00959716205556729)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33896876805955e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33896876805955e-06*-0.00931723799063099+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33896876805955e-06*-0.00931723799063099+-1.4385786749223e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -2.33896876805955e-06*-0.00931723799063099+-1.4385786749223e-07*0.999910537776608+${fz}*${unitz}
variable           dot      equal     -2.33896876805955e-06*-0.00931723799063099+-1.4385786749223e-07*0.999910537776608+-3.81992624456669e-06*${unitz}
variable           dot      equal     -2.33896876805955e-06*-0.00931723799063099+-1.4385786749223e-07*0.999910537776608+-3.81992624456669e-06*-0.00959716205556729
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.53918177734668e-08/${f_module}*${dir_module}
variable           cos      equal     -8.53918177734668e-08/4.48144022585673e-06*${dir_module}
variable           cos      equal     -8.53918177734668e-08/4.48144022585673e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.01905454797339)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58985202799759/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.0918112545767-90.0)
print              "The dot product: ${dot}"
The dot product: -8.53918177734668e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.0918112545767

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00673277936542016^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00673277936542016^2+0.72255072187467^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00673277936542016^2+0.72255072187467^2+-0.00693505679679873^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00673277936542016/${norm}
variable           unit_x        equal     -0.00673277936542016/0.722615368652207
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.72255072187467/${norm}
variable           unit_y        equal     0.72255072187467/0.722615368652207
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00693505679679873/${norm}
variable           unit_z        equal     -0.00693505679679873/0.722615368652207
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15890353451935+${delta}*${unit_x}
variable           x_new         equal     1.15890353451935+0.03*${unit_x}
variable           x_new         equal     1.15890353451935+0.03*-0.00931723799063099
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.74723367713701+${delta}*${unit_y}
variable           y_new         equal     4.74723367713701+0.03*${unit_y}
variable           y_new         equal     4.74723367713701+0.03*0.999910537776608
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3139332661359+${delta}*${unit_z}
variable           z_new         equal     31.3139332661359+0.03*${unit_z}
variable           z_new         equal     31.3139332661359+0.03*-0.00959716205556729

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15862401737963  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15862401737963  y  4.77723099327031  z   ${z_new}
set                atom          288751    x  1.15862401737963  y  4.77723099327031  z   31.3136453512742
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00673277936542016  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00673277936542016  0.72255072187467  ${new_z}
fix                hold    carbon   planeforce   -0.00673277936542016  0.72255072187467  -0.00693505679679873
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4657   -1152448.5            0   -1152448.5  0.016304487 0.00033468487  0.019041269 
    4854   -1152448.5            0   -1152448.5 9.9243807e-07 1.7800814e-08 8.9114259e-07 
Loop time of 2.26861 on 104 procs for 197 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.51712381  -1152448.52242546  -1152448.52242546
  Force two-norm initial, final = 0.37088952 0.00013522204
  Force max component initial, final = 0.33384238 5.7875856e-05
  Final line search alpha, max atom move = 1.0000000 5.7875856e-05
  Iterations, force evaluations = 197 394

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60112    | 1.6509     | 2.139      |  34.5 | 72.77
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035701   | 0.37243    | 1.128      |  51.7 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3851e-05 | 0.0032475  | 0.006981   |   2.7 |  0.14
Other   |            | 0.2421     |            |       | 10.67

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 4 26 34
Nghost:        3879.10 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115489 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238164
Ave neighs/atom = 28.530339
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16254000711538-${x_0}
variable           new_x         equal     1.16254000711538-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.7773068474825-${y_0}
variable           new_y         equal     4.7773068474825-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3177466905539-${z_0}
variable           new_z         equal     31.3177466905539-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0030963067693901*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0030963067693901*-0.0030963067693901+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0030963067693901*-0.0030963067693901+0.75262389222016*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0030963067693901*-0.0030963067693901+0.75262389222016*0.75262389222016+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0030963067693901*-0.0030963067693901+0.75262389222016*0.75262389222016+-0.00312163237880014*${new_z})
variable           module        equal     sqrt(-0.0030963067693901*-0.0030963067693901+0.75262389222016*0.75262389222016+-0.00312163237880014*-0.00312163237880014)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0030963067693901/${module}
variable           unitx         equal     -0.0030963067693901/0.752636734982383
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.75262389222016/${module}
variable           unity         equal     0.75262389222016/0.752636734982383
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00312163237880014/${module}
variable           unitz         equal     -0.00312163237880014/0.752636734982383
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.92438073811319e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.92438073811319e-07*9.92438073811319e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.92438073811319e-07*9.92438073811319e-07+1.78008141763965e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(9.92438073811319e-07*9.92438073811319e-07+1.78008141763965e-08*1.78008141763965e-08+${fz}*${fz})
variable           f_module      equal     sqrt(9.92438073811319e-07*9.92438073811319e-07+1.78008141763965e-08*1.78008141763965e-08+8.91142590286456e-07*${fz})
variable           f_module      equal     sqrt(9.92438073811319e-07*9.92438073811319e-07+1.78008141763965e-08*1.78008141763965e-08+8.91142590286456e-07*8.91142590286456e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00411394584594994*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00411394584594994*-0.00411394584594994+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00411394584594994*-0.00411394584594994+0.999982936306951*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00411394584594994*-0.00411394584594994+0.999982936306951*0.999982936306951+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00411394584594994*-0.00411394584594994+0.999982936306951*0.999982936306951+-0.00414759502653456*${unitz})
variable           dir_module    equal     sqrt(-0.00411394584594994*-0.00411394584594994+0.999982936306951*0.999982936306951+-0.00414759502653456*-0.00414759502653456)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.92438073811319e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.92438073811319e-07*-0.00411394584594994+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     9.92438073811319e-07*-0.00411394584594994+1.78008141763965e-08*${unity}+${fz}*${unitz}
variable           dot      equal     9.92438073811319e-07*-0.00411394584594994+1.78008141763965e-08*0.999982936306951+${fz}*${unitz}
variable           dot      equal     9.92438073811319e-07*-0.00411394584594994+1.78008141763965e-08*0.999982936306951+8.91142590286456e-07*${unitz}
variable           dot      equal     9.92438073811319e-07*-0.00411394584594994+1.78008141763965e-08*0.999982936306951+8.91142590286456e-07*-0.00414759502653456
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.00215753622435e-08/${f_module}*${dir_module}
variable           cos      equal     1.00215753622435e-08/1.33393602378754e-06*${dir_module}
variable           cos      equal     1.00215753622435e-08/1.33393602378754e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00751278560855454)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56328347051184/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.5695450428925-90.0)
print              "The dot product: ${dot}"
The dot product: 1.00215753622435e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.5695450428925

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0030963067693901^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0030963067693901^2+0.75262389222016^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0030963067693901^2+0.75262389222016^2+-0.00312163237880014^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0030963067693901/${norm}
variable           unit_x        equal     -0.0030963067693901/0.752636734982383
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.75262389222016/${norm}
variable           unit_y        equal     0.75262389222016/0.752636734982383
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00312163237880014/${norm}
variable           unit_z        equal     -0.00312163237880014/0.752636734982383
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16254000711538+${delta}*${unit_x}
variable           x_new         equal     1.16254000711538+0.03*${unit_x}
variable           x_new         equal     1.16254000711538+0.03*-0.00411394584594994
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.7773068474825+${delta}*${unit_y}
variable           y_new         equal     4.7773068474825+0.03*${unit_y}
variable           y_new         equal     4.7773068474825+0.03*0.999982936306951
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3177466905539+${delta}*${unit_z}
variable           z_new         equal     31.3177466905539+0.03*${unit_z}
variable           z_new         equal     31.3177466905539+0.03*-0.00414759502653456

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16241658874  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16241658874  y  4.80730633557171  z   ${z_new}
set                atom          288751    x  1.16241658874  y  4.80730633557171  z   31.3176222627031
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0030963067693901  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0030963067693901  0.75262389222016  ${new_z}
fix                hold    carbon   planeforce   -0.0030963067693901  0.75262389222016  -0.00312163237880014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4854   -1152448.5            0   -1152448.5 0.0061846644 5.6372391e-05 0.0074568646 
    5000   -1152448.5            0   -1152448.5 7.008103e-07 6.6176688e-09 9.0039172e-07 
    5050   -1152448.5            0   -1152448.5 8.0106702e-07 6.7979272e-09 8.4440857e-07 
Loop time of 2.26526 on 104 procs for 196 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.46275908  -1152448.46830921  -1152448.46830921
  Force two-norm initial, final = 0.37931376 9.2189463e-05
  Force max component initial, final = 0.34026768 3.8982286e-05
  Final line search alpha, max atom move = 1.0000000 3.8982286e-05
  Iterations, force evaluations = 196 392

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60054    | 1.6445     | 2.1389     |  34.4 | 72.60
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035872   | 0.36941    | 1.1152     |  51.6 | 16.31
Output  | 0.00010059 | 0.0001071  | 0.00027812 |   0.0 |  0.00
Modify  | 2.4704e-05 | 0.0032262  | 0.0069313  |   2.7 |  0.14
Other   |            | 0.248      |            |       | 10.95

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.1 ave      115487 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238159
Ave neighs/atom = 28.530322
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16408931217568-${x_0}
variable           new_x         equal     1.16408931217568-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.80732041192782-${y_0}
variable           new_y         equal     4.80732041192782-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3193569118607-${z_0}
variable           new_z         equal     31.3193569118607-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00154700170909017*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00154700170909017*-0.00154700170909017+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00154700170909017*-0.00154700170909017+0.78263745666548*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00154700170909017*-0.00154700170909017+0.78263745666548*0.78263745666548+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00154700170909017*-0.00154700170909017+0.78263745666548*0.78263745666548+-0.00151141107199848*${new_z})
variable           module        equal     sqrt(-0.00154700170909017*-0.00154700170909017+0.78263745666548*0.78263745666548+-0.00151141107199848*-0.00151141107199848)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00154700170909017/${module}
variable           unitx         equal     -0.00154700170909017/0.782640445002383
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.78263745666548/${module}
variable           unity         equal     0.78263745666548/0.782640445002383
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00151141107199848/${module}
variable           unitz         equal     -0.00151141107199848/0.782640445002383
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.01067019960252e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.01067019960252e-07*8.01067019960252e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.01067019960252e-07*8.01067019960252e-07+6.79792718301326e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(8.01067019960252e-07*8.01067019960252e-07+6.79792718301326e-09*6.79792718301326e-09+${fz}*${fz})
variable           f_module      equal     sqrt(8.01067019960252e-07*8.01067019960252e-07+6.79792718301326e-09*6.79792718301326e-09+8.44408568393232e-07*${fz})
variable           f_module      equal     sqrt(8.01067019960252e-07*8.01067019960252e-07+6.79792718301326e-09*6.79792718301326e-09+8.44408568393232e-07*8.44408568393232e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00197664421634312*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00197664421634312*-0.00197664421634312+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00197664421634312*-0.00197664421634312+0.999996181724415*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00197664421634312*-0.00197664421634312+0.999996181724415*0.999996181724415+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00197664421634312*-0.00197664421634312+0.999996181724415*0.999996181724415+-0.0019311691360314*${unitz})
variable           dir_module    equal     sqrt(-0.00197664421634312*-0.00197664421634312+0.999996181724415*0.999996181724415+-0.0019311691360314*-0.0019311691360314)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.01067019960252e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.01067019960252e-07*-0.00197664421634312+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     8.01067019960252e-07*-0.00197664421634312+6.79792718301326e-09*${unity}+${fz}*${unitz}
variable           dot      equal     8.01067019960252e-07*-0.00197664421634312+6.79792718301326e-09*0.999996181724415+${fz}*${unitz}
variable           dot      equal     8.01067019960252e-07*-0.00197664421634312+6.79792718301326e-09*0.999996181724415+8.44408568393232e-07*${unitz}
variable           dot      equal     8.01067019960252e-07*-0.00197664421634312+6.79792718301326e-09*0.999996181724415+8.44408568393232e-07*-0.0019311691360314
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.58378096926475e-09/${f_module}*${dir_module}
variable           cos      equal     3.58378096926475e-09/1.16395034802086e-06*${dir_module}
variable           cos      equal     3.58378096926475e-09/1.16395034802086e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00307898096800992)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56771734096201/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.823587106595-90.0)
print              "The dot product: ${dot}"
The dot product: 3.58378096926475e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.823587106595

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00154700170909017^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00154700170909017^2+0.78263745666548^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00154700170909017^2+0.78263745666548^2+-0.00151141107199848^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00154700170909017/${norm}
variable           unit_x        equal     -0.00154700170909017/0.782640445002383
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     0.78263745666548/${norm}
variable           unit_y        equal     0.78263745666548/0.782640445002383
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00151141107199848/${norm}
variable           unit_z        equal     -0.00151141107199848/0.782640445002383
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16408931217568+${delta}*${unit_x}
variable           x_new         equal     1.16408931217568+0.03*${unit_x}
variable           x_new         equal     1.16408931217568+0.03*-0.00197664421634312
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.80732041192782+${delta}*${unit_y}
variable           y_new         equal     4.80732041192782+0.03*${unit_y}
variable           y_new         equal     4.80732041192782+0.03*0.999996181724415
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3193569118607+${delta}*${unit_z}
variable           z_new         equal     31.3193569118607+0.03*${unit_z}
variable           z_new         equal     31.3193569118607+0.03*-0.0019311691360314

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16403001284919  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16403001284919  y  4.83732029737955  z   ${z_new}
set                atom          288751    x  1.16403001284919  y  4.83732029737955  z   31.3192989767866
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00154700170909017  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00154700170909017  0.78263745666548  ${new_z}
fix                hold    carbon   planeforce   -0.00154700170909017  0.78263745666548  -0.00151141107199848
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5050   -1152448.4            0   -1152448.4 0.0023443921 1.0381615e-05 0.0029762001 
    5218   -1152448.4            0   -1152448.4 -9.3450322e-08 6.8001016e-11 1.3086303e-07 
Loop time of 1.94901 on 104 procs for 168 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.40331725  -1152448.40904418  -1152448.40904418
  Force two-norm initial, final = 0.38620959 5.8571367e-05
  Force max component initial, final = 0.34690242 2.4608675e-05
  Final line search alpha, max atom move = 1.0000000 2.4608675e-05
  Iterations, force evaluations = 168 336

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51227    | 1.4119     | 1.8396     |  32.0 | 72.44
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030263   | 0.32108    | 0.96859    |  47.6 | 16.47
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0202e-05 | 0.0027801  | 0.0060334  |   2.5 |  0.14
Other   |            | 0.2132     |            |       | 10.94

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.0 ave      115507 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238154
Ave neighs/atom = 28.530305
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16478655761785-${x_0}
variable           new_x         equal     1.16478655761785-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.83732328315633-${y_0}
variable           new_y         equal     4.83732328315633-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3200707090539-${z_0}
variable           new_z         equal     31.3200707090539-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000849756266920076*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000849756266920076*-0.000849756266920076+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000849756266920076*-0.000849756266920076+0.81264032789399*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000849756266920076*-0.000849756266920076+0.81264032789399*0.81264032789399+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000849756266920076*-0.000849756266920076+0.81264032789399*0.81264032789399+-0.000797613878798842*${new_z})
variable           module        equal     sqrt(-0.000849756266920076*-0.000849756266920076+0.81264032789399*0.81264032789399+-0.000797613878798842*-0.000797613878798842)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000849756266920076/${module}
variable           unitx         equal     -0.000849756266920076/0.812641163609907
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     0.81264032789399/${module}
variable           unity         equal     0.81264032789399/0.812641163609907
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.000797613878798842/${module}
variable           unitz         equal     -0.000797613878798842/0.812641163609907
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.34503223595498e-08*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.34503223595498e-08*-9.34503223595498e-08+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.34503223595498e-08*-9.34503223595498e-08+6.80010163926283e-11*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-9.34503223595498e-08*-9.34503223595498e-08+6.80010163926283e-11*6.80010163926283e-11+${fz}*${fz})
variable           f_module      equal     sqrt(-9.34503223595498e-08*-9.34503223595498e-08+6.80010163926283e-11*6.80010163926283e-11+1.30863026510859e-07*${fz})
variable           f_module      equal     sqrt(-9.34503223595498e-08*-9.34503223595498e-08+6.80010163926283e-11*6.80010163926283e-11+1.30863026510859e-07*1.30863026510859e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0010456721920722*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0010456721920722*-0.0010456721920722+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0010456721920722*-0.0010456721920722+0.999998971605237*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0010456721920722*-0.0010456721920722+0.999998971605237*0.999998971605237+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0010456721920722*-0.0010456721920722+0.999998971605237*0.999998971605237+-0.000981508093013267*${unitz})
variable           dir_module    equal     sqrt(-0.0010456721920722*-0.0010456721920722+0.999998971605237*0.999998971605237+-0.000981508093013267*-0.000981508093013267)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.34503223595498e-08*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.34503223595498e-08*-0.0010456721920722+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -9.34503223595498e-08*-0.0010456721920722+6.80010163926283e-11*${unity}+${fz}*${unitz}
variable           dot      equal     -9.34503223595498e-08*-0.0010456721920722+6.80010163926283e-11*0.999998971605237+${fz}*${unitz}
variable           dot      equal     -9.34503223595498e-08*-0.0010456721920722+6.80010163926283e-11*0.999998971605237+1.30863026510859e-07*${unitz}
variable           dot      equal     -9.34503223595498e-08*-0.0010456721920722+6.80010163926283e-11*0.999998971605237+1.30863026510859e-07*-0.000981508093013267
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.72762302956855e-11/${f_module}*${dir_module}
variable           cos      equal     3.72762302956855e-11/1.60804536878857e-07*${dir_module}
variable           cos      equal     3.72762302956855e-11/1.60804536878857e-07*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000231810812177319)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57056451598064/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9867182186976-90.0)
print              "The dot product: ${dot}"
The dot product: 3.72762302956855e-11
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9867182186976

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5218   -1152448.4            0   -1152448.4 0.0040759814   -2.0621108 0.0039824307 
    5456   -1152449.3            0   -1152449.3 8.8483813e-06 4.6183156e-07 -8.0423906e-06 
Loop time of 2.73762 on 104 procs for 238 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.40904418  -1152449.34502404  -1152449.34502404
  Force two-norm initial, final = 2.0621186 5.2642408e-05
  Force max component initial, final = 2.0621108 1.1917965e-05
  Final line search alpha, max atom move = 1.0000000 1.1917965e-05
  Iterations, force evaluations = 238 469

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.73746    | 1.971      | 2.5601     |  37.2 | 72.00
Neigh   | 5.0148e-05 | 0.014797   | 0.021456   |   5.0 |  0.54
Comm    | 0.046084   | 0.44051    | 1.3292     |  56.3 | 16.09
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7068e-05 | 0.0025157  | 0.0064508  |   3.1 |  0.09
Other   |            | 0.3088     |            |       | 11.28

Nlocal:        2776.45 ave        3962 max           0 min
Histogram: 8 4 4 0 6 10 8 3 27 34
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.2 ave      115527 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238177
Ave neighs/atom = 28.530384
Neighbor list builds = 5
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563725232497-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563725232497-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563725232497-1.16563631388477)^2+(4.02468234809437-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563725232497-1.16563631388477)^2+(4.02468234809437-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563725232497-1.16563631388477)^2+(4.02468234809437-4.02468295526234)^2+(31.3208585687304-${z_0})^2)
variable                displacement      equal     sqrt((1.16563725232497-1.16563631388477)^2+(4.02468234809437-4.02468295526234)^2+(31.3208585687304-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 14
14
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.341 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.82944 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4954     | 1.3252     | 1.7163     |  30.6 | 72.44
Neigh   | 3.0167e-05 | 0.0088809  | 0.01284    |   3.9 |  0.49
Comm    | 0.029067   | 0.29655    | 0.89963    |  46.1 | 16.21
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.801e-05  | 0.0016838  | 0.0043744  |   2.6 |  0.09
Other   |            | 0.1972     |            |       | 10.78

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,14)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,14)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,14)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.15039710375598
variable                y_1    equal     $y
variable                y_1    equal     3.99754757594792
variable                z_1    equal     $z
variable                z_1    equal     31.3077013839125

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.15039710375598  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.15039710375598  y  3.99754757594792  z  ${z_1}
set                atom        288751    x  1.15039710375598  y  3.99754757594792  z  31.3077013839125
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.15039710375598-${x_0}
variable           vector_x          equal     1.15039710375598-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     3.99754757594792-${y_0}
variable           vector_y          equal     3.99754757594792-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.3077013839125-${z_0}
variable           vector_z          equal     31.3077013839125-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.0152392101287901  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   -0.0152392101287901  -0.0271353793144198  ${vector_z}
fix                hold    carbon   planeforce   -0.0152392101287901  -0.0271353793144198  -0.0131669390201985
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3  0.019283917 -0.015522085 0.0096701285 
     387   -1152449.3            0   -1152449.3 -3.0933668e-06 4.5175077e-07 2.649214e-06 
Loop time of 2.66471 on 104 procs for 229 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33872513  -1152449.34260671  -1152449.34260671
  Force two-norm initial, final = 0.27327203 3.7766719e-05
  Force max component initial, final = 0.14937221 8.6931683e-06
  Final line search alpha, max atom move = 1.0000000 8.6931683e-06
  Iterations, force evaluations = 229 458

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.70627    | 1.9344     | 2.5014     |  37.4 | 72.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.044532   | 0.4405     | 1.3305     |  55.3 | 16.53
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.7105e-05 | 0.0037779  | 0.008235   |   2.9 |  0.14
Other   |            | 0.286      |            |       | 10.73

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15150179264652-${x_0}
variable           new_x         equal     1.15150179264652-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.99679396835456-${y_0}
variable           new_y         equal     3.99679396835456-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3079759231782-${z_0}
variable           new_z         equal     31.3079759231782-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01413452123825^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01413452123825^2+-0.0278889869077799^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01413452123825^2+-0.0278889869077799^2+-0.0128923997544987^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.01413452123825/${norm}
variable           unit_x        equal     -0.01413452123825/0.033820027392163
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0278889869077799/${norm}
variable           unit_y        equal     -0.0278889869077799/0.033820027392163
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0128923997544987/${norm}
variable           unit_z        equal     -0.0128923997544987/0.033820027392163
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15150179264652+${delta}*${unit_x}
variable           x_new         equal     1.15150179264652+0.03*${unit_x}
variable           x_new         equal     1.15150179264652+0.03*-0.417933465113791
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.99679396835456+${delta}*${unit_y}
variable           y_new         equal     3.99679396835456+0.03*${unit_y}
variable           y_new         equal     3.99679396835456+0.03*-0.824629341200431
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3079759231782+${delta}*${unit_z}
variable           z_new         equal     31.3079759231782+0.03*${unit_z}
variable           z_new         equal     31.3079759231782+0.03*-0.381206070740387

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13896378869311  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13896378869311  y  3.97205508811855  z   ${z_new}
set                atom          288751    x  1.13896378869311  y  3.97205508811855  z   31.296539741056
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01413452123825  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01413452123825  -0.0278889869077799  ${new_z}
fix                hold    carbon   planeforce   -0.01413452123825  -0.0278889869077799  -0.0128923997544987
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     387   -1152449.3            0   -1152449.3  0.017173683 -0.014880005  0.013360311 
     566   -1152449.3            0   -1152449.3 -3.8657129e-05 -2.0207606e-06 4.6752892e-05 
Loop time of 2.07948 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33343743  -1152449.33645024  -1152449.33645024
  Force two-norm initial, final = 0.24126372 0.00019444065
  Force max component initial, final = 0.14027109 4.8356244e-05
  Final line search alpha, max atom move = 1.0000000 4.8356244e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5473     | 1.5037     | 1.9641     |  33.0 | 72.31
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033789   | 0.33833    | 1.0218     |  49.0 | 16.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1323e-05 | 0.0029463  | 0.0063298  |   2.6 |  0.14
Other   |            | 0.2345     |            |       | 11.28

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115458 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1407452512254-${x_0}
variable           new_x         equal     1.1407452512254-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.97078959568956-${y_0}
variable           new_y         equal     3.97078959568956-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2973241707958-${z_0}
variable           new_z         equal     31.2973241707958-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0248910626593701*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0248910626593701*-0.0248910626593701+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0248910626593701*-0.0248910626593701+-0.05389335957278*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0248910626593701*-0.0248910626593701+-0.05389335957278*-0.05389335957278+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0248910626593701*-0.0248910626593701+-0.05389335957278*-0.05389335957278+-0.0235441521368998*${new_z})
variable           module        equal     sqrt(-0.0248910626593701*-0.0248910626593701+-0.05389335957278*-0.05389335957278+-0.0235441521368998*-0.0235441521368998)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0248910626593701/${module}
variable           unitx         equal     -0.0248910626593701/0.0638622447632334
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.05389335957278/${module}
variable           unity         equal     -0.05389335957278/0.0638622447632334
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0235441521368998/${module}
variable           unitz         equal     -0.0235441521368998/0.0638622447632334
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.86571288635303e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.86571288635303e-05*-3.86571288635303e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.86571288635303e-05*-3.86571288635303e-05+-2.02076063239025e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.86571288635303e-05*-3.86571288635303e-05+-2.02076063239025e-06*-2.02076063239025e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.86571288635303e-05*-3.86571288635303e-05+-2.02076063239025e-06*-2.02076063239025e-06+4.67528921867282e-05*${fz})
variable           f_module      equal     sqrt(-3.86571288635303e-05*-3.86571288635303e-05+-2.02076063239025e-06*-2.02076063239025e-06+4.67528921867282e-05*4.67528921867282e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.389761787291578*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.389761787291578*-0.389761787291578+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.389761787291578*-0.389761787291578+-0.843900175645052*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.389761787291578*-0.389761787291578+-0.843900175645052*-0.843900175645052+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.389761787291578*-0.389761787291578+-0.843900175645052*-0.843900175645052+-0.36867091384258*${unitz})
variable           dir_module    equal     sqrt(-0.389761787291578*-0.389761787291578+-0.843900175645052*-0.843900175645052+-0.36867091384258*-0.36867091384258)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.86571288635303e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.86571288635303e-05*-0.389761787291578+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.86571288635303e-05*-0.389761787291578+-2.02076063239025e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.86571288635303e-05*-0.389761787291578+-2.02076063239025e-06*-0.843900175645052+${fz}*${unitz}
variable           dot      equal     -3.86571288635303e-05*-0.389761787291578+-2.02076063239025e-06*-0.843900175645052+4.67528921867282e-05*${unitz}
variable           dot      equal     -3.86571288635303e-05*-0.389761787291578+-2.02076063239025e-06*-0.843900175645052+4.67528921867282e-05*-0.36867091384258
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.64039597243549e-07/${f_module}*${dir_module}
variable           cos      equal     -4.64039597243549e-07/6.06983526409806e-05*${dir_module}
variable           cos      equal     -4.64039597243549e-07/6.06983526409806e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00764501138916003)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57844141265633/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.4380311538753-90.0)
print              "The dot product: ${dot}"
The dot product: -4.64039597243549e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.4380311538753

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0248910626593701^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0248910626593701^2+-0.05389335957278^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0248910626593701^2+-0.05389335957278^2+-0.0235441521368998^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0248910626593701/${norm}
variable           unit_x        equal     -0.0248910626593701/0.0638622447632334
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.05389335957278/${norm}
variable           unit_y        equal     -0.05389335957278/0.0638622447632334
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0235441521368998/${norm}
variable           unit_z        equal     -0.0235441521368998/0.0638622447632334
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1407452512254+${delta}*${unit_x}
variable           x_new         equal     1.1407452512254+0.03*${unit_x}
variable           x_new         equal     1.1407452512254+0.03*-0.389761787291578
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.97078959568956+${delta}*${unit_y}
variable           y_new         equal     3.97078959568956+0.03*${unit_y}
variable           y_new         equal     3.97078959568956+0.03*-0.843900175645052
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2973241707958+${delta}*${unit_z}
variable           z_new         equal     31.2973241707958+0.03*${unit_z}
variable           z_new         equal     31.2973241707958+0.03*-0.36867091384258

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12905239760665  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12905239760665  y  3.94547259042021  z   ${z_new}
set                atom          288751    x  1.12905239760665  y  3.94547259042021  z   31.2862640433805
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0248910626593701  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0248910626593701  -0.05389335957278  ${new_z}
fix                hold    carbon   planeforce   -0.0248910626593701  -0.05389335957278  -0.0235441521368998
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     566   -1152449.3            0   -1152449.3 0.0087637957 -0.013240582  0.021042985 
     753   -1152449.3            0   -1152449.3 -2.503574e-05 3.5310246e-06 1.8385346e-05 
Loop time of 2.20763 on 104 procs for 187 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32389933  -1152449.32684573  -1152449.32684573
  Force two-norm initial, final = 0.24026902 0.00011281499
  Force max component initial, final = 0.14820825 2.5035740e-05
  Final line search alpha, max atom move = 1.0000000 2.5035740e-05
  Iterations, force evaluations = 187 374

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57186    | 1.5797     | 2.0497     |  33.9 | 71.56
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033754   | 0.36138    | 1.0751     |  49.4 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1841e-05 | 0.0030843  | 0.0066694  |   2.6 |  0.14
Other   |            | 0.2635     |            |       | 11.94

Nlocal:        2776.45 ave        3959 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115406 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.12952477997303-${x_0}
variable           new_x         equal     1.12952477997303-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.94420197343631-${y_0}
variable           new_y         equal     3.94420197343631-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2886731222287-${z_0}
variable           new_z         equal     31.2886731222287-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0361115339117402*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0361115339117402*-0.0361115339117402+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0361115339117402*-0.0361115339117402+-0.0804809818260299*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0361115339117402*-0.0361115339117402+-0.0804809818260299*-0.0804809818260299+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0361115339117402*-0.0361115339117402+-0.0804809818260299*-0.0804809818260299+-0.0321952007039989*${new_z})
variable           module        equal     sqrt(-0.0361115339117402*-0.0361115339117402+-0.0804809818260299*-0.0804809818260299+-0.0321952007039989*-0.0321952007039989)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0361115339117402/${module}
variable           unitx         equal     -0.0361115339117402/0.0939029406648764
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0804809818260299/${module}
variable           unity         equal     -0.0804809818260299/0.0939029406648764
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0321952007039989/${module}
variable           unitz         equal     -0.0321952007039989/0.0939029406648764
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50357395770806e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50357395770806e-05*-2.50357395770806e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50357395770806e-05*-2.50357395770806e-05+3.53102459559173e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50357395770806e-05*-2.50357395770806e-05+3.53102459559173e-06*3.53102459559173e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.50357395770806e-05*-2.50357395770806e-05+3.53102459559173e-06*3.53102459559173e-06+1.83853460439319e-05*${fz})
variable           f_module      equal     sqrt(-2.50357395770806e-05*-2.50357395770806e-05+3.53102459559173e-06*3.53102459559173e-06+1.83853460439319e-05*1.83853460439319e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.384562332724127*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.384562332724127*-0.384562332724127+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.384562332724127*-0.384562332724127+-0.857065617500232*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.384562332724127*-0.384562332724127+-0.857065617500232*-0.857065617500232+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.384562332724127*-0.384562332724127+-0.857065617500232*-0.857065617500232+-0.342856149935688*${unitz})
variable           dir_module    equal     sqrt(-0.384562332724127*-0.384562332724127+-0.857065617500232*-0.857065617500232+-0.342856149935688*-0.342856149935688)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50357395770806e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50357395770806e-05*-0.384562332724127+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50357395770806e-05*-0.384562332724127+3.53102459559173e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.50357395770806e-05*-0.384562332724127+3.53102459559173e-06*-0.857065617500232+${fz}*${unitz}
variable           dot      equal     -2.50357395770806e-05*-0.384562332724127+3.53102459559173e-06*-0.857065617500232+1.83853460439319e-05*${unitz}
variable           dot      equal     -2.50357395770806e-05*-0.384562332724127+3.53102459559173e-06*-0.857065617500232+1.83853460439319e-05*-0.342856149935688
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.97953677948706e-07/${f_module}*${dir_module}
variable           cos      equal     2.97953677948706e-07/3.12614353480642e-05*${dir_module}
variable           cos      equal     2.97953677948706e-07/3.12614353480642e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00953102999370616)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56126515249465/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.4539039387923-90.0)
print              "The dot product: ${dot}"
The dot product: 2.97953677948706e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.4539039387923

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0361115339117402^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0361115339117402^2+-0.0804809818260299^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0361115339117402^2+-0.0804809818260299^2+-0.0321952007039989^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0361115339117402/${norm}
variable           unit_x        equal     -0.0361115339117402/0.0939029406648764
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0804809818260299/${norm}
variable           unit_y        equal     -0.0804809818260299/0.0939029406648764
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0321952007039989/${norm}
variable           unit_z        equal     -0.0321952007039989/0.0939029406648764
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.12952477997303+${delta}*${unit_x}
variable           x_new         equal     1.12952477997303+0.03*${unit_x}
variable           x_new         equal     1.12952477997303+0.03*-0.384562332724127
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.94420197343631+${delta}*${unit_y}
variable           y_new         equal     3.94420197343631+0.03*${unit_y}
variable           y_new         equal     3.94420197343631+0.03*-0.857065617500232
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2886731222287+${delta}*${unit_z}
variable           z_new         equal     31.2886731222287+0.03*${unit_z}
variable           z_new         equal     31.2886731222287+0.03*-0.342856149935688

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11798790999131  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.11798790999131  y  3.9184900049113  z   ${z_new}
set                atom          288751    x  1.11798790999131  y  3.9184900049113  z   31.2783874377306
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0361115339117402  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0361115339117402  -0.0804809818260299  ${new_z}
fix                hold    carbon   planeforce   -0.0361115339117402  -0.0804809818260299  -0.0321952007039989
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     753   -1152449.3            0   -1152449.3 0.0014802364 -0.010907291  0.025605553 
     927   -1152449.3            0   -1152449.3 -2.4114732e-05 1.2262085e-06 2.3982876e-05 
Loop time of 2.0183 on 104 procs for 174 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.31135959  -1152449.31431762  -1152449.31431762
  Force two-norm initial, final = 0.24017639 0.00016717693
  Force max component initial, final = 0.15522048 4.2040991e-05
  Final line search alpha, max atom move = 1.0000000 4.2040991e-05
  Iterations, force evaluations = 174 348

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54015    | 1.4644     | 1.9003     |  32.4 | 72.56
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037828   | 0.32923    | 0.98937    |  48.2 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1023e-05 | 0.0028642  | 0.0061542  |   2.5 |  0.14
Other   |            | 0.2218     |            |       | 10.99

Nlocal:        2776.45 ave        3954 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115242 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.11676792565526-${x_0}
variable           new_x         equal     1.11676792565526-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.91749004231443-${y_0}
variable           new_y         equal     3.91749004231443-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2822555135487-${z_0}
variable           new_z         equal     31.2822555135487-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04886838822951*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04886838822951*-0.04886838822951+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04886838822951*-0.04886838822951+-0.10719291294791*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04886838822951*-0.04886838822951+-0.10719291294791*-0.10719291294791+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04886838822951*-0.04886838822951+-0.10719291294791*-0.10719291294791+-0.0386128093839986*${new_z})
variable           module        equal     sqrt(-0.04886838822951*-0.04886838822951+-0.10719291294791*-0.10719291294791+-0.0386128093839986*-0.0386128093839986)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.04886838822951/${module}
variable           unitx         equal     -0.04886838822951/0.123973339887789
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.10719291294791/${module}
variable           unity         equal     -0.10719291294791/0.123973339887789
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0386128093839986/${module}
variable           unitz         equal     -0.0386128093839986/0.123973339887789
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.4114731958852e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.4114731958852e-05*-2.4114731958852e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.4114731958852e-05*-2.4114731958852e-05+1.22620854511184e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.4114731958852e-05*-2.4114731958852e-05+1.22620854511184e-06*1.22620854511184e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.4114731958852e-05*-2.4114731958852e-05+1.22620854511184e-06*1.22620854511184e-06+2.39828755957264e-05*${fz})
variable           f_module      equal     sqrt(-2.4114731958852e-05*-2.4114731958852e-05+1.22620854511184e-06*1.22620854511184e-06+2.39828755957264e-05*2.39828755957264e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.394184655134256*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.394184655134256*-0.394184655134256+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.394184655134256*-0.394184655134256+-0.864644874816897*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.394184655134256*-0.394184655134256+-0.864644874816897*-0.864644874816897+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.394184655134256*-0.394184655134256+-0.864644874816897*-0.864644874816897+-0.311460588372854*${unitz})
variable           dir_module    equal     sqrt(-0.394184655134256*-0.394184655134256+-0.864644874816897*-0.864644874816897+-0.311460588372854*-0.311460588372854)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.4114731958852e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.4114731958852e-05*-0.394184655134256+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.4114731958852e-05*-0.394184655134256+1.22620854511184e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.4114731958852e-05*-0.394184655134256+1.22620854511184e-06*-0.864644874816897+${fz}*${unitz}
variable           dot      equal     -2.4114731958852e-05*-0.394184655134256+1.22620854511184e-06*-0.864644874816897+2.39828755957264e-05*${unitz}
variable           dot      equal     -2.4114731958852e-05*-0.394184655134256+1.22620854511184e-06*-0.864644874816897+2.39828755957264e-05*-0.311460588372854
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     9.75701822949554e-07/${f_module}*${dir_module}
variable           cos      equal     9.75701822949554e-07/3.40323699833478e-05*${dir_module}
variable           cos      equal     9.75701822949554e-07/3.40323699833478e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.028669817101394)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54212258067383/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.3571153644333-90.0)
print              "The dot product: ${dot}"
The dot product: 9.75701822949554e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.3571153644333

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04886838822951^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04886838822951^2+-0.10719291294791^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04886838822951^2+-0.10719291294791^2+-0.0386128093839986^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.04886838822951/${norm}
variable           unit_x        equal     -0.04886838822951/0.123973339887789
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.10719291294791/${norm}
variable           unit_y        equal     -0.10719291294791/0.123973339887789
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0386128093839986/${norm}
variable           unit_z        equal     -0.0386128093839986/0.123973339887789
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.11676792565526+${delta}*${unit_x}
variable           x_new         equal     1.11676792565526+0.03*${unit_x}
variable           x_new         equal     1.11676792565526+0.03*-0.394184655134256
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.91749004231443+${delta}*${unit_y}
variable           y_new         equal     3.91749004231443+0.03*${unit_y}
variable           y_new         equal     3.91749004231443+0.03*-0.864644874816897
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2822555135487+${delta}*${unit_z}
variable           z_new         equal     31.2822555135487+0.03*${unit_z}
variable           z_new         equal     31.2822555135487+0.03*-0.311460588372854

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10494238600123  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.10494238600123  y  3.89155069606992  z   ${z_new}
set                atom          288751    x  1.10494238600123  y  3.89155069606992  z   31.2729116958975
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04886838822951  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04886838822951  -0.10719291294791  ${new_z}
fix                hold    carbon   planeforce   -0.04886838822951  -0.10719291294791  -0.0386128093839986
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     927   -1152449.3            0   -1152449.3 -0.00024001405 -0.0089963441  0.025278488 
    1000   -1152449.3            0   -1152449.3 -0.00010694476 2.8704087e-05 5.5663997e-05 
    1115   -1152449.3            0   -1152449.3 5.7707846e-06 -2.6776318e-06 1.2985879e-07 
Loop time of 2.17426 on 104 procs for 188 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.29586982  -1152449.29882039  -1152449.29882039
  Force two-norm initial, final = 0.23976901 7.6559294e-05
  Force max component initial, final = 0.1610419 1.0445808e-05
  Final line search alpha, max atom move = 1.0000000 1.0445808e-05
  Iterations, force evaluations = 188 376

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58162    | 1.5837     | 2.0519     |  33.6 | 72.84
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033928   | 0.35549    | 1.0719     |  50.0 | 16.35
Output  | 0.00010368 | 0.00010642 | 0.00023465 |   0.0 |  0.00
Modify  | 2.2434e-05 | 0.0030967  | 0.0067244  |   2.6 |  0.14
Other   |            | 0.2319     |            |       | 10.67

Nlocal:        2776.45 ave        3951 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115127 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10304703007133-${x_0}
variable           new_x         equal     1.10304703007133-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.89079256957973-${y_0}
variable           new_y         equal     3.89079256957973-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2774150920256-${z_0}
variable           new_z         equal     31.2774150920256-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0625892838134401*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0625892838134401*-0.0625892838134401+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0625892838134401*-0.0625892838134401+-0.13389038568261*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0625892838134401*-0.0625892838134401+-0.13389038568261*-0.13389038568261+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0625892838134401*-0.0625892838134401+-0.13389038568261*-0.13389038568261+-0.043453230907101*${new_z})
variable           module        equal     sqrt(-0.0625892838134401*-0.0625892838134401+-0.13389038568261*-0.13389038568261+-0.043453230907101*-0.043453230907101)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0625892838134401/${module}
variable           unitx         equal     -0.0625892838134401/0.154052708845977
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.13389038568261/${module}
variable           unity         equal     -0.13389038568261/0.154052708845977
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.043453230907101/${module}
variable           unitz         equal     -0.043453230907101/0.154052708845977
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.77078464765938e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.77078464765938e-06*5.77078464765938e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.77078464765938e-06*5.77078464765938e-06+-2.67763184536353e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.77078464765938e-06*5.77078464765938e-06+-2.67763184536353e-06*-2.67763184536353e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.77078464765938e-06*5.77078464765938e-06+-2.67763184536353e-06*-2.67763184536353e-06+1.29858791211434e-07*${fz})
variable           f_module      equal     sqrt(5.77078464765938e-06*5.77078464765938e-06+-2.67763184536353e-06*-2.67763184536353e-06+1.29858791211434e-07*1.29858791211434e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.406284863682711*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.406284863682711*-0.406284863682711+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.406284863682711*-0.406284863682711+-0.869120619076387*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.406284863682711*-0.406284863682711+-0.869120619076387*-0.869120619076387+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.406284863682711*-0.406284863682711+-0.869120619076387*-0.869120619076387+-0.2820672952304*${unitz})
variable           dir_module    equal     sqrt(-0.406284863682711*-0.406284863682711+-0.869120619076387*-0.869120619076387+-0.2820672952304*-0.2820672952304)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.77078464765938e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.77078464765938e-06*-0.406284863682711+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.77078464765938e-06*-0.406284863682711+-2.67763184536353e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.77078464765938e-06*-0.406284863682711+-2.67763184536353e-06*-0.869120619076387+${fz}*${unitz}
variable           dot      equal     5.77078464765938e-06*-0.406284863682711+-2.67763184536353e-06*-0.869120619076387+1.29858791211434e-07*${unitz}
variable           dot      equal     5.77078464765938e-06*-0.406284863682711+-2.67763184536353e-06*-0.869120619076387+1.29858791211434e-07*-0.2820672952304
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.40263248144714e-08/${f_module}*${dir_module}
variable           cos      equal     -5.40263248144714e-08/6.36305988142662e-06*${dir_module}
variable           cos      equal     -5.40263248144714e-08/6.36305988142662e-06*0.999999999999997
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00849062020808114)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57928704902198/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.4864825486298-90.0)
print              "The dot product: ${dot}"
The dot product: -5.40263248144714e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.4864825486298

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0625892838134401^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0625892838134401^2+-0.13389038568261^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0625892838134401^2+-0.13389038568261^2+-0.043453230907101^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0625892838134401/${norm}
variable           unit_x        equal     -0.0625892838134401/0.154052708845977
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.13389038568261/${norm}
variable           unit_y        equal     -0.13389038568261/0.154052708845977
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.043453230907101/${norm}
variable           unit_z        equal     -0.043453230907101/0.154052708845977
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10304703007133+${delta}*${unit_x}
variable           x_new         equal     1.10304703007133+0.03*${unit_x}
variable           x_new         equal     1.10304703007133+0.03*-0.406284863682711
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.89079256957973+${delta}*${unit_y}
variable           y_new         equal     3.89079256957973+0.03*${unit_y}
variable           y_new         equal     3.89079256957973+0.03*-0.869120619076387
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2774150920256+${delta}*${unit_z}
variable           z_new         equal     31.2774150920256+0.03*${unit_z}
variable           z_new         equal     31.2774150920256+0.03*-0.2820672952304

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09085848416085  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09085848416085  y  3.86471895100744  z   ${z_new}
set                atom          288751    x  1.09085848416085  y  3.86471895100744  z   31.2689530731687
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0625892838134401  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0625892838134401  -0.13389038568261  ${new_z}
fix                hold    carbon   planeforce   -0.0625892838134401  -0.13389038568261  -0.043453230907101
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1115   -1152449.3            0   -1152449.3  0.002484033 -0.0078029854  0.020465012 
    1336   -1152449.3            0   -1152449.3 -6.9268045e-06 5.6959137e-07 8.2221947e-06 
Loop time of 2.54806 on 104 procs for 221 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.27729742  -1152449.28023512  -1152449.28023512
  Force two-norm initial, final = 0.23941204 3.2804078e-05
  Force max component initial, final = 0.16616377 8.6634452e-06
  Final line search alpha, max atom move = 1.0000000 8.6634452e-06
  Iterations, force evaluations = 221 442

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6769     | 1.8571     | 2.4071     |  36.7 | 72.88
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.04235    | 0.41558    | 1.2619     |  54.4 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6667e-05 | 0.0036368  | 0.0077888  |   2.8 |  0.14
Other   |            | 0.2717     |            |       | 10.66

Nlocal:        2776.45 ave        3947 max           0 min
Histogram: 8 4 4 0 4 12 8 1 27 36
Nghost:        3879.03 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115006 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.08904935796071-${x_0}
variable           new_x         equal     1.08904935796071-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.86407232129152-${y_0}
variable           new_y         equal     3.86407232129152-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2735513368899-${z_0}
variable           new_z         equal     31.2735513368899-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0765869559240602*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0765869559240602*-0.0765869559240602+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0765869559240602*-0.0765869559240602+-0.16061063397082*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0765869559240602*-0.0765869559240602+-0.16061063397082*-0.16061063397082+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0765869559240602*-0.0765869559240602+-0.16061063397082*-0.16061063397082+-0.0473169860428015*${new_z})
variable           module        equal     sqrt(-0.0765869559240602*-0.0765869559240602+-0.16061063397082*-0.16061063397082+-0.0473169860428015*-0.0473169860428015)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0765869559240602/${module}
variable           unitx         equal     -0.0765869559240602/0.184120163834376
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.16061063397082/${module}
variable           unity         equal     -0.16061063397082/0.184120163834376
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0473169860428015/${module}
variable           unitz         equal     -0.0473169860428015/0.184120163834376
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.92680451658019e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.92680451658019e-06*-6.92680451658019e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.92680451658019e-06*-6.92680451658019e-06+5.69591374896638e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-6.92680451658019e-06*-6.92680451658019e-06+5.69591374896638e-07*5.69591374896638e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-6.92680451658019e-06*-6.92680451658019e-06+5.69591374896638e-07*5.69591374896638e-07+8.22219470177606e-06*${fz})
variable           f_module      equal     sqrt(-6.92680451658019e-06*-6.92680451658019e-06+5.69591374896638e-07*5.69591374896638e-07+8.22219470177606e-06*8.22219470177606e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.415961806295988*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.415961806295988*-0.415961806295988+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.415961806295988*-0.415961806295988+-0.872314202996779*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.415961806295988*-0.415961806295988+-0.872314202996779*-0.872314202996779+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.415961806295988*-0.415961806295988+-0.872314202996779*-0.872314202996779+-0.256989702037009*${unitz})
variable           dir_module    equal     sqrt(-0.415961806295988*-0.415961806295988+-0.872314202996779*-0.872314202996779+-0.256989702037009*-0.256989702037009)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.92680451658019e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.92680451658019e-06*-0.415961806295988+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -6.92680451658019e-06*-0.415961806295988+5.69591374896638e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -6.92680451658019e-06*-0.415961806295988+5.69591374896638e-07*-0.872314202996779+${fz}*${unitz}
variable           dot      equal     -6.92680451658019e-06*-0.415961806295988+5.69591374896638e-07*-0.872314202996779+8.22219470177606e-06*${unitz}
variable           dot      equal     -6.92680451658019e-06*-0.415961806295988+5.69591374896638e-07*-0.872314202996779+8.22219470177606e-06*-0.256989702037009
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.714041058494e-07/${f_module}*${dir_module}
variable           cos      equal     2.714041058494e-07/1.07661293350575e-05*${dir_module}
variable           cos      equal     2.714041058494e-07/1.07661293350575e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0252090697968519)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54558458618531/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.5554736688921-90.0)
print              "The dot product: ${dot}"
The dot product: 2.714041058494e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.5554736688921

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0765869559240602^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0765869559240602^2+-0.16061063397082^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0765869559240602^2+-0.16061063397082^2+-0.0473169860428015^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0765869559240602/${norm}
variable           unit_x        equal     -0.0765869559240602/0.184120163834376
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.16061063397082/${norm}
variable           unit_y        equal     -0.16061063397082/0.184120163834376
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0473169860428015/${norm}
variable           unit_z        equal     -0.0473169860428015/0.184120163834376
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.08904935796071+${delta}*${unit_x}
variable           x_new         equal     1.08904935796071+0.03*${unit_x}
variable           x_new         equal     1.08904935796071+0.03*-0.415961806295988
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.86407232129152+${delta}*${unit_y}
variable           y_new         equal     3.86407232129152+0.03*${unit_y}
variable           y_new         equal     3.86407232129152+0.03*-0.872314202996779
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2735513368899+${delta}*${unit_z}
variable           z_new         equal     31.2735513368899+0.03*${unit_z}
variable           z_new         equal     31.2735513368899+0.03*-0.256989702037009

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07657050377183  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.07657050377183  y  3.83790289520162  z   ${z_new}
set                atom          288751    x  1.07657050377183  y  3.83790289520162  z   31.2658416458288
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0765869559240602  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0765869559240602  -0.16061063397082  ${new_z}
fix                hold    carbon   planeforce   -0.0765869559240602  -0.16061063397082  -0.0473169860428015
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1336   -1152449.3            0   -1152449.3 0.0097482996 -0.0073416996 0.0091418004 
    1459   -1152449.3            0   -1152449.3 -4.0136502e-05 7.4695041e-06 3.9610526e-05 
Loop time of 1.43109 on 104 procs for 123 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.25563461  -1152449.25850912  -1152449.25850912
  Force two-norm initial, final = 0.23912303 0.00018155582
  Force max component initial, final = 0.17086369 4.3068684e-05
  Final line search alpha, max atom move = 1.0000000 4.3068684e-05
  Iterations, force evaluations = 123 246

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.37694    | 1.039      | 1.3447     |  27.5 | 72.60
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02445    | 0.23601    | 0.71154    |  40.6 | 16.49
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.4984e-05 | 0.002033   | 0.0044526  |   2.1 |  0.14
Other   |            | 0.154      |            |       | 10.76

Nlocal:        2776.45 ave        3943 max           0 min
Histogram: 8 4 4 0 4 12 8 2 26 36
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114886 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07575123333836-${x_0}
variable           new_x         equal     1.07575123333836-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.8372060447781-${y_0}
variable           new_y         equal     3.8372060447781-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2695330689622-${z_0}
variable           new_z         equal     31.2695330689622-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08988508054641*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08988508054641*-0.08988508054641+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08988508054641*-0.08988508054641+-0.18747691048424*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08988508054641*-0.08988508054641+-0.18747691048424*-0.18747691048424+${new_z}*${new_z})
variable           module        equal     sqrt(-0.08988508054641*-0.08988508054641+-0.18747691048424*-0.18747691048424+-0.0513352539704997*${new_z})
variable           module        equal     sqrt(-0.08988508054641*-0.08988508054641+-0.18747691048424*-0.18747691048424+-0.0513352539704997*-0.0513352539704997)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.08988508054641/${module}
variable           unitx         equal     -0.08988508054641/0.214154682343782
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.18747691048424/${module}
variable           unity         equal     -0.18747691048424/0.214154682343782
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0513352539704997/${module}
variable           unitz         equal     -0.0513352539704997/0.214154682343782
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.01365016496577e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.01365016496577e-05*-4.01365016496577e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.01365016496577e-05*-4.01365016496577e-05+7.46950411125686e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.01365016496577e-05*-4.01365016496577e-05+7.46950411125686e-06*7.46950411125686e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-4.01365016496577e-05*-4.01365016496577e-05+7.46950411125686e-06*7.46950411125686e-06+3.961052570712e-05*${fz})
variable           f_module      equal     sqrt(-4.01365016496577e-05*-4.01365016496577e-05+7.46950411125686e-06*7.46950411125686e-06+3.961052570712e-05*3.961052570712e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.419720360828337*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.419720360828337*-0.419720360828337+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.419720360828337*-0.419720360828337+-0.875427557466541*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.419720360828337*-0.419720360828337+-0.875427557466541*-0.875427557466541+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.419720360828337*-0.419720360828337+-0.875427557466541*-0.875427557466541+-0.239711097645259*${unitz})
variable           dir_module    equal     sqrt(-0.419720360828337*-0.419720360828337+-0.875427557466541*-0.875427557466541+-0.239711097645259*-0.239711097645259)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.01365016496577e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.01365016496577e-05*-0.419720360828337+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.01365016496577e-05*-0.419720360828337+7.46950411125686e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -4.01365016496577e-05*-0.419720360828337+7.46950411125686e-06*-0.875427557466541+${fz}*${unitz}
variable           dot      equal     -4.01365016496577e-05*-0.419720360828337+7.46950411125686e-06*-0.875427557466541+3.961052570712e-05*${unitz}
variable           dot      equal     -4.01365016496577e-05*-0.419720360828337+7.46950411125686e-06*-0.875427557466541+3.961052570712e-05*-0.239711097645259
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.12014619618113e-07/${f_module}*${dir_module}
variable           cos      equal     8.12014619618113e-07/5.68834422581429e-05*${dir_module}
variable           cos      equal     8.12014619618113e-07/5.68834422581429e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0142750612020473)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55652078072598/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.1820714600065-90.0)
print              "The dot product: ${dot}"
The dot product: 8.12014619618113e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.1820714600065

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.08988508054641^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.08988508054641^2+-0.18747691048424^2+${new_z}^2)
variable           norm          equal     sqrt(-0.08988508054641^2+-0.18747691048424^2+-0.0513352539704997^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.08988508054641/${norm}
variable           unit_x        equal     -0.08988508054641/0.214154682343782
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.18747691048424/${norm}
variable           unit_y        equal     -0.18747691048424/0.214154682343782
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0513352539704997/${norm}
variable           unit_z        equal     -0.0513352539704997/0.214154682343782
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07575123333836+${delta}*${unit_x}
variable           x_new         equal     1.07575123333836+0.03*${unit_x}
variable           x_new         equal     1.07575123333836+0.03*-0.419720360828337
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.8372060447781+${delta}*${unit_y}
variable           y_new         equal     3.8372060447781+0.03*${unit_y}
variable           y_new         equal     3.8372060447781+0.03*-0.875427557466541
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2695330689622+${delta}*${unit_z}
variable           z_new         equal     31.2695330689622+0.03*${unit_z}
variable           z_new         equal     31.2695330689622+0.03*-0.239711097645259

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06315962251351  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.06315962251351  y  3.8109432180541  z   ${z_new}
set                atom          288751    x  1.06315962251351  y  3.8109432180541  z   31.2623417360328
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.08988508054641  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.08988508054641  -0.18747691048424  ${new_z}
fix                hold    carbon   planeforce   -0.08988508054641  -0.18747691048424  -0.0513352539704997
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1459   -1152449.2            0   -1152449.2  0.019833662 -0.0076559428 -0.0067680159 
    1613   -1152449.2            0   -1152449.2 1.4883226e-05 -1.7638985e-06 -1.9617896e-05 
Loop time of 1.77004 on 104 procs for 154 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.23095221  -1152449.23382802  -1152449.23382802
  Force two-norm initial, final = 0.24066631 0.00013820376
  Force max component initial, final = 0.17553307 3.4819381e-05
  Final line search alpha, max atom move = 1.0000000 3.4819381e-05
  Iterations, force evaluations = 154 308

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.47273    | 1.2944     | 1.6728     |  30.6 | 73.13
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.028276   | 0.28862    | 0.88234    |  45.6 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8431e-05 | 0.0025431  | 0.0055008  |   2.4 |  0.14
Other   |            | 0.1845     |            |       | 10.43

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114460 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06472864965486-${x_0}
variable           new_x         equal     1.06472864965486-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.81004701171315-${y_0}
variable           new_y         equal     3.81004701171315-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2628674150326-${z_0}
variable           new_z         equal     31.2628674150326-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10090766422991*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10090766422991*-0.10090766422991+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10090766422991*-0.10090766422991+-0.21463594354919*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10090766422991*-0.10090766422991+-0.21463594354919*-0.21463594354919+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10090766422991*-0.10090766422991+-0.21463594354919*-0.21463594354919+-0.0580009079001016*${new_z})
variable           module        equal     sqrt(-0.10090766422991*-0.10090766422991+-0.21463594354919*-0.21463594354919+-0.0580009079001016*-0.0580009079001016)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10090766422991/${module}
variable           unitx         equal     -0.10090766422991/0.244161934545136
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.21463594354919/${module}
variable           unity         equal     -0.21463594354919/0.244161934545136
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0580009079001016/${module}
variable           unitz         equal     -0.0580009079001016/0.244161934545136
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48832256774256e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48832256774256e-05*1.48832256774256e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48832256774256e-05*1.48832256774256e-05+-1.76389854283249e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.48832256774256e-05*1.48832256774256e-05+-1.76389854283249e-06*-1.76389854283249e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.48832256774256e-05*1.48832256774256e-05+-1.76389854283249e-06*-1.76389854283249e-06+-1.96178963138862e-05*${fz})
variable           f_module      equal     sqrt(1.48832256774256e-05*1.48832256774256e-05+-1.76389854283249e-06*-1.76389854283249e-06+-1.96178963138862e-05*-1.96178963138862e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.413281719846695*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.413281719846695*-0.413281719846695+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.413281719846695*-0.413281719846695+-0.879072095939313*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.413281719846695*-0.413281719846695+-0.879072095939313*-0.879072095939313+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.413281719846695*-0.413281719846695+-0.879072095939313*-0.879072095939313+-0.237550984383192*${unitz})
variable           dir_module    equal     sqrt(-0.413281719846695*-0.413281719846695+-0.879072095939313*-0.879072095939313+-0.237550984383192*-0.237550984383192)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.48832256774256e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.48832256774256e-05*-0.413281719846695+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.48832256774256e-05*-0.413281719846695+-1.76389854283249e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.48832256774256e-05*-0.413281719846695+-1.76389854283249e-06*-0.879072095939313+${fz}*${unitz}
variable           dot      equal     1.48832256774256e-05*-0.413281719846695+-1.76389854283249e-06*-0.879072095939313+-1.96178963138862e-05*${unitz}
variable           dot      equal     1.48832256774256e-05*-0.413281719846695+-1.76389854283249e-06*-0.879072095939313+-1.96178963138862e-05*-0.237550984383192
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.98794651301733e-08/${f_module}*${dir_module}
variable           cos      equal     5.98794651301733e-08/2.46877216530197e-05*${dir_module}
variable           cos      equal     5.98794651301733e-08/2.46877216530197e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00242547554495978)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56837084887178/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8610303517033-90.0)
print              "The dot product: ${dot}"
The dot product: 5.98794651301733e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8610303517033

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10090766422991^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10090766422991^2+-0.21463594354919^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10090766422991^2+-0.21463594354919^2+-0.0580009079001016^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10090766422991/${norm}
variable           unit_x        equal     -0.10090766422991/0.244161934545136
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.21463594354919/${norm}
variable           unit_y        equal     -0.21463594354919/0.244161934545136
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0580009079001016/${norm}
variable           unit_z        equal     -0.0580009079001016/0.244161934545136
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06472864965486+${delta}*${unit_x}
variable           x_new         equal     1.06472864965486+0.03*${unit_x}
variable           x_new         equal     1.06472864965486+0.03*-0.413281719846695
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.81004701171315+${delta}*${unit_y}
variable           y_new         equal     3.81004701171315+0.03*${unit_y}
variable           y_new         equal     3.81004701171315+0.03*-0.879072095939313
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2628674150326+${delta}*${unit_z}
variable           z_new         equal     31.2628674150326+0.03*${unit_z}
variable           z_new         equal     31.2628674150326+0.03*-0.237550984383192

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05233019805946  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05233019805946  y  3.78367484883497  z   ${z_new}
set                atom          288751    x  1.05233019805946  y  3.78367484883497  z   31.2557408855011
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10090766422991  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10090766422991  -0.21463594354919  ${new_z}
fix                hold    carbon   planeforce   -0.10090766422991  -0.21463594354919  -0.0580009079001016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1613   -1152449.2            0   -1152449.2  0.029049809 -0.0083367568 -0.019689015 
    1868   -1152449.2            0   -1152449.2 -1.8009309e-06 4.0514549e-07 1.6339217e-06 
Loop time of 2.94816 on 104 procs for 255 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.20348767  -1152449.20639114  -1152449.20639114
  Force two-norm initial, final = 0.24302208 7.5783598e-06
  Force max component initial, final = 0.18055467 1.8009309e-06
  Final line search alpha, max atom move = 1.0000000 1.8009309e-06
  Iterations, force evaluations = 255 510

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.78562    | 2.1499     | 2.7777     |  39.4 | 72.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.051456   | 0.48553    | 1.4722     |  58.4 | 16.47
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 3.0329e-05 | 0.0042024  | 0.0090222  |   3.0 |  0.14
Other   |            | 0.3085     |            |       | 10.46

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114473 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05617362395515-${x_0}
variable           new_x         equal     1.05617362395515-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.78239931133351-${y_0}
variable           new_y         equal     3.78239931133351-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2537744518929-${z_0}
variable           new_z         equal     31.2537744518929-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10946268992962*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10946268992962*-0.10946268992962+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10946268992962*-0.10946268992962+-0.24228364392883*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10946268992962*-0.10946268992962+-0.24228364392883*-0.24228364392883+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10946268992962*-0.10946268992962+-0.24228364392883*-0.24228364392883+-0.0670938710397984*${new_z})
variable           module        equal     sqrt(-0.10946268992962*-0.10946268992962+-0.24228364392883*-0.24228364392883+-0.0670938710397984*-0.0670938710397984)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10946268992962/${module}
variable           unitx         equal     -0.10946268992962/0.274198891560789
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.24228364392883/${module}
variable           unity         equal     -0.24228364392883/0.274198891560789
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0670938710397984/${module}
variable           unitz         equal     -0.0670938710397984/0.274198891560789
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80093088995938e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80093088995938e-06*-1.80093088995938e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80093088995938e-06*-1.80093088995938e-06+4.05145493629652e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80093088995938e-06*-1.80093088995938e-06+4.05145493629652e-07*4.05145493629652e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80093088995938e-06*-1.80093088995938e-06+4.05145493629652e-07*4.05145493629652e-07+1.63392173815655e-06*${fz})
variable           f_module      equal     sqrt(-1.80093088995938e-06*-1.80093088995938e-06+4.05145493629652e-07*4.05145493629652e-07+1.63392173815655e-06*1.63392173815655e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.399209089819944*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.399209089819944*-0.399209089819944+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.399209089819944*-0.399209089819944+-0.883605482683421*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.399209089819944*-0.399209089819944+-0.883605482683421*-0.883605482683421+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.399209089819944*-0.399209089819944+-0.883605482683421*-0.883605482683421+-0.244690526128272*${unitz})
variable           dir_module    equal     sqrt(-0.399209089819944*-0.399209089819944+-0.883605482683421*-0.883605482683421+-0.244690526128272*-0.244690526128272)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80093088995938e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80093088995938e-06*-0.399209089819944+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80093088995938e-06*-0.399209089819944+4.05145493629652e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80093088995938e-06*-0.399209089819944+4.05145493629652e-07*-0.883605482683421+${fz}*${unitz}
variable           dot      equal     -1.80093088995938e-06*-0.399209089819944+4.05145493629652e-07*-0.883605482683421+1.63392173815655e-06*${unitz}
variable           dot      equal     -1.80093088995938e-06*-0.399209089819944+4.05145493629652e-07*-0.883605482683421+1.63392173815655e-06*-0.244690526128272
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.88459678082826e-08/${f_module}*${dir_module}
variable           cos      equal     -3.88459678082826e-08/2.46519678481026e-06*${dir_module}
variable           cos      equal     -3.88459678082826e-08/2.46519678481026e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.015757755343362)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58655473433758/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.9028902440429-90.0)
print              "The dot product: ${dot}"
The dot product: -3.88459678082826e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.9028902440429

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10946268992962^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10946268992962^2+-0.24228364392883^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10946268992962^2+-0.24228364392883^2+-0.0670938710397984^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10946268992962/${norm}
variable           unit_x        equal     -0.10946268992962/0.274198891560789
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.24228364392883/${norm}
variable           unit_y        equal     -0.24228364392883/0.274198891560789
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0670938710397984/${norm}
variable           unit_z        equal     -0.0670938710397984/0.274198891560789
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05617362395515+${delta}*${unit_x}
variable           x_new         equal     1.05617362395515+0.03*${unit_x}
variable           x_new         equal     1.05617362395515+0.03*-0.399209089819944
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.78239931133351+${delta}*${unit_y}
variable           y_new         equal     3.78239931133351+0.03*${unit_y}
variable           y_new         equal     3.78239931133351+0.03*-0.883605482683421
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2537744518929+${delta}*${unit_z}
variable           z_new         equal     31.2537744518929+0.03*${unit_z}
variable           z_new         equal     31.2537744518929+0.03*-0.244690526128272

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04419735126055  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04419735126055  y  3.75589114685301  z   ${z_new}
set                atom          288751    x  1.04419735126055  y  3.75589114685301  z   31.2464337361091
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10946268992962  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10946268992962  -0.24228364392883  ${new_z}
fix                hold    carbon   planeforce   -0.10946268992962  -0.24228364392883  -0.0670938710397984
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1868   -1152449.2            0   -1152449.2  0.036791107 -0.0093779951 -0.026159152 
    2000   -1152449.2            0   -1152449.2 7.3577933e-05 -1.0485911e-05 -8.2175519e-05 
    2048   -1152449.2            0   -1152449.2 2.2857035e-05 -4.1867317e-06 -2.2172157e-05 
Loop time of 2.07981 on 104 procs for 180 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
      -1152449.1731536  -1152449.17611305  -1152449.17611305
  Force two-norm initial, final = 0.24563892 0.00015146324
  Force max component initial, final = 0.18585475 3.6663842e-05
  Final line search alpha, max atom move = 1.0000000 3.6663842e-05
  Iterations, force evaluations = 180 360

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.5545     | 1.5121     | 1.964      |  33.1 | 72.71
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03275    | 0.33848    | 1.0267     |  49.0 | 16.27
Output  | 0.00010316 | 0.00010613 | 0.00027263 |   0.0 |  0.01
Modify  | 2.1638e-05 | 0.0029629  | 0.0063267  |   2.6 |  0.14
Other   |            | 0.2261     |            |       | 10.87

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114474 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05041587807779-${x_0}
variable           new_x         equal     1.05041587807779-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.75393010908712-${y_0}
variable           new_y         equal     3.75393010908712-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2433698303627-${z_0}
variable           new_z         equal     31.2433698303627-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11522043580698*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11522043580698*-0.11522043580698+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11522043580698*-0.11522043580698+-0.27075284617522*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11522043580698*-0.11522043580698+-0.27075284617522*-0.27075284617522+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11522043580698*-0.11522043580698+-0.27075284617522*-0.27075284617522+-0.0774984925700011*${new_z})
variable           module        equal     sqrt(-0.11522043580698*-0.11522043580698+-0.27075284617522*-0.27075284617522+-0.0774984925700011*-0.0774984925700011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.11522043580698/${module}
variable           unitx         equal     -0.11522043580698/0.304284190996107
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.27075284617522/${module}
variable           unity         equal     -0.27075284617522/0.304284190996107
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0774984925700011/${module}
variable           unitz         equal     -0.0774984925700011/0.304284190996107
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.28570345328311e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.28570345328311e-05*2.28570345328311e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.28570345328311e-05*2.28570345328311e-05+-4.18673168579611e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.28570345328311e-05*2.28570345328311e-05+-4.18673168579611e-06*-4.18673168579611e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.28570345328311e-05*2.28570345328311e-05+-4.18673168579611e-06*-4.18673168579611e-06+-2.21721574827962e-05*${fz})
variable           f_module      equal     sqrt(2.28570345328311e-05*2.28570345328311e-05+-4.18673168579611e-06*-4.18673168579611e-06+-2.21721574827962e-05*-2.21721574827962e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37866060484376*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37866060484376*-0.37866060484376+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37866060484376*-0.37866060484376+-0.889802540476656*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37866060484376*-0.37866060484376+-0.889802540476656*-0.889802540476656+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.37866060484376*-0.37866060484376+-0.889802540476656*-0.889802540476656+-0.254691156698945*${unitz})
variable           dir_module    equal     sqrt(-0.37866060484376*-0.37866060484376+-0.889802540476656*-0.889802540476656+-0.254691156698945*-0.254691156698945)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.28570345328311e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.28570345328311e-05*-0.37866060484376+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.28570345328311e-05*-0.37866060484376+-4.18673168579611e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.28570345328311e-05*-0.37866060484376+-4.18673168579611e-06*-0.889802540476656+${fz}*${unitz}
variable           dot      equal     2.28570345328311e-05*-0.37866060484376+-4.18673168579611e-06*-0.889802540476656+-2.21721574827962e-05*${unitz}
variable           dot      equal     2.28570345328311e-05*-0.37866060484376+-4.18673168579611e-06*-0.889802540476656+-2.21721574827962e-05*-0.254691156698945
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.17358404983489e-07/${f_module}*${dir_module}
variable           cos      equal     7.17358404983489e-07/3.21181773655635e-05*${dir_module}
variable           cos      equal     7.17358404983489e-07/3.21181773655635e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0223349661725396)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54845950323641/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7201942823703-90.0)
print              "The dot product: ${dot}"
The dot product: 7.17358404983489e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7201942823703

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11522043580698^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11522043580698^2+-0.27075284617522^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11522043580698^2+-0.27075284617522^2+-0.0774984925700011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.11522043580698/${norm}
variable           unit_x        equal     -0.11522043580698/0.304284190996107
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.27075284617522/${norm}
variable           unit_y        equal     -0.27075284617522/0.304284190996107
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0774984925700011/${norm}
variable           unit_z        equal     -0.0774984925700011/0.304284190996107
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05041587807779+${delta}*${unit_x}
variable           x_new         equal     1.05041587807779+0.03*${unit_x}
variable           x_new         equal     1.05041587807779+0.03*-0.37866060484376
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.75393010908712+${delta}*${unit_y}
variable           y_new         equal     3.75393010908712+0.03*${unit_y}
variable           y_new         equal     3.75393010908712+0.03*-0.889802540476656
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2433698303627+${delta}*${unit_z}
variable           z_new         equal     31.2433698303627+0.03*${unit_z}
variable           z_new         equal     31.2433698303627+0.03*-0.254691156698945

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03905605993248  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03905605993248  y  3.72723603287282  z   ${z_new}
set                atom          288751    x  1.03905605993248  y  3.72723603287282  z   31.2357290956617
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11522043580698  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11522043580698  -0.27075284617522  ${new_z}
fix                hold    carbon   planeforce   -0.11522043580698  -0.27075284617522  -0.0774984925700011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2048   -1152449.1            0   -1152449.1  0.045570342 -0.011545149   -0.0274167 
    2231   -1152449.1            0   -1152449.1 -3.4093431e-05 3.2959388e-06 3.9173345e-05 
Loop time of 2.11443 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.13986915  -1152449.14296227  -1152449.14296227
  Force two-norm initial, final = 0.24912271 0.00014485925
  Force max component initial, final = 0.19187702 3.9173345e-05
  Final line search alpha, max atom move = 1.0000000 3.9173345e-05
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57101    | 1.5453     | 1.9949     |  33.3 | 73.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032999   | 0.34955    | 1.0514     |  49.0 | 16.53
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1792e-05 | 0.0030149  | 0.006476   |   2.6 |  0.14
Other   |            | 0.2165     |            |       | 10.24

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114475 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.04941076524183-${x_0}
variable           new_x         equal     1.04941076524183-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.7236207171402-${y_0}
variable           new_y         equal     3.7236207171402-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2329649562985-${z_0}
variable           new_z         equal     31.2329649562985-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11622554864294*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11622554864294*-0.11622554864294+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11622554864294*-0.11622554864294+-0.30106223812214*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11622554864294*-0.11622554864294+-0.30106223812214*-0.30106223812214+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11622554864294*-0.11622554864294+-0.30106223812214*-0.30106223812214+-0.0879033666342011*${new_z})
variable           module        equal     sqrt(-0.11622554864294*-0.11622554864294+-0.30106223812214*-0.30106223812214+-0.0879033666342011*-0.0879033666342011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.11622554864294/${module}
variable           unitx         equal     -0.11622554864294/0.334475486764114
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.30106223812214/${module}
variable           unity         equal     -0.30106223812214/0.334475486764114
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0879033666342011/${module}
variable           unitz         equal     -0.0879033666342011/0.334475486764114
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.4093431198439e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.4093431198439e-05*-3.4093431198439e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.4093431198439e-05*-3.4093431198439e-05+3.29593884520126e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.4093431198439e-05*-3.4093431198439e-05+3.29593884520126e-06*3.29593884520126e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.4093431198439e-05*-3.4093431198439e-05+3.29593884520126e-06*3.29593884520126e-06+3.91733448884628e-05*${fz})
variable           f_module      equal     sqrt(-3.4093431198439e-05*-3.4093431198439e-05+3.29593884520126e-06*3.29593884520126e-06+3.91733448884628e-05*3.91733448884628e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347485998951269*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347485998951269*-0.347485998951269+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347485998951269*-0.347485998951269+-0.900102548724181*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347485998951269*-0.347485998951269+-0.900102548724181*-0.900102548724181+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.347485998951269*-0.347485998951269+-0.900102548724181*-0.900102548724181+-0.262809593266828*${unitz})
variable           dir_module    equal     sqrt(-0.347485998951269*-0.347485998951269+-0.900102548724181*-0.900102548724181+-0.262809593266828*-0.262809593266828)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.4093431198439e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.4093431198439e-05*-0.347485998951269+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.4093431198439e-05*-0.347485998951269+3.29593884520126e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.4093431198439e-05*-0.347485998951269+3.29593884520126e-06*-0.900102548724181+${fz}*${unitz}
variable           dot      equal     -3.4093431198439e-05*-0.347485998951269+3.29593884520126e-06*-0.900102548724181+3.91733448884628e-05*${unitz}
variable           dot      equal     -3.4093431198439e-05*-0.347485998951269+3.29593884520126e-06*-0.900102548724181+3.91733448884628e-05*-0.262809593266828
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.41482379437684e-06/${f_module}*${dir_module}
variable           cos      equal     -1.41482379437684e-06/5.20362970771793e-05*${dir_module}
variable           cos      equal     -1.41482379437684e-06/5.20362970771793e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0271891712870806)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59798884913404/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.5580167643481-90.0)
print              "The dot product: ${dot}"
The dot product: -1.41482379437684e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.5580167643481

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11622554864294^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11622554864294^2+-0.30106223812214^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11622554864294^2+-0.30106223812214^2+-0.0879033666342011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.11622554864294/${norm}
variable           unit_x        equal     -0.11622554864294/0.334475486764114
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.30106223812214/${norm}
variable           unit_y        equal     -0.30106223812214/0.334475486764114
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0879033666342011/${norm}
variable           unit_z        equal     -0.0879033666342011/0.334475486764114
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.04941076524183+${delta}*${unit_x}
variable           x_new         equal     1.04941076524183+0.03*${unit_x}
variable           x_new         equal     1.04941076524183+0.03*-0.347485998951269
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.7236207171402+${delta}*${unit_y}
variable           y_new         equal     3.7236207171402+0.03*${unit_y}
variable           y_new         equal     3.7236207171402+0.03*-0.900102548724181
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2329649562985+${delta}*${unit_z}
variable           z_new         equal     31.2329649562985+0.03*${unit_z}
variable           z_new         equal     31.2329649562985+0.03*-0.262809593266828

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03898618527329  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.03898618527329  y  3.69661764067847  z   ${z_new}
set                atom          288751    x  1.03898618527329  y  3.69661764067847  z   31.2250806685005
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11622554864294  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11622554864294  -0.30106223812214  ${new_z}
fix                hold    carbon   planeforce   -0.11622554864294  -0.30106223812214  -0.0879033666342011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2231   -1152449.1            0   -1152449.1  0.060195571 -0.016299161 -0.023767024 
    2416   -1152449.1            0   -1152449.1 -2.4330731e-05 2.4694442e-06 2.3712359e-05 
Loop time of 2.14801 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.10371666  -1152449.10707972  -1152449.10707972
  Force two-norm initial, final = 0.2548935 0.00013116573
  Force max component initial, final = 0.19967004 2.8413000e-05
  Final line search alpha, max atom move = 1.0000000 2.8413000e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.57016    | 1.5599     | 2.0259     |  33.6 | 72.62
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038528   | 0.35185    | 1.0596     |  50.1 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1822e-05 | 0.0030506  | 0.0065522  |   2.6 |  0.14
Other   |            | 0.2332     |            |       | 10.86

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114446 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.05412186763341-${x_0}
variable           new_x         equal     1.05412186763341-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.69119588444673-${y_0}
variable           new_y         equal     3.69119588444673-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2236374140999-${z_0}
variable           new_z         equal     31.2236374140999-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11151444625136*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11151444625136*-0.11151444625136+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11151444625136*-0.11151444625136+-0.33348707081561*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11151444625136*-0.11151444625136+-0.33348707081561*-0.33348707081561+${new_z}*${new_z})
variable           module        equal     sqrt(-0.11151444625136*-0.11151444625136+-0.33348707081561*-0.33348707081561+-0.0972309088327989*${new_z})
variable           module        equal     sqrt(-0.11151444625136*-0.11151444625136+-0.33348707081561*-0.33348707081561+-0.0972309088327989*-0.0972309088327989)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.11151444625136/${module}
variable           unitx         equal     -0.11151444625136/0.364832766834854
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.33348707081561/${module}
variable           unity         equal     -0.33348707081561/0.364832766834854
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0972309088327989/${module}
variable           unitz         equal     -0.0972309088327989/0.364832766834854
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43307311428783e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43307311428783e-05*-2.43307311428783e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43307311428783e-05*-2.43307311428783e-05+2.46944417451821e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43307311428783e-05*-2.43307311428783e-05+2.46944417451821e-06*2.46944417451821e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.43307311428783e-05*-2.43307311428783e-05+2.46944417451821e-06*2.46944417451821e-06+2.37123589877941e-05*${fz})
variable           f_module      equal     sqrt(-2.43307311428783e-05*-2.43307311428783e-05+2.46944417451821e-06*2.46944417451821e-06+2.37123589877941e-05*2.37123589877941e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.305659075578149*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.305659075578149*-0.305659075578149+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.305659075578149*-0.305659075578149+-0.914082015463723*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.305659075578149*-0.305659075578149+-0.914082015463723*-0.914082015463723+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.305659075578149*-0.305659075578149+-0.914082015463723*-0.914082015463723+-0.266508158453902*${unitz})
variable           dir_module    equal     sqrt(-0.305659075578149*-0.305659075578149+-0.914082015463723*-0.914082015463723+-0.266508158453902*-0.266508158453902)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43307311428783e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43307311428783e-05*-0.305659075578149+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43307311428783e-05*-0.305659075578149+2.46944417451821e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.43307311428783e-05*-0.305659075578149+2.46944417451821e-06*-0.914082015463723+${fz}*${unitz}
variable           dot      equal     -2.43307311428783e-05*-0.305659075578149+2.46944417451821e-06*-0.914082015463723+2.37123589877941e-05*${unitz}
variable           dot      equal     -2.43307311428783e-05*-0.305659075578149+2.46944417451821e-06*-0.914082015463723+2.37123589877941e-05*-0.266508158453902
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.13990284528093e-06/${f_module}*${dir_module}
variable           cos      equal     -1.13990284528093e-06/3.40640367725863e-05*${dir_module}
variable           cos      equal     -1.13990284528093e-06/3.40640367725863e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0334635279104175)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60426610330729/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.9176769354062-90.0)
print              "The dot product: ${dot}"
The dot product: -1.13990284528093e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.9176769354062

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11151444625136^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11151444625136^2+-0.33348707081561^2+${new_z}^2)
variable           norm          equal     sqrt(-0.11151444625136^2+-0.33348707081561^2+-0.0972309088327989^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.11151444625136/${norm}
variable           unit_x        equal     -0.11151444625136/0.364832766834854
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.33348707081561/${norm}
variable           unit_y        equal     -0.33348707081561/0.364832766834854
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0972309088327989/${norm}
variable           unit_z        equal     -0.0972309088327989/0.364832766834854
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.05412186763341+${delta}*${unit_x}
variable           x_new         equal     1.05412186763341+0.03*${unit_x}
variable           x_new         equal     1.05412186763341+0.03*-0.305659075578149
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.69119588444673+${delta}*${unit_y}
variable           y_new         equal     3.69119588444673+0.03*${unit_y}
variable           y_new         equal     3.69119588444673+0.03*-0.914082015463723
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2236374140999+${delta}*${unit_z}
variable           z_new         equal     31.2236374140999+0.03*${unit_z}
variable           z_new         equal     31.2236374140999+0.03*-0.266508158453902

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04495209536607  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.04495209536607  y  3.66377342398282  z   ${z_new}
set                atom          288751    x  1.04495209536607  y  3.66377342398282  z   31.2156421693463
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11151444625136  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.11151444625136  -0.33348707081561  ${new_z}
fix                hold    carbon   planeforce   -0.11151444625136  -0.33348707081561  -0.0972309088327989
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2416   -1152449.1            0   -1152449.1  0.073746648 -0.019576599 -0.017435546 
    2594   -1152449.1            0   -1152449.1 3.5642417e-05 -8.5790003e-07 -3.7935939e-05 
Loop time of 2.06263 on 104 procs for 178 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.06486447  -1152449.06849633  -1152449.06849633
  Force two-norm initial, final = 0.2620324 0.00018561396
  Force max component initial, final = 0.20932597 4.5836556e-05
  Final line search alpha, max atom move = 1.0000000 4.5836556e-05
  Iterations, force evaluations = 178 356

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55999    | 1.5042     | 1.942      |  32.6 | 72.93
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031362   | 0.33768    | 1.0096     |  48.4 | 16.37
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0912e-05 | 0.002924   | 0.0062627  |   2.5 |  0.14
Other   |            | 0.2178     |            |       | 10.56

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114446 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.06319637927309-${x_0}
variable           new_x         equal     1.06319637927309-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.6575747309709-${y_0}
variable           new_y         equal     3.6575747309709-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2159783048282-${z_0}
variable           new_z         equal     31.2159783048282-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10243993461168*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10243993461168*-0.10243993461168+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10243993461168*-0.10243993461168+-0.36710822429144*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10243993461168*-0.10243993461168+-0.36710822429144*-0.36710822429144+${new_z}*${new_z})
variable           module        equal     sqrt(-0.10243993461168*-0.10243993461168+-0.36710822429144*-0.36710822429144+-0.104890018104498*${new_z})
variable           module        equal     sqrt(-0.10243993461168*-0.10243993461168+-0.36710822429144*-0.36710822429144+-0.104890018104498*-0.104890018104498)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.10243993461168/${module}
variable           unitx         equal     -0.10243993461168/0.395302800955952
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.36710822429144/${module}
variable           unity         equal     -0.36710822429144/0.395302800955952
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.104890018104498/${module}
variable           unitz         equal     -0.104890018104498/0.395302800955952
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.56424172020205e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.56424172020205e-05*3.56424172020205e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.56424172020205e-05*3.56424172020205e-05+-8.57900034229996e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.56424172020205e-05*3.56424172020205e-05+-8.57900034229996e-07*-8.57900034229996e-07+${fz}*${fz})
variable           f_module      equal     sqrt(3.56424172020205e-05*3.56424172020205e-05+-8.57900034229996e-07*-8.57900034229996e-07+-3.79359392187055e-05*${fz})
variable           f_module      equal     sqrt(3.56424172020205e-05*3.56424172020205e-05+-8.57900034229996e-07*-8.57900034229996e-07+-3.79359392187055e-05*-3.79359392187055e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.259142951590406*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.259142951590406*-0.259142951590406+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.259142951590406*-0.259142951590406+-0.928676000786411*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.259142951590406*-0.259142951590406+-0.928676000786411*-0.928676000786411+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.259142951590406*-0.259142951590406+-0.928676000786411*-0.928676000786411+-0.265340943324572*${unitz})
variable           dir_module    equal     sqrt(-0.259142951590406*-0.259142951590406+-0.928676000786411*-0.928676000786411+-0.265340943324572*-0.265340943324572)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.56424172020205e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.56424172020205e-05*-0.259142951590406+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.56424172020205e-05*-0.259142951590406+-8.57900034229996e-07*${unity}+${fz}*${unitz}
variable           dot      equal     3.56424172020205e-05*-0.259142951590406+-8.57900034229996e-07*-0.928676000786411+${fz}*${unitz}
variable           dot      equal     3.56424172020205e-05*-0.259142951590406+-8.57900034229996e-07*-0.928676000786411+-3.79359392187055e-05*${unitz}
variable           dot      equal     3.56424172020205e-05*-0.259142951590406+-8.57900034229996e-07*-0.928676000786411+-3.79359392187055e-05*-0.265340943324572
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.62618787550993e-06/${f_module}*${dir_module}
variable           cos      equal     1.62618787550993e-06/5.20600939384183e-05*${dir_module}
variable           cos      equal     1.62618787550993e-06/5.20600939384183e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0312367449323765)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53955449983722/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.2099751710471-90.0)
print              "The dot product: ${dot}"
The dot product: 1.62618787550993e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.2099751710471

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10243993461168^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10243993461168^2+-0.36710822429144^2+${new_z}^2)
variable           norm          equal     sqrt(-0.10243993461168^2+-0.36710822429144^2+-0.104890018104498^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.10243993461168/${norm}
variable           unit_x        equal     -0.10243993461168/0.395302800955952
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.36710822429144/${norm}
variable           unit_y        equal     -0.36710822429144/0.395302800955952
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.104890018104498/${norm}
variable           unit_z        equal     -0.104890018104498/0.395302800955952
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.06319637927309+${delta}*${unit_x}
variable           x_new         equal     1.06319637927309+0.03*${unit_x}
variable           x_new         equal     1.06319637927309+0.03*-0.259142951590406
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.6575747309709+${delta}*${unit_y}
variable           y_new         equal     3.6575747309709+0.03*${unit_y}
variable           y_new         equal     3.6575747309709+0.03*-0.928676000786411
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2159783048282+${delta}*${unit_z}
variable           z_new         equal     31.2159783048282+0.03*${unit_z}
variable           z_new         equal     31.2159783048282+0.03*-0.265340943324572

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05542209072538  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.05542209072538  y  3.62971445094731  z   ${z_new}
set                atom          288751    x  1.05542209072538  y  3.62971445094731  z   31.2080180765285
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10243993461168  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.10243993461168  -0.36710822429144  ${new_z}
fix                hold    carbon   planeforce   -0.10243993461168  -0.36710822429144  -0.104890018104498
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2594     -1152449            0     -1152449  0.080954063 -0.019944167 -0.0092598065 
    2775     -1152449            0     -1152449 -1.2878246e-05 -7.7173171e-07 1.5278439e-05 
Loop time of 2.09173 on 104 procs for 181 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.02327638  -1152449.02706669  -1152449.02706669
  Force two-norm initial, final = 0.26867248 0.00013746072
  Force max component initial, final = 0.21968792 1.5278439e-05
  Final line search alpha, max atom move = 1.0000000 1.5278439e-05
  Iterations, force evaluations = 181 362

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55783    | 1.5236     | 1.9716     |  33.2 | 72.84
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034761   | 0.3416     | 1.0353     |  49.2 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1834e-05 | 0.0029751  | 0.0063821  |   2.6 |  0.14
Other   |            | 0.2236     |            |       | 10.69

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114448 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.07477103305851-${x_0}
variable           new_x         equal     1.07477103305851-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.62363697487445-${y_0}
variable           new_y         equal     3.62363697487445-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2103918682998-${z_0}
variable           new_z         equal     31.2103918682998-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09086528082626*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09086528082626*-0.09086528082626+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09086528082626*-0.09086528082626+-0.40104598038789*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09086528082626*-0.09086528082626+-0.40104598038789*-0.40104598038789+${new_z}*${new_z})
variable           module        equal     sqrt(-0.09086528082626*-0.09086528082626+-0.40104598038789*-0.40104598038789+-0.110476454632899*${new_z})
variable           module        equal     sqrt(-0.09086528082626*-0.09086528082626+-0.40104598038789*-0.40104598038789+-0.110476454632899*-0.110476454632899)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.09086528082626/${module}
variable           unitx         equal     -0.09086528082626/0.425792701526428
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.40104598038789/${module}
variable           unity         equal     -0.40104598038789/0.425792701526428
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.110476454632899/${module}
variable           unitz         equal     -0.110476454632899/0.425792701526428
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.28782463843875e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.28782463843875e-05*-1.28782463843875e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.28782463843875e-05*-1.28782463843875e-05+-7.7173171145884e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.28782463843875e-05*-1.28782463843875e-05+-7.7173171145884e-07*-7.7173171145884e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.28782463843875e-05*-1.28782463843875e-05+-7.7173171145884e-07*-7.7173171145884e-07+1.52784393085512e-05*${fz})
variable           f_module      equal     sqrt(-1.28782463843875e-05*-1.28782463843875e-05+-7.7173171145884e-07*-7.7173171145884e-07+1.52784393085512e-05*1.52784393085512e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.21340262644361*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.21340262644361*-0.21340262644361+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.21340262644361*-0.21340262644361+-0.941880823579589*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.21340262644361*-0.21340262644361+-0.941880823579589*-0.941880823579589+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.21340262644361*-0.21340262644361+-0.941880823579589*-0.941880823579589+-0.25946065828947*${unitz})
variable           dir_module    equal     sqrt(-0.21340262644361*-0.21340262644361+-0.941880823579589*-0.941880823579589+-0.25946065828947*-0.25946065828947)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.28782463843875e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.28782463843875e-05*-0.21340262644361+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.28782463843875e-05*-0.21340262644361+-7.7173171145884e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.28782463843875e-05*-0.21340262644361+-7.7173171145884e-07*-0.941880823579589+${fz}*${unitz}
variable           dot      equal     -1.28782463843875e-05*-0.21340262644361+-7.7173171145884e-07*-0.941880823579589+1.52784393085512e-05*${unitz}
variable           dot      equal     -1.28782463843875e-05*-0.21340262644361+-7.7173171145884e-07*-0.941880823579589+1.52784393085512e-05*-0.25946065828947
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -4.89023018244855e-07/${f_module}*${dir_module}
variable           cos      equal     -4.89023018244855e-07/1.99968874447136e-05*${dir_module}
variable           cos      equal     -4.89023018244855e-07/1.99968874447136e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0244549567824933)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59525372176069/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.4013055094245-90.0)
print              "The dot product: ${dot}"
The dot product: -4.89023018244855e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.4013055094245

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09086528082626^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09086528082626^2+-0.40104598038789^2+${new_z}^2)
variable           norm          equal     sqrt(-0.09086528082626^2+-0.40104598038789^2+-0.110476454632899^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.09086528082626/${norm}
variable           unit_x        equal     -0.09086528082626/0.425792701526428
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.40104598038789/${norm}
variable           unit_y        equal     -0.40104598038789/0.425792701526428
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.110476454632899/${norm}
variable           unit_z        equal     -0.110476454632899/0.425792701526428
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.07477103305851+${delta}*${unit_x}
variable           x_new         equal     1.07477103305851+0.03*${unit_x}
variable           x_new         equal     1.07477103305851+0.03*-0.21340262644361
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.62363697487445+${delta}*${unit_y}
variable           y_new         equal     3.62363697487445+0.03*${unit_y}
variable           y_new         equal     3.62363697487445+0.03*-0.941880823579589
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2103918682998+${delta}*${unit_z}
variable           z_new         equal     31.2103918682998+0.03*${unit_z}
variable           z_new         equal     31.2103918682998+0.03*-0.25946065828947

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0683689542652  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.0683689542652  y  3.59538055016706  z   ${z_new}
set                atom          288751    x  1.0683689542652  y  3.59538055016706  z   31.2026080485511
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09086528082626  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.09086528082626  -0.40104598038789  ${new_z}
fix                hold    carbon   planeforce   -0.09086528082626  -0.40104598038789  -0.110476454632899
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2775     -1152449            0     -1152449  0.081268164 -0.018957669 0.0019772758 
    2904     -1152449            0     -1152449 -2.9721796e-05 5.171218e-06 5.6734546e-06 
Loop time of 1.49087 on 104 procs for 129 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.97875147  -1152448.98260542  -1152448.98260542
  Force two-norm initial, final = 0.27446452 0.00022424894
  Force max component initial, final = 0.22996761 2.9721796e-05
  Final line search alpha, max atom move = 1.0000000 2.9721796e-05
  Iterations, force evaluations = 129 258

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.40037    | 1.0904     | 1.4086     |  28.1 | 73.14
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02409    | 0.24682    | 0.75057    |  41.7 | 16.56
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5573e-05 | 0.0021316  | 0.0046115  |   2.2 |  0.14
Other   |            | 0.1515     |            |       | 10.16

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114463 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.08730081948191-${x_0}
variable           new_x         equal     1.08730081948191-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.58958581876559-${y_0}
variable           new_y         equal     3.58958581876559-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2080726019573-${z_0}
variable           new_z         equal     31.2080726019573-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07833549440286*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07833549440286*-0.07833549440286+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07833549440286*-0.07833549440286+-0.43509713649675*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07833549440286*-0.07833549440286+-0.43509713649675*-0.43509713649675+${new_z}*${new_z})
variable           module        equal     sqrt(-0.07833549440286*-0.07833549440286+-0.43509713649675*-0.43509713649675+-0.112795720975399*${new_z})
variable           module        equal     sqrt(-0.07833549440286*-0.07833549440286+-0.43509713649675*-0.43509713649675+-0.112795720975399*-0.112795720975399)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.07833549440286/${module}
variable           unitx         equal     -0.07833549440286/0.456255238371432
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.43509713649675/${module}
variable           unity         equal     -0.43509713649675/0.456255238371432
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.112795720975399/${module}
variable           unitz         equal     -0.112795720975399/0.456255238371432
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.97217962333079e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.97217962333079e-05*-2.97217962333079e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.97217962333079e-05*-2.97217962333079e-05+5.17121803946668e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.97217962333079e-05*-2.97217962333079e-05+5.17121803946668e-06*5.17121803946668e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.97217962333079e-05*-2.97217962333079e-05+5.17121803946668e-06*5.17121803946668e-06+5.67345462769253e-06*${fz})
variable           f_module      equal     sqrt(-2.97217962333079e-05*-2.97217962333079e-05+5.17121803946668e-06*5.17121803946668e-06+5.67345462769253e-06*5.67345462769253e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.171692263046606*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.171692263046606*-0.171692263046606+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.171692263046606*-0.171692263046606+-0.953626610512563*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.171692263046606*-0.171692263046606+-0.953626610512563*-0.953626610512563+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.171692263046606*-0.171692263046606+-0.953626610512563*-0.953626610512563+-0.247220659598374*${unitz})
variable           dir_module    equal     sqrt(-0.171692263046606*-0.171692263046606+-0.953626610512563*-0.953626610512563+-0.247220659598374*-0.247220659598374)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.97217962333079e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.97217962333079e-05*-0.171692263046606+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.97217962333079e-05*-0.171692263046606+5.17121803946668e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.97217962333079e-05*-0.171692263046606+5.17121803946668e-06*-0.953626610512563+${fz}*${unitz}
variable           dot      equal     -2.97217962333079e-05*-0.171692263046606+5.17121803946668e-06*-0.953626610512563+5.67345462769253e-06*${unitz}
variable           dot      equal     -2.97217962333079e-05*-0.171692263046606+5.17121803946668e-06*-0.953626610512563+5.67345462769253e-06*-0.247220659598374
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.2310038693509e-06/${f_module}*${dir_module}
variable           cos      equal     -1.2310038693509e-06/3.0697145710285e-05*${dir_module}
variable           cos      equal     -1.2310038693509e-06/3.0697145710285e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.040101574295178)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.61090865700816/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.2982672276551-90.0)
print              "The dot product: ${dot}"
The dot product: -1.2310038693509e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.2982672276551

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07833549440286^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07833549440286^2+-0.43509713649675^2+${new_z}^2)
variable           norm          equal     sqrt(-0.07833549440286^2+-0.43509713649675^2+-0.112795720975399^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.07833549440286/${norm}
variable           unit_x        equal     -0.07833549440286/0.456255238371432
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.43509713649675/${norm}
variable           unit_y        equal     -0.43509713649675/0.456255238371432
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.112795720975399/${norm}
variable           unit_z        equal     -0.112795720975399/0.456255238371432
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.08730081948191+${delta}*${unit_x}
variable           x_new         equal     1.08730081948191+0.03*${unit_x}
variable           x_new         equal     1.08730081948191+0.03*-0.171692263046606
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.58958581876559+${delta}*${unit_y}
variable           y_new         equal     3.58958581876559+0.03*${unit_y}
variable           y_new         equal     3.58958581876559+0.03*-0.953626610512563
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2080726019573+${delta}*${unit_z}
variable           z_new         equal     31.2080726019573+0.03*${unit_z}
variable           z_new         equal     31.2080726019573+0.03*-0.247220659598374

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08215005159051  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.08215005159051  y  3.56097702045021  z   ${z_new}
set                atom          288751    x  1.08215005159051  y  3.56097702045021  z   31.2006559821694
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07833549440286  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.07833549440286  -0.43509713649675  ${new_z}
fix                hold    carbon   planeforce   -0.07833549440286  -0.43509713649675  -0.112795720975399
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2904   -1152448.9            0   -1152448.9  0.076926585  -0.01867535  0.018613378 
    3000   -1152448.9            0   -1152448.9 6.7018875e-05 -3.9896266e-06 -3.1154388e-05 
    3033   -1152448.9            0   -1152448.9 -2.6377516e-06 -7.0095197e-06 2.8870346e-05 
Loop time of 1.51585 on 104 procs for 129 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.93111221  -1152448.93516478  -1152448.93516478
  Force two-norm initial, final = 0.28118391 0.00016994069
  Force max component initial, final = 0.24044442 2.8870346e-05
  Final line search alpha, max atom move = 1.0000000 2.8870346e-05
  Iterations, force evaluations = 129 258

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.39884    | 1.0866     | 1.4037     |  28.0 | 71.68
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.029253   | 0.24658    | 0.75666    |  41.5 | 16.27
Output  | 9.6306e-05 | 9.9492e-05 | 0.00025199 |   0.0 |  0.01
Modify  | 1.5691e-05 | 0.0021283  | 0.004568   |   2.2 |  0.14
Other   |            | 0.1805     |            |       | 11.90

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114463 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.10016058330993-${x_0}
variable           new_x         equal     1.10016058330993-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.55472156116385-${y_0}
variable           new_y         equal     3.55472156116385-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2122775978204-${z_0}
variable           new_z         equal     31.2122775978204-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0654757305748401*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0654757305748401*-0.0654757305748401+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0654757305748401*-0.0654757305748401+-0.46996139409849*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0654757305748401*-0.0654757305748401+-0.46996139409849*-0.46996139409849+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0654757305748401*-0.0654757305748401+-0.46996139409849*-0.46996139409849+-0.1085907251123*${new_z})
variable           module        equal     sqrt(-0.0654757305748401*-0.0654757305748401+-0.46996139409849*-0.46996139409849+-0.1085907251123*-0.1085907251123)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0654757305748401/${module}
variable           unitx         equal     -0.0654757305748401/0.486767633288945
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.46996139409849/${module}
variable           unity         equal     -0.46996139409849/0.486767633288945
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.1085907251123/${module}
variable           unitz         equal     -0.1085907251123/0.486767633288945
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.63775164231911e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.63775164231911e-06*-2.63775164231911e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.63775164231911e-06*-2.63775164231911e-06+-7.00951971834789e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.63775164231911e-06*-2.63775164231911e-06+-7.00951971834789e-06*-7.00951971834789e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.63775164231911e-06*-2.63775164231911e-06+-7.00951971834789e-06*-7.00951971834789e-06+2.88703463970788e-05*${fz})
variable           f_module      equal     sqrt(-2.63775164231911e-06*-2.63775164231911e-06+-7.00951971834789e-06*-7.00951971834789e-06+2.88703463970788e-05*2.88703463970788e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.13451126594519*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.13451126594519*-0.13451126594519+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.13451126594519*-0.13451126594519+-0.96547379480246*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.13451126594519*-0.13451126594519+-0.96547379480246*-0.96547379480246+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.13451126594519*-0.13451126594519+-0.96547379480246*-0.96547379480246+-0.223085344394377*${unitz})
variable           dir_module    equal     sqrt(-0.13451126594519*-0.13451126594519+-0.96547379480246*-0.96547379480246+-0.223085344394377*-0.223085344394377)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.63775164231911e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.63775164231911e-06*-0.13451126594519+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.63775164231911e-06*-0.13451126594519+-7.00951971834789e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.63775164231911e-06*-0.13451126594519+-7.00951971834789e-06*-0.96547379480246+${fz}*${unitz}
variable           dot      equal     -2.63775164231911e-06*-0.13451126594519+-7.00951971834789e-06*-0.96547379480246+2.88703463970788e-05*${unitz}
variable           dot      equal     -2.63775164231911e-06*-0.13451126594519+-7.00951971834789e-06*-0.96547379480246+2.88703463970788e-05*-0.223085344394377
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     6.8176374609607e-07/${f_module}*${dir_module}
variable           cos      equal     6.8176374609607e-07/2.98259618704206e-05*${dir_module}
variable           cos      equal     6.8176374609607e-07/2.98259618704206e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0228580640268369)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54793627177743/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.6902153280623-90.0)
print              "The dot product: ${dot}"
The dot product: 6.8176374609607e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.6902153280623

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0654757305748401^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0654757305748401^2+-0.46996139409849^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0654757305748401^2+-0.46996139409849^2+-0.1085907251123^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0654757305748401/${norm}
variable           unit_x        equal     -0.0654757305748401/0.486767633288945
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.46996139409849/${norm}
variable           unit_y        equal     -0.46996139409849/0.486767633288945
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.1085907251123/${norm}
variable           unit_z        equal     -0.1085907251123/0.486767633288945
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.10016058330993+${delta}*${unit_x}
variable           x_new         equal     1.10016058330993+0.03*${unit_x}
variable           x_new         equal     1.10016058330993+0.03*-0.13451126594519
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.55472156116385+${delta}*${unit_y}
variable           y_new         equal     3.55472156116385+0.03*${unit_y}
variable           y_new         equal     3.55472156116385+0.03*-0.96547379480246
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2122775978204+${delta}*${unit_z}
variable           z_new         equal     31.2122775978204+0.03*${unit_z}
variable           z_new         equal     31.2122775978204+0.03*-0.223085344394377

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09612524533157  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.09612524533157  y  3.52575734731978  z   ${z_new}
set                atom          288751    x  1.09612524533157  y  3.52575734731978  z   31.2055850374886
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0654757305748401  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0654757305748401  -0.46996139409849  ${new_z}
fix                hold    carbon   planeforce   -0.0654757305748401  -0.46996139409849  -0.1085907251123
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3033   -1152448.9            0   -1152448.9  0.071004114  -0.01906782  0.039709588 
    3185   -1152448.9            0   -1152448.9 -3.6716722e-06 3.6658928e-06 -1.3651467e-05 
Loop time of 1.77329 on 104 procs for 152 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.88051291  -1152448.88479869  -1152448.88479869
  Force two-norm initial, final = 0.29093044 0.00011884577
  Force max component initial, final = 0.25236724 1.3798286e-05
  Final line search alpha, max atom move = 1.0000000 1.3798286e-05
  Iterations, force evaluations = 152 304

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4672     | 1.2842     | 1.6604     |  30.5 | 72.42
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026768   | 0.2919     | 0.87357    |  44.8 | 16.46
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7838e-05 | 0.0025114  | 0.0054068  |   2.4 |  0.14
Other   |            | 0.1947     |            |       | 10.98

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114462 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238193
Ave neighs/atom = 28.530440
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.11239901606972-${x_0}
variable           new_x         equal     1.11239901606972-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.51994398408365-${y_0}
variable           new_y         equal     3.51994398408365-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2209318294068-${z_0}
variable           new_z         equal     31.2209318294068-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0532372978150502*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0532372978150502*-0.0532372978150502+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0532372978150502*-0.0532372978150502+-0.50473897117869*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0532372978150502*-0.0532372978150502+-0.50473897117869*-0.50473897117869+${new_z}*${new_z})
variable           module        equal     sqrt(-0.0532372978150502*-0.0532372978150502+-0.50473897117869*-0.50473897117869+-0.0999364935258988*${new_z})
variable           module        equal     sqrt(-0.0532372978150502*-0.0532372978150502+-0.50473897117869*-0.50473897117869+-0.0999364935258988*-0.0999364935258988)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.0532372978150502/${module}
variable           unitx         equal     -0.0532372978150502/0.517284198138144
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.50473897117869/${module}
variable           unity         equal     -0.50473897117869/0.517284198138144
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0999364935258988/${module}
variable           unitz         equal     -0.0999364935258988/0.517284198138144
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.67167216853305e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.67167216853305e-06*-3.67167216853305e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.67167216853305e-06*-3.67167216853305e-06+3.66589276086587e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.67167216853305e-06*-3.67167216853305e-06+3.66589276086587e-06*3.66589276086587e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.67167216853305e-06*-3.67167216853305e-06+3.66589276086587e-06*3.66589276086587e-06+-1.36514665811224e-05*${fz})
variable           f_module      equal     sqrt(-3.67167216853305e-06*-3.67167216853305e-06+3.66589276086587e-06*3.66589276086587e-06+-1.36514665811224e-05*-1.36514665811224e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.102916922663918*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.102916922663918*-0.102916922663918+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.102916922663918*-0.102916922663918+-0.975747902208094*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.102916922663918*-0.102916922663918+-0.975747902208094*-0.975747902208094+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.102916922663918*-0.102916922663918+-0.975747902208094*-0.975747902208094+-0.193194560911776*${unitz})
variable           dir_module    equal     sqrt(-0.102916922663918*-0.102916922663918+-0.975747902208094*-0.975747902208094+-0.193194560911776*-0.193194560911776)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.67167216853305e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.67167216853305e-06*-0.102916922663918+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.67167216853305e-06*-0.102916922663918+3.66589276086587e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.67167216853305e-06*-0.102916922663918+3.66589276086587e-06*-0.975747902208094+${fz}*${unitz}
variable           dot      equal     -3.67167216853305e-06*-0.102916922663918+3.66589276086587e-06*-0.975747902208094+-1.36514665811224e-05*${unitz}
variable           dot      equal     -3.67167216853305e-06*-0.102916922663918+3.66589276086587e-06*-0.975747902208094+-1.36514665811224e-05*-0.193194560911776
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -5.61720878576809e-07/${f_module}*${dir_module}
variable           cos      equal     -5.61720878576809e-07/1.46041941257589e-05*${dir_module}
variable           cos      equal     -5.61720878576809e-07/1.46041941257589e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0384629835607324)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60926880037151/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.2043103633685-90.0)
print              "The dot product: ${dot}"
The dot product: -5.61720878576809e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.2043103633685

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0532372978150502^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0532372978150502^2+-0.50473897117869^2+${new_z}^2)
variable           norm          equal     sqrt(-0.0532372978150502^2+-0.50473897117869^2+-0.0999364935258988^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.0532372978150502/${norm}
variable           unit_x        equal     -0.0532372978150502/0.517284198138144
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.50473897117869/${norm}
variable           unit_y        equal     -0.50473897117869/0.517284198138144
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0999364935258988/${norm}
variable           unit_z        equal     -0.0999364935258988/0.517284198138144
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.11239901606972+${delta}*${unit_x}
variable           x_new         equal     1.11239901606972+0.03*${unit_x}
variable           x_new         equal     1.11239901606972+0.03*-0.102916922663918
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.51994398408365+${delta}*${unit_y}
variable           y_new         equal     3.51994398408365+0.03*${unit_y}
variable           y_new         equal     3.51994398408365+0.03*-0.975747902208094
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2209318294068+${delta}*${unit_z}
variable           z_new         equal     31.2209318294068+0.03*${unit_z}
variable           z_new         equal     31.2209318294068+0.03*-0.193194560911776

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1093115083898  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1093115083898  y  3.49067154701741  z   ${z_new}
set                atom          288751    x  1.1093115083898  y  3.49067154701741  z   31.2151359925794
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0532372978150502  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.0532372978150502  -0.50473897117869  ${new_z}
fix                hold    carbon   planeforce   -0.0532372978150502  -0.50473897117869  -0.0999364935258988
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3185   -1152448.8            0   -1152448.8  0.062982972 -0.016780007  0.051197315 
    3383   -1152448.8            0   -1152448.8 2.8628219e-05 8.118791e-07 -1.935105e-05 
Loop time of 2.30363 on 104 procs for 198 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.82682355  -1152448.83122644  -1152448.83122644
  Force two-norm initial, final = 0.30003853 0.00010122731
  Force max component initial, final = 0.26404555 2.8628219e-05
  Final line search alpha, max atom move = 1.0000000 2.8628219e-05
  Iterations, force evaluations = 198 396

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61372    | 1.6659     | 2.158      |  34.6 | 72.31
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.043712   | 0.37524    | 1.1295     |  51.0 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3424e-05 | 0.003258   | 0.0069829  |   2.7 |  0.14
Other   |            | 0.2593     |            |       | 11.25

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114463 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238193
Ave neighs/atom = 28.530440
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1233187856505-${x_0}
variable           new_x         equal     1.1233187856505-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.48584911998974-${y_0}
variable           new_y         equal     3.48584911998974-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2320302942082-${z_0}
variable           new_z         equal     31.2320302942082-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04231752823427*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04231752823427*-0.04231752823427+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04231752823427*-0.04231752823427+-0.5388338352726*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04231752823427*-0.04231752823427+-0.5388338352726*-0.5388338352726+${new_z}*${new_z})
variable           module        equal     sqrt(-0.04231752823427*-0.04231752823427+-0.5388338352726*-0.5388338352726+-0.0888380287244992*${new_z})
variable           module        equal     sqrt(-0.04231752823427*-0.04231752823427+-0.5388338352726*-0.5388338352726+-0.0888380287244992*-0.0888380287244992)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.04231752823427/${module}
variable           unitx         equal     -0.04231752823427/0.547745260662375
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.5388338352726/${module}
variable           unity         equal     -0.5388338352726/0.547745260662375
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0888380287244992/${module}
variable           unitz         equal     -0.0888380287244992/0.547745260662375
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.86282193772837e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.86282193772837e-05*2.86282193772837e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.86282193772837e-05*2.86282193772837e-05+8.11879102056582e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.86282193772837e-05*2.86282193772837e-05+8.11879102056582e-07*8.11879102056582e-07+${fz}*${fz})
variable           f_module      equal     sqrt(2.86282193772837e-05*2.86282193772837e-05+8.11879102056582e-07*8.11879102056582e-07+-1.93510498067645e-05*${fz})
variable           f_module      equal     sqrt(2.86282193772837e-05*2.86282193772837e-05+8.11879102056582e-07*8.11879102056582e-07+-1.93510498067645e-05*-1.93510498067645e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0772576803003214*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0772576803003214*-0.0772576803003214+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0772576803003214*-0.0772576803003214+-0.983730712012006*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0772576803003214*-0.0772576803003214+-0.983730712012006*-0.983730712012006+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0772576803003214*-0.0772576803003214+-0.983730712012006*-0.983730712012006+-0.162188584921884*${unitz})
variable           dir_module    equal     sqrt(-0.0772576803003214*-0.0772576803003214+-0.983730712012006*-0.983730712012006+-0.162188584921884*-0.162188584921884)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.86282193772837e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.86282193772837e-05*-0.0772576803003214+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.86282193772837e-05*-0.0772576803003214+8.11879102056582e-07*${unity}+${fz}*${unitz}
variable           dot      equal     2.86282193772837e-05*-0.0772576803003214+8.11879102056582e-07*-0.983730712012006+${fz}*${unitz}
variable           dot      equal     2.86282193772837e-05*-0.0772576803003214+8.11879102056582e-07*-0.983730712012006+-1.93510498067645e-05*${unitz}
variable           dot      equal     2.86282193772837e-05*-0.0772576803003214+8.11879102056582e-07*-0.983730712012006+-1.93510498067645e-05*-0.162188584921884
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.28099157560591e-07/${f_module}*${dir_module}
variable           cos      equal     1.28099157560591e-07/3.45643923860108e-05*${dir_module}
variable           cos      equal     1.28099157560591e-07/3.45643923860108e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0037061018209143)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56709021648993/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7876555211155-90.0)
print              "The dot product: ${dot}"
The dot product: 1.28099157560591e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7876555211155

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04231752823427^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04231752823427^2+-0.5388338352726^2+${new_z}^2)
variable           norm          equal     sqrt(-0.04231752823427^2+-0.5388338352726^2+-0.0888380287244992^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.04231752823427/${norm}
variable           unit_x        equal     -0.04231752823427/0.547745260662375
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.5388338352726/${norm}
variable           unit_y        equal     -0.5388338352726/0.547745260662375
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0888380287244992/${norm}
variable           unit_z        equal     -0.0888380287244992/0.547745260662375
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1233187856505+${delta}*${unit_x}
variable           x_new         equal     1.1233187856505+0.03*${unit_x}
variable           x_new         equal     1.1233187856505+0.03*-0.0772576803003214
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.48584911998974+${delta}*${unit_y}
variable           y_new         equal     3.48584911998974+0.03*${unit_y}
variable           y_new         equal     3.48584911998974+0.03*-0.983730712012006
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2320302942082+${delta}*${unit_z}
variable           z_new         equal     31.2320302942082+0.03*${unit_z}
variable           z_new         equal     31.2320302942082+0.03*-0.162188584921884

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12100105524149  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.12100105524149  y  3.45633719862938  z   ${z_new}
set                atom          288751    x  1.12100105524149  y  3.45633719862938  z   31.2271646366605
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04231752823427  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.04231752823427  -0.5388338352726  ${new_z}
fix                hold    carbon   planeforce   -0.04231752823427  -0.5388338352726  -0.0888380287244992
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3383   -1152448.8            0   -1152448.8   0.05372911 -0.013560271  0.056654224 
    3568   -1152448.8            0   -1152448.8 -1.0185902e-05 1.4030935e-06 -3.6582541e-06 
Loop time of 2.13699 on 104 procs for 185 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
       -1152448.769833  -1152448.77422838  -1152448.77422838
  Force two-norm initial, final = 0.30739738 0.00015028254
  Force max component initial, final = 0.27479643 2.7385123e-05
  Final line search alpha, max atom move = 1.0000000 2.7385123e-05
  Iterations, force evaluations = 185 370

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56984    | 1.5591     | 2.0184     |  33.5 | 72.96
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031946   | 0.35158    | 1.0673     |  49.8 | 16.45
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2099e-05 | 0.0030492  | 0.0065994  |   2.6 |  0.14
Other   |            | 0.2233     |            |       | 10.45

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.10 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114463 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238194
Ave neighs/atom = 28.530443
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.13260438874868-${x_0}
variable           new_x         equal     1.13260438874868-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.45264720284227-${y_0}
variable           new_y         equal     3.45264720284227-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2440185697147-${z_0}
variable           new_z         equal     31.2440185697147-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03303192513609*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03303192513609*-0.03303192513609+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03303192513609*-0.03303192513609+-0.57203575242007*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03303192513609*-0.03303192513609+-0.57203575242007*-0.57203575242007+${new_z}*${new_z})
variable           module        equal     sqrt(-0.03303192513609*-0.03303192513609+-0.57203575242007*-0.57203575242007+-0.0768497532179993*${new_z})
variable           module        equal     sqrt(-0.03303192513609*-0.03303192513609+-0.57203575242007*-0.57203575242007+-0.0768497532179993*-0.0768497532179993)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.03303192513609/${module}
variable           unitx         equal     -0.03303192513609/0.578119273761617
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.57203575242007/${module}
variable           unity         equal     -0.57203575242007/0.578119273761617
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0768497532179993/${module}
variable           unitz         equal     -0.0768497532179993/0.578119273761617
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.01859016339284e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.01859016339284e-05*-1.01859016339284e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.01859016339284e-05*-1.01859016339284e-05+1.40309351901757e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.01859016339284e-05*-1.01859016339284e-05+1.40309351901757e-06*1.40309351901757e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.01859016339284e-05*-1.01859016339284e-05+1.40309351901757e-06*1.40309351901757e-06+-3.65825409245777e-06*${fz})
variable           f_module      equal     sqrt(-1.01859016339284e-05*-1.01859016339284e-05+1.40309351901757e-06*1.40309351901757e-06+-3.65825409245777e-06*-3.65825409245777e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0571368688699185*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0571368688699185*-0.0571368688699185+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0571368688699185*-0.0571368688699185+-0.989477048045875*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0571368688699185*-0.0571368688699185+-0.989477048045875*-0.989477048045875+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0571368688699185*-0.0571368688699185+-0.989477048045875*-0.989477048045875+-0.132930619520718*${unitz})
variable           dir_module    equal     sqrt(-0.0571368688699185*-0.0571368688699185+-0.989477048045875*-0.989477048045875+-0.132930619520718*-0.132930619520718)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.01859016339284e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.01859016339284e-05*-0.0571368688699185+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.01859016339284e-05*-0.0571368688699185+1.40309351901757e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.01859016339284e-05*-0.0571368688699185+1.40309351901757e-06*-0.989477048045875+${fz}*${unitz}
variable           dot      equal     -1.01859016339284e-05*-0.0571368688699185+1.40309351901757e-06*-0.989477048045875+-3.65825409245777e-06*${unitz}
variable           dot      equal     -1.01859016339284e-05*-0.0571368688699185+1.40309351901757e-06*-0.989477048045875+-3.65825409245777e-06*-0.132930619520718
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.20044324475535e-07/${f_module}*${dir_module}
variable           cos      equal     -3.20044324475535e-07/1.09134818698781e-05*${dir_module}
variable           cos      equal     -3.20044324475535e-07/1.09134818698781e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0293255927202186)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.60012612443058/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.6804736184974-90.0)
print              "The dot product: ${dot}"
The dot product: -3.20044324475535e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.6804736184974

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03303192513609^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03303192513609^2+-0.57203575242007^2+${new_z}^2)
variable           norm          equal     sqrt(-0.03303192513609^2+-0.57203575242007^2+-0.0768497532179993^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.03303192513609/${norm}
variable           unit_x        equal     -0.03303192513609/0.578119273761617
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.57203575242007/${norm}
variable           unit_y        equal     -0.57203575242007/0.578119273761617
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0768497532179993/${norm}
variable           unit_z        equal     -0.0768497532179993/0.578119273761617
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.13260438874868+${delta}*${unit_x}
variable           x_new         equal     1.13260438874868+0.03*${unit_x}
variable           x_new         equal     1.13260438874868+0.03*-0.0571368688699185
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.45264720284227+${delta}*${unit_y}
variable           y_new         equal     3.45264720284227+0.03*${unit_y}
variable           y_new         equal     3.45264720284227+0.03*-0.989477048045875
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2440185697147+${delta}*${unit_z}
variable           z_new         equal     31.2440185697147+0.03*${unit_z}
variable           z_new         equal     31.2440185697147+0.03*-0.132930619520718

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13089028268258  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13089028268258  y  3.42296289140089  z   ${z_new}
set                atom          288751    x  1.13089028268258  y  3.42296289140089  z   31.2400306511291
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.03303192513609  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.03303192513609  -0.57203575242007  ${new_z}
fix                hold    carbon   planeforce   -0.03303192513609  -0.57203575242007  -0.0768497532179993
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3568   -1152448.7            0   -1152448.7  0.044060123 -0.010433298  0.058722752 
    3741   -1152448.7            0   -1152448.7 -8.8625125e-06 3.6421716e-06 -2.3301396e-05 
Loop time of 1.98984 on 104 procs for 173 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.70960034  -1152448.71392039  -1152448.71392039
  Force two-norm initial, final = 0.31391619 0.00028791856
  Force max component initial, final = 0.28457179 7.4465131e-05
  Final line search alpha, max atom move = 1.0000000 7.4465131e-05
  Iterations, force evaluations = 173 346

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53753    | 1.4553     | 1.8787     |  32.3 | 73.14
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033272   | 0.32502    | 0.98771    |  48.4 | 16.33
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0743e-05 | 0.0028532  | 0.0061507  |   2.5 |  0.14
Other   |            | 0.2067     |            |       | 10.39

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.13 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114462 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238194
Ave neighs/atom = 28.530443
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.14039175738264-${x_0}
variable           new_x         equal     1.14039175738264-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.42021648987734-${y_0}
variable           new_y         equal     3.42021648987734-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2563896868858-${z_0}
variable           new_z         equal     31.2563896868858-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02524455650213*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02524455650213*-0.02524455650213+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02524455650213*-0.02524455650213+-0.604466465385*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02524455650213*-0.02524455650213+-0.604466465385*-0.604466465385+${new_z}*${new_z})
variable           module        equal     sqrt(-0.02524455650213*-0.02524455650213+-0.604466465385*-0.604466465385+-0.0644786360468999*${new_z})
variable           module        equal     sqrt(-0.02524455650213*-0.02524455650213+-0.604466465385*-0.604466465385+-0.0644786360468999*-0.0644786360468999)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.02524455650213/${module}
variable           unitx         equal     -0.02524455650213/0.608419665949822
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.604466465385/${module}
variable           unity         equal     -0.604466465385/0.608419665949822
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0644786360468999/${module}
variable           unitz         equal     -0.0644786360468999/0.608419665949822
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.86251249922353e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.86251249922353e-06*-8.86251249922353e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.86251249922353e-06*-8.86251249922353e-06+3.64217157326634e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.86251249922353e-06*-8.86251249922353e-06+3.64217157326634e-06*3.64217157326634e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-8.86251249922353e-06*-8.86251249922353e-06+3.64217157326634e-06*3.64217157326634e-06+-2.33013956752874e-05*${fz})
variable           f_module      equal     sqrt(-8.86251249922353e-06*-8.86251249922353e-06+3.64217157326634e-06*3.64217157326634e-06+-2.33013956752874e-05*-2.33013956752874e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.041492012692785*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.041492012692785*-0.041492012692785+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.041492012692785*-0.041492012692785+-0.993502510214474*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.041492012692785*-0.041492012692785+-0.993502510214474*-0.993502510214474+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.041492012692785*-0.041492012692785+-0.993502510214474*-0.993502510214474+-0.105977238500732*${unitz})
variable           dir_module    equal     sqrt(-0.041492012692785*-0.041492012692785+-0.993502510214474*-0.993502510214474+-0.105977238500732*-0.105977238500732)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.86251249922353e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.86251249922353e-06*-0.041492012692785+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.86251249922353e-06*-0.041492012692785+3.64217157326634e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -8.86251249922353e-06*-0.041492012692785+3.64217157326634e-06*-0.993502510214474+${fz}*${unitz}
variable           dot      equal     -8.86251249922353e-06*-0.041492012692785+3.64217157326634e-06*-0.993502510214474+-2.33013956752874e-05*${unitz}
variable           dot      equal     -8.86251249922353e-06*-0.041492012692785+3.64217157326634e-06*-0.993502510214474+-2.33013956752874e-05*-0.105977238500732
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.81365552684302e-07/${f_module}*${dir_module}
variable           cos      equal     -7.81365552684302e-07/2.51945347641965e-05*${dir_module}
variable           cos      equal     -7.81365552684302e-07/2.51945347641965e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0310132955419636)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.6018145960478/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.7772159159918-90.0)
print              "The dot product: ${dot}"
The dot product: -7.81365552684302e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.7772159159918

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02524455650213^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02524455650213^2+-0.604466465385^2+${new_z}^2)
variable           norm          equal     sqrt(-0.02524455650213^2+-0.604466465385^2+-0.0644786360468999^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.02524455650213/${norm}
variable           unit_x        equal     -0.02524455650213/0.608419665949822
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.604466465385/${norm}
variable           unit_y        equal     -0.604466465385/0.608419665949822
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0644786360468999/${norm}
variable           unit_z        equal     -0.0644786360468999/0.608419665949822
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.14039175738264+${delta}*${unit_x}
variable           x_new         equal     1.14039175738264+0.03*${unit_x}
variable           x_new         equal     1.14039175738264+0.03*-0.041492012692785
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.42021648987734+${delta}*${unit_y}
variable           y_new         equal     3.42021648987734+0.03*${unit_y}
variable           y_new         equal     3.42021648987734+0.03*-0.993502510214474
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2563896868858+${delta}*${unit_z}
variable           z_new         equal     31.2563896868858+0.03*${unit_z}
variable           z_new         equal     31.2563896868858+0.03*-0.105977238500732

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13914699700186  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.13914699700186  y  3.39041141457091  z   ${z_new}
set                atom          288751    x  1.13914699700186  y  3.39041141457091  z   31.2532103697308
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02524455650213  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.02524455650213  -0.604466465385  ${new_z}
fix                hold    carbon   planeforce   -0.02524455650213  -0.604466465385  -0.0644786360468999
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3741   -1152448.6            0   -1152448.6  0.035449738 -0.0079903667  0.061027901 
    3989   -1152448.7            0   -1152448.7 1.3952019e-05 -9.7574732e-07 3.6848483e-06 
Loop time of 2.88937 on 104 procs for 248 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.64706876  -1152448.68360205  -1152448.68360205
  Force two-norm initial, final = 0.32721722 0.000106682
  Force max component initial, final = 0.29366221 3.6686405e-05
  Final line search alpha, max atom move = 1.0000000 3.6686405e-05
  Iterations, force evaluations = 248 496

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.78088    | 2.0931     | 2.6981     |  38.4 | 72.44
Neigh   | 1.0116e-05 | 0.002958   | 0.0042387  |   2.2 |  0.10
Comm    | 0.044134   | 0.47025    | 1.4084     |  57.4 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9465e-05 | 0.004086   | 0.0087558  |   3.0 |  0.14
Other   |            | 0.319      |            |       | 11.04

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.17 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114446 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238199
Ave neighs/atom = 28.530461
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.1531102939591-${x_0}
variable           new_x         equal     1.1531102939591-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.38614327432789-${y_0}
variable           new_y         equal     3.38614327432789-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.2877559268955-${z_0}
variable           new_z         equal     31.2877559268955-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01252601992567*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01252601992567*-0.01252601992567+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01252601992567*-0.01252601992567+-0.63853968093445*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01252601992567*-0.01252601992567+-0.63853968093445*-0.63853968093445+${new_z}*${new_z})
variable           module        equal     sqrt(-0.01252601992567*-0.01252601992567+-0.63853968093445*-0.63853968093445+-0.0331123960372004*${new_z})
variable           module        equal     sqrt(-0.01252601992567*-0.01252601992567+-0.63853968093445*-0.63853968093445+-0.0331123960372004*-0.0331123960372004)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.01252601992567/${module}
variable           unitx         equal     -0.01252601992567/0.639520332807622
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.63853968093445/${module}
variable           unity         equal     -0.63853968093445/0.639520332807622
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0331123960372004/${module}
variable           unitz         equal     -0.0331123960372004/0.639520332807622
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39520193083865e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39520193083865e-05*1.39520193083865e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39520193083865e-05*1.39520193083865e-05+-9.75747316564426e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.39520193083865e-05*1.39520193083865e-05+-9.75747316564426e-07*-9.75747316564426e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.39520193083865e-05*1.39520193083865e-05+-9.75747316564426e-07*-9.75747316564426e-07+3.68484829155535e-06*${fz})
variable           f_module      equal     sqrt(1.39520193083865e-05*1.39520193083865e-05+-9.75747316564426e-07*-9.75747316564426e-07+3.68484829155535e-06*3.68484829155535e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0195865858880175*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0195865858880175*-0.0195865858880175+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0195865858880175*-0.0195865858880175+-0.998466582182201*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0195865858880175*-0.0195865858880175+-0.998466582182201*-0.998466582182201+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.0195865858880175*-0.0195865858880175+-0.998466582182201*-0.998466582182201+-0.0517769245769409*${unitz})
variable           dir_module    equal     sqrt(-0.0195865858880175*-0.0195865858880175+-0.998466582182201*-0.998466582182201+-0.0517769245769409*-0.0517769245769409)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.39520193083865e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.39520193083865e-05*-0.0195865858880175+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.39520193083865e-05*-0.0195865858880175+-9.75747316564426e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.39520193083865e-05*-0.0195865858880175+-9.75747316564426e-07*-0.998466582182201+${fz}*${unitz}
variable           dot      equal     1.39520193083865e-05*-0.0195865858880175+-9.75747316564426e-07*-0.998466582182201+3.68484829155535e-06*${unitz}
variable           dot      equal     1.39520193083865e-05*-0.0195865858880175+-9.75747316564426e-07*-0.998466582182201+3.68484829155535e-06*-0.0517769245769409
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.10188551679215e-07/${f_module}*${dir_module}
variable           cos      equal     5.10188551679215e-07/1.44633686442388e-05*${dir_module}
variable           cos      equal     5.10188551679215e-07/1.44633686442388e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0352745314199288)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.53551447596965/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(87.9784988543032-90.0)
print              "The dot product: ${dot}"
The dot product: 5.10188551679215e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 87.9784988543032

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01252601992567^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01252601992567^2+-0.63853968093445^2+${new_z}^2)
variable           norm          equal     sqrt(-0.01252601992567^2+-0.63853968093445^2+-0.0331123960372004^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.01252601992567/${norm}
variable           unit_x        equal     -0.01252601992567/0.639520332807622
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.63853968093445/${norm}
variable           unit_y        equal     -0.63853968093445/0.639520332807622
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0331123960372004/${norm}
variable           unit_z        equal     -0.0331123960372004/0.639520332807622
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.1531102939591+${delta}*${unit_x}
variable           x_new         equal     1.1531102939591+0.03*${unit_x}
variable           x_new         equal     1.1531102939591+0.03*-0.0195865858880175
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.38614327432789+${delta}*${unit_y}
variable           y_new         equal     3.38614327432789+0.03*${unit_y}
variable           y_new         equal     3.38614327432789+0.03*-0.998466582182201
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.2877559268955+${delta}*${unit_z}
variable           z_new         equal     31.2877559268955+0.03*${unit_z}
variable           z_new         equal     31.2877559268955+0.03*-0.0517769245769409

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15252269638246  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15252269638246  y  3.35618927686242  z   ${z_new}
set                atom          288751    x  1.15252269638246  y  3.35618927686242  z   31.2862026191582
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01252601992567  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.01252601992567  -0.63853968093445  ${new_z}
fix                hold    carbon   planeforce   -0.01252601992567  -0.63853968093445  -0.0331123960372004
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3989   -1152448.6            0   -1152448.6  0.026175597 -0.0044408767  0.075735985 
    4000   -1152448.6            0   -1152448.6 0.00053968962 -4.2784089e-05 0.00062089061 
    4163   -1152448.6            0   -1152448.6  1.91956e-05 -9.0301548e-07 1.0152293e-05 
Loop time of 2.01434 on 104 procs for 174 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.63735935  -1152448.64272239  -1152448.64272239
  Force two-norm initial, final = 0.34500441 0.00024409949
  Force max component initial, final = 0.30717643 8.6502546e-05
  Final line search alpha, max atom move = 1.0000000 8.6502546e-05
  Iterations, force evaluations = 174 348

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53432    | 1.4641     | 1.8922     |  32.6 | 72.69
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035907   | 0.32755    | 0.99211    |  48.7 | 16.26
Output  | 0.0001337  | 0.00013742 | 0.00021773 |   0.0 |  0.01
Modify  | 2.0877e-05 | 0.002864   | 0.0061353  |   2.5 |  0.14
Other   |            | 0.2197     |            |       | 10.90

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.15964325329328-${x_0}
variable           new_x         equal     1.15964325329328-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.35509525672013-${y_0}
variable           new_y         equal     3.35509525672013-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3046060905981-${z_0}
variable           new_z         equal     31.3046060905981-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00599306059148996*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00599306059148996*-0.00599306059148996+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00599306059148996*-0.00599306059148996+-0.66958769854221*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00599306059148996*-0.00599306059148996+-0.66958769854221*-0.66958769854221+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00599306059148996*-0.00599306059148996+-0.66958769854221*-0.66958769854221+-0.0162622323346007*${new_z})
variable           module        equal     sqrt(-0.00599306059148996*-0.00599306059148996+-0.66958769854221*-0.66958769854221+-0.0162622323346007*-0.0162622323346007)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00599306059148996/${module}
variable           unitx         equal     -0.00599306059148996/0.669811960937405
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.66958769854221/${module}
variable           unity         equal     -0.66958769854221/0.669811960937405
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.0162622323346007/${module}
variable           unitz         equal     -0.0162622323346007/0.669811960937405
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9195600313423e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9195600313423e-05*1.9195600313423e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9195600313423e-05*1.9195600313423e-05+-9.0301548008038e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.9195600313423e-05*1.9195600313423e-05+-9.0301548008038e-07*-9.0301548008038e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.9195600313423e-05*1.9195600313423e-05+-9.0301548008038e-07*-9.0301548008038e-07+1.01522929359858e-05*${fz})
variable           f_module      equal     sqrt(1.9195600313423e-05*1.9195600313423e-05+-9.0301548008038e-07*-9.0301548008038e-07+1.01522929359858e-05*1.01522929359858e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00894737768358547*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00894737768358547*-0.00894737768358547+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00894737768358547*-0.00894737768358547+-0.999665186039853*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00894737768358547*-0.00894737768358547+-0.999665186039853*-0.999665186039853+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00894737768358547*-0.00894737768358547+-0.999665186039853*-0.999665186039853+-0.0242788025341345*${unitz})
variable           dir_module    equal     sqrt(-0.00894737768358547*-0.00894737768358547+-0.999665186039853*-0.999665186039853+-0.0242788025341345*-0.0242788025341345)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.9195600313423e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.9195600313423e-05*-0.00894737768358547+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.9195600313423e-05*-0.00894737768358547+-9.0301548008038e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.9195600313423e-05*-0.00894737768358547+-9.0301548008038e-07*-0.999665186039853+${fz}*${unitz}
variable           dot      equal     1.9195600313423e-05*-0.00894737768358547+-9.0301548008038e-07*-0.999665186039853+1.01522929359858e-05*${unitz}
variable           dot      equal     1.9195600313423e-05*-0.00894737768358547+-9.0301548008038e-07*-0.999665186039853+1.01522929359858e-05*-0.0242788025341345
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.84477336562585e-07/${f_module}*${dir_module}
variable           cos      equal     4.84477336562585e-07/2.17337424344731e-05*${dir_module}
variable           cos      equal     4.84477336562585e-07/2.17337424344731e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0222914823815216)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54850299785633/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.7226863405233-90.0)
print              "The dot product: ${dot}"
The dot product: 4.84477336562585e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.7226863405233

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00599306059148996^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00599306059148996^2+-0.66958769854221^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00599306059148996^2+-0.66958769854221^2+-0.0162622323346007^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00599306059148996/${norm}
variable           unit_x        equal     -0.00599306059148996/0.669811960937405
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.66958769854221/${norm}
variable           unit_y        equal     -0.66958769854221/0.669811960937405
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.0162622323346007/${norm}
variable           unit_z        equal     -0.0162622323346007/0.669811960937405
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.15964325329328+${delta}*${unit_x}
variable           x_new         equal     1.15964325329328+0.03*${unit_x}
variable           x_new         equal     1.15964325329328+0.03*-0.00894737768358547
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.35509525672013+${delta}*${unit_y}
variable           y_new         equal     3.35509525672013+0.03*${unit_y}
variable           y_new         equal     3.35509525672013+0.03*-0.999665186039853
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3046060905981+${delta}*${unit_z}
variable           z_new         equal     31.3046060905981+0.03*${unit_z}
variable           z_new         equal     31.3046060905981+0.03*-0.0242788025341345

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15937483196277  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.15937483196277  y  3.32510530113893  z   ${z_new}
set                atom          288751    x  1.15937483196277  y  3.32510530113893  z   31.3038777265221
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00599306059148996  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00599306059148996  -0.66958769854221  ${new_z}
fix                hold    carbon   planeforce   -0.00599306059148996  -0.66958769854221  -0.0162622323346007
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4163   -1152448.6            0   -1152448.6  0.011612071 -0.0010505932  0.038978195 
    4381   -1152448.6            0   -1152448.6 -2.6028583e-07 -2.4146602e-08 1.0901441e-06 
Loop time of 2.538 on 104 procs for 218 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.59563341  -1152448.60128046  -1152448.60128046
  Force two-norm initial, final = 0.34938599 5.7819224e-05
  Force max component initial, final = 0.31454328 2.0682494e-05
  Final line search alpha, max atom move = 1.0000000 2.0682494e-05
  Iterations, force evaluations = 218 436

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6749     | 1.8403     | 2.3732     |  36.5 | 72.51
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040597   | 0.42027    | 1.2707     |  53.8 | 16.56
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5886e-05 | 0.0035905  | 0.0077445  |   2.8 |  0.14
Other   |            | 0.2739     |            |       | 10.79

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16290526213203-${x_0}
variable           new_x         equal     1.16290526213203-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.32484035244317-${y_0}
variable           new_y         equal     3.32484035244317-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3134857743115-${z_0}
variable           new_z         equal     31.3134857743115-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00273105175274013*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00273105175274013*-0.00273105175274013+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00273105175274013*-0.00273105175274013+-0.69984260281917*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00273105175274013*-0.00273105175274013+-0.69984260281917*-0.69984260281917+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00273105175274013*-0.00273105175274013+-0.69984260281917*-0.69984260281917+-0.00738254862120158*${new_z})
variable           module        equal     sqrt(-0.00273105175274013*-0.00273105175274013+-0.69984260281917*-0.69984260281917+-0.00738254862120158*-0.00738254862120158)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00273105175274013/${module}
variable           unitx         equal     -0.00273105175274013/0.69988686899279
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.69984260281917/${module}
variable           unity         equal     -0.69984260281917/0.69988686899279
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00738254862120158/${module}
variable           unitz         equal     -0.00738254862120158/0.69988686899279
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60285826166437e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60285826166437e-07*-2.60285826166437e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60285826166437e-07*-2.60285826166437e-07+-2.41466018435257e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60285826166437e-07*-2.60285826166437e-07+-2.41466018435257e-08*-2.41466018435257e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-2.60285826166437e-07*-2.60285826166437e-07+-2.41466018435257e-08*-2.41466018435257e-08+1.09014407041615e-06*${fz})
variable           f_module      equal     sqrt(-2.60285826166437e-07*-2.60285826166437e-07+-2.41466018435257e-08*-2.41466018435257e-08+1.09014407041615e-06*1.09014407041615e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00390213314999094*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00390213314999094*-0.00390213314999094+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00390213314999094*-0.00390213314999094+-0.999936752387306*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00390213314999094*-0.00390213314999094+-0.999936752387306*-0.999936752387306+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00390213314999094*-0.00390213314999094+-0.999936752387306*-0.999936752387306+-0.0105482027857243*${unitz})
variable           dir_module    equal     sqrt(-0.00390213314999094*-0.00390213314999094+-0.999936752387306*-0.999936752387306+-0.0105482027857243*-0.0105482027857243)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60285826166437e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60285826166437e-07*-0.00390213314999094+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60285826166437e-07*-0.00390213314999094+-2.41466018435257e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -2.60285826166437e-07*-0.00390213314999094+-2.41466018435257e-08*-0.999936752387306+${fz}*${unitz}
variable           dot      equal     -2.60285826166437e-07*-0.00390213314999094+-2.41466018435257e-08*-0.999936752387306+1.09014407041615e-06*${unitz}
variable           dot      equal     -2.60285826166437e-07*-0.00390213314999094+-2.41466018435257e-08*-0.999936752387306+1.09014407041615e-06*-0.0105482027857243
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.36616838589568e-08/${f_module}*${dir_module}
variable           cos      equal     1.36616838589568e-08/1.12104677152527e-06*${dir_module}
variable           cos      equal     1.36616838589568e-08/1.12104677152527e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0121865422620762)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55860948287175/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.301745277619-90.0)
print              "The dot product: ${dot}"
The dot product: 1.36616838589568e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.301745277619

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00273105175274013^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00273105175274013^2+-0.69984260281917^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00273105175274013^2+-0.69984260281917^2+-0.00738254862120158^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00273105175274013/${norm}
variable           unit_x        equal     -0.00273105175274013/0.69988686899279
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.69984260281917/${norm}
variable           unit_y        equal     -0.69984260281917/0.69988686899279
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00738254862120158/${norm}
variable           unit_z        equal     -0.00738254862120158/0.69988686899279
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16290526213203+${delta}*${unit_x}
variable           x_new         equal     1.16290526213203+0.03*${unit_x}
variable           x_new         equal     1.16290526213203+0.03*-0.00390213314999094
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.32484035244317+${delta}*${unit_y}
variable           y_new         equal     3.32484035244317+0.03*${unit_y}
variable           y_new         equal     3.32484035244317+0.03*-0.999936752387306
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3134857743115+${delta}*${unit_z}
variable           z_new         equal     31.3134857743115+0.03*${unit_z}
variable           z_new         equal     31.3134857743115+0.03*-0.0105482027857243

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16278819813753  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16278819813753  y  3.29484224987155  z   ${z_new}
set                atom          288751    x  1.16278819813753  y  3.29484224987155  z   31.3131693282279
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00273105175274013  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00273105175274013  -0.69984260281917  ${new_z}
fix                hold    carbon   planeforce   -0.00273105175274013  -0.69984260281917  -0.00738254862120158
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4381   -1152448.6            0   -1152448.6 0.0045267961 -0.00021130385  0.018356333 
    4525   -1152448.6            0   -1152448.6 3.3113328e-06 -1.5231075e-08 2.1888562e-07 
Loop time of 1.65879 on 104 procs for 144 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.55491977  -1152448.55964674  -1152448.55964674
  Force two-norm initial, final = 0.35310947 0.00020989057
  Force max component initial, final = 0.32161465 8.1441705e-05
  Final line search alpha, max atom move = 1.0000000 8.1441705e-05
  Iterations, force evaluations = 144 288

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.44561    | 1.2123     | 1.565      |  29.6 | 73.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026526   | 0.2695     | 0.82418    |  44.4 | 16.25
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7199e-05 | 0.0023741  | 0.005112   |   2.3 |  0.14
Other   |            | 0.1746     |            |       | 10.52

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16433516855949-${x_0}
variable           new_x         equal     1.16433516855949-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.29479081514464-${y_0}
variable           new_y         equal     3.29479081514464-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3174729039267-${z_0}
variable           new_z         equal     31.3174729039267-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00130114532528003*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00130114532528003*-0.00130114532528003+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00130114532528003*-0.00130114532528003+-0.7298921401177*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00130114532528003*-0.00130114532528003+-0.7298921401177*-0.7298921401177+${new_z}*${new_z})
variable           module        equal     sqrt(-0.00130114532528003*-0.00130114532528003+-0.7298921401177*-0.7298921401177+-0.00339541900600082*${new_z})
variable           module        equal     sqrt(-0.00130114532528003*-0.00130114532528003+-0.7298921401177*-0.7298921401177+-0.00339541900600082*-0.00339541900600082)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.00130114532528003/${module}
variable           unitx         equal     -0.00130114532528003/0.729901197460985
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.7298921401177/${module}
variable           unity         equal     -0.7298921401177/0.729901197460985
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00339541900600082/${module}
variable           unitz         equal     -0.00339541900600082/0.729901197460985
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31133281972539e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31133281972539e-06*3.31133281972539e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31133281972539e-06*3.31133281972539e-06+-1.52310748973442e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31133281972539e-06*3.31133281972539e-06+-1.52310748973442e-08*-1.52310748973442e-08+${fz}*${fz})
variable           f_module      equal     sqrt(3.31133281972539e-06*3.31133281972539e-06+-1.52310748973442e-08*-1.52310748973442e-08+2.18885623842372e-07*${fz})
variable           f_module      equal     sqrt(3.31133281972539e-06*3.31133281972539e-06+-1.52310748973442e-08*-1.52310748973442e-08+2.18885623842372e-07*2.18885623842372e-07)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00178263212857598*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00178263212857598*-0.00178263212857598+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00178263212857598*-0.00178263212857598+-0.999987591000924*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00178263212857598*-0.00178263212857598+-0.999987591000924*-0.999987591000924+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00178263212857598*-0.00178263212857598+-0.999987591000924*-0.999987591000924+-0.00465188852657323*${unitz})
variable           dir_module    equal     sqrt(-0.00178263212857598*-0.00178263212857598+-0.999987591000924*-0.999987591000924+-0.00465188852657323*-0.00465188852657323)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31133281972539e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31133281972539e-06*-0.00178263212857598+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31133281972539e-06*-0.00178263212857598+-1.52310748973442e-08*${unity}+${fz}*${unitz}
variable           dot      equal     3.31133281972539e-06*-0.00178263212857598+-1.52310748973442e-08*-0.999987591000924+${fz}*${unitz}
variable           dot      equal     3.31133281972539e-06*-0.00178263212857598+-1.52310748973442e-08*-0.999987591000924+2.18885623842372e-07*${unitz}
variable           dot      equal     3.31133281972539e-06*-0.00178263212857598+-1.52310748973442e-08*-0.999987591000924+2.18885623842372e-07*-0.00465188852657323
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.30976609991514e-09/${f_module}*${dir_module}
variable           cos      equal     8.30976609991514e-09/3.31859427242287e-06*${dir_module}
variable           cos      equal     8.30976609991514e-09/3.31859427242287e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00250400182058058)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56829232235762/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.856531113862-90.0)
print              "The dot product: ${dot}"
The dot product: 8.30976609991514e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.856531113862

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00130114532528003^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00130114532528003^2+-0.7298921401177^2+${new_z}^2)
variable           norm          equal     sqrt(-0.00130114532528003^2+-0.7298921401177^2+-0.00339541900600082^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     -0.00130114532528003/${norm}
variable           unit_x        equal     -0.00130114532528003/0.729901197460985
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.7298921401177/${norm}
variable           unit_y        equal     -0.7298921401177/0.729901197460985
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     -0.00339541900600082/${norm}
variable           unit_z        equal     -0.00339541900600082/0.729901197460985
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16433516855949+${delta}*${unit_x}
variable           x_new         equal     1.16433516855949+0.03*${unit_x}
variable           x_new         equal     1.16433516855949+0.03*-0.00178263212857598
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.29479081514464+${delta}*${unit_y}
variable           y_new         equal     3.29479081514464+0.03*${unit_y}
variable           y_new         equal     3.29479081514464+0.03*-0.999987591000924
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3174729039267+${delta}*${unit_z}
variable           z_new         equal     31.3174729039267+0.03*${unit_z}
variable           z_new         equal     31.3174729039267+0.03*-0.00465188852657323

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16428168959563  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16428168959563  y  3.26479118741461  z   ${z_new}
set                atom          288751    x  1.16428168959563  y  3.26479118741461  z   31.3173333472709
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00130114532528003  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   -0.00130114532528003  -0.7298921401177  ${new_z}
fix                hold    carbon   planeforce   -0.00130114532528003  -0.7298921401177  -0.00339541900600082
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4525   -1152448.5            0   -1152448.5 0.0014684536 -3.8514803e-05 0.0077165676 
    4716   -1152448.5            0   -1152448.5 -3.3801747e-06 -8.6165737e-10 1.4805287e-06 
Loop time of 2.24391 on 104 procs for 191 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.50984506  -1152448.51453469  -1152448.51453469
  Force two-norm initial, final = 0.35723784 0.00013299591
  Force max component initial, final = 0.32846843 3.8817189e-05
  Final line search alpha, max atom move = 1.0000000 3.8817189e-05
  Iterations, force evaluations = 191 382

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58988    | 1.6172     | 2.0919     |  34.2 | 72.07
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034642   | 0.36848    | 1.1107     |  50.2 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2814e-05 | 0.0031423  | 0.0067364  |   2.6 |  0.14
Other   |            | 0.2551     |            |       | 11.37

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16494811857627-${x_0}
variable           new_x         equal     1.16494811857627-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.26478120796606-${y_0}
variable           new_y         equal     3.26478120796606-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3192231877054-${z_0}
variable           new_z         equal     31.3192231877054-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000688195308500061*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000688195308500061*-0.000688195308500061+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000688195308500061*-0.000688195308500061+-0.75990174729628*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000688195308500061*-0.000688195308500061+-0.75990174729628*-0.75990174729628+${new_z}*${new_z})
variable           module        equal     sqrt(-0.000688195308500061*-0.000688195308500061+-0.75990174729628*-0.75990174729628+-0.00164513522729948*${new_z})
variable           module        equal     sqrt(-0.000688195308500061*-0.000688195308500061+-0.75990174729628*-0.75990174729628+-0.00164513522729948*-0.00164513522729948)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     -0.000688195308500061/${module}
variable           unitx         equal     -0.000688195308500061/0.759903839723579
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.75990174729628/${module}
variable           unity         equal     -0.75990174729628/0.759903839723579
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     -0.00164513522729948/${module}
variable           unitz         equal     -0.00164513522729948/0.759903839723579
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.38017471474552e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.38017471474552e-06*-3.38017471474552e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.38017471474552e-06*-3.38017471474552e-06+-8.61657367212598e-10*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.38017471474552e-06*-3.38017471474552e-06+-8.61657367212598e-10*-8.61657367212598e-10+${fz}*${fz})
variable           f_module      equal     sqrt(-3.38017471474552e-06*-3.38017471474552e-06+-8.61657367212598e-10*-8.61657367212598e-10+1.48052874619449e-06*${fz})
variable           f_module      equal     sqrt(-3.38017471474552e-06*-3.38017471474552e-06+-8.61657367212598e-10*-8.61657367212598e-10+1.48052874619449e-06*1.48052874619449e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00090563472971843*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00090563472971843*-0.00090563472971843+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00090563472971843*-0.00090563472971843+-0.999997246457789*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00090563472971843*-0.00090563472971843+-0.999997246457789*-0.999997246457789+${unitz}*${unitz})
variable           dir_module    equal     sqrt(-0.00090563472971843*-0.00090563472971843+-0.999997246457789*-0.999997246457789+-0.00216492553570714*${unitz})
variable           dir_module    equal     sqrt(-0.00090563472971843*-0.00090563472971843+-0.999997246457789*-0.999997246457789+-0.00216492553570714*-0.00216492553570714)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.38017471474552e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.38017471474552e-06*-0.00090563472971843+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.38017471474552e-06*-0.00090563472971843+-8.61657367212598e-10*${unity}+${fz}*${unitz}
variable           dot      equal     -3.38017471474552e-06*-0.00090563472971843+-8.61657367212598e-10*-0.999997246457789+${fz}*${unitz}
variable           dot      equal     -3.38017471474552e-06*-0.00090563472971843+-8.61657367212598e-10*-0.999997246457789+1.48052874619449e-06*${unitz}
variable           dot      equal     -3.38017471474552e-06*-0.00090563472971843+-8.61657367212598e-10*-0.999997246457789+1.48052874619449e-06*-0.00216492553570714
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     7.1762411980737e-10/${f_module}*${dir_module}
variable           cos      equal     7.1762411980737e-10/3.69019609410755e-06*${dir_module}
variable           cos      equal     7.1762411980737e-10/3.69019609410755e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000194467746836885)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57060185904683/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9888578187844-90.0)
print              "The dot product: ${dot}"
The dot product: 7.1762411980737e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9888578187844

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4716   -1152448.5            0   -1152448.5 0.0028072959    1.5766804 0.0073361131 
    4954   -1152449.3            0   -1152449.3 1.1559309e-05 -1.7354165e-08 -9.3640225e-06 
Loop time of 2.73403 on 104 procs for 238 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.51453469  -1152449.34502404  -1152449.34502404
  Force two-norm initial, final = 1.5767000 5.6081798e-05
  Force max component initial, final = 1.5766804 1.1559309e-05
  Final line search alpha, max atom move = 1.0000000 1.1559309e-05
  Iterations, force evaluations = 238 470

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.74329    | 1.9785     | 2.5614     |  37.3 | 72.37
Neigh   | 4.0275e-05 | 0.011854   | 0.017091   |   4.5 |  0.43
Comm    | 0.045354   | 0.44307    | 1.3388     |  55.7 | 16.21
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.6635e-05 | 0.002518   | 0.0064895  |   3.1 |  0.09
Other   |            | 0.298      |            |       | 10.90

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 4
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563714344662-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563714344662-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563714344662-1.16563631388477)^2+(4.02468232196146-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563714344662-1.16563631388477)^2+(4.02468232196146-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563714344662-1.16563631388477)^2+(4.02468232196146-4.02468295526234)^2+(31.3208553842368-${z_0})^2)
variable                displacement      equal     sqrt((1.16563714344662-1.16563631388477)^2+(4.02468232196146-4.02468295526234)^2+(31.3208553842368-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
next seed
print ${seed}
print 15
15
variable iteration delete
jump TaR.in loop
variable                seed              loop      ${seed_start} ${seed_stop}
variable                seed              loop      1 ${seed_stop}
variable                seed              loop      1 15
variable                iteration         loop      ${iter_tot} # The maximum ietration number per random direction
variable                iteration         loop      80 

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:94)
  using 1 OpenMP thread(s) per MPI task
units                   metal
atom_style              atomic
dimension                   3
boundary                p p p
atom_modify             map array sort 0 0.0

read_data               poslmp_carbon.dat
Reading data file ...
  orthogonal box = (-122.39241 -121.13707 -37.090501) to (122.39241 121.13707 37.090501)
  13 by 4 by 2 MPI processor grid
  reading atoms ...
  288751 atoms
  read_data CPU = 0.341 seconds

variable                zmax     equal    zhi
variable                zmin     equal    zlo

region                  inner   cylinder   z  1.16564  0.67298333  100.0  ${zmin}  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  ${zmax}  units  box
region                  inner   cylinder   z  1.16564  0.67298333  100.0  -37.0905005093422  37.0905005093422  units  box
group                   inner   region     inner
199981 atoms in group inner
group                   outer   subtract   all  inner
88770 atoms in group outer
group                   carbon  type       2
1 atoms in group carbon

pair_style              eam/alloy
pair_coeff              * * FeC-Becquart2013.eam.txt Fe C
neighbor                0.3 bin
neigh_modify            delay 0 check yes every 1

compute                 force     carbon   reduce  sum  fx fy fz
variable                fx    equal    c_force[1]
variable                fy    equal    c_force[2]
variable                fz    equal    c_force[3]

fix                     force    outer    setforce      0.0 0.0 0.0
thermo_style            custom   step     v_fx v_fy v_fz pe ke etotal
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.6
  ghost atom cutoff = 5.6
  binsize = 2.8, bins = 88 87 27
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair eam/alloy, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step v_fx v_fy v_fz PotEng KinEng TotEng 
       0    9.2589799   0.21494723   -8.1285502   -1152446.2            0   -1152446.2 
     158 3.4751302e-05 -2.6982236e-06 -3.5571577e-05   -1152449.3            0   -1152449.3 
Loop time of 1.83671 on 104 procs for 158 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152446.23480014  -1152449.34502403  -1152449.34502403
  Force two-norm initial, final = 22.470913 0.00017697811
  Force max component initial, final = 15.081250 5.4906483e-05
  Final line search alpha, max atom move = 1.0000000 5.4906483e-05
  Iterations, force evaluations = 158 314

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.50345    | 1.324      | 1.7138     |  30.2 | 72.09
Neigh   | 3.0055e-05 | 0.0088868  | 0.012933   |   3.9 |  0.48
Comm    | 0.03435    | 0.29638    | 0.88479    |  45.5 | 16.14
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6911e-05 | 0.001681   | 0.0043283  |   2.6 |  0.09
Other   |            | 0.2058     |            |       | 11.20

Nlocal:        2776.45 ave        3960 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.01 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      115434 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238207
Ave neighs/atom = 28.530488
Neighbor list builds = 3
Dangerous builds = 0
#write_data              minimize.dat
#quit

variable                fx_0  equal    ${fx}
variable                fx_0  equal    3.47513020311288e-05
variable                fy_0  equal    ${fy}
variable                fy_0  equal    -2.69822356213363e-06
variable                fz_0  equal    ${fz}
variable                fz_0  equal    -3.55715772927896e-05


variable                x0    equal    x[v_i]
variable                y0    equal    y[v_i]
variable                z0    equal    z[v_i]

variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                x     equal    x[v_i]+v_delta*random(-1.0,1.0,15)
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                y     equal    y[v_i]+v_delta*random(-1.0,1.0,15)
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,${seed})
variable                z     equal    z[v_i]+v_delta*random(-1.0,1.0,15)
variable                x_0    equal     ${x0}
variable                x_0    equal     1.16563631388477
variable                y_0    equal     ${y0}
variable                y_0    equal     4.02468295526234
variable                z_0    equal     ${z0}
variable                z_0    equal     31.3208683229327
variable                x_1    equal     $x
variable                x_1    equal     1.16578169676593
variable                y_1    equal     $y
variable                y_1    equal     4.01414068293301
variable                z_1    equal     $z
variable                z_1    equal     31.327552327001

set                atom        $i    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  ${x_1}  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.16578169676593  y  ${y_1}  z  ${z_1}
set                atom        288751    x  1.16578169676593  y  4.01414068293301  z  ${z_1}
set                atom        288751    x  1.16578169676593  y  4.01414068293301  z  31.327552327001
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
variable           vector_x          equal     ${x_1}-${x_0}
variable           vector_x          equal     1.16578169676593-${x_0}
variable           vector_x          equal     1.16578169676593-1.16563631388477
variable           vector_y          equal     ${y_1}-${y_0}
variable           vector_y          equal     4.01414068293301-${y_0}
variable           vector_y          equal     4.01414068293301-4.02468295526234
variable           vector_z          equal     ${z_1}-${z_0}
variable           vector_z          equal     31.327552327001-${z_0}
variable           vector_z          equal     31.327552327001-31.3208683229327

#dump               1     all   custom   1000   dump_minimize.atom.* id type x y z
#dump_modify        1     element  Fe C
thermo_style       custom   step  pe ke etotal v_fx v_fy v_fz
thermo             1000

fix                hold    carbon   planeforce   ${vector_x}  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.00014538288115995  ${vector_y}  ${vector_z}
fix                hold    carbon   planeforce   0.00014538288115995  -0.0105422723293298  ${vector_z}
fix                hold    carbon   planeforce   0.00014538288115995  -0.0105422723293298  0.00668400406830116
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     158   -1152449.3            0   -1152449.3  0.012763978 -0.010564038 -0.016939641 
     379   -1152449.3            0   -1152449.3 -2.9640364e-06 8.6969472e-07 1.4361868e-06 
Loop time of 2.55016 on 104 procs for 221 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.34413066  -1152449.34469581  -1152449.34469581
  Force two-norm initial, final = 0.10669252 1.8275467e-05
  Force max component initial, final = 0.056154326 3.9714395e-06
  Final line search alpha, max atom move = 1.0000000 3.9714395e-06
  Iterations, force evaluations = 221 442

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.6823     | 1.8538     | 2.408      |  36.5 | 72.70
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039654   | 0.41593    | 1.2497     |  54.2 | 16.31
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5132e-05 | 0.0036239  | 0.0077502  |   2.8 |  0.14
Other   |            | 0.2768     |            |       | 10.85

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115469 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16593309404353-${x_0}
variable           new_x         equal     1.16593309404353-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     4.01390950790823-${y_0}
variable           new_y         equal     4.01390950790823-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.327184415699-${z_0}
variable           new_z         equal     31.327184415699-31.3208683229327

label iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000296780158759891^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000296780158759891^2+-0.0107734473541097^2+${new_z}^2)
variable           norm          equal     sqrt(0.000296780158759891^2+-0.0107734473541097^2+0.0063160927663013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000296780158759891/${norm}
variable           unit_x        equal     0.000296780158759891/0.0124919283614232
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0107734473541097/${norm}
variable           unit_y        equal     -0.0107734473541097/0.0124919283614232
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0063160927663013/${norm}
variable           unit_z        equal     0.0063160927663013/0.0124919283614232
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16593309404353+${delta}*${unit_x}
variable           x_new         equal     1.16593309404353+0.03*${unit_x}
variable           x_new         equal     1.16593309404353+0.03*0.0237577538209704
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     4.01390950790823+${delta}*${unit_y}
variable           y_new         equal     4.01390950790823+0.03*${unit_y}
variable           y_new         equal     4.01390950790823+0.03*-0.862432687925076
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.327184415699+${delta}*${unit_z}
variable           z_new         equal     31.327184415699+0.03*${unit_z}
variable           z_new         equal     31.327184415699+0.03*0.505613911924621

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16664582665816  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16664582665816  y  3.98803652727048  z   ${z_new}
set                atom          288751    x  1.16664582665816  y  3.98803652727048  z   31.3423528330567
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000296780158759891  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000296780158759891  -0.0107734473541097  ${new_z}
fix                hold    carbon   planeforce   0.000296780158759891  -0.0107734473541097  0.0063160927663013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     379   -1152449.3            0   -1152449.3  0.028695662 -0.023428564 -0.041310777 
     591   -1152449.3            0   -1152449.3 1.3480144e-05 -4.6394184e-06 -8.5469247e-06 
Loop time of 2.44856 on 104 procs for 212 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33802257  -1152449.34123312  -1152449.34123312
  Force two-norm initial, final = 0.25392918 7.3471319e-05
  Force max component initial, final = 0.14420521 1.3480144e-05
  Final line search alpha, max atom move = 1.0000000 1.3480144e-05
  Iterations, force evaluations = 212 424

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.65242    | 1.7777     | 2.3093     |  35.7 | 72.60
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.039777   | 0.39578    | 1.1863     |  53.3 | 16.16
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.5008e-05 | 0.0034806  | 0.0074407  |   2.8 |  0.14
Other   |            | 0.2716     |            |       | 11.09

Nlocal:        2776.45 ave        3961 max           0 min
Histogram: 8 4 4 0 6 10 8 2 28 34
Nghost:        3879.02 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115458 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16710949417802-${x_0}
variable           new_x         equal     1.16710949417802-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.98730359787408-${y_0}
variable           new_y         equal     3.98730359787408-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3410808784031-${z_0}
variable           new_z         equal     31.3410808784031-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00147318029324994*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00147318029324994*0.00147318029324994+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00147318029324994*0.00147318029324994+-0.0373793573882599*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00147318029324994*0.00147318029324994+-0.0373793573882599*-0.0373793573882599+${new_z}*${new_z})
variable           module        equal     sqrt(0.00147318029324994*0.00147318029324994+-0.0373793573882599*-0.0373793573882599+0.0202125554704011*${new_z})
variable           module        equal     sqrt(0.00147318029324994*0.00147318029324994+-0.0373793573882599*-0.0373793573882599+0.0202125554704011*0.0202125554704011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00147318029324994/${module}
variable           unitx         equal     0.00147318029324994/0.0425198073558632
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0373793573882599/${module}
variable           unity         equal     -0.0373793573882599/0.0425198073558632
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0202125554704011/${module}
variable           unitz         equal     0.0202125554704011/0.0425198073558632
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.34801441023458e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.34801441023458e-05*1.34801441023458e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.34801441023458e-05*1.34801441023458e-05+-4.63941843506841e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.34801441023458e-05*1.34801441023458e-05+-4.63941843506841e-06*-4.63941843506841e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.34801441023458e-05*1.34801441023458e-05+-4.63941843506841e-06*-4.63941843506841e-06+-8.54692474730467e-06*${fz})
variable           f_module      equal     sqrt(1.34801441023458e-05*1.34801441023458e-05+-4.63941843506841e-06*-4.63941843506841e-06+-8.54692474730467e-06*-8.54692474730467e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0346469183390314*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0346469183390314*0.0346469183390314+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0346469183390314*0.0346469183390314+-0.879104580023586*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0346469183390314*0.0346469183390314+-0.879104580023586*-0.879104580023586+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0346469183390314*0.0346469183390314+-0.879104580023586*-0.879104580023586+0.475367992644819*${unitz})
variable           dir_module    equal     sqrt(0.0346469183390314*0.0346469183390314+-0.879104580023586*-0.879104580023586+0.475367992644819*0.475367992644819)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.34801441023458e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.34801441023458e-05*0.0346469183390314+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.34801441023458e-05*0.0346469183390314+-4.63941843506841e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.34801441023458e-05*0.0346469183390314+-4.63941843506841e-06*-0.879104580023586+${fz}*${unitz}
variable           dot      equal     1.34801441023458e-05*0.0346469183390314+-4.63941843506841e-06*-0.879104580023586+-8.54692474730467e-06*${unitz}
variable           dot      equal     1.34801441023458e-05*0.0346469183390314+-4.63941843506841e-06*-0.879104580023586+-8.54692474730467e-06*0.475367992644819
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.826449864143e-07/${f_module}*${dir_module}
variable           cos      equal     4.826449864143e-07/1.66219256126283e-05*${dir_module}
variable           cos      equal     4.826449864143e-07/1.66219256126283e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0290366469963995)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.54175559798676/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(88.3360888053098-90.0)
print              "The dot product: ${dot}"
The dot product: 4.826449864143e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 88.3360888053098

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00147318029324994^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00147318029324994^2+-0.0373793573882599^2+${new_z}^2)
variable           norm          equal     sqrt(0.00147318029324994^2+-0.0373793573882599^2+0.0202125554704011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00147318029324994/${norm}
variable           unit_x        equal     0.00147318029324994/0.0425198073558632
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0373793573882599/${norm}
variable           unit_y        equal     -0.0373793573882599/0.0425198073558632
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0202125554704011/${norm}
variable           unit_z        equal     0.0202125554704011/0.0425198073558632
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16710949417802+${delta}*${unit_x}
variable           x_new         equal     1.16710949417802+0.03*${unit_x}
variable           x_new         equal     1.16710949417802+0.03*0.0346469183390314
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.98730359787408+${delta}*${unit_y}
variable           y_new         equal     3.98730359787408+0.03*${unit_y}
variable           y_new         equal     3.98730359787408+0.03*-0.879104580023586
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3410808784031+${delta}*${unit_z}
variable           z_new         equal     31.3410808784031+0.03*${unit_z}
variable           z_new         equal     31.3410808784031+0.03*0.475367992644819

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16814890172819  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16814890172819  y  3.96093046047337  z   ${z_new}
set                atom          288751    x  1.16814890172819  y  3.96093046047337  z   31.3553419181824
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00147318029324994  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00147318029324994  -0.0373793573882599  ${new_z}
fix                hold    carbon   planeforce   0.00147318029324994  -0.0373793573882599  0.0202125554704011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     591   -1152449.3            0   -1152449.3   0.02858327 -0.022619001 -0.043912905 
     782   -1152449.3            0   -1152449.3 -2.6766697e-05 7.9309417e-06 1.6617675e-05 
Loop time of 2.20544 on 104 procs for 191 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.33085719  -1152449.33402093  -1152449.33402093
  Force two-norm initial, final = 0.25204053 0.00014677341
  Force max component initial, final = 0.15225044 2.6766697e-05
  Final line search alpha, max atom move = 1.0000000 2.6766697e-05
  Iterations, force evaluations = 191 382

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58632    | 1.6026     | 2.0757     |  34.0 | 72.67
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.034968   | 0.36519    | 1.0894     |  50.2 | 16.56
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.2266e-05 | 0.0031402  | 0.0067473  |   2.6 |  0.14
Other   |            | 0.2345     |            |       | 10.63

Nlocal:        2776.45 ave        3959 max           0 min
Histogram: 8 4 4 0 4 12 8 2 28 34
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115399 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16889498041471-${x_0}
variable           new_x         equal     1.16889498041471-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.95976417724823-${y_0}
variable           new_y         equal     3.95976417724823-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3531307170321-${z_0}
variable           new_z         equal     31.3531307170321-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00325866652993989*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00325866652993989*0.00325866652993989+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00325866652993989*0.00325866652993989+-0.0649187780141096*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00325866652993989*0.00325866652993989+-0.0649187780141096*-0.0649187780141096+${new_z}*${new_z})
variable           module        equal     sqrt(0.00325866652993989*0.00325866652993989+-0.0649187780141096*-0.0649187780141096+0.0322623940994013*${new_z})
variable           module        equal     sqrt(0.00325866652993989*0.00325866652993989+-0.0649187780141096*-0.0649187780141096+0.0322623940994013*0.0322623940994013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00325866652993989/${module}
variable           unitx         equal     0.00325866652993989/0.0725667190895639
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0649187780141096/${module}
variable           unity         equal     -0.0649187780141096/0.0725667190895639
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0322623940994013/${module}
variable           unitz         equal     0.0322623940994013/0.0725667190895639
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67666968414054e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67666968414054e-05*-2.67666968414054e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67666968414054e-05*-2.67666968414054e-05+7.930941678288e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67666968414054e-05*-2.67666968414054e-05+7.930941678288e-06*7.930941678288e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.67666968414054e-05*-2.67666968414054e-05+7.930941678288e-06*7.930941678288e-06+1.66176748017198e-05*${fz})
variable           f_module      equal     sqrt(-2.67666968414054e-05*-2.67666968414054e-05+7.930941678288e-06*7.930941678288e-06+1.66176748017198e-05*1.66176748017198e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0449057993915634*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0449057993915634*0.0449057993915634+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0449057993915634*0.0449057993915634+-0.894608145835903*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0449057993915634*0.0449057993915634+-0.894608145835903*-0.894608145835903+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0449057993915634*0.0449057993915634+-0.894608145835903*-0.894608145835903+0.444589399991781*${unitz})
variable           dir_module    equal     sqrt(0.0449057993915634*0.0449057993915634+-0.894608145835903*-0.894608145835903+0.444589399991781*0.444589399991781)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67666968414054e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67666968414054e-05*0.0449057993915634+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67666968414054e-05*0.0449057993915634+7.930941678288e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.67666968414054e-05*0.0449057993915634+7.930941678288e-06*-0.894608145835903+${fz}*${unitz}
variable           dot      equal     -2.67666968414054e-05*0.0449057993915634+7.930941678288e-06*-0.894608145835903+1.66176748017198e-05*${unitz}
variable           dot      equal     -2.67666968414054e-05*0.0449057993915634+7.930941678288e-06*-0.894608145835903+1.66176748017198e-05*0.444589399991781
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -9.09022878925714e-07/${f_module}*${dir_module}
variable           cos      equal     -9.09022878925714e-07/3.24885058369852e-05*${dir_module}
variable           cos      equal     -9.09022878925714e-07/3.24885058369852e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0279798302663361)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59877980911379/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.6033354329515-90.0)
print              "The dot product: ${dot}"
The dot product: -9.09022878925714e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.6033354329515

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00325866652993989^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00325866652993989^2+-0.0649187780141096^2+${new_z}^2)
variable           norm          equal     sqrt(0.00325866652993989^2+-0.0649187780141096^2+0.0322623940994013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00325866652993989/${norm}
variable           unit_x        equal     0.00325866652993989/0.0725667190895639
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0649187780141096/${norm}
variable           unit_y        equal     -0.0649187780141096/0.0725667190895639
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0322623940994013/${norm}
variable           unit_z        equal     0.0322623940994013/0.0725667190895639
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16889498041471+${delta}*${unit_x}
variable           x_new         equal     1.16889498041471+0.03*${unit_x}
variable           x_new         equal     1.16889498041471+0.03*0.0449057993915634
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.95976417724823+${delta}*${unit_y}
variable           y_new         equal     3.95976417724823+0.03*${unit_y}
variable           y_new         equal     3.95976417724823+0.03*-0.894608145835903
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3531307170321+${delta}*${unit_z}
variable           z_new         equal     31.3531307170321+0.03*${unit_z}
variable           z_new         equal     31.3531307170321+0.03*0.444589399991781

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17024215439646  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17024215439646  y  3.93292593287315  z   ${z_new}
set                atom          288751    x  1.17024215439646  y  3.93292593287315  z   31.3664683990319
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00325866652993989  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00325866652993989  -0.0649187780141096  ${new_z}
fix                hold    carbon   planeforce   0.00325866652993989  -0.0649187780141096  0.0322623940994013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     782   -1152449.3            0   -1152449.3  0.033730862 -0.022384035 -0.048448414 
     961   -1152449.3            0   -1152449.3 -2.5473472e-05 1.3479086e-05 2.969573e-05 
Loop time of 2.07567 on 104 procs for 179 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.32007999  -1152449.32318867  -1152449.32318867
  Force two-norm initial, final = 0.25123626 0.00018753108
  Force max component initial, final = 0.1604449 2.9695730e-05
  Final line search alpha, max atom move = 1.0000000 2.9695730e-05
  Iterations, force evaluations = 179 358

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.55094    | 1.5074     | 1.9603     |  32.9 | 72.62
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.032904   | 0.33587    | 1.0155     |  49.2 | 16.18
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1874e-05 | 0.0029441  | 0.0063094  |   2.6 |  0.14
Other   |            | 0.2295     |            |       | 11.05

Nlocal:        2776.45 ave        3955 max           0 min
Histogram: 8 4 4 0 4 12 8 0 30 34
Nghost:        3879.13 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115298 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17259705203894-${x_0}
variable           new_x         equal     1.17259705203894-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.93125076149045-${y_0}
variable           new_y         equal     3.93125076149045-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3628597423122-${z_0}
variable           new_z         equal     31.3628597423122-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00696073815416987*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00696073815416987*0.00696073815416987+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00696073815416987*0.00696073815416987+-0.0934321937718896*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00696073815416987*0.00696073815416987+-0.0934321937718896*-0.0934321937718896+${new_z}*${new_z})
variable           module        equal     sqrt(0.00696073815416987*0.00696073815416987+-0.0934321937718896*-0.0934321937718896+0.0419914193794995*${new_z})
variable           module        equal     sqrt(0.00696073815416987*0.00696073815416987+-0.0934321937718896*-0.0934321937718896+0.0419914193794995*0.0419914193794995)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00696073815416987/${module}
variable           unitx         equal     0.00696073815416987/0.10267086251797
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.0934321937718896/${module}
variable           unity         equal     -0.0934321937718896/0.10267086251797
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0419914193794995/${module}
variable           unitz         equal     0.0419914193794995/0.10267086251797
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.54734723936164e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.54734723936164e-05*-2.54734723936164e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.54734723936164e-05*-2.54734723936164e-05+1.34790858380738e-05*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.54734723936164e-05*-2.54734723936164e-05+1.34790858380738e-05*1.34790858380738e-05+${fz}*${fz})
variable           f_module      equal     sqrt(-2.54734723936164e-05*-2.54734723936164e-05+1.34790858380738e-05*1.34790858380738e-05+2.96957296563585e-05*${fz})
variable           f_module      equal     sqrt(-2.54734723936164e-05*-2.54734723936164e-05+1.34790858380738e-05*1.34790858380738e-05+2.96957296563585e-05*2.96957296563585e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0677966268467995*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0677966268467995*0.0677966268467995+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0677966268467995*0.0677966268467995+-0.910016644260066*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0677966268467995*0.0677966268467995+-0.910016644260066*-0.910016644260066+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0677966268467995*0.0677966268467995+-0.910016644260066*-0.910016644260066+0.40899061671124*${unitz})
variable           dir_module    equal     sqrt(0.0677966268467995*0.0677966268467995+-0.910016644260066*-0.910016644260066+0.40899061671124*0.40899061671124)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.54734723936164e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.54734723936164e-05*0.0677966268467995+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.54734723936164e-05*0.0677966268467995+1.34790858380738e-05*${unity}+${fz}*${unitz}
variable           dot      equal     -2.54734723936164e-05*0.0677966268467995+1.34790858380738e-05*-0.910016644260066+${fz}*${unitz}
variable           dot      equal     -2.54734723936164e-05*0.0677966268467995+1.34790858380738e-05*-0.910016644260066+2.96957296563585e-05*${unitz}
variable           dot      equal     -2.54734723936164e-05*0.0677966268467995+1.34790858380738e-05*-0.910016644260066+2.96957296563585e-05*0.40899061671124
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.84793317857524e-06/${f_module}*${dir_module}
variable           cos      equal     -1.84793317857524e-06/4.13813957067911e-05*${dir_module}
variable           cos      equal     -1.84793317857524e-06/4.13813957067911e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0446561346472896)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.6154673167669/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(92.559459192067-90.0)
print              "The dot product: ${dot}"
The dot product: -1.84793317857524e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 92.559459192067

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00696073815416987^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00696073815416987^2+-0.0934321937718896^2+${new_z}^2)
variable           norm          equal     sqrt(0.00696073815416987^2+-0.0934321937718896^2+0.0419914193794995^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00696073815416987/${norm}
variable           unit_x        equal     0.00696073815416987/0.10267086251797
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.0934321937718896/${norm}
variable           unit_y        equal     -0.0934321937718896/0.10267086251797
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0419914193794995/${norm}
variable           unit_z        equal     0.0419914193794995/0.10267086251797
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17259705203894+${delta}*${unit_x}
variable           x_new         equal     1.17259705203894+0.03*${unit_x}
variable           x_new         equal     1.17259705203894+0.03*0.0677966268467995
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.93125076149045+${delta}*${unit_y}
variable           y_new         equal     3.93125076149045+0.03*${unit_y}
variable           y_new         equal     3.93125076149045+0.03*-0.910016644260066
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3628597423122+${delta}*${unit_z}
variable           z_new         equal     31.3628597423122+0.03*${unit_z}
variable           z_new         equal     31.3628597423122+0.03*0.40899061671124

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17463095084434  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17463095084434  y  3.90395026216265  z   ${z_new}
set                atom          288751    x  1.17463095084434  y  3.90395026216265  z   31.3751294608135
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00696073815416987  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00696073815416987  -0.0934321937718896  ${new_z}
fix                hold    carbon   planeforce   0.00696073815416987  -0.0934321937718896  0.0419914193794995
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
     961   -1152449.3            0   -1152449.3  0.041731092 -0.021474102 -0.054698119 
    1000   -1152449.3            0   -1152449.3 -0.00049816431 0.00015107821 0.00041873222 
    1143   -1152449.3            0   -1152449.3 1.8341142e-05 -6.1905318e-06 -1.6814456e-05 
Loop time of 2.10122 on 104 procs for 182 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.30606643  -1152449.30922033  -1152449.30922033
  Force two-norm initial, final = 0.25179211 0.00012510952
  Force max component initial, final = 0.1690014 2.2920056e-05
  Final line search alpha, max atom move = 1.0000000 2.2920056e-05
  Iterations, force evaluations = 182 364

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56198    | 1.5286     | 1.9842     |  33.1 | 72.75
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035559   | 0.3445     | 1.0204     |  48.9 | 16.40
Output  | 0.00010216 | 0.00010913 | 0.00021427 |   0.0 |  0.01
Modify  | 2.0854e-05 | 0.0029899  | 0.0063888  |   2.6 |  0.14
Other   |            | 0.2251     |            |       | 10.71

Nlocal:        2776.45 ave        3949 max           0 min
Histogram: 8 4 4 0 4 12 8 0 28 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      115083 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18080182690765-${x_0}
variable           new_x         equal     1.18080182690765-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.90184920737587-${y_0}
variable           new_y         equal     3.90184920737587-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3694316298291-${z_0}
variable           new_z         equal     31.3694316298291-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151655130228798*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151655130228798*0.0151655130228798+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151655130228798*0.0151655130228798+-0.12283374788647*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151655130228798*0.0151655130228798+-0.12283374788647*-0.12283374788647+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151655130228798*0.0151655130228798+-0.12283374788647*-0.12283374788647+0.0485633068964013*${new_z})
variable           module        equal     sqrt(0.0151655130228798*0.0151655130228798+-0.12283374788647*-0.12283374788647+0.0485633068964013*0.0485633068964013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0151655130228798/${module}
variable           unitx         equal     0.0151655130228798/0.132953063830053
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.12283374788647/${module}
variable           unity         equal     -0.12283374788647/0.132953063830053
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0485633068964013/${module}
variable           unitz         equal     0.0485633068964013/0.132953063830053
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83411424885911e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83411424885911e-05*1.83411424885911e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83411424885911e-05*1.83411424885911e-05+-6.19053182531255e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.83411424885911e-05*1.83411424885911e-05+-6.19053182531255e-06*-6.19053182531255e-06+${fz}*${fz})
variable           f_module      equal     sqrt(1.83411424885911e-05*1.83411424885911e-05+-6.19053182531255e-06*-6.19053182531255e-06+-1.68144556624577e-05*${fz})
variable           f_module      equal     sqrt(1.83411424885911e-05*1.83411424885911e-05+-6.19053182531255e-06*-6.19053182531255e-06+-1.68144556624577e-05*-1.68144556624577e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.114066668236131*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.114066668236131*0.114066668236131+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.114066668236131*0.114066668236131+-0.923888057543992*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.114066668236131*0.114066668236131+-0.923888057543992*-0.923888057543992+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.114066668236131*0.114066668236131+-0.923888057543992*-0.923888057543992+0.365266549693637*${unitz})
variable           dir_module    equal     sqrt(0.114066668236131*0.114066668236131+-0.923888057543992*-0.923888057543992+0.365266549693637*0.365266549693637)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.83411424885911e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.83411424885911e-05*0.114066668236131+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.83411424885911e-05*0.114066668236131+-6.19053182531255e-06*${unity}+${fz}*${unitz}
variable           dot      equal     1.83411424885911e-05*0.114066668236131+-6.19053182531255e-06*-0.923888057543992+${fz}*${unitz}
variable           dot      equal     1.83411424885911e-05*0.114066668236131+-6.19053182531255e-06*-0.923888057543992+-1.68144556624577e-05*${unitz}
variable           dot      equal     1.83411424885911e-05*0.114066668236131+-6.19053182531255e-06*-0.923888057543992+-1.68144556624577e-05*0.365266549693637
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.66971323376744e-06/${f_module}*${dir_module}
variable           cos      equal     1.66971323376744e-06/2.56407119887839e-05*${dir_module}
variable           cos      equal     1.66971323376744e-06/2.56407119887839e-05*0.999999999999998
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0651196126885176)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.50563060207821/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.2662790048225-90.0)
print              "The dot product: ${dot}"
The dot product: 1.66971323376744e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.2662790048225

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0151655130228798^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0151655130228798^2+-0.12283374788647^2+${new_z}^2)
variable           norm          equal     sqrt(0.0151655130228798^2+-0.12283374788647^2+0.0485633068964013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0151655130228798/${norm}
variable           unit_x        equal     0.0151655130228798/0.132953063830053
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.12283374788647/${norm}
variable           unit_y        equal     -0.12283374788647/0.132953063830053
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0485633068964013/${norm}
variable           unit_z        equal     0.0485633068964013/0.132953063830053
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18080182690765+${delta}*${unit_x}
variable           x_new         equal     1.18080182690765+0.03*${unit_x}
variable           x_new         equal     1.18080182690765+0.03*0.114066668236131
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.90184920737587+${delta}*${unit_y}
variable           y_new         equal     3.90184920737587+0.03*${unit_y}
variable           y_new         equal     3.90184920737587+0.03*-0.923888057543992
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3694316298291+${delta}*${unit_z}
variable           z_new         equal     31.3694316298291+0.03*${unit_z}
variable           z_new         equal     31.3694316298291+0.03*0.365266549693637

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18422382695473  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18422382695473  y  3.87413256564955  z   ${z_new}
set                atom          288751    x  1.18422382695473  y  3.87413256564955  z   31.3803896263199
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0151655130228798  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0151655130228798  -0.12283374788647  ${new_z}
fix                hold    carbon   planeforce   0.0151655130228798  -0.12283374788647  0.0485633068964013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1143   -1152449.3            0   -1152449.3  0.043641903 -0.016588705 -0.055587332 
    1296   -1152449.3            0   -1152449.3 -2.8561139e-05 7.5642788e-06  2.80519e-05 
Loop time of 1.7703 on 104 procs for 153 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.28925462  -1152449.29241913  -1152449.29241913
  Force two-norm initial, final = 0.24954998 0.00015023383
  Force max component initial, final = 0.17752021 3.4360326e-05
  Final line search alpha, max atom move = 1.0000000 3.4360326e-05
  Iterations, force evaluations = 153 306

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46831    | 1.2839     | 1.6703     |  30.4 | 72.52
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03101    | 0.28676    | 0.86687    |  45.4 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7516e-05 | 0.0025189  | 0.0053761  |   2.4 |  0.14
Other   |            | 0.1971     |            |       | 11.13

Nlocal:        2776.45 ave        3946 max           0 min
Histogram: 8 4 4 0 4 12 8 1 27 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114997 max           0 min
Histogram: 8 4 4 0 10 6 8 8 24 32

Total # of neighbors = 8238183
Ave neighs/atom = 28.530405
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19222565266861-${x_0}
variable           new_x         equal     1.19222565266861-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.87230599325006-${y_0}
variable           new_y         equal     3.87230599325006-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3732707427887-${z_0}
variable           new_z         equal     31.3732707427887-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0265893387838398*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0265893387838398*0.0265893387838398+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0265893387838398*0.0265893387838398+-0.15237696201228*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0265893387838398*0.0265893387838398+-0.15237696201228*-0.15237696201228+${new_z}*${new_z})
variable           module        equal     sqrt(0.0265893387838398*0.0265893387838398+-0.15237696201228*-0.15237696201228+0.0524024198560014*${new_z})
variable           module        equal     sqrt(0.0265893387838398*0.0265893387838398+-0.15237696201228*-0.15237696201228+0.0524024198560014*0.0524024198560014)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0265893387838398/${module}
variable           unitx         equal     0.0265893387838398/0.163314864895448
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.15237696201228/${module}
variable           unity         equal     -0.15237696201228/0.163314864895448
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0524024198560014/${module}
variable           unitz         equal     0.0524024198560014/0.163314864895448
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.85611390424502e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.85611390424502e-05*-2.85611390424502e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.85611390424502e-05*-2.85611390424502e-05+7.5642787714722e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.85611390424502e-05*-2.85611390424502e-05+7.5642787714722e-06*7.5642787714722e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.85611390424502e-05*-2.85611390424502e-05+7.5642787714722e-06*7.5642787714722e-06+2.80519001837174e-05*${fz})
variable           f_module      equal     sqrt(-2.85611390424502e-05*-2.85611390424502e-05+7.5642787714722e-06*7.5642787714722e-06+2.80519001837174e-05*2.80519001837174e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.162810279400237*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.162810279400237*0.162810279400237+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.162810279400237*0.162810279400237+-0.933025674728566*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.162810279400237*0.162810279400237+-0.933025674728566*-0.933025674728566+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.162810279400237*0.162810279400237+-0.933025674728566*-0.933025674728566+0.320867423118825*${unitz})
variable           dir_module    equal     sqrt(0.162810279400237*0.162810279400237+-0.933025674728566*-0.933025674728566+0.320867423118825*0.320867423118825)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.85611390424502e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.85611390424502e-05*0.162810279400237+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.85611390424502e-05*0.162810279400237+7.5642787714722e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.85611390424502e-05*0.162810279400237+7.5642787714722e-06*-0.933025674728566+${fz}*${unitz}
variable           dot      equal     -2.85611390424502e-05*0.162810279400237+7.5642787714722e-06*-0.933025674728566+2.80519001837174e-05*${unitz}
variable           dot      equal     -2.85611390424502e-05*0.162810279400237+7.5642787714722e-06*-0.933025674728566+2.80519001837174e-05*0.320867423118825
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.70677240654226e-06/${f_module}*${dir_module}
variable           cos      equal     -2.70677240654226e-06/4.07414540812176e-05*${dir_module}
variable           cos      equal     -2.70677240654226e-06/4.07414540812176e-05*0.999999999999997
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0664377957926179)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.63728309578322/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(93.8094112564922-90.0)
print              "The dot product: ${dot}"
The dot product: -2.70677240654226e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 93.8094112564922

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0265893387838398^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0265893387838398^2+-0.15237696201228^2+${new_z}^2)
variable           norm          equal     sqrt(0.0265893387838398^2+-0.15237696201228^2+0.0524024198560014^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0265893387838398/${norm}
variable           unit_x        equal     0.0265893387838398/0.163314864895448
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.15237696201228/${norm}
variable           unit_y        equal     -0.15237696201228/0.163314864895448
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0524024198560014/${norm}
variable           unit_z        equal     0.0524024198560014/0.163314864895448
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19222565266861+${delta}*${unit_x}
variable           x_new         equal     1.19222565266861+0.03*${unit_x}
variable           x_new         equal     1.19222565266861+0.03*0.162810279400237
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.87230599325006+${delta}*${unit_y}
variable           y_new         equal     3.87230599325006+0.03*${unit_y}
variable           y_new         equal     3.87230599325006+0.03*-0.933025674728566
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3732707427887+${delta}*${unit_z}
variable           z_new         equal     31.3732707427887+0.03*${unit_z}
variable           z_new         equal     31.3732707427887+0.03*0.320867423118825

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19710996105062  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19710996105062  y  3.8443152230082  z   ${z_new}
set                atom          288751    x  1.19710996105062  y  3.8443152230082  z   31.3828967654823
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0265893387838398  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0265893387838398  -0.15237696201228  ${new_z}
fix                hold    carbon   planeforce   0.0265893387838398  -0.15237696201228  0.0524024198560014
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1296   -1152449.3            0   -1152449.3  0.035142484 -0.0093992952 -0.045163019 
    1414   -1152449.3            0   -1152449.3 5.3920013e-05 -9.0379059e-06 -5.3640006e-05 
Loop time of 1.35885 on 104 procs for 118 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.26969937  -1152449.27275218  -1152449.27275218
  Force two-norm initial, final = 0.24421945 0.00021847543
  Force max component initial, final = 0.18501095 5.5264808e-05
  Final line search alpha, max atom move = 1.0000000 5.5264808e-05
  Iterations, force evaluations = 118 236

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.36239    | 0.99223    | 1.2822     |  26.7 | 73.02
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02171    | 0.22395    | 0.67472    |  40.0 | 16.48
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.3987e-05 | 0.0019414  | 0.0041547  |   2.1 |  0.14
Other   |            | 0.1407     |            |       | 10.36

Nlocal:        2776.45 ave        3942 max           0 min
Histogram: 8 4 4 0 4 12 8 2 26 36
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114878 max           0 min
Histogram: 8 4 4 0 10 6 8 8 22 34

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20458300367594-${x_0}
variable           new_x         equal     1.20458300367594-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.84316305886753-${y_0}
variable           new_y         equal     3.84316305886753-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3757546042111-${z_0}
variable           new_z         equal     31.3757546042111-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0389466897911699*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0389466897911699*0.0389466897911699+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0389466897911699*0.0389466897911699+-0.18151989639481*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0389466897911699*0.0389466897911699+-0.18151989639481*-0.18151989639481+${new_z}*${new_z})
variable           module        equal     sqrt(0.0389466897911699*0.0389466897911699+-0.18151989639481*-0.18151989639481+0.0548862812783995*${new_z})
variable           module        equal     sqrt(0.0389466897911699*0.0389466897911699+-0.18151989639481*-0.18151989639481+0.0548862812783995*0.0548862812783995)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0389466897911699/${module}
variable           unitx         equal     0.0389466897911699/0.193594476433197
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.18151989639481/${module}
variable           unity         equal     -0.18151989639481/0.193594476433197
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0548862812783995/${module}
variable           unitz         equal     0.0548862812783995/0.193594476433197
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.39200128763198e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.39200128763198e-05*5.39200128763198e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.39200128763198e-05*5.39200128763198e-05+-9.03790589267233e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(5.39200128763198e-05*5.39200128763198e-05+-9.03790589267233e-06*-9.03790589267233e-06+${fz}*${fz})
variable           f_module      equal     sqrt(5.39200128763198e-05*5.39200128763198e-05+-9.03790589267233e-06*-9.03790589267233e-06+-5.36400063245167e-05*${fz})
variable           f_module      equal     sqrt(5.39200128763198e-05*5.39200128763198e-05+-9.03790589267233e-06*-9.03790589267233e-06+-5.36400063245167e-05*-5.36400063245167e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.201176658077893*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.201176658077893*0.201176658077893+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.201176658077893*0.201176658077893+-0.937629521973714*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.201176658077893*0.201176658077893+-0.937629521973714*-0.937629521973714+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.201176658077893*0.201176658077893+-0.937629521973714*-0.937629521973714+0.283511607818723*${unitz})
variable           dir_module    equal     sqrt(0.201176658077893*0.201176658077893+-0.937629521973714*-0.937629521973714+0.283511607818723*0.283511607818723)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.39200128763198e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.39200128763198e-05*0.201176658077893+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     5.39200128763198e-05*0.201176658077893+-9.03790589267233e-06*${unity}+${fz}*${unitz}
variable           dot      equal     5.39200128763198e-05*0.201176658077893+-9.03790589267233e-06*-0.937629521973714+${fz}*${unitz}
variable           dot      equal     5.39200128763198e-05*0.201176658077893+-9.03790589267233e-06*-0.937629521973714+-5.36400063245167e-05*${unitz}
variable           dot      equal     5.39200128763198e-05*0.201176658077893+-9.03790589267233e-06*-0.937629521973714+-5.36400063245167e-05*0.283511607818723
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.11409093929455e-06/${f_module}*${dir_module}
variable           cos      equal     4.11409093929455e-06/7.65917868312359e-05*${dir_module}
variable           cos      equal     4.11409093929455e-06/7.65917868312359e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0537145183511599)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.517055944885/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(86.9209029271417-90.0)
print              "The dot product: ${dot}"
The dot product: 4.11409093929455e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 86.9209029271417

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0389466897911699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0389466897911699^2+-0.18151989639481^2+${new_z}^2)
variable           norm          equal     sqrt(0.0389466897911699^2+-0.18151989639481^2+0.0548862812783995^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0389466897911699/${norm}
variable           unit_x        equal     0.0389466897911699/0.193594476433197
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.18151989639481/${norm}
variable           unit_y        equal     -0.18151989639481/0.193594476433197
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0548862812783995/${norm}
variable           unit_z        equal     0.0548862812783995/0.193594476433197
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20458300367594+${delta}*${unit_x}
variable           x_new         equal     1.20458300367594+0.03*${unit_x}
variable           x_new         equal     1.20458300367594+0.03*0.201176658077893
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.84316305886753+${delta}*${unit_y}
variable           y_new         equal     3.84316305886753+0.03*${unit_y}
variable           y_new         equal     3.84316305886753+0.03*-0.937629521973714
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3757546042111+${delta}*${unit_z}
variable           z_new         equal     31.3757546042111+0.03*${unit_z}
variable           z_new         equal     31.3757546042111+0.03*0.283511607818723

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21061830341828  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21061830341828  y  3.81503417320832  z   ${z_new}
set                atom          288751    x  1.21061830341828  y  3.81503417320832  z   31.3842599524457
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0389466897911699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0389466897911699  -0.18151989639481  ${new_z}
fix                hold    carbon   planeforce   0.0389466897911699  -0.18151989639481  0.0548862812783995
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1414   -1152449.2            0   -1152449.2  0.020267224 -0.0038917653  -0.02725224 
    1531   -1152449.3            0   -1152449.3 -2.3717608e-05 2.932773e-06 2.6529015e-05 
Loop time of 1.34524 on 104 procs for 117 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.24742481  -1152449.25036833  -1152449.25036833
  Force two-norm initial, final = 0.24036339 0.00017921235
  Force max component initial, final = 0.1912523 3.8193000e-05
  Final line search alpha, max atom move = 1.0000000 3.8193000e-05
  Iterations, force evaluations = 117 234

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.35778    | 0.98252    | 1.2694     |  26.7 | 73.04
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.022746   | 0.21805    | 0.65793    |  39.9 | 16.21
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5047e-05 | 0.001929   | 0.0041442  |   2.1 |  0.14
Other   |            | 0.1427     |            |       | 10.61

Nlocal:        2776.45 ave        3932 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114554 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238179
Ave neighs/atom = 28.530391
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21473849228258-${x_0}
variable           new_x         equal     1.21473849228258-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.81446742549403-${y_0}
variable           new_y         equal     3.81446742549403-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3794619647189-${z_0}
variable           new_z         equal     31.3794619647189-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0491021783978098*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0491021783978098*0.0491021783978098+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0491021783978098*0.0491021783978098+-0.21021552976831*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0491021783978098*0.0491021783978098+-0.21021552976831*-0.21021552976831+${new_z}*${new_z})
variable           module        equal     sqrt(0.0491021783978098*0.0491021783978098+-0.21021552976831*-0.21021552976831+0.0585936417861994*${new_z})
variable           module        equal     sqrt(0.0491021783978098*0.0491021783978098+-0.21021552976831*-0.21021552976831+0.0585936417861994*0.0585936417861994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0491021783978098/${module}
variable           unitx         equal     0.0491021783978098/0.223684616674797
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.21021552976831/${module}
variable           unity         equal     -0.21021552976831/0.223684616674797
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0585936417861994/${module}
variable           unitz         equal     0.0585936417861994/0.223684616674797
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.37176082149841e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.37176082149841e-05*-2.37176082149841e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.37176082149841e-05*-2.37176082149841e-05+2.93277301233165e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.37176082149841e-05*-2.37176082149841e-05+2.93277301233165e-06*2.93277301233165e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-2.37176082149841e-05*-2.37176082149841e-05+2.93277301233165e-06*2.93277301233165e-06+2.65290150694915e-05*${fz})
variable           f_module      equal     sqrt(-2.37176082149841e-05*-2.37176082149841e-05+2.93277301233165e-06*2.93277301233165e-06+2.65290150694915e-05*2.65290150694915e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.219515222493806*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.219515222493806*0.219515222493806+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.219515222493806*0.219515222493806+-0.939785367868775*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.219515222493806*0.219515222493806+-0.939785367868775*-0.939785367868775+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.219515222493806*0.219515222493806+-0.939785367868775*-0.939785367868775+0.261947570008292*${unitz})
variable           dir_module    equal     sqrt(0.219515222493806*0.219515222493806+-0.939785367868775*-0.939785367868775+0.261947570008292*0.261947570008292)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.37176082149841e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.37176082149841e-05*0.219515222493806+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.37176082149841e-05*0.219515222493806+2.93277301233165e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -2.37176082149841e-05*0.219515222493806+2.93277301233165e-06*-0.939785367868775+${fz}*${unitz}
variable           dot      equal     -2.37176082149841e-05*0.219515222493806+2.93277301233165e-06*-0.939785367868775+2.65290150694915e-05*${unitz}
variable           dot      equal     -2.37176082149841e-05*0.219515222493806+2.93277301233165e-06*-0.939785367868775+2.65290150694915e-05*0.261947570008292
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.01334217643621e-06/${f_module}*${dir_module}
variable           cos      equal     -1.01334217643621e-06/3.57059482094881e-05*${dir_module}
variable           cos      equal     -1.01334217643621e-06/3.57059482094881e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0283802063031878)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59918034422007/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.6262844040882-90.0)
print              "The dot product: ${dot}"
The dot product: -1.01334217643621e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.6262844040882

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0491021783978098^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0491021783978098^2+-0.21021552976831^2+${new_z}^2)
variable           norm          equal     sqrt(0.0491021783978098^2+-0.21021552976831^2+0.0585936417861994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0491021783978098/${norm}
variable           unit_x        equal     0.0491021783978098/0.223684616674797
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.21021552976831/${norm}
variable           unit_y        equal     -0.21021552976831/0.223684616674797
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0585936417861994/${norm}
variable           unit_z        equal     0.0585936417861994/0.223684616674797
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21473849228258+${delta}*${unit_x}
variable           x_new         equal     1.21473849228258+0.03*${unit_x}
variable           x_new         equal     1.21473849228258+0.03*0.219515222493806
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.81446742549403+${delta}*${unit_y}
variable           y_new         equal     3.81446742549403+0.03*${unit_y}
variable           y_new         equal     3.81446742549403+0.03*-0.939785367868775
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3794619647189+${delta}*${unit_z}
variable           z_new         equal     31.3794619647189+0.03*${unit_z}
variable           z_new         equal     31.3794619647189+0.03*0.261947570008292

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22132394895739  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22132394895739  y  3.78627386445797  z   ${z_new}
set                atom          288751    x  1.22132394895739  y  3.78627386445797  z   31.3873203918191
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0491021783978098  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0491021783978098  -0.21021552976831  ${new_z}
fix                hold    carbon   planeforce   0.0491021783978098  -0.21021552976831  0.0585936417861994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1531   -1152449.2            0   -1152449.2 0.0037591233 -0.0023979617 -0.011753322 
    1702   -1152449.2            0   -1152449.2 -2.8112564e-06 -5.0666969e-08 2.1740896e-06 
Loop time of 1.97691 on 104 procs for 171 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.22256318  -1152449.22542459  -1152449.22542459
  Force two-norm initial, final = 0.2393383 5.4955755e-05
  Force max component initial, final = 0.19686936 9.4141003e-06
  Final line search alpha, max atom move = 1.0000000 9.4141003e-06
  Iterations, force evaluations = 171 342

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.52796    | 1.4373     | 1.8598     |  32.1 | 72.71
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031298   | 0.32472    | 0.97915    |  48.1 | 16.43
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0118e-05 | 0.0028076  | 0.0060246  |   2.5 |  0.14
Other   |            | 0.212      |            |       | 10.73

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114489 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22151696350252-${x_0}
variable           new_x         equal     1.22151696350252-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.78557766807029-${y_0}
variable           new_y         equal     3.78557766807029-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3846609099655-${z_0}
variable           new_z         equal     31.3846609099655-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05588064961775*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05588064961775*0.05588064961775+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05588064961775*0.05588064961775+-0.23910528719205*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05588064961775*0.05588064961775+-0.23910528719205*-0.23910528719205+${new_z}*${new_z})
variable           module        equal     sqrt(0.05588064961775*0.05588064961775+-0.23910528719205*-0.23910528719205+0.0637925870328004*${new_z})
variable           module        equal     sqrt(0.05588064961775*0.05588064961775+-0.23910528719205*-0.23910528719205+0.0637925870328004*0.0637925870328004)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.05588064961775/${module}
variable           unitx         equal     0.05588064961775/0.253699585189318
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.23910528719205/${module}
variable           unity         equal     -0.23910528719205/0.253699585189318
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0637925870328004/${module}
variable           unitz         equal     0.0637925870328004/0.253699585189318
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81125638271464e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81125638271464e-06*-2.81125638271464e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81125638271464e-06*-2.81125638271464e-06+-5.06669692380141e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81125638271464e-06*-2.81125638271464e-06+-5.06669692380141e-08*-5.06669692380141e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-2.81125638271464e-06*-2.81125638271464e-06+-5.06669692380141e-08*-5.06669692380141e-08+2.17408962483319e-06*${fz})
variable           f_module      equal     sqrt(-2.81125638271464e-06*-2.81125638271464e-06+-5.06669692380141e-08*-5.06669692380141e-08+2.17408962483319e-06*2.17408962483319e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.220263070497534*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.220263070497534*0.220263070497534+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.220263070497534*0.220263070497534+-0.942474095941555*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.220263070497534*0.220263070497534+-0.942474095941555*-0.942474095941555+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.220263070497534*0.220263070497534+-0.942474095941555*-0.942474095941555+0.251449315477582*${unitz})
variable           dir_module    equal     sqrt(0.220263070497534*0.220263070497534+-0.942474095941555*-0.942474095941555+0.251449315477582*0.251449315477582)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81125638271464e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81125638271464e-06*0.220263070497534+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81125638271464e-06*0.220263070497534+-5.06669692380141e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -2.81125638271464e-06*0.220263070497534+-5.06669692380141e-08*-0.942474095941555+${fz}*${unitz}
variable           dot      equal     -2.81125638271464e-06*0.220263070497534+-5.06669692380141e-08*-0.942474095941555+2.17408962483319e-06*${unitz}
variable           dot      equal     -2.81125638271464e-06*0.220263070497534+-5.06669692380141e-08*-0.942474095941555+2.17408962483319e-06*0.251449315477582
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.47903088346026e-08/${f_module}*${dir_module}
variable           cos      equal     -2.47903088346026e-08/3.55420810982318e-06*${dir_module}
variable           cos      equal     -2.47903088346026e-08/3.55420810982318e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00697491763807716)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57777130098856/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.3996365835096-90.0)
print              "The dot product: ${dot}"
The dot product: -2.47903088346026e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.3996365835096

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05588064961775^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05588064961775^2+-0.23910528719205^2+${new_z}^2)
variable           norm          equal     sqrt(0.05588064961775^2+-0.23910528719205^2+0.0637925870328004^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.05588064961775/${norm}
variable           unit_x        equal     0.05588064961775/0.253699585189318
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.23910528719205/${norm}
variable           unit_y        equal     -0.23910528719205/0.253699585189318
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0637925870328004/${norm}
variable           unit_z        equal     0.0637925870328004/0.253699585189318
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22151696350252+${delta}*${unit_x}
variable           x_new         equal     1.22151696350252+0.03*${unit_x}
variable           x_new         equal     1.22151696350252+0.03*0.220263070497534
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.78557766807029+${delta}*${unit_y}
variable           y_new         equal     3.78557766807029+0.03*${unit_y}
variable           y_new         equal     3.78557766807029+0.03*-0.942474095941555
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3846609099655+${delta}*${unit_z}
variable           z_new         equal     31.3846609099655+0.03*${unit_z}
variable           z_new         equal     31.3846609099655+0.03*0.251449315477582

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22812485561745  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22812485561745  y  3.75730344519204  z   ${z_new}
set                atom          288751    x  1.22812485561745  y  3.75730344519204  z   31.3922043894298
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05588064961775  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05588064961775  -0.23910528719205  ${new_z}
fix                hold    carbon   planeforce   0.05588064961775  -0.23910528719205  0.0637925870328004
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1702   -1152449.2            0   -1152449.2  -0.01025195 -0.0030379348 -0.0024062453 
    1839   -1152449.2            0   -1152449.2 3.1447079e-06 7.9888634e-08 -2.4552465e-06 
Loop time of 1.58495 on 104 procs for 137 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.19498197   -1152449.1978426   -1152449.1978426
  Force two-norm initial, final = 0.24098399 0.00015033805
  Force max component initial, final = 0.20275884 3.1533996e-05
  Final line search alpha, max atom move = 1.0000000 3.1533996e-05
  Iterations, force evaluations = 137 274

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4264     | 1.153      | 1.4901     |  28.6 | 72.75
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.029069   | 0.25678    | 0.7732     |  42.8 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6349e-05 | 0.0022562  | 0.0048523  |   2.2 |  0.14
Other   |            | 0.1729     |            |       | 10.91

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.10 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114492 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22478534423623-${x_0}
variable           new_x         equal     1.22478534423623-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.75613542537432-${y_0}
variable           new_y         equal     3.75613542537432-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3907517810172-${z_0}
variable           new_z         equal     31.3907517810172-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0591490303514599*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0591490303514599*0.0591490303514599+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0591490303514599*0.0591490303514599+-0.26854752988802*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0591490303514599*0.0591490303514599+-0.26854752988802*-0.26854752988802+${new_z}*${new_z})
variable           module        equal     sqrt(0.0591490303514599*0.0591490303514599+-0.26854752988802*-0.26854752988802+0.0698834580845009*${new_z})
variable           module        equal     sqrt(0.0591490303514599*0.0591490303514599+-0.26854752988802*-0.26854752988802+0.0698834580845009*0.0698834580845009)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0591490303514599/${module}
variable           unitx         equal     0.0591490303514599/0.283725362479851
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.26854752988802/${module}
variable           unity         equal     -0.26854752988802/0.283725362479851
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0698834580845009/${module}
variable           unitz         equal     0.0698834580845009/0.283725362479851
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.14470792838413e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.14470792838413e-06*3.14470792838413e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.14470792838413e-06*3.14470792838413e-06+7.98886339038328e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.14470792838413e-06*3.14470792838413e-06+7.98886339038328e-08*7.98886339038328e-08+${fz}*${fz})
variable           f_module      equal     sqrt(3.14470792838413e-06*3.14470792838413e-06+7.98886339038328e-08*7.98886339038328e-08+-2.4552465175375e-06*${fz})
variable           f_module      equal     sqrt(3.14470792838413e-06*3.14470792838413e-06+7.98886339038328e-08*7.98886339038328e-08+-2.4552465175375e-06*-2.4552465175375e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.208472833850588*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.208472833850588*0.208472833850588+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.208472833850588*0.208472833850588+-0.946505196225068*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.208472833850588*0.208472833850588+-0.946505196225068*-0.946505196225068+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.208472833850588*0.208472833850588+-0.946505196225068*-0.946505196225068+0.246306701218731*${unitz})
variable           dir_module    equal     sqrt(0.208472833850588*0.208472833850588+-0.946505196225068*-0.946505196225068+0.246306701218731*0.246306701218731)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.14470792838413e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.14470792838413e-06*0.208472833850588+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.14470792838413e-06*0.208472833850588+7.98886339038328e-08*${unity}+${fz}*${unitz}
variable           dot      equal     3.14470792838413e-06*0.208472833850588+7.98886339038328e-08*-0.946505196225068+${fz}*${unitz}
variable           dot      equal     3.14470792838413e-06*0.208472833850588+7.98886339038328e-08*-0.946505196225068+-2.4552465175375e-06*${unitz}
variable           dot      equal     3.14470792838413e-06*0.208472833850588+7.98886339038328e-08*-0.946505196225068+-2.4552465175375e-06*0.246306701218731
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.47725040600871e-08/${f_module}*${dir_module}
variable           cos      equal     -2.47725040600871e-08/3.99046433520575e-06*${dir_module}
variable           cos      equal     -2.47725040600871e-08/3.99046433520575e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00620792518843796)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57700429185788/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.3556901974736-90.0)
print              "The dot product: ${dot}"
The dot product: -2.47725040600871e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.3556901974736

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0591490303514599^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0591490303514599^2+-0.26854752988802^2+${new_z}^2)
variable           norm          equal     sqrt(0.0591490303514599^2+-0.26854752988802^2+0.0698834580845009^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0591490303514599/${norm}
variable           unit_x        equal     0.0591490303514599/0.283725362479851
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.26854752988802/${norm}
variable           unit_y        equal     -0.26854752988802/0.283725362479851
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0698834580845009/${norm}
variable           unit_z        equal     0.0698834580845009/0.283725362479851
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22478534423623+${delta}*${unit_x}
variable           x_new         equal     1.22478534423623+0.03*${unit_x}
variable           x_new         equal     1.22478534423623+0.03*0.208472833850588
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.75613542537432+${delta}*${unit_y}
variable           y_new         equal     3.75613542537432+0.03*${unit_y}
variable           y_new         equal     3.75613542537432+0.03*-0.946505196225068
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3907517810172+${delta}*${unit_z}
variable           z_new         equal     31.3907517810172+0.03*${unit_z}
variable           z_new         equal     31.3907517810172+0.03*0.246306701218731

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23103952925175  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23103952925175  y  3.72774026948757  z   ${z_new}
set                atom          288751    x  1.23103952925175  y  3.72774026948757  z   31.3981409820538
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0591490303514599  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0591490303514599  -0.26854752988802  ${new_z}
fix                hold    carbon   planeforce   0.0591490303514599  -0.26854752988802  0.0698834580845009
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    1839   -1152449.2            0   -1152449.2 -0.021146535 -0.0040848187 0.0022012232 
    2000   -1152449.2            0   -1152449.2 4.509927e-05 -1.0777578e-06 -4.2313408e-05 
    2022   -1152449.2            0   -1152449.2 1.4360006e-05 -6.8174884e-07 -1.477406e-05 
Loop time of 2.10607 on 104 procs for 183 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.16463248  -1152449.16755739  -1152449.16755739
  Force two-norm initial, final = 0.24417528 0.00010212679
  Force max component initial, final = 0.20910822 2.3771509e-05
  Final line search alpha, max atom move = 1.0000000 2.3771509e-05
  Iterations, force evaluations = 183 366

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.56408    | 1.5344     | 1.9859     |  33.1 | 72.86
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033457   | 0.34284    | 1.0281     |  49.4 | 16.28
Output  | 9.4141e-05 | 0.00010285 | 0.00027423 |   0.0 |  0.00
Modify  | 2.1082e-05 | 0.0030046  | 0.0064335  |   2.6 |  0.14
Other   |            | 0.2257     |            |       | 10.72

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.08 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114492 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238181
Ave neighs/atom = 28.530398
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.22486197769832-${x_0}
variable           new_x         equal     1.22486197769832-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.72612260422665-${y_0}
variable           new_y         equal     3.72612260422665-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.397153282997-${z_0}
variable           new_z         equal     31.397153282997-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05922566381355*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05922566381355*0.05922566381355+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05922566381355*0.05922566381355+-0.29856035103569*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.05922566381355*0.05922566381355+-0.29856035103569*-0.29856035103569+${new_z}*${new_z})
variable           module        equal     sqrt(0.05922566381355*0.05922566381355+-0.29856035103569*-0.29856035103569+0.0762849600642994*${new_z})
variable           module        equal     sqrt(0.05922566381355*0.05922566381355+-0.29856035103569*-0.29856035103569+0.0762849600642994*0.0762849600642994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.05922566381355/${module}
variable           unitx         equal     0.05922566381355/0.313791901738591
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.29856035103569/${module}
variable           unity         equal     -0.29856035103569/0.313791901738591
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0762849600642994/${module}
variable           unitz         equal     0.0762849600642994/0.313791901738591
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.43600055445421e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.43600055445421e-05*1.43600055445421e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.43600055445421e-05*1.43600055445421e-05+-6.8174883679809e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.43600055445421e-05*1.43600055445421e-05+-6.8174883679809e-07*-6.8174883679809e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.43600055445421e-05*1.43600055445421e-05+-6.8174883679809e-07*-6.8174883679809e-07+-1.47740595302005e-05*${fz})
variable           f_module      equal     sqrt(1.43600055445421e-05*1.43600055445421e-05+-6.8174883679809e-07*-6.8174883679809e-07+-1.47740595302005e-05*-1.47740595302005e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.188741849249152*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.188741849249152*0.188741849249152+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.188741849249152*0.188741849249152+-0.951459707473299*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.188741849249152*0.188741849249152+-0.951459707473299*-0.951459707473299+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.188741849249152*0.188741849249152+-0.951459707473299*-0.951459707473299+0.243106847696311*${unitz})
variable           dir_module    equal     sqrt(0.188741849249152*0.188741849249152+-0.951459707473299*-0.951459707473299+0.243106847696311*0.243106847696311)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.43600055445421e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.43600055445421e-05*0.188741849249152+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.43600055445421e-05*0.188741849249152+-6.8174883679809e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.43600055445421e-05*0.188741849249152+-6.8174883679809e-07*-0.951459707473299+${fz}*${unitz}
variable           dot      equal     1.43600055445421e-05*0.188741849249152+-6.8174883679809e-07*-0.951459707473299+-1.47740595302005e-05*${unitz}
variable           dot      equal     1.43600055445421e-05*0.188741849249152+-6.8174883679809e-07*-0.951459707473299+-1.47740595302005e-05*0.243106847696311
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.32684489529561e-07/${f_module}*${dir_module}
variable           cos      equal     -2.32684489529561e-07/2.06142517622557e-05*${dir_module}
variable           cos      equal     -2.32684489529561e-07/2.06142517622557e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0112875544653821)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58208412096315/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.6467429658533-90.0)
print              "The dot product: ${dot}"
The dot product: -2.32684489529561e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.6467429658533

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05922566381355^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.05922566381355^2+-0.29856035103569^2+${new_z}^2)
variable           norm          equal     sqrt(0.05922566381355^2+-0.29856035103569^2+0.0762849600642994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.05922566381355/${norm}
variable           unit_x        equal     0.05922566381355/0.313791901738591
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.29856035103569/${norm}
variable           unit_y        equal     -0.29856035103569/0.313791901738591
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0762849600642994/${norm}
variable           unit_z        equal     0.0762849600642994/0.313791901738591
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.22486197769832+${delta}*${unit_x}
variable           x_new         equal     1.22486197769832+0.03*${unit_x}
variable           x_new         equal     1.22486197769832+0.03*0.188741849249152
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.72612260422665+${delta}*${unit_y}
variable           y_new         equal     3.72612260422665+0.03*${unit_y}
variable           y_new         equal     3.72612260422665+0.03*-0.951459707473299
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.397153282997+${delta}*${unit_z}
variable           z_new         equal     31.397153282997+0.03*${unit_z}
variable           z_new         equal     31.397153282997+0.03*0.243106847696311

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23052423317579  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.23052423317579  y  3.69757881300245  z   ${z_new}
set                atom          288751    x  1.23052423317579  y  3.69757881300245  z   31.4044464884279
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05922566381355  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.05922566381355  -0.29856035103569  ${new_z}
fix                hold    carbon   planeforce   0.05922566381355  -0.29856035103569  0.0762849600642994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2022   -1152449.1            0   -1152449.1 -0.028972269 -0.0047619312 0.0038563039 
    2155   -1152449.1            0   -1152449.1 6.1765483e-05 -3.8524811e-06 -6.3030771e-05 
Loop time of 1.53544 on 104 procs for 133 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.13148944  -1152449.13450247  -1152449.13450247
  Force two-norm initial, final = 0.2483053 0.00024101206
  Force max component initial, final = 0.21593257 6.3030771e-05
  Final line search alpha, max atom move = 1.0000000 6.3030771e-05
  Iterations, force evaluations = 133 266

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41254    | 1.1197     | 1.4492     |  28.3 | 72.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025188   | 0.24881    | 0.75171    |  42.5 | 16.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5554e-05 | 0.0021934  | 0.0046746  |   2.2 |  0.14
Other   |            | 0.1647     |            |       | 10.73

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.07 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114495 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.222407740734-${x_0}
variable           new_x         equal     1.222407740734-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.6956743714668-${y_0}
variable           new_y         equal     3.6956743714668-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4032944123091-${z_0}
variable           new_z         equal     31.4032944123091-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0567714268492299*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0567714268492299*0.0567714268492299+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0567714268492299*0.0567714268492299+-0.32900858379554*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0567714268492299*0.0567714268492299+-0.32900858379554*-0.32900858379554+${new_z}*${new_z})
variable           module        equal     sqrt(0.0567714268492299*0.0567714268492299+-0.32900858379554*-0.32900858379554+0.0824260893764013*${new_z})
variable           module        equal     sqrt(0.0567714268492299*0.0567714268492299+-0.32900858379554*-0.32900858379554+0.0824260893764013*0.0824260893764013)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0567714268492299/${module}
variable           unitx         equal     0.0567714268492299/0.343894901572458
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.32900858379554/${module}
variable           unity         equal     -0.32900858379554/0.343894901572458
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0824260893764013/${module}
variable           unitz         equal     0.0824260893764013/0.343894901572458
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.1765483282377e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.1765483282377e-05*6.1765483282377e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.1765483282377e-05*6.1765483282377e-05+-3.85248111491773e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.1765483282377e-05*6.1765483282377e-05+-3.85248111491773e-06*-3.85248111491773e-06+${fz}*${fz})
variable           f_module      equal     sqrt(6.1765483282377e-05*6.1765483282377e-05+-3.85248111491773e-06*-3.85248111491773e-06+-6.30307711785326e-05*${fz})
variable           f_module      equal     sqrt(6.1765483282377e-05*6.1765483282377e-05+-3.85248111491773e-06*-3.85248111491773e-06+-6.30307711785326e-05*-6.30307711785326e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165083653725725*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165083653725725*0.165083653725725+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165083653725725*0.165083653725725+-0.956712595304989*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165083653725725*0.165083653725725+-0.956712595304989*-0.956712595304989+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.165083653725725*0.165083653725725+-0.956712595304989*-0.956712595304989+0.239683952857423*${unitz})
variable           dir_module    equal     sqrt(0.165083653725725*0.165083653725725+-0.956712595304989*-0.956712595304989+0.239683952857423*0.239683952857423)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.1765483282377e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.1765483282377e-05*0.165083653725725+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.1765483282377e-05*0.165083653725725+-3.85248111491773e-06*${unity}+${fz}*${unitz}
variable           dot      equal     6.1765483282377e-05*0.165083653725725+-3.85248111491773e-06*-0.956712595304989+${fz}*${unitz}
variable           dot      equal     6.1765483282377e-05*0.165083653725725+-3.85248111491773e-06*-0.956712595304989+-6.30307711785326e-05*${unitz}
variable           dot      equal     6.1765483282377e-05*0.165083653725725+-3.85248111491773e-06*-0.956712595304989+-6.30307711785326e-05*0.239683952857423
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.22527552751604e-06/${f_module}*${dir_module}
variable           cos      equal     -1.22527552751604e-06/8.83328628043206e-05*${dir_module}
variable           cos      equal     -1.22527552751604e-06/8.83328628043206e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0138711175956148)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58466788924781/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.7947819838041-90.0)
print              "The dot product: ${dot}"
The dot product: -1.22527552751604e-06
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.7947819838041

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0567714268492299^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0567714268492299^2+-0.32900858379554^2+${new_z}^2)
variable           norm          equal     sqrt(0.0567714268492299^2+-0.32900858379554^2+0.0824260893764013^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0567714268492299/${norm}
variable           unit_x        equal     0.0567714268492299/0.343894901572458
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.32900858379554/${norm}
variable           unit_y        equal     -0.32900858379554/0.343894901572458
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0824260893764013/${norm}
variable           unit_z        equal     0.0824260893764013/0.343894901572458
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.222407740734+${delta}*${unit_x}
variable           x_new         equal     1.222407740734+0.03*${unit_x}
variable           x_new         equal     1.222407740734+0.03*0.165083653725725
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.6956743714668+${delta}*${unit_y}
variable           y_new         equal     3.6956743714668+0.03*${unit_y}
variable           y_new         equal     3.6956743714668+0.03*-0.956712595304989
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4032944123091+${delta}*${unit_z}
variable           z_new         equal     31.4032944123091+0.03*${unit_z}
variable           z_new         equal     31.4032944123091+0.03*0.239683952857423

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22736025034577  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22736025034577  y  3.66697299360765  z   ${z_new}
set                atom          288751    x  1.22736025034577  y  3.66697299360765  z   31.4104849308948
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0567714268492299  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0567714268492299  -0.32900858379554  ${new_z}
fix                hold    carbon   planeforce   0.0567714268492299  -0.32900858379554  0.0824260893764013
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2155   -1152449.1            0   -1152449.1  -0.03378029 -0.0052038137  0.002495034 
    2331   -1152449.1            0   -1152449.1 -1.8919358e-05 2.0674326e-07 1.3856041e-05 
Loop time of 2.0281 on 104 procs for 176 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.09549634   -1152449.0985745   -1152449.0985745
  Force two-norm initial, final = 0.2529258 0.00017280323
  Force max component initial, final = 0.2229498 3.6204270e-05
  Final line search alpha, max atom move = 1.0000000 3.6204270e-05
  Iterations, force evaluations = 176 352

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.54161    | 1.478      | 1.9135     |  32.6 | 72.88
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03129    | 0.33552    | 1.0006     |  48.3 | 16.54
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0789e-05 | 0.0028936  | 0.0062039  |   2.5 |  0.14
Other   |            | 0.2117     |            |       | 10.44

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.07 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114484 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238184
Ave neighs/atom = 28.530409
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21826962139856-${x_0}
variable           new_x         equal     1.21826962139856-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.66499125104611-${y_0}
variable           new_y         equal     3.66499125104611-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4088359100766-${z_0}
variable           new_z         equal     31.4088359100766-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0526333075137899*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0526333075137899*0.0526333075137899+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0526333075137899*0.0526333075137899+-0.35969170421623*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0526333075137899*0.0526333075137899+-0.35969170421623*-0.35969170421623+${new_z}*${new_z})
variable           module        equal     sqrt(0.0526333075137899*0.0526333075137899+-0.35969170421623*-0.35969170421623+0.0879675871439005*${new_z})
variable           module        equal     sqrt(0.0526333075137899*0.0526333075137899+-0.35969170421623*-0.35969170421623+0.0879675871439005*0.0879675871439005)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0526333075137899/${module}
variable           unitx         equal     0.0526333075137899/0.374014282521051
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.35969170421623/${module}
variable           unity         equal     -0.35969170421623/0.374014282521051
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0879675871439005/${module}
variable           unitz         equal     0.0879675871439005/0.374014282521051
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.89193576067356e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.89193576067356e-05*-1.89193576067356e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.89193576067356e-05*-1.89193576067356e-05+2.06743262811006e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.89193576067356e-05*-1.89193576067356e-05+2.06743262811006e-07*2.06743262811006e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.89193576067356e-05*-1.89193576067356e-05+2.06743262811006e-07*2.06743262811006e-07+1.38560405227435e-05*${fz})
variable           f_module      equal     sqrt(-1.89193576067356e-05*-1.89193576067356e-05+2.06743262811006e-07*2.06743262811006e-07+1.38560405227435e-05*1.38560405227435e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.140725394653418*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.140725394653418*0.140725394653418+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.140725394653418*0.140725394653418+-0.961705798483739*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.140725394653418*0.140725394653418+-0.961705798483739*-0.961705798483739+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.140725394653418*0.140725394653418+-0.961705798483739*-0.961705798483739+0.235198470365766*${unitz})
variable           dir_module    equal     sqrt(0.140725394653418*0.140725394653418+-0.961705798483739*-0.961705798483739+0.235198470365766*0.235198470365766)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.89193576067356e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.89193576067356e-05*0.140725394653418+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.89193576067356e-05*0.140725394653418+2.06743262811006e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.89193576067356e-05*0.140725394653418+2.06743262811006e-07*-0.961705798483739+${fz}*${unitz}
variable           dot      equal     -1.89193576067356e-05*0.140725394653418+2.06743262811006e-07*-0.961705798483739+1.38560405227435e-05*${unitz}
variable           dot      equal     -1.89193576067356e-05*0.140725394653418+2.06743262811006e-07*-0.961705798483739+1.38560405227435e-05*0.235198470365766
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     3.97659275835535e-07/${f_module}*${dir_module}
variable           cos      equal     3.97659275835535e-07/2.34515392670966e-05*${dir_module}
variable           cos      equal     3.97659275835535e-07/2.34515392670966e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0169566385944425)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.55383887551172/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.0284096101753-90.0)
print              "The dot product: ${dot}"
The dot product: 3.97659275835535e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.0284096101753

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0526333075137899^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0526333075137899^2+-0.35969170421623^2+${new_z}^2)
variable           norm          equal     sqrt(0.0526333075137899^2+-0.35969170421623^2+0.0879675871439005^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0526333075137899/${norm}
variable           unit_x        equal     0.0526333075137899/0.374014282521051
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.35969170421623/${norm}
variable           unit_y        equal     -0.35969170421623/0.374014282521051
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0879675871439005/${norm}
variable           unit_z        equal     0.0879675871439005/0.374014282521051
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21826962139856+${delta}*${unit_x}
variable           x_new         equal     1.21826962139856+0.03*${unit_x}
variable           x_new         equal     1.21826962139856+0.03*0.140725394653418
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.66499125104611+${delta}*${unit_y}
variable           y_new         equal     3.66499125104611+0.03*${unit_y}
variable           y_new         equal     3.66499125104611+0.03*-0.961705798483739
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4088359100766+${delta}*${unit_z}
variable           z_new         equal     31.4088359100766+0.03*${unit_z}
variable           z_new         equal     31.4088359100766+0.03*0.235198470365766

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22249138323816  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.22249138323816  y  3.6361400770916  z   ${z_new}
set                atom          288751    x  1.22249138323816  y  3.6361400770916  z   31.4158918641876
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0526333075137899  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0526333075137899  -0.35969170421623  ${new_z}
fix                hold    carbon   planeforce   0.0526333075137899  -0.35969170421623  0.0879675871439005
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2331   -1152449.1            0   -1152449.1 -0.036028887 -0.0057770595 -0.0020648613 
    2480   -1152449.1            0   -1152449.1 4.4254192e-05 -2.8180075e-06 -3.8001024e-05 
Loop time of 1.72748 on 104 procs for 149 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.05653735  -1152449.05965535  -1152449.05965535
  Force two-norm initial, final = 0.25793639 0.00022562927
  Force max component initial, final = 0.23005071 6.5592175e-05
  Final line search alpha, max atom move = 1.0000000 6.5592175e-05
  Iterations, force evaluations = 149 298

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.45524    | 1.2525     | 1.6265     |  30.1 | 72.50
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026557   | 0.28133    | 0.85174    |  44.8 | 16.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.7798e-05 | 0.0024554  | 0.0052393  |   2.3 |  0.14
Other   |            | 0.1912     |            |       | 11.07

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.21319314426128-${x_0}
variable           new_x         equal     1.21319314426128-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.63404286521766-${y_0}
variable           new_y         equal     3.63404286521766-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4128799293344-${z_0}
variable           new_z         equal     31.4128799293344-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0475568303765099*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0475568303765099*0.0475568303765099+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0475568303765099*0.0475568303765099+-0.39064009004468*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0475568303765099*0.0475568303765099+-0.39064009004468*-0.39064009004468+${new_z}*${new_z})
variable           module        equal     sqrt(0.0475568303765099*0.0475568303765099+-0.39064009004468*-0.39064009004468+0.0920116064017016*${new_z})
variable           module        equal     sqrt(0.0475568303765099*0.0475568303765099+-0.39064009004468*-0.39064009004468+0.0920116064017016*0.0920116064017016)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0475568303765099/${module}
variable           unitx         equal     0.0475568303765099/0.40413793162508
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.39064009004468/${module}
variable           unity         equal     -0.39064009004468/0.40413793162508
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0920116064017016/${module}
variable           unitz         equal     0.0920116064017016/0.40413793162508
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.42541921120556e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.42541921120556e-05*4.42541921120556e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.42541921120556e-05*4.42541921120556e-05+-2.81800745643339e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.42541921120556e-05*4.42541921120556e-05+-2.81800745643339e-06*-2.81800745643339e-06+${fz}*${fz})
variable           f_module      equal     sqrt(4.42541921120556e-05*4.42541921120556e-05+-2.81800745643339e-06*-2.81800745643339e-06+-3.80010241879255e-05*${fz})
variable           f_module      equal     sqrt(4.42541921120556e-05*4.42541921120556e-05+-2.81800745643339e-06*-2.81800745643339e-06+-3.80010241879255e-05*-3.80010241879255e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.11767475075967*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.11767475075967*0.11767475075967+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.11767475075967*0.11767475075967+-0.966600903988092*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.11767475075967*0.11767475075967+-0.966600903988092*-0.966600903988092+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.11767475075967*0.11767475075967+-0.966600903988092*-0.966600903988092+0.227673769773883*${unitz})
variable           dir_module    equal     sqrt(0.11767475075967*0.11767475075967+-0.966600903988092*-0.966600903988092+0.227673769773883*0.227673769773883)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.42541921120556e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.42541921120556e-05*0.11767475075967+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.42541921120556e-05*0.11767475075967+-2.81800745643339e-06*${unity}+${fz}*${unitz}
variable           dot      equal     4.42541921120556e-05*0.11767475075967+-2.81800745643339e-06*-0.966600903988092+${fz}*${unitz}
variable           dot      equal     4.42541921120556e-05*0.11767475075967+-2.81800745643339e-06*-0.966600903988092+-3.80010241879255e-05*${unitz}
variable           dot      equal     4.42541921120556e-05*0.11767475075967+-2.81800745643339e-06*-0.966600903988092+-3.80010241879255e-05*0.227673769773883
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -7.20346850443115e-07/${f_module}*${dir_module}
variable           cos      equal     -7.20346850443115e-07/5.83990798287656e-05*${dir_module}
variable           cos      equal     -7.20346850443115e-07/5.83990798287656e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0123349006962999)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58313154030468/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.7067556735033-90.0)
print              "The dot product: ${dot}"
The dot product: -7.20346850443115e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.7067556735033

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0475568303765099^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0475568303765099^2+-0.39064009004468^2+${new_z}^2)
variable           norm          equal     sqrt(0.0475568303765099^2+-0.39064009004468^2+0.0920116064017016^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0475568303765099/${norm}
variable           unit_x        equal     0.0475568303765099/0.40413793162508
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.39064009004468/${norm}
variable           unit_y        equal     -0.39064009004468/0.40413793162508
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0920116064017016/${norm}
variable           unit_z        equal     0.0920116064017016/0.40413793162508
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.21319314426128+${delta}*${unit_x}
variable           x_new         equal     1.21319314426128+0.03*${unit_x}
variable           x_new         equal     1.21319314426128+0.03*0.11767475075967
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.63404286521766+${delta}*${unit_y}
variable           y_new         equal     3.63404286521766+0.03*${unit_y}
variable           y_new         equal     3.63404286521766+0.03*-0.966600903988092
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4128799293344+${delta}*${unit_z}
variable           z_new         equal     31.4128799293344+0.03*${unit_z}
variable           z_new         equal     31.4128799293344+0.03*0.227673769773883

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21672338678407  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21672338678407  y  3.60504483809802  z   ${z_new}
set                atom          288751    x  1.21672338678407  y  3.60504483809802  z   31.4197101424276
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0475568303765099  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0475568303765099  -0.39064009004468  ${new_z}
fix                hold    carbon   planeforce   0.0475568303765099  -0.39064009004468  0.0920116064017016
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2480     -1152449            0     -1152449  -0.03610351 -0.0069563824 -0.010873338 
    2632     -1152449            0     -1152449 -3.420047e-05 2.7518521e-06 2.935988e-05 
Loop time of 1.7495 on 104 procs for 152 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152449.01449218  -1152449.01770615  -1152449.01770615
  Force two-norm initial, final = 0.26381423 0.00020774866
  Force max component initial, final = 0.23740721 4.2682017e-05
  Final line search alpha, max atom move = 1.0000000 4.2682017e-05
  Iterations, force evaluations = 152 304

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46702    | 1.2781     | 1.6466     |  30.4 | 73.05
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.030008   | 0.29091    | 0.86958    |  45.2 | 16.63
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.756e-05  | 0.0025026  | 0.005343   |   2.4 |  0.14
Other   |            | 0.178      |            |       | 10.18

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20748145802384-${x_0}
variable           new_x         equal     1.20748145802384-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.60229211158807-${y_0}
variable           new_y         equal     3.60229211158807-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4128000522964-${z_0}
variable           new_z         equal     31.4128000522964-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0418451441390699*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0418451441390699*0.0418451441390699+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0418451441390699*0.0418451441390699+-0.42239084367427*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0418451441390699*0.0418451441390699+-0.42239084367427*-0.42239084367427+${new_z}*${new_z})
variable           module        equal     sqrt(0.0418451441390699*0.0418451441390699+-0.42239084367427*-0.42239084367427+0.0919317293637008*${new_z})
variable           module        equal     sqrt(0.0418451441390699*0.0418451441390699+-0.42239084367427*-0.42239084367427+0.0919317293637008*0.0919317293637008)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0418451441390699/${module}
variable           unitx         equal     0.0418451441390699/0.434299992829475
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.42239084367427/${module}
variable           unity         equal     -0.42239084367427/0.434299992829475
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0919317293637008/${module}
variable           unitz         equal     0.0919317293637008/0.434299992829475
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.42004702920613e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.42004702920613e-05*-3.42004702920613e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.42004702920613e-05*-3.42004702920613e-05+2.75185214831711e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-3.42004702920613e-05*-3.42004702920613e-05+2.75185214831711e-06*2.75185214831711e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-3.42004702920613e-05*-3.42004702920613e-05+2.75185214831711e-06*2.75185214831711e-06+2.93598801399965e-05*${fz})
variable           f_module      equal     sqrt(-3.42004702920613e-05*-3.42004702920613e-05+2.75185214831711e-06*2.75185214831711e-06+2.93598801399965e-05*2.93598801399965e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0963507824774478*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0963507824774478*0.0963507824774478+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0963507824774478*0.0963507824774478+-0.972578518646485*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0963507824774478*0.0963507824774478+-0.972578518646485*-0.972578518646485+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0963507824774478*0.0963507824774478+-0.972578518646485*-0.972578518646485+0.211677943544883*${unitz})
variable           dir_module    equal     sqrt(0.0963507824774478*0.0963507824774478+-0.972578518646485*-0.972578518646485+0.211677943544883*0.211677943544883)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.42004702920613e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.42004702920613e-05*0.0963507824774478+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -3.42004702920613e-05*0.0963507824774478+2.75185214831711e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -3.42004702920613e-05*0.0963507824774478+2.75185214831711e-06*-0.972578518646485+${fz}*${unitz}
variable           dot      equal     -3.42004702920613e-05*0.0963507824774478+2.75185214831711e-06*-0.972578518646485+2.93598801399965e-05*${unitz}
variable           dot      equal     -3.42004702920613e-05*0.0963507824774478+2.75185214831711e-06*-0.972578518646485+2.93598801399965e-05*0.211677943544883
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.43204691077494e-07/${f_module}*${dir_module}
variable           cos      equal     2.43204691077494e-07/4.51580271964944e-05*${dir_module}
variable           cos      equal     2.43204691077494e-07/4.51580271964944e-05*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0053856358697701)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56541066488966/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.6914243029455-90.0)
print              "The dot product: ${dot}"
The dot product: 2.43204691077494e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.6914243029455

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0418451441390699^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0418451441390699^2+-0.42239084367427^2+${new_z}^2)
variable           norm          equal     sqrt(0.0418451441390699^2+-0.42239084367427^2+0.0919317293637008^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0418451441390699/${norm}
variable           unit_x        equal     0.0418451441390699/0.434299992829475
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.42239084367427/${norm}
variable           unit_y        equal     -0.42239084367427/0.434299992829475
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0919317293637008/${norm}
variable           unit_z        equal     0.0919317293637008/0.434299992829475
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20748145802384+${delta}*${unit_x}
variable           x_new         equal     1.20748145802384+0.03*${unit_x}
variable           x_new         equal     1.20748145802384+0.03*0.0963507824774478
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.60229211158807+${delta}*${unit_y}
variable           y_new         equal     3.60229211158807+0.03*${unit_y}
variable           y_new         equal     3.60229211158807+0.03*-0.972578518646485
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4128000522964+${delta}*${unit_z}
variable           z_new         equal     31.4128000522964+0.03*${unit_z}
variable           z_new         equal     31.4128000522964+0.03*0.211677943544883

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21037198149816  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.21037198149816  y  3.57311475602868  z   ${z_new}
set                atom          288751    x  1.21037198149816  y  3.57311475602868  z   31.4191503906027
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0418451441390699  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0418451441390699  -0.42239084367427  ${new_z}
fix                hold    carbon   planeforce   0.0418451441390699  -0.42239084367427  0.0919317293637008
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2632     -1152449            0     -1152449 -0.035789291 -0.0093475385 -0.026657898 
    2769     -1152449            0     -1152449 1.0983508e-05 5.3523386e-07 -2.5402394e-06 
Loop time of 1.58512 on 104 procs for 137 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.96942144   -1152448.9728638   -1152448.9728638
  Force two-norm initial, final = 0.27209729 6.5809509e-05
  Force max component initial, final = 0.24604528 1.0983508e-05
  Final line search alpha, max atom move = 1.0000000 1.0983508e-05
  Iterations, force evaluations = 137 274

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.4262     | 1.1528     | 1.4894     |  28.6 | 72.73
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02417    | 0.2572     | 0.77447    |  42.9 | 16.23
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.6092e-05 | 0.0022586  | 0.0048122  |   2.2 |  0.14
Other   |            | 0.1729     |            |       | 10.91

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.20139629835799-${x_0}
variable           new_x         equal     1.20139629835799-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.56980729069384-${y_0}
variable           new_y         equal     3.56980729069384-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4080393811012-${z_0}
variable           new_z         equal     31.4080393811012-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0357599844732199*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0357599844732199*0.0357599844732199+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0357599844732199*0.0357599844732199+-0.4548756645685*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0357599844732199*0.0357599844732199+-0.4548756645685*-0.4548756645685+${new_z}*${new_z})
variable           module        equal     sqrt(0.0357599844732199*0.0357599844732199+-0.4548756645685*-0.4548756645685+0.0871710581685008*${new_z})
variable           module        equal     sqrt(0.0357599844732199*0.0357599844732199+-0.4548756645685*-0.4548756645685+0.0871710581685008*0.0871710581685008)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0357599844732199/${module}
variable           unitx         equal     0.0357599844732199/0.464531419915139
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.4548756645685/${module}
variable           unity         equal     -0.4548756645685/0.464531419915139
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0871710581685008/${module}
variable           unitz         equal     0.0871710581685008/0.464531419915139
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.09835081491368e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.09835081491368e-05*1.09835081491368e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.09835081491368e-05*1.09835081491368e-05+5.35233856526294e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(1.09835081491368e-05*1.09835081491368e-05+5.35233856526294e-07*5.35233856526294e-07+${fz}*${fz})
variable           f_module      equal     sqrt(1.09835081491368e-05*1.09835081491368e-05+5.35233856526294e-07*5.35233856526294e-07+-2.54023940468812e-06*${fz})
variable           f_module      equal     sqrt(1.09835081491368e-05*1.09835081491368e-05+5.35233856526294e-07*5.35233856526294e-07+-2.54023940468812e-06*-2.54023940468812e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0769807658645621*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0769807658645621*0.0769807658645621+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0769807658645621*0.0769807658645621+-0.979213988693374*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0769807658645621*0.0769807658645621+-0.979213988693374*-0.979213988693374+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0769807658645621*0.0769807658645621+-0.979213988693374*-0.979213988693374+0.187653739728575*${unitz})
variable           dir_module    equal     sqrt(0.0769807658645621*0.0769807658645621+-0.979213988693374*-0.979213988693374+0.187653739728575*0.187653739728575)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.09835081491368e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.09835081491368e-05*0.0769807658645621+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     1.09835081491368e-05*0.0769807658645621+5.35233856526294e-07*${unity}+${fz}*${unitz}
variable           dot      equal     1.09835081491368e-05*0.0769807658645621+5.35233856526294e-07*-0.979213988693374+${fz}*${unitz}
variable           dot      equal     1.09835081491368e-05*0.0769807658645621+5.35233856526294e-07*-0.979213988693374+-2.54023940468812e-06*${unitz}
variable           dot      equal     1.09835081491368e-05*0.0769807658645621+5.35233856526294e-07*-0.979213988693374+-2.54023940468812e-06*0.187653739728575
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.55275034428254e-07/${f_module}*${dir_module}
variable           cos      equal     -1.55275034428254e-07/1.12861305493272e-05*${dir_module}
variable           cos      equal     -1.55275034428254e-07/1.12861305493272e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.0137580399012406)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58455480076181/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.7883024908448-90.0)
print              "The dot product: ${dot}"
The dot product: -1.55275034428254e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.7883024908448

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0357599844732199^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0357599844732199^2+-0.4548756645685^2+${new_z}^2)
variable           norm          equal     sqrt(0.0357599844732199^2+-0.4548756645685^2+0.0871710581685008^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0357599844732199/${norm}
variable           unit_x        equal     0.0357599844732199/0.464531419915139
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.4548756645685/${norm}
variable           unit_y        equal     -0.4548756645685/0.464531419915139
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0871710581685008/${norm}
variable           unit_z        equal     0.0871710581685008/0.464531419915139
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.20139629835799+${delta}*${unit_x}
variable           x_new         equal     1.20139629835799+0.03*${unit_x}
variable           x_new         equal     1.20139629835799+0.03*0.0769807658645621
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.56980729069384+${delta}*${unit_y}
variable           y_new         equal     3.56980729069384+0.03*${unit_y}
variable           y_new         equal     3.56980729069384+0.03*-0.979213988693374
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4080393811012+${delta}*${unit_z}
variable           z_new         equal     31.4080393811012+0.03*${unit_z}
variable           z_new         equal     31.4080393811012+0.03*0.187653739728575

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20370572133393  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.20370572133393  y  3.54043087103304  z   ${z_new}
set                atom          288751    x  1.20370572133393  y  3.54043087103304  z   31.4136689932931
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0357599844732199  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0357599844732199  -0.4548756645685  ${new_z}
fix                hold    carbon   planeforce   0.0357599844732199  -0.4548756645685  0.0871710581685008
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2769   -1152448.9            0   -1152448.9 -0.034675094 -0.010109618 -0.038529282 
    2958   -1152448.9            0   -1152448.9 6.820635e-06 -8.1599017e-07 -7.0560101e-06 
Loop time of 2.17475 on 104 procs for 189 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.92138219  -1152448.92503808  -1152448.92503808
  Force two-norm initial, final = 0.28167429 7.6845798e-05
  Force max component initial, final = 0.25554513 8.6286447e-06
  Final line search alpha, max atom move = 1.0000000 8.6286447e-06
  Iterations, force evaluations = 189 378

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.58122    | 1.5872     | 2.0465     |  33.8 | 72.98
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03506    | 0.35615    | 1.077      |  50.5 | 16.38
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.1756e-05 | 0.0031158  | 0.0066823  |   2.6 |  0.14
Other   |            | 0.2283     |            |       | 10.50

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114484 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.19537207857758-${x_0}
variable           new_x         equal     1.19537207857758-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.53721315733556-${y_0}
variable           new_y         equal     3.53721315733556-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.4002970239093-${z_0}
variable           new_z         equal     31.4002970239093-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02973576469281*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02973576469281*0.02973576469281+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02973576469281*0.02973576469281+-0.48746979792678*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.02973576469281*0.02973576469281+-0.48746979792678*-0.48746979792678+${new_z}*${new_z})
variable           module        equal     sqrt(0.02973576469281*0.02973576469281+-0.48746979792678*-0.48746979792678+0.0794287009765995*${new_z})
variable           module        equal     sqrt(0.02973576469281*0.02973576469281+-0.48746979792678*-0.48746979792678+0.0794287009765995*0.0794287009765995)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.02973576469281/${module}
variable           unitx         equal     0.02973576469281/0.494792823443784
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.48746979792678/${module}
variable           unity         equal     -0.48746979792678/0.494792823443784
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0794287009765995/${module}
variable           unitz         equal     0.0794287009765995/0.494792823443784
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.82063495116304e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.82063495116304e-06*6.82063495116304e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.82063495116304e-06*6.82063495116304e-06+-8.15990166301933e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.82063495116304e-06*6.82063495116304e-06+-8.15990166301933e-07*-8.15990166301933e-07+${fz}*${fz})
variable           f_module      equal     sqrt(6.82063495116304e-06*6.82063495116304e-06+-8.15990166301933e-07*-8.15990166301933e-07+-7.05601012629252e-06*${fz})
variable           f_module      equal     sqrt(6.82063495116304e-06*6.82063495116304e-06+-8.15990166301933e-07*-8.15990166301933e-07+-7.05601012629252e-06*-7.05601012629252e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0600974049822459*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0600974049822459*0.0600974049822459+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0600974049822459*0.0600974049822459+-0.985199814609203*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0600974049822459*0.0600974049822459+-0.985199814609203*-0.985199814609203+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0600974049822459*0.0600974049822459+-0.985199814609203*-0.985199814609203+0.16052920982922*${unitz})
variable           dir_module    equal     sqrt(0.0600974049822459*0.0600974049822459+-0.985199814609203*-0.985199814609203+0.16052920982922*0.16052920982922)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.82063495116304e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.82063495116304e-06*0.0600974049822459+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.82063495116304e-06*0.0600974049822459+-8.15990166301933e-07*${unity}+${fz}*${unitz}
variable           dot      equal     6.82063495116304e-06*0.0600974049822459+-8.15990166301933e-07*-0.985199814609203+${fz}*${unitz}
variable           dot      equal     6.82063495116304e-06*0.0600974049822459+-8.15990166301933e-07*-0.985199814609203+-7.05601012629252e-06*${unitz}
variable           dot      equal     6.82063495116304e-06*0.0600974049822459+-8.15990166301933e-07*-0.985199814609203+-7.05601012629252e-06*0.16052920982922
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     8.11200913389901e-08/${f_module}*${dir_module}
variable           cos      equal     8.11200913389901e-08/9.84754690219198e-06*${dir_module}
variable           cos      equal     8.11200913389901e-08/9.84754690219198e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00823759380327841)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5625586398244/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.5280153036406-90.0)
print              "The dot product: ${dot}"
The dot product: 8.11200913389901e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.5280153036406

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02973576469281^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.02973576469281^2+-0.48746979792678^2+${new_z}^2)
variable           norm          equal     sqrt(0.02973576469281^2+-0.48746979792678^2+0.0794287009765995^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.02973576469281/${norm}
variable           unit_x        equal     0.02973576469281/0.494792823443784
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.48746979792678/${norm}
variable           unit_y        equal     -0.48746979792678/0.494792823443784
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0794287009765995/${norm}
variable           unit_z        equal     0.0794287009765995/0.494792823443784
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.19537207857758+${delta}*${unit_x}
variable           x_new         equal     1.19537207857758+0.03*${unit_x}
variable           x_new         equal     1.19537207857758+0.03*0.0600974049822459
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.53721315733556+${delta}*${unit_y}
variable           y_new         equal     3.53721315733556+0.03*${unit_y}
variable           y_new         equal     3.53721315733556+0.03*-0.985199814609203
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.4002970239093+${delta}*${unit_z}
variable           z_new         equal     31.4002970239093+0.03*${unit_z}
variable           z_new         equal     31.4002970239093+0.03*0.16052920982922

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19717500072705  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19717500072705  y  3.50765716289728  z   ${z_new}
set                atom          288751    x  1.19717500072705  y  3.50765716289728  z   31.4051129002042
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02973576469281  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.02973576469281  -0.48746979792678  ${new_z}
fix                hold    carbon   planeforce   0.02973576469281  -0.48746979792678  0.0794287009765995
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    2958   -1152448.9            0   -1152448.9  -0.03220067 -0.0091890195 -0.044339866 
    3000   -1152448.9            0   -1152448.9 0.00018570203 3.9059937e-06 -4.5549504e-05 
    3131   -1152448.9            0   -1152448.9 2.8788499e-05 -1.0325938e-06 -1.7114799e-05 
Loop time of 1.99912 on 104 procs for 173 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.87019535  -1152448.87401206  -1152448.87401206
  Force two-norm initial, final = 0.29095559 0.00020597819
  Force max component initial, final = 0.26499934 2.8788499e-05
  Final line search alpha, max atom move = 1.0000000 2.8788499e-05
  Iterations, force evaluations = 173 346

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.53287    | 1.4522     | 1.8717     |  32.3 | 72.64
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.037953   | 0.32546    | 0.98174    |  48.2 | 16.28
Output  | 9.7371e-05 | 0.00011441 | 0.0002364  |   0.0 |  0.01
Modify  | 2.06e-05   | 0.002851   | 0.0061669  |   2.5 |  0.14
Other   |            | 0.2185     |            |       | 10.93

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.04 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114484 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18979575743198-${x_0}
variable           new_x         equal     1.18979575743198-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.50492500366337-${y_0}
variable           new_y         equal     3.50492500366337-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3911076646431-${z_0}
variable           new_z         equal     31.3911076646431-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0241594435472099*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0241594435472099*0.0241594435472099+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0241594435472099*0.0241594435472099+-0.51975795159897*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0241594435472099*0.0241594435472099+-0.51975795159897*-0.51975795159897+${new_z}*${new_z})
variable           module        equal     sqrt(0.0241594435472099*0.0241594435472099+-0.51975795159897*-0.51975795159897+0.0702393417104012*${new_z})
variable           module        equal     sqrt(0.0241594435472099*0.0241594435472099+-0.51975795159897*-0.51975795159897+0.0702393417104012*0.0702393417104012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0241594435472099/${module}
variable           unitx         equal     0.0241594435472099/0.525038638660793
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.51975795159897/${module}
variable           unity         equal     -0.51975795159897/0.525038638660793
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0702393417104012/${module}
variable           unitz         equal     0.0702393417104012/0.525038638660793
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.87884985826112e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.87884985826112e-05*2.87884985826112e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.87884985826112e-05*2.87884985826112e-05+-1.03259375214359e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.87884985826112e-05*2.87884985826112e-05+-1.03259375214359e-06*-1.03259375214359e-06+${fz}*${fz})
variable           f_module      equal     sqrt(2.87884985826112e-05*2.87884985826112e-05+-1.03259375214359e-06*-1.03259375214359e-06+-1.71147994453635e-05*${fz})
variable           f_module      equal     sqrt(2.87884985826112e-05*2.87884985826112e-05+-1.03259375214359e-06*-1.03259375214359e-06+-1.71147994453635e-05*-1.71147994453635e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0460146011517038*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0460146011517038*0.0460146011517038+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0460146011517038*0.0460146011517038+-0.989942288675568*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0460146011517038*0.0460146011517038+-0.989942288675568*-0.989942288675568+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0460146011517038*0.0460146011517038+-0.989942288675568*-0.989942288675568+0.133779376484671*${unitz})
variable           dir_module    equal     sqrt(0.0460146011517038*0.0460146011517038+-0.989942288675568*-0.989942288675568+0.133779376484671*0.133779376484671)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.87884985826112e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.87884985826112e-05*0.0460146011517038+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.87884985826112e-05*0.0460146011517038+-1.03259375214359e-06*${unity}+${fz}*${unitz}
variable           dot      equal     2.87884985826112e-05*0.0460146011517038+-1.03259375214359e-06*-0.989942288675568+${fz}*${unitz}
variable           dot      equal     2.87884985826112e-05*0.0460146011517038+-1.03259375214359e-06*-0.989942288675568+-1.71147994453635e-05*${unitz}
variable           dot      equal     2.87884985826112e-05*0.0460146011517038+-1.03259375214359e-06*-0.989942288675568+-1.71147994453635e-05*0.133779376484671
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     5.72923038434398e-08/${f_module}*${dir_module}
variable           cos      equal     5.72923038434398e-08/3.35076149636614e-05*${dir_module}
variable           cos      equal     5.72923038434398e-08/3.35076149636614e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00170982935985067)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56908649660193/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.902033946259-90.0)
print              "The dot product: ${dot}"
The dot product: 5.72923038434398e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.902033946259

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0241594435472099^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0241594435472099^2+-0.51975795159897^2+${new_z}^2)
variable           norm          equal     sqrt(0.0241594435472099^2+-0.51975795159897^2+0.0702393417104012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0241594435472099/${norm}
variable           unit_x        equal     0.0241594435472099/0.525038638660793
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.51975795159897/${norm}
variable           unit_y        equal     -0.51975795159897/0.525038638660793
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0702393417104012/${norm}
variable           unit_z        equal     0.0702393417104012/0.525038638660793
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18979575743198+${delta}*${unit_x}
variable           x_new         equal     1.18979575743198+0.03*${unit_x}
variable           x_new         equal     1.18979575743198+0.03*0.0460146011517038
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.50492500366337+${delta}*${unit_y}
variable           y_new         equal     3.50492500366337+0.03*${unit_y}
variable           y_new         equal     3.50492500366337+0.03*-0.989942288675568
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3911076646431+${delta}*${unit_z}
variable           z_new         equal     31.3911076646431+0.03*${unit_z}
variable           z_new         equal     31.3911076646431+0.03*0.133779376484671

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19117619546653  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.19117619546653  y  3.4752267350031  z   ${z_new}
set                atom          288751    x  1.19117619546653  y  3.4752267350031  z   31.3951210459376
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0241594435472099  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0241594435472099  -0.51975795159897  ${new_z}
fix                hold    carbon   planeforce   0.0241594435472099  -0.51975795159897  0.0702393417104012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3131   -1152448.8            0   -1152448.8 -0.028330216 -0.0075191061 -0.045895546 
    3339   -1152448.8            0   -1152448.8 -1.8853817e-05 1.3312717e-06 1.6336098e-05 
Loop time of 2.43089 on 104 procs for 208 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.81566522  -1152448.81956723  -1152448.81956723
  Force two-norm initial, final = 0.29907655 7.4799122e-05
  Force max component initial, final = 0.27397873 1.8853817e-05
  Final line search alpha, max atom move = 1.0000000 1.8853817e-05
  Iterations, force evaluations = 208 416

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.64152    | 1.7469     | 2.2592     |  35.3 | 71.86
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.038324   | 0.39832    | 1.1875     |  52.6 | 16.39
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.4233e-05 | 0.0034252  | 0.0073481  |   2.8 |  0.14
Other   |            | 0.2823     |            |       | 11.61

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.06 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238193
Ave neighs/atom = 28.530440
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18492446002516-${x_0}
variable           new_x         equal     1.18492446002516-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.47311078370394-${y_0}
variable           new_y         equal     3.47311078370394-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.381613743044-${z_0}
variable           new_z         equal     31.381613743044-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01928814614039*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01928814614039*0.01928814614039+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01928814614039*0.01928814614039+-0.5515721715584*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.01928814614039*0.01928814614039+-0.5515721715584*-0.5515721715584+${new_z}*${new_z})
variable           module        equal     sqrt(0.01928814614039*0.01928814614039+-0.5515721715584*-0.5515721715584+0.0607454201112994*${new_z})
variable           module        equal     sqrt(0.01928814614039*0.01928814614039+-0.5515721715584*-0.5515721715584+0.0607454201112994*0.0607454201112994)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.01928814614039/${module}
variable           unitx         equal     0.01928814614039/0.555242198579755
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.5515721715584/${module}
variable           unity         equal     -0.5515721715584/0.555242198579755
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0607454201112994/${module}
variable           unitz         equal     0.0607454201112994/0.555242198579755
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.88538168618473e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.88538168618473e-05*-1.88538168618473e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.88538168618473e-05*-1.88538168618473e-05+1.33127168051629e-06*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.88538168618473e-05*-1.88538168618473e-05+1.33127168051629e-06*1.33127168051629e-06+${fz}*${fz})
variable           f_module      equal     sqrt(-1.88538168618473e-05*-1.88538168618473e-05+1.33127168051629e-06*1.33127168051629e-06+1.63360979430895e-05*${fz})
variable           f_module      equal     sqrt(-1.88538168618473e-05*-1.88538168618473e-05+1.33127168051629e-06*1.33127168051629e-06+1.63360979430895e-05*1.63360979430895e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0347382569079347*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0347382569079347*0.0347382569079347+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0347382569079347*0.0347382569079347+-0.993390223166138*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0347382569079347*0.0347382569079347+-0.993390223166138*-0.993390223166138+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0347382569079347*0.0347382569079347+-0.993390223166138*-0.993390223166138+0.109403464410088*${unitz})
variable           dir_module    equal     sqrt(0.0347382569079347*0.0347382569079347+-0.993390223166138*-0.993390223166138+0.109403464410088*0.109403464410088)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.88538168618473e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.88538168618473e-05*0.0347382569079347+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.88538168618473e-05*0.0347382569079347+1.33127168051629e-06*${unity}+${fz}*${unitz}
variable           dot      equal     -1.88538168618473e-05*0.0347382569079347+1.33127168051629e-06*-0.993390223166138+${fz}*${unitz}
variable           dot      equal     -1.88538168618473e-05*0.0347382569079347+1.33127168051629e-06*-0.993390223166138+1.63360979430895e-05*${unitz}
variable           dot      equal     -1.88538168618473e-05*0.0347382569079347+1.33127168051629e-06*-0.993390223166138+1.63360979430895e-05*0.109403464410088
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.90195295728336e-07/${f_module}*${dir_module}
variable           cos      equal     -1.90195295728336e-07/2.49821294239229e-05*${dir_module}
variable           cos      equal     -1.90195295728336e-07/2.49821294239229e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00761325395849582)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57840965430142/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.4362115341747-90.0)
print              "The dot product: ${dot}"
The dot product: -1.90195295728336e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.4362115341747

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01928814614039^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.01928814614039^2+-0.5515721715584^2+${new_z}^2)
variable           norm          equal     sqrt(0.01928814614039^2+-0.5515721715584^2+0.0607454201112994^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.01928814614039/${norm}
variable           unit_x        equal     0.01928814614039/0.555242198579755
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.5515721715584/${norm}
variable           unit_y        equal     -0.5515721715584/0.555242198579755
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0607454201112994/${norm}
variable           unit_z        equal     0.0607454201112994/0.555242198579755
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18492446002516+${delta}*${unit_x}
variable           x_new         equal     1.18492446002516+0.03*${unit_x}
variable           x_new         equal     1.18492446002516+0.03*0.0347382569079347
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.47311078370394+${delta}*${unit_y}
variable           y_new         equal     3.47311078370394+0.03*${unit_y}
variable           y_new         equal     3.47311078370394+0.03*-0.993390223166138
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.381613743044+${delta}*${unit_z}
variable           z_new         equal     31.381613743044+0.03*${unit_z}
variable           z_new         equal     31.381613743044+0.03*0.109403464410088

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1859666077324  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.1859666077324  y  3.44330907700896  z   ${z_new}
set                atom          288751    x  1.1859666077324  y  3.44330907700896  z   31.3848958469763
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01928814614039  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.01928814614039  -0.5515721715584  ${new_z}
fix                hold    carbon   planeforce   0.01928814614039  -0.5515721715584  0.0607454201112994
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3339   -1152448.8            0   -1152448.8 -0.023847469 -0.0058088649 -0.045172702 
    3538   -1152448.8            0   -1152448.8 6.0434158e-07 3.2545087e-07 2.7632209e-06 
Loop time of 2.36705 on 104 procs for 199 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.75772135   -1152448.7616264   -1152448.7616264
  Force two-norm initial, final = 0.30582388 0.0001006922
  Force max component initial, final = 0.28234552 2.6529544e-05
  Final line search alpha, max atom move = 1.0000000 2.6529544e-05
  Iterations, force evaluations = 199 398

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.61266    | 1.6812     | 2.192      |  35.0 | 71.02
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.042792   | 0.37914    | 1.1362     |  51.1 | 16.02
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3429e-05 | 0.0032803  | 0.0069908  |   2.7 |  0.14
Other   |            | 0.3035     |            |       | 12.82

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.06 ave        5426 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238198
Ave neighs/atom = 28.530457
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.18081846446365-${x_0}
variable           new_x         equal     1.18081846446365-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.44175009851328-${y_0}
variable           new_y         equal     3.44175009851328-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3723748863307-${z_0}
variable           new_z         equal     31.3723748863307-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151821505788798*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151821505788798*0.0151821505788798+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151821505788798*0.0151821505788798+-0.58293285674906*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151821505788798*0.0151821505788798+-0.58293285674906*-0.58293285674906+${new_z}*${new_z})
variable           module        equal     sqrt(0.0151821505788798*0.0151821505788798+-0.58293285674906*-0.58293285674906+0.0515065633980001*${new_z})
variable           module        equal     sqrt(0.0151821505788798*0.0151821505788798+-0.58293285674906*-0.58293285674906+0.0515065633980001*0.0515065633980001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0151821505788798/${module}
variable           unitx         equal     0.0151821505788798/0.585400836390667
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.58293285674906/${module}
variable           unity         equal     -0.58293285674906/0.585400836390667
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0515065633980001/${module}
variable           unitz         equal     0.0515065633980001/0.585400836390667
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.04341581296558e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.04341581296558e-07*6.04341581296558e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.04341581296558e-07*6.04341581296558e-07+3.25450867099657e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(6.04341581296558e-07*6.04341581296558e-07+3.25450867099657e-07*3.25450867099657e-07+${fz}*${fz})
variable           f_module      equal     sqrt(6.04341581296558e-07*6.04341581296558e-07+3.25450867099657e-07*3.25450867099657e-07+2.763220870907e-06*${fz})
variable           f_module      equal     sqrt(6.04341581296558e-07*6.04341581296558e-07+3.25450867099657e-07*3.25450867099657e-07+2.763220870907e-06*2.763220870907e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0259346239962459*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0259346239962459*0.0259346239962459+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0259346239962459*0.0259346239962459+-0.995784120062377*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0259346239962459*0.0259346239962459+-0.995784120062377*-0.995784120062377+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.0259346239962459*0.0259346239962459+-0.995784120062377*-0.995784120062377+0.0879851209567238*${unitz})
variable           dir_module    equal     sqrt(0.0259346239962459*0.0259346239962459+-0.995784120062377*-0.995784120062377+0.0879851209567238*0.0879851209567238)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.04341581296558e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.04341581296558e-07*0.0259346239962459+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     6.04341581296558e-07*0.0259346239962459+3.25450867099657e-07*${unity}+${fz}*${unitz}
variable           dot      equal     6.04341581296558e-07*0.0259346239962459+3.25450867099657e-07*-0.995784120062377+${fz}*${unitz}
variable           dot      equal     6.04341581296558e-07*0.0259346239962459+3.25450867099657e-07*-0.995784120062377+2.763220870907e-06*${unitz}
variable           dot      equal     6.04341581296558e-07*0.0259346239962459+3.25450867099657e-07*-0.995784120062377+2.763220870907e-06*0.0879851209567238
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -6.52831110852506e-08/${f_module}*${dir_module}
variable           cos      equal     -6.52831110852506e-08/2.84719802528661e-06*${dir_module}
variable           cos      equal     -6.52831110852506e-08/2.84719802528661e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.022928897289706)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.59372723364481/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(91.3138441829077-90.0)
print              "The dot product: ${dot}"
The dot product: -6.52831110852506e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 91.3138441829077

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0151821505788798^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0151821505788798^2+-0.58293285674906^2+${new_z}^2)
variable           norm          equal     sqrt(0.0151821505788798^2+-0.58293285674906^2+0.0515065633980001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0151821505788798/${norm}
variable           unit_x        equal     0.0151821505788798/0.585400836390667
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.58293285674906/${norm}
variable           unit_y        equal     -0.58293285674906/0.585400836390667
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0515065633980001/${norm}
variable           unit_z        equal     0.0515065633980001/0.585400836390667
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.18081846446365+${delta}*${unit_x}
variable           x_new         equal     1.18081846446365+0.03*${unit_x}
variable           x_new         equal     1.18081846446365+0.03*0.0259346239962459
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.44175009851328+${delta}*${unit_y}
variable           y_new         equal     3.44175009851328+0.03*${unit_y}
variable           y_new         equal     3.44175009851328+0.03*-0.995784120062377
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3723748863307+${delta}*${unit_z}
variable           z_new         equal     31.3723748863307+0.03*${unit_z}
variable           z_new         equal     31.3723748863307+0.03*0.0879851209567238

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18159650318354  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.18159650318354  y  3.41187657491141  z   ${z_new}
set                atom          288751    x  1.18159650318354  y  3.41187657491141  z   31.3750144399594
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0151821505788798  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0151821505788798  -0.58293285674906  ${new_z}
fix                hold    carbon   planeforce   0.0151821505788798  -0.58293285674906  0.0515065633980001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3538   -1152448.7            0   -1152448.7 -0.019473557 -0.0044212397 -0.044297955 
    3708   -1152448.7            0   -1152448.7 -1.3648764e-05 -5.0136488e-07 -1.6511385e-06 
Loop time of 1.96283 on 104 procs for 170 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.69663826  -1152448.70061412  -1152448.70061412
  Force two-norm initial, final = 0.31333763 0.00026085067
  Force max component initial, final = 0.29021097 9.2863480e-05
  Final line search alpha, max atom move = 1.0000000 9.2863480e-05
  Iterations, force evaluations = 170 340

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.51923    | 1.426      | 1.8534     |  32.1 | 72.65
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.033862   | 0.32105    | 0.95779    |  47.6 | 16.36
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.9689e-05 | 0.0027973  | 0.0059862  |   2.5 |  0.14
Other   |            | 0.213      |            |       | 10.85

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.07 ave        5428 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114484 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238201
Ave neighs/atom = 28.530467
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17723899179328-${x_0}
variable           new_x         equal     1.17723899179328-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.41069598885187-${y_0}
variable           new_y         equal     3.41069598885187-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3629374158063-${z_0}
variable           new_z         equal     31.3629374158063-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0116026779085099*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0116026779085099*0.0116026779085099+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0116026779085099*0.0116026779085099+-0.61398696641047*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.0116026779085099*0.0116026779085099+-0.61398696641047*-0.61398696641047+${new_z}*${new_z})
variable           module        equal     sqrt(0.0116026779085099*0.0116026779085099+-0.61398696641047*-0.61398696641047+0.0420690928736001*${new_z})
variable           module        equal     sqrt(0.0116026779085099*0.0116026779085099+-0.61398696641047*-0.61398696641047+0.0420690928736001*0.0420690928736001)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.0116026779085099/${module}
variable           unitx         equal     0.0116026779085099/0.615535884926125
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.61398696641047/${module}
variable           unity         equal     -0.61398696641047/0.615535884926125
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0420690928736001/${module}
variable           unitz         equal     0.0420690928736001/0.615535884926125
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36487639262104e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36487639262104e-05*-1.36487639262104e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36487639262104e-05*-1.36487639262104e-05+-5.01364879008783e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36487639262104e-05*-1.36487639262104e-05+-5.01364879008783e-07*-5.01364879008783e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-1.36487639262104e-05*-1.36487639262104e-05+-5.01364879008783e-07*-5.01364879008783e-07+-1.65113854284802e-06*${fz})
variable           f_module      equal     sqrt(-1.36487639262104e-05*-1.36487639262104e-05+-5.01364879008783e-07*-5.01364879008783e-07+-1.65113854284802e-06*-1.65113854284802e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.018849718095481*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.018849718095481*0.018849718095481+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.018849718095481*0.018849718095481+-0.997483625969523*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.018849718095481*0.018849718095481+-0.997483625969523*-0.997483625969523+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.018849718095481*0.018849718095481+-0.997483625969523*-0.997483625969523+0.0683454757128402*${unitz})
variable           dir_module    equal     sqrt(0.018849718095481*0.018849718095481+-0.997483625969523*-0.997483625969523+0.0683454757128402*0.0683454757128402)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36487639262104e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36487639262104e-05*0.018849718095481+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36487639262104e-05*0.018849718095481+-5.01364879008783e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -1.36487639262104e-05*0.018849718095481+-5.01364879008783e-07*-0.997483625969523+${fz}*${unitz}
variable           dot      equal     -1.36487639262104e-05*0.018849718095481+-5.01364879008783e-07*-0.997483625969523+-1.65113854284802e-06*${unitz}
variable           dot      equal     -1.36487639262104e-05*0.018849718095481+-5.01364879008783e-07*-0.997483625969523+-1.65113854284802e-06*0.0683454757128402
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.29980055907862e-07/${f_module}*${dir_module}
variable           cos      equal     1.29980055907862e-07/1.3757411891159e-05*${dir_module}
variable           cos      equal     1.29980055907862e-07/1.3757411891159e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00944800206144819)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56134818416556/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.4586613031014-90.0)
print              "The dot product: ${dot}"
The dot product: 1.29980055907862e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.4586613031014

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0116026779085099^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.0116026779085099^2+-0.61398696641047^2+${new_z}^2)
variable           norm          equal     sqrt(0.0116026779085099^2+-0.61398696641047^2+0.0420690928736001^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.0116026779085099/${norm}
variable           unit_x        equal     0.0116026779085099/0.615535884926125
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.61398696641047/${norm}
variable           unit_y        equal     -0.61398696641047/0.615535884926125
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0420690928736001/${norm}
variable           unit_z        equal     0.0420690928736001/0.615535884926125
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17723899179328+${delta}*${unit_x}
variable           x_new         equal     1.17723899179328+0.03*${unit_x}
variable           x_new         equal     1.17723899179328+0.03*0.018849718095481
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.41069598885187+${delta}*${unit_y}
variable           y_new         equal     3.41069598885187+0.03*${unit_y}
variable           y_new         equal     3.41069598885187+0.03*-0.997483625969523
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3629374158063+${delta}*${unit_z}
variable           z_new         equal     31.3629374158063+0.03*${unit_z}
variable           z_new         equal     31.3629374158063+0.03*0.0683454757128402

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17780448333614  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17780448333614  y  3.38077148007278  z   ${z_new}
set                atom          288751    x  1.17780448333614  y  3.38077148007278  z   31.3649877800777
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0116026779085099  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.0116026779085099  -0.61398696641047  ${new_z}
fix                hold    carbon   planeforce   0.0116026779085099  -0.61398696641047  0.0420690928736001
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3708   -1152448.6            0   -1152448.6 -0.015928619 -0.0034424152 -0.045847992 
    3959   -1152448.7            0   -1152448.7 -8.5311163e-06 -5.2244305e-08 1.5903949e-06 
Loop time of 2.90098 on 104 procs for 251 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.63435298  -1152448.67563849  -1152448.67563849
  Force two-norm initial, final = 0.33449112 7.7028907e-05
  Force max component initial, final = 0.29826675 1.1632608e-05
  Final line search alpha, max atom move = 1.0000000 1.1632608e-05
  Iterations, force evaluations = 251 502

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.76941    | 2.1088     | 2.735      |  39.0 | 72.69
Neigh   | 1.0149e-05 | 0.0029531  | 0.0042951  |   2.2 |  0.10
Comm    | 0.046318   | 0.47053    | 1.4163     |  58.2 | 16.22
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.9118e-05 | 0.0041209  | 0.0088372  |   3.0 |  0.14
Other   |            | 0.3146     |            |       | 10.84

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.05 ave        5429 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.5 ave      114485 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238202
Ave neighs/atom = 28.530471
Neighbor list builds = 1
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.17145154396311-${x_0}
variable           new_x         equal     1.17145154396311-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.37908668053184-${y_0}
variable           new_y         equal     3.37908668053184-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3421507331124-${z_0}
variable           new_z         equal     31.3421507331124-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00581523007833984*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00581523007833984*0.00581523007833984+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00581523007833984*0.00581523007833984+-0.6455962747305*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00581523007833984*0.00581523007833984+-0.6455962747305*-0.6455962747305+${new_z}*${new_z})
variable           module        equal     sqrt(0.00581523007833984*0.00581523007833984+-0.6455962747305*-0.6455962747305+0.0212824101797011*${new_z})
variable           module        equal     sqrt(0.00581523007833984*0.00581523007833984+-0.6455962747305*-0.6455962747305+0.0212824101797011*0.0212824101797011)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00581523007833984/${module}
variable           unitx         equal     0.00581523007833984/0.645973147917017
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.6455962747305/${module}
variable           unity         equal     -0.6455962747305/0.645973147917017
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0212824101797011/${module}
variable           unitz         equal     0.0212824101797011/0.645973147917017
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.53111633158238e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.53111633158238e-06*-8.53111633158238e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.53111633158238e-06*-8.53111633158238e-06+-5.22443048302984e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.53111633158238e-06*-8.53111633158238e-06+-5.22443048302984e-08*-5.22443048302984e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-8.53111633158238e-06*-8.53111633158238e-06+-5.22443048302984e-08*-5.22443048302984e-08+1.59039494856704e-06*${fz})
variable           f_module      equal     sqrt(-8.53111633158238e-06*-8.53111633158238e-06+-5.22443048302984e-08*-5.22443048302984e-08+1.59039494856704e-06*1.59039494856704e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00900227834096732*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00900227834096732*0.00900227834096732+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00900227834096732*0.00900227834096732+-0.999416580723622*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00900227834096732*0.00900227834096732+-0.999416580723622*-0.999416580723622+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00900227834096732*0.00900227834096732+-0.999416580723622*-0.999416580723622+0.0329462768666587*${unitz})
variable           dir_module    equal     sqrt(0.00900227834096732*0.00900227834096732+-0.999416580723622*-0.999416580723622+0.0329462768666587*0.0329462768666587)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.53111633158238e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.53111633158238e-06*0.00900227834096732+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.53111633158238e-06*0.00900227834096732+-5.22443048302984e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -8.53111633158238e-06*0.00900227834096732+-5.22443048302984e-08*-0.999416580723622+${fz}*${unitz}
variable           dot      equal     -8.53111633158238e-06*0.00900227834096732+-5.22443048302984e-08*-0.999416580723622+1.59039494856704e-06*${unitz}
variable           dot      equal     -8.53111633158238e-06*0.00900227834096732+-5.22443048302984e-08*-0.999416580723622+1.59039494856704e-06*0.0329462768666587
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     2.78119330225279e-08/${f_module}*${dir_module}
variable           cos      equal     2.78119330225279e-08/8.67825048168157e-06*${dir_module}
variable           cos      equal     2.78119330225279e-08/8.67825048168157e-06*0.999999999999999
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.0032047856974438)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.56759153561155/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.8163789909735-90.0)
print              "The dot product: ${dot}"
The dot product: 2.78119330225279e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.8163789909735

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00581523007833984^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00581523007833984^2+-0.6455962747305^2+${new_z}^2)
variable           norm          equal     sqrt(0.00581523007833984^2+-0.6455962747305^2+0.0212824101797011^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00581523007833984/${norm}
variable           unit_x        equal     0.00581523007833984/0.645973147917017
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.6455962747305/${norm}
variable           unit_y        equal     -0.6455962747305/0.645973147917017
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0212824101797011/${norm}
variable           unit_z        equal     0.0212824101797011/0.645973147917017
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.17145154396311+${delta}*${unit_x}
variable           x_new         equal     1.17145154396311+0.03*${unit_x}
variable           x_new         equal     1.17145154396311+0.03*0.00900227834096732
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.37908668053184+${delta}*${unit_y}
variable           y_new         equal     3.37908668053184+0.03*${unit_y}
variable           y_new         equal     3.37908668053184+0.03*-0.999416580723622
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3421507331124+${delta}*${unit_z}
variable           z_new         equal     31.3421507331124+0.03*${unit_z}
variable           z_new         equal     31.3421507331124+0.03*0.0329462768666587

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17172161231334  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.17172161231334  y  3.34910418311013  z   ${z_new}
set                atom          288751    x  1.17172161231334  y  3.34910418311013  z   31.3431391214184
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00581523007833984  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00581523007833984  -0.6455962747305  ${new_z}
fix                hold    carbon   planeforce   0.00581523007833984  -0.6455962747305  0.0212824101797011
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    3959   -1152448.6            0   -1152448.6 -0.011082518 -0.0017416732 -0.049804995 
    4000   -1152448.6            0   -1152448.6 -4.4824061e-05 4.551115e-07 2.6053464e-05 
    4111   -1152448.6            0   -1152448.6 -4.462951e-06 2.8440488e-07 9.8468086e-06 
Loop time of 1.76656 on 104 procs for 152 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.62917901  -1152448.63416535  -1152448.63416535
  Force two-norm initial, final = 0.34209599 0.00023918986
  Force max component initial, final = 0.30920995 9.6882836e-05
  Final line search alpha, max atom move = 1.0000000 9.6882836e-05
  Iterations, force evaluations = 152 304

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.46777    | 1.2794     | 1.6499     |  30.2 | 72.42
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03614    | 0.28986    | 0.86183    |  44.9 | 16.41
Output  | 0.00010399 | 0.00010638 | 0.00021181 |   0.0 |  0.01
Modify  | 1.8229e-05 | 0.0025004  | 0.0053413  |   2.4 |  0.14
Other   |            | 0.1947     |            |       | 11.02

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114480 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238189
Ave neighs/atom = 28.530426
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16844994814722-${x_0}
variable           new_x         equal     1.16844994814722-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.34867967679514-${y_0}
variable           new_y         equal     3.34867967679514-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3311557880637-${z_0}
variable           new_z         equal     31.3311557880637-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00281363426244985*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00281363426244985*0.00281363426244985+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00281363426244985*0.00281363426244985+-0.6760032784672*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00281363426244985*0.00281363426244985+-0.6760032784672*-0.6760032784672+${new_z}*${new_z})
variable           module        equal     sqrt(0.00281363426244985*0.00281363426244985+-0.6760032784672*-0.6760032784672+0.0102874651310003*${new_z})
variable           module        equal     sqrt(0.00281363426244985*0.00281363426244985+-0.6760032784672*-0.6760032784672+0.0102874651310003*0.0102874651310003)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00281363426244985/${module}
variable           unitx         equal     0.00281363426244985/0.676087406312961
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.6760032784672/${module}
variable           unity         equal     -0.6760032784672/0.676087406312961
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.0102874651310003/${module}
variable           unitz         equal     0.0102874651310003/0.676087406312961
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46295104054988e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46295104054988e-06*-4.46295104054988e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46295104054988e-06*-4.46295104054988e-06+2.84404883445181e-07*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46295104054988e-06*-4.46295104054988e-06+2.84404883445181e-07*2.84404883445181e-07+${fz}*${fz})
variable           f_module      equal     sqrt(-4.46295104054988e-06*-4.46295104054988e-06+2.84404883445181e-07*2.84404883445181e-07+9.84680863228229e-06*${fz})
variable           f_module      equal     sqrt(-4.46295104054988e-06*-4.46295104054988e-06+2.84404883445181e-07*2.84404883445181e-07+9.84680863228229e-06*9.84680863228229e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00416164276420114*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00416164276420114*0.00416164276420114+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00416164276420114*0.00416164276420114+-0.999875566613169*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00416164276420114*0.00416164276420114+-0.999875566613169*-0.999875566613169+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00416164276420114*0.00416164276420114+-0.999875566613169*-0.999875566613169+0.0152161762442861*${unitz})
variable           dir_module    equal     sqrt(0.00416164276420114*0.00416164276420114+-0.999875566613169*-0.999875566613169+0.0152161762442861*0.0152161762442861)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46295104054988e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46295104054988e-06*0.00416164276420114+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46295104054988e-06*0.00416164276420114+2.84404883445181e-07*${unity}+${fz}*${unitz}
variable           dot      equal     -4.46295104054988e-06*0.00416164276420114+2.84404883445181e-07*-0.999875566613169+${fz}*${unitz}
variable           dot      equal     -4.46295104054988e-06*0.00416164276420114+2.84404883445181e-07*-0.999875566613169+9.84680863228229e-06*${unitz}
variable           dot      equal     -4.46295104054988e-06*0.00416164276420114+2.84404883445181e-07*-0.999875566613169+9.84680863228229e-06*0.0152161762442861
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.53111926294626e-07/${f_module}*${dir_module}
variable           cos      equal     -1.53111926294626e-07/1.08147333933325e-05*${dir_module}
variable           cos      equal     -1.53111926294626e-07/1.08147333933325e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.014157716212313)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.58495451601417/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.811204487812-90.0)
print              "The dot product: ${dot}"
The dot product: -1.53111926294626e-07
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.811204487812

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00281363426244985^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00281363426244985^2+-0.6760032784672^2+${new_z}^2)
variable           norm          equal     sqrt(0.00281363426244985^2+-0.6760032784672^2+0.0102874651310003^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00281363426244985/${norm}
variable           unit_x        equal     0.00281363426244985/0.676087406312961
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.6760032784672/${norm}
variable           unit_y        equal     -0.6760032784672/0.676087406312961
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.0102874651310003/${norm}
variable           unit_z        equal     0.0102874651310003/0.676087406312961
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16844994814722+${delta}*${unit_x}
variable           x_new         equal     1.16844994814722+0.03*${unit_x}
variable           x_new         equal     1.16844994814722+0.03*0.00416164276420114
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.34867967679514+${delta}*${unit_y}
variable           y_new         equal     3.34867967679514+0.03*${unit_y}
variable           y_new         equal     3.34867967679514+0.03*-0.999875566613169
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3311557880637+${delta}*${unit_z}
variable           z_new         equal     31.3311557880637+0.03*${unit_z}
variable           z_new         equal     31.3311557880637+0.03*0.0152161762442861

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16857479743015  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16857479743015  y  3.31868340979675  z   ${z_new}
set                atom          288751    x  1.16857479743015  y  3.31868340979675  z   31.331612273351
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00281363426244985  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00281363426244985  -0.6760032784672  ${new_z}
fix                hold    carbon   planeforce   0.00281363426244985  -0.6760032784672  0.0102874651310003
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4111   -1152448.6            0   -1152448.6 -0.0048361293 -0.00040234778 -0.025116131 
    4275   -1152448.6            0   -1152448.6 4.6126685e-07 6.2866637e-08 4.0048949e-06 
Loop time of 1.89566 on 104 procs for 164 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.58713616  -1152448.59282162  -1152448.59282162
  Force two-norm initial, final = 0.35054893 0.00021502848
  Force max component initial, final = 0.31609323 7.4957547e-05
  Final line search alpha, max atom move = 1.0000000 7.4957547e-05
  Iterations, force evaluations = 164 328

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.50661    | 1.3801     | 1.7889     |  31.5 | 72.81
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.03163    | 0.30867    | 0.92744    |  47.0 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8925e-05 | 0.002696   | 0.0057643  |   2.4 |  0.14
Other   |            | 0.2042     |            |       | 10.77

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5424 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114474 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238187
Ave neighs/atom = 28.530419
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16694893301141-${x_0}
variable           new_x         equal     1.16694893301141-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.31858352143325-${y_0}
variable           new_y         equal     3.31858352143325-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3254931494777-${z_0}
variable           new_z         equal     31.3254931494777-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00131261912663994*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00131261912663994*0.00131261912663994+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00131261912663994*0.00131261912663994+-0.70609943382909*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.00131261912663994*0.00131261912663994+-0.70609943382909*-0.70609943382909+${new_z}*${new_z})
variable           module        equal     sqrt(0.00131261912663994*0.00131261912663994+-0.70609943382909*-0.70609943382909+0.00462482654500107*${new_z})
variable           module        equal     sqrt(0.00131261912663994*0.00131261912663994+-0.70609943382909*-0.70609943382909+0.00462482654500107*0.00462482654500107)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.00131261912663994/${module}
variable           unitx         equal     0.00131261912663994/0.706115799598978
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.70609943382909/${module}
variable           unity         equal     -0.70609943382909/0.706115799598978
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00462482654500107/${module}
variable           unitz         equal     0.00462482654500107/0.706115799598978
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.61266846812954e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.61266846812954e-07*4.61266846812954e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.61266846812954e-07*4.61266846812954e-07+6.286663705197e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(4.61266846812954e-07*4.61266846812954e-07+6.286663705197e-08*6.286663705197e-08+${fz}*${fz})
variable           f_module      equal     sqrt(4.61266846812954e-07*4.61266846812954e-07+6.286663705197e-08*6.286663705197e-08+4.00489486997462e-06*${fz})
variable           f_module      equal     sqrt(4.61266846812954e-07*4.61266846812954e-07+6.286663705197e-08*6.286663705197e-08+4.00489486997462e-06*4.00489486997462e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00185892898499851*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00185892898499851*0.00185892898499851+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00185892898499851*0.00185892898499851+-0.99997682282439*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00185892898499851*0.00185892898499851+-0.99997682282439*-0.99997682282439+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.00185892898499851*0.00185892898499851+-0.99997682282439*-0.99997682282439+0.0065496715236051*${unitz})
variable           dir_module    equal     sqrt(0.00185892898499851*0.00185892898499851+-0.99997682282439*-0.99997682282439+0.0065496715236051*0.0065496715236051)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.61266846812954e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.61266846812954e-07*0.00185892898499851+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     4.61266846812954e-07*0.00185892898499851+6.286663705197e-08*${unity}+${fz}*${unitz}
variable           dot      equal     4.61266846812954e-07*0.00185892898499851+6.286663705197e-08*-0.99997682282439+${fz}*${unitz}
variable           dot      equal     4.61266846812954e-07*0.00185892898499851+6.286663705197e-08*-0.99997682282439+4.00489486997462e-06*${unitz}
variable           dot      equal     4.61266846812954e-07*0.00185892898499851+6.286663705197e-08*-0.99997682282439+4.00489486997462e-06*0.0065496715236051
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -3.57769717846186e-08/${f_module}*${dir_module}
variable           cos      equal     -3.57769717846186e-08/4.03186089015631e-06*${dir_module}
variable           cos      equal     -3.57769717846186e-08/4.03186089015631e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00887356304181208)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57967000629174/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.5084243839209-90.0)
print              "The dot product: ${dot}"
The dot product: -3.57769717846186e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.5084243839209

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00131261912663994^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.00131261912663994^2+-0.70609943382909^2+${new_z}^2)
variable           norm          equal     sqrt(0.00131261912663994^2+-0.70609943382909^2+0.00462482654500107^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.00131261912663994/${norm}
variable           unit_x        equal     0.00131261912663994/0.706115799598978
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.70609943382909/${norm}
variable           unit_y        equal     -0.70609943382909/0.706115799598978
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00462482654500107/${norm}
variable           unit_z        equal     0.00462482654500107/0.706115799598978
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16694893301141+${delta}*${unit_x}
variable           x_new         equal     1.16694893301141+0.03*${unit_x}
variable           x_new         equal     1.16694893301141+0.03*0.00185892898499851
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.31858352143325+${delta}*${unit_y}
variable           y_new         equal     3.31858352143325+0.03*${unit_y}
variable           y_new         equal     3.31858352143325+0.03*-0.99997682282439
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3254931494777+${delta}*${unit_z}
variable           z_new         equal     31.3254931494777+0.03*${unit_z}
variable           z_new         equal     31.3254931494777+0.03*0.0065496715236051

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16700470088096  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16700470088096  y  3.28858421674852  z   ${z_new}
set                atom          288751    x  1.16700470088096  y  3.28858421674852  z   31.3256896396234
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00131261912663994  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.00131261912663994  -0.70609943382909  ${new_z}
fix                hold    carbon   planeforce   0.00131261912663994  -0.70609943382909  0.00462482654500107
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4275   -1152448.5            0   -1152448.5 -0.0017810074 -7.8341279e-05 -0.011455337 
    4471   -1152448.6            0   -1152448.6 3.3134166e-07 -2.7622234e-08 -4.3112902e-06 
Loop time of 2.25979 on 104 procs for 196 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.54612832  -1152448.55064618  -1152448.55064618
  Force two-norm initial, final = 0.3519723 8.1613164e-05
  Force max component initial, final = 0.32315251 2.9456715e-05
  Final line search alpha, max atom move = 1.0000000 2.9456715e-05
  Iterations, force evaluations = 196 392

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60381    | 1.647      | 2.1222     |  34.4 | 72.88
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.040752   | 0.37441    | 1.1194     |  51.2 | 16.57
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.3051e-05 | 0.0032302  | 0.0069403  |   2.7 |  0.14
Other   |            | 0.2351     |            |       | 10.40

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114463 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16629303647997-${x_0}
variable           new_x         equal     1.16629303647997-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.28856521570071-${y_0}
variable           new_y         equal     3.28856521570071-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3229906227313-${z_0}
variable           new_z         equal     31.3229906227313-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000656722595199888*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000656722595199888*0.000656722595199888+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000656722595199888*0.000656722595199888+-0.73611773956163*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000656722595199888*0.000656722595199888+-0.73611773956163*-0.73611773956163+${new_z}*${new_z})
variable           module        equal     sqrt(0.000656722595199888*0.000656722595199888+-0.73611773956163*-0.73611773956163+0.00212229979860012*${new_z})
variable           module        equal     sqrt(0.000656722595199888*0.000656722595199888+-0.73611773956163*-0.73611773956163+0.00212229979860012*0.00212229979860012)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000656722595199888/${module}
variable           unitx         equal     0.000656722595199888/0.73612109189883
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.73611773956163/${module}
variable           unity         equal     -0.73611773956163/0.73612109189883
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00212229979860012/${module}
variable           unitz         equal     0.00212229979860012/0.73612109189883
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31341659622991e-07*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31341659622991e-07*3.31341659622991e-07+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31341659622991e-07*3.31341659622991e-07+-2.76222340463363e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(3.31341659622991e-07*3.31341659622991e-07+-2.76222340463363e-08*-2.76222340463363e-08+${fz}*${fz})
variable           f_module      equal     sqrt(3.31341659622991e-07*3.31341659622991e-07+-2.76222340463363e-08*-2.76222340463363e-08+-4.3112902246503e-06*${fz})
variable           f_module      equal     sqrt(3.31341659622991e-07*3.31341659622991e-07+-2.76222340463363e-08*-2.76222340463363e-08+-4.3112902246503e-06*-4.3112902246503e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000892139353738482*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000892139353738482*0.000892139353738482+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000892139353738482*0.000892139353738482+-0.999995445943287*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000892139353738482*0.000892139353738482+-0.999995445943287*-0.999995445943287+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000892139353738482*0.000892139353738482+-0.999995445943287*-0.999995445943287+0.00288308516350976*${unitz})
variable           dir_module    equal     sqrt(0.000892139353738482*0.000892139353738482+-0.999995445943287*-0.999995445943287+0.00288308516350976*0.00288308516350976)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31341659622991e-07*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31341659622991e-07*0.000892139353738482+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     3.31341659622991e-07*0.000892139353738482+-2.76222340463363e-08*${unity}+${fz}*${unitz}
variable           dot      equal     3.31341659622991e-07*0.000892139353738482+-2.76222340463363e-08*-0.999995445943287+${fz}*${unitz}
variable           dot      equal     3.31341659622991e-07*0.000892139353738482+-2.76222340463363e-08*-0.999995445943287+-4.3112902246503e-06*${unitz}
variable           dot      equal     3.31341659622991e-07*0.000892139353738482+-2.76222340463363e-08*-0.999995445943287+-4.3112902246503e-06*0.00288308516350976
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     1.54878943049247e-08/${f_module}*${dir_module}
variable           cos      equal     1.54878943049247e-08/4.32409223819065e-06*${dir_module}
variable           cos      equal     1.54878943049247e-08/4.32409223819065e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.00358176779119896)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.5672145513452/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.7947793835688-90.0)
print              "The dot product: ${dot}"
The dot product: 1.54878943049247e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.7947793835688

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000656722595199888^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000656722595199888^2+-0.73611773956163^2+${new_z}^2)
variable           norm          equal     sqrt(0.000656722595199888^2+-0.73611773956163^2+0.00212229979860012^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000656722595199888/${norm}
variable           unit_x        equal     0.000656722595199888/0.73612109189883
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.73611773956163/${norm}
variable           unit_y        equal     -0.73611773956163/0.73612109189883
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00212229979860012/${norm}
variable           unit_z        equal     0.00212229979860012/0.73612109189883
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16629303647997+${delta}*${unit_x}
variable           x_new         equal     1.16629303647997+0.03*${unit_x}
variable           x_new         equal     1.16629303647997+0.03*0.000892139353738482
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.28856521570071+${delta}*${unit_y}
variable           y_new         equal     3.28856521570071+0.03*${unit_y}
variable           y_new         equal     3.28856521570071+0.03*-0.999995445943287
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3229906227313+${delta}*${unit_z}
variable           z_new         equal     31.3229906227313+0.03*${unit_z}
variable           z_new         equal     31.3229906227313+0.03*0.00288308516350976

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16631980066058  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16631980066058  y  3.25856535232241  z   ${z_new}
set                atom          288751    x  1.16631980066058  y  3.25856535232241  z   31.3230771152862
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000656722595199888  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000656722595199888  -0.73611773956163  ${new_z}
fix                hold    carbon   planeforce   0.000656722595199888  -0.73611773956163  0.00212229979860012
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4471   -1152448.5            0   -1152448.5 -0.00052387979 -1.4503117e-05 -0.0048682839 
    4600   -1152448.5            0   -1152448.5 -1.5052614e-05 2.860272e-08 1.4578695e-05 
Loop time of 1.48514 on 104 procs for 129 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.49986693  -1152448.50463465  -1152448.50463465
  Force two-norm initial, final = 0.359333 0.00026473717
  Force max component initial, final = 0.32978494 0.00013487494
  Final line search alpha, max atom move = 1.0000000 0.00013487494
  Iterations, force evaluations = 129 258

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.39798    | 1.0827     | 1.4004     |  27.8 | 72.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.026042   | 0.24011    | 0.72584    |  41.8 | 16.17
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.4991e-05 | 0.0021218  | 0.0045591  |   2.2 |  0.14
Other   |            | 0.1602     |            |       | 10.79

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114464 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238185
Ave neighs/atom = 28.530412
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16600452702981-${x_0}
variable           new_x         equal     1.16600452702981-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.25856170418805-${y_0}
variable           new_y         equal     3.25856170418805-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3219093212344-${z_0}
variable           new_z         equal     31.3219093212344-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000368213145039986*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000368213145039986*0.000368213145039986+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000368213145039986*0.000368213145039986+-0.76612125107429*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000368213145039986*0.000368213145039986+-0.76612125107429*-0.76612125107429+${new_z}*${new_z})
variable           module        equal     sqrt(0.000368213145039986*0.000368213145039986+-0.76612125107429*-0.76612125107429+0.00104099830170057*${new_z})
variable           module        equal     sqrt(0.000368213145039986*0.000368213145039986+-0.76612125107429*-0.76612125107429+0.00104099830170057*0.00104099830170057)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000368213145039986/${module}
variable           unitx         equal     0.000368213145039986/0.766122046808483
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.76612125107429/${module}
variable           unity         equal     -0.76612125107429/0.766122046808483
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.00104099830170057/${module}
variable           unitz         equal     0.00104099830170057/0.766122046808483
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.50526136648702e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.50526136648702e-05*-1.50526136648702e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.50526136648702e-05*-1.50526136648702e-05+2.86027198655206e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.50526136648702e-05*-1.50526136648702e-05+2.86027198655206e-08*2.86027198655206e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-1.50526136648702e-05*-1.50526136648702e-05+2.86027198655206e-08*2.86027198655206e-08+1.45786948668224e-05*${fz})
variable           f_module      equal     sqrt(-1.50526136648702e-05*-1.50526136648702e-05+2.86027198655206e-08*2.86027198655206e-08+1.45786948668224e-05*1.45786948668224e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000480619434689148*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000480619434689148*0.000480619434689148+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000480619434689148*0.000480619434689148+-0.999998961348004*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000480619434689148*0.000480619434689148+-0.999998961348004*-0.999998961348004+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000480619434689148*0.000480619434689148+-0.999998961348004*-0.999998961348004+0.00135878911987609*${unitz})
variable           dir_module    equal     sqrt(0.000480619434689148*0.000480619434689148+-0.999998961348004*-0.999998961348004+0.00135878911987609*0.00135878911987609)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.50526136648702e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.50526136648702e-05*0.000480619434689148+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.50526136648702e-05*0.000480619434689148+2.86027198655206e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -1.50526136648702e-05*0.000480619434689148+2.86027198655206e-08*-0.999998961348004+${fz}*${unitz}
variable           dot      equal     -1.50526136648702e-05*0.000480619434689148+2.86027198655206e-08*-0.999998961348004+1.45786948668224e-05*${unitz}
variable           dot      equal     -1.50526136648702e-05*0.000480619434689148+2.86027198655206e-08*-0.999998961348004+1.45786948668224e-05*0.00135878911987609
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -1.60278968604209e-08/${f_module}*${dir_module}
variable           cos      equal     -1.60278968604209e-08/2.0955198407062e-05*${dir_module}
variable           cos      equal     -1.60278968604209e-08/2.0955198407062e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.00076486495374911)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57156119182322/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0438235380201-90.0)
print              "The dot product: ${dot}"
The dot product: -1.60278968604209e-08
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0438235380201

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000368213145039986^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000368213145039986^2+-0.76612125107429^2+${new_z}^2)
variable           norm          equal     sqrt(0.000368213145039986^2+-0.76612125107429^2+0.00104099830170057^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000368213145039986/${norm}
variable           unit_x        equal     0.000368213145039986/0.766122046808483
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.76612125107429/${norm}
variable           unit_y        equal     -0.76612125107429/0.766122046808483
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.00104099830170057/${norm}
variable           unit_z        equal     0.00104099830170057/0.766122046808483
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16600452702981+${delta}*${unit_x}
variable           x_new         equal     1.16600452702981+0.03*${unit_x}
variable           x_new         equal     1.16600452702981+0.03*0.000480619434689148
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.25856170418805+${delta}*${unit_y}
variable           y_new         equal     3.25856170418805+0.03*${unit_y}
variable           y_new         equal     3.25856170418805+0.03*-0.999998961348004
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3219093212344+${delta}*${unit_z}
variable           z_new         equal     31.3219093212344+0.03*${unit_z}
variable           z_new         equal     31.3219093212344+0.03*0.00135878911987609

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16601894561285  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16601894561285  y  3.22856173534761  z   ${z_new}
set                atom          288751    x  1.16601894561285  y  3.22856173534761  z   31.321950084908
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000368213145039986  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000368213145039986  -0.76612125107429  ${new_z}
fix                hold    carbon   planeforce   0.000368213145039986  -0.76612125107429  0.00104099830170057
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4600   -1152448.4            0   -1152448.4 -0.00010308894 -2.8813984e-06 -0.0020840974 
    4733   -1152448.5            0   -1152448.5 -1.8075231e-05 1.6040023e-08 1.8198051e-05 
Loop time of 1.52786 on 104 procs for 133 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.44894109  -1152448.45402227  -1152448.45402227
  Force two-norm initial, final = 0.36912658 0.00025650902
  Force max component initial, final = 0.33620922 0.00012901061
  Final line search alpha, max atom move = 1.0000000 0.00012901061
  Iterations, force evaluations = 133 266

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41065    | 1.118      | 1.4402     |  28.3 | 73.17
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.025177   | 0.2508     | 0.75199    |  42.3 | 16.42
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.5253e-05 | 0.0021904  | 0.0046855  |   2.2 |  0.14
Other   |            | 0.1569     |            |       | 10.27

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238188
Ave neighs/atom = 28.530422
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16587275878819-${x_0}
variable           new_x         equal     1.16587275878819-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.22856094092569-${y_0}
variable           new_y         equal     3.22856094092569-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3214171392242-${z_0}
variable           new_z         equal     31.3214171392242-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000236444903420008*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000236444903420008*0.000236444903420008+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000236444903420008*0.000236444903420008+-0.79612201433665*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000236444903420008*0.000236444903420008+-0.79612201433665*-0.79612201433665+${new_z}*${new_z})
variable           module        equal     sqrt(0.000236444903420008*0.000236444903420008+-0.79612201433665*-0.79612201433665+0.000548816291498611*${new_z})
variable           module        equal     sqrt(0.000236444903420008*0.000236444903420008+-0.79612201433665*-0.79612201433665+0.000548816291498611*0.000548816291498611)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000236444903420008/${module}
variable           unitx         equal     0.000236444903420008/0.796122238614749
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.79612201433665/${module}
variable           unity         equal     -0.79612201433665/0.796122238614749
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.000548816291498611/${module}
variable           unitz         equal     0.000548816291498611/0.796122238614749
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80752312082724e-05*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80752312082724e-05*-1.80752312082724e-05+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80752312082724e-05*-1.80752312082724e-05+1.60400227725701e-08*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80752312082724e-05*-1.80752312082724e-05+1.60400227725701e-08*1.60400227725701e-08+${fz}*${fz})
variable           f_module      equal     sqrt(-1.80752312082724e-05*-1.80752312082724e-05+1.60400227725701e-08*1.60400227725701e-08+1.81980511612316e-05*${fz})
variable           f_module      equal     sqrt(-1.80752312082724e-05*-1.80752312082724e-05+1.60400227725701e-08*1.60400227725701e-08+1.81980511612316e-05*1.81980511612316e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000296995727479516*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000296995727479516*0.000296995727479516+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000296995727479516*0.000296995727479516+-0.999999718286856*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000296995727479516*0.000296995727479516+-0.999999718286856*-0.999999718286856+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000296995727479516*0.000296995727479516+-0.999999718286856*-0.999999718286856+0.000689361840279139*${unitz})
variable           dir_module    equal     sqrt(0.000296995727479516*0.000296995727479516+-0.999999718286856*-0.999999718286856+0.000689361840279139*0.000689361840279139)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80752312082724e-05*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80752312082724e-05*0.000296995727479516+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80752312082724e-05*0.000296995727479516+1.60400227725701e-08*${unity}+${fz}*${unitz}
variable           dot      equal     -1.80752312082724e-05*0.000296995727479516+1.60400227725701e-08*-0.999999718286856+${fz}*${unitz}
variable           dot      equal     -1.80752312082724e-05*0.000296995727479516+1.60400227725701e-08*-0.999999718286856+1.81980511612316e-05*${unitz}
variable           dot      equal     -1.80752312082724e-05*0.000296995727479516+1.60400227725701e-08*-0.999999718286856+1.81980511612316e-05*0.000689361840279139
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -8.86324265794563e-09/${f_module}*${dir_module}
variable           cos      equal     -8.86324265794563e-09/2.56492359843649e-05*${dir_module}
variable           cos      equal     -8.86324265794563e-09/2.56492359843649e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.000345555815516237)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57114188261729/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.0197988902093-90.0)
print              "The dot product: ${dot}"
The dot product: -8.86324265794563e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.0197988902093

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000236444903420008^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000236444903420008^2+-0.79612201433665^2+${new_z}^2)
variable           norm          equal     sqrt(0.000236444903420008^2+-0.79612201433665^2+0.000548816291498611^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000236444903420008/${norm}
variable           unit_x        equal     0.000236444903420008/0.796122238614749
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.79612201433665/${norm}
variable           unit_y        equal     -0.79612201433665/0.796122238614749
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.000548816291498611/${norm}
variable           unit_z        equal     0.000548816291498611/0.796122238614749
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16587275878819+${delta}*${unit_x}
variable           x_new         equal     1.16587275878819+0.03*${unit_x}
variable           x_new         equal     1.16587275878819+0.03*0.000296995727479516
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.22856094092569+${delta}*${unit_y}
variable           y_new         equal     3.22856094092569+0.03*${unit_y}
variable           y_new         equal     3.22856094092569+0.03*-0.999999718286856
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3214171392242+${delta}*${unit_z}
variable           z_new         equal     31.3214171392242+0.03*${unit_z}
variable           z_new         equal     31.3214171392242+0.03*0.000689361840279139

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16588166866001  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16588166866001  y  3.19856094937708  z   ${z_new}
set                atom          288751    x  1.16588166866001  y  3.19856094937708  z   31.3214378200794
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000236444903420008  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000236444903420008  -0.79612201433665  ${new_z}
fix                hold    carbon   planeforce   0.000236444903420008  -0.79612201433665  0.000548816291498611
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4733   -1152448.4            0   -1152448.4 5.0051287e-05 -6.1980854e-07 -0.000920668 
    4893   -1152448.4            0   -1152448.4 -8.4008472e-06 4.8794319e-09 1.0697498e-05 
Loop time of 1.84581 on 104 procs for 160 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.39323352  -1152448.39853647  -1152448.39853647
  Force two-norm initial, final = 0.37766413 7.8020389e-05
  Force max component initial, final = 0.34297275 3.1500247e-05
  Final line search alpha, max atom move = 1.0000000 3.1500247e-05
  Iterations, force evaluations = 160 320

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.489      | 1.3437     | 1.7411     |  31.2 | 72.79
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.031955   | 0.30057    | 0.90343    |  46.4 | 16.28
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 1.8884e-05 | 0.002632   | 0.0056439  |   2.4 |  0.14
Other   |            | 0.199      |            |       | 10.78

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.12 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238191
Ave neighs/atom = 28.530433
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16581372973321-${x_0}
variable           new_x         equal     1.16581372973321-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.19856075094985-${y_0}
variable           new_y         equal     3.19856075094985-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3211792483914-${z_0}
variable           new_z         equal     31.3211792483914-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000177415848439999*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000177415848439999*0.000177415848439999+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000177415848439999*0.000177415848439999+-0.82612220431249*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000177415848439999*0.000177415848439999+-0.82612220431249*-0.82612220431249+${new_z}*${new_z})
variable           module        equal     sqrt(0.000177415848439999*0.000177415848439999+-0.82612220431249*-0.82612220431249+0.000310925458698819*${new_z})
variable           module        equal     sqrt(0.000177415848439999*0.000177415848439999+-0.82612220431249*-0.82612220431249+0.000310925458698819*0.000310925458698819)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000177415848439999/${module}
variable           unitx         equal     0.000177415848439999/0.82612228187427
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.82612220431249/${module}
variable           unity         equal     -0.82612220431249/0.82612228187427
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.000310925458698819/${module}
variable           unitz         equal     0.000310925458698819/0.82612228187427
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.40084720701378e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.40084720701378e-06*-8.40084720701378e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.40084720701378e-06*-8.40084720701378e-06+4.87943191070945e-09*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(-8.40084720701378e-06*-8.40084720701378e-06+4.87943191070945e-09*4.87943191070945e-09+${fz}*${fz})
variable           f_module      equal     sqrt(-8.40084720701378e-06*-8.40084720701378e-06+4.87943191070945e-09*4.87943191070945e-09+1.06974979060348e-05*${fz})
variable           f_module      equal     sqrt(-8.40084720701378e-06*-8.40084720701378e-06+4.87943191070945e-09*4.87943191070945e-09+1.06974979060348e-05*1.06974979060348e-05)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000214757369862347*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000214757369862347*0.000214757369862347+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000214757369862347*0.000214757369862347+-0.999999906113439*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000214757369862347*0.000214757369862347+-0.999999906113439*-0.999999906113439+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000214757369862347*0.000214757369862347+-0.999999906113439*-0.999999906113439+0.000376367355681782*${unitz})
variable           dir_module    equal     sqrt(0.000214757369862347*0.000214757369862347+-0.999999906113439*-0.999999906113439+0.000376367355681782*0.000376367355681782)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.40084720701378e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.40084720701378e-06*0.000214757369862347+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     -8.40084720701378e-06*0.000214757369862347+4.87943191070945e-09*${unity}+${fz}*${unitz}
variable           dot      equal     -8.40084720701378e-06*0.000214757369862347+4.87943191070945e-09*-0.999999906113439+${fz}*${unitz}
variable           dot      equal     -8.40084720701378e-06*0.000214757369862347+4.87943191070945e-09*-0.999999906113439+1.06974979060348e-05*${unitz}
variable           dot      equal     -8.40084720701378e-06*0.000214757369862347+4.87943191070945e-09*-0.999999906113439+1.06974979060348e-05*0.000376367355681782
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     -2.65738630408437e-09/${f_module}*${dir_module}
variable           cos      equal     -2.65738630408437e-09/1.36018645432921e-05*${dir_module}
variable           cos      equal     -2.65738630408437e-09/1.36018645432921e-05*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(-0.000195369266884435)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57099169606302/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(90.01119383451-90.0)
print              "The dot product: ${dot}"
The dot product: -2.65738630408437e-09
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 90.01119383451

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
next iteration
jump TaR.in iteration
variable           norm          equal     sqrt(${new_x}^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000177415848439999^2+${new_y}^2+${new_z}^2)
variable           norm          equal     sqrt(0.000177415848439999^2+-0.82612220431249^2+${new_z}^2)
variable           norm          equal     sqrt(0.000177415848439999^2+-0.82612220431249^2+0.000310925458698819^2)
variable           unit_x        equal     ${new_x}/${norm}
variable           unit_x        equal     0.000177415848439999/${norm}
variable           unit_x        equal     0.000177415848439999/0.82612228187427
variable           unit_y        equal     ${new_y}/${norm}
variable           unit_y        equal     -0.82612220431249/${norm}
variable           unit_y        equal     -0.82612220431249/0.82612228187427
variable           unit_z        equal     ${new_z}/${norm}
variable           unit_z        equal     0.000310925458698819/${norm}
variable           unit_z        equal     0.000310925458698819/0.82612228187427
variable           x_new         equal     ${x0}+${delta}*${unit_x}
variable           x_new         equal     1.16581372973321+${delta}*${unit_x}
variable           x_new         equal     1.16581372973321+0.03*${unit_x}
variable           x_new         equal     1.16581372973321+0.03*0.000214757369862347
variable           y_new         equal     ${y0}+${delta}*${unit_y}
variable           y_new         equal     3.19856075094985+${delta}*${unit_y}
variable           y_new         equal     3.19856075094985+0.03*${unit_y}
variable           y_new         equal     3.19856075094985+0.03*-0.999999906113439
variable           z_new         equal     ${z0}+${delta}*${unit_z}
variable           z_new         equal     31.3211792483914+${delta}*${unit_z}
variable           z_new         equal     31.3211792483914+0.03*${unit_z}
variable           z_new         equal     31.3211792483914+0.03*0.000376367355681782

#include            update_position.mod
set                atom          $i    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  ${x_new}  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16582017245431  y  ${y_new}  z   ${z_new}
set                atom          288751    x  1.16582017245431  y  3.16856075376645  z   ${z_new}
set                atom          288751    x  1.16582017245431  y  3.16856075376645  z   31.3211905394121
Setting atom values ...
  1 settings made for x
  1 settings made for y
  1 settings made for z
fix                hold    carbon   planeforce   ${new_x}  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000177415848439999  ${new_y}  ${new_z}
fix                hold    carbon   planeforce   0.000177415848439999  -0.82612220431249  ${new_z}
fix                hold    carbon   planeforce   0.000177415848439999  -0.82612220431249  0.000310925458698819
min_style          cg
minimize           ${etol} ${ftol} 10000 10000
minimize           1e-30 ${ftol} 10000 10000
minimize           1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    4893   -1152448.3            0   -1152448.3 0.00018988552 -1.1461992e-07 -0.00041289241 
    5000   -1152448.3            0   -1152448.3 6.2216068e-05 -1.8492621e-08 -8.4635338e-05 
    5028   -1152448.3            0   -1152448.3 2.5876724e-06 -8.0201557e-10 -3.6074778e-06 
Loop time of 1.56037 on 104 procs for 135 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.33265087  -1152448.33807966  -1152448.33807966
  Force two-norm initial, final = 0.38438254 0.00028358607
  Force max component initial, final = 0.350065 0.00014424691
  Final line search alpha, max atom move = 1.0000000 0.00014424691
  Iterations, force evaluations = 135 270

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.41378    | 1.134      | 1.4739     |  28.6 | 72.68
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.024696   | 0.2547     | 0.76356    |  42.5 | 16.32
Output  | 9.9305e-05 | 0.00010302 | 0.0002592  |   0.0 |  0.01
Modify  | 1.5366e-05 | 0.0022248  | 0.004748   |   2.2 |  0.14
Other   |            | 0.1693     |            |       | 10.85

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.11 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.3 ave      114453 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238186
Ave neighs/atom = 28.530415
Neighbor list builds = 0
Dangerous builds = 0
unfix              hold

variable           new_x         delete
variable           new_y         delete
variable           new_z         delete
variable           dot           delete
variable           new_x         equal     ${x0}-${x_0}
variable           new_x         equal     1.16580048860765-${x_0}
variable           new_x         equal     1.16580048860765-1.16563631388477
variable           new_y         equal     ${y0}-${y_0}
variable           new_y         equal     3.16856070061934-${y_0}
variable           new_y         equal     3.16856070061934-4.02468295526234
variable           new_z         equal     ${z0}-${z_0}
variable           new_z         equal     31.3210605605406-${z_0}
variable           new_z         equal     31.3210605605406-31.3208683229327
variable           module        equal     sqrt(${new_x}*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000164174722879995*${new_x}+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000164174722879995*0.000164174722879995+${new_y}*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000164174722879995*0.000164174722879995+-0.856122254643*${new_y}+${new_z}*${new_z})
variable           module        equal     sqrt(0.000164174722879995*0.000164174722879995+-0.856122254643*-0.856122254643+${new_z}*${new_z})
variable           module        equal     sqrt(0.000164174722879995*0.000164174722879995+-0.856122254643*-0.856122254643+0.000192237607901546*${new_z})
variable           module        equal     sqrt(0.000164174722879995*0.000164174722879995+-0.856122254643*-0.856122254643+0.000192237607901546*0.000192237607901546)
variable           unitx         equal     ${new_x}/${module}
variable           unitx         equal     0.000164174722879995/${module}
variable           unitx         equal     0.000164174722879995/0.85612229196748
variable           unity         equal     ${new_y}/${module}
variable           unity         equal     -0.856122254643/${module}
variable           unity         equal     -0.856122254643/0.85612229196748
variable           unitz         equal     ${new_z}/${module}
variable           unitz         equal     0.000192237607901546/${module}
variable           unitz         equal     0.000192237607901546/0.85612229196748
variable           f_module      equal     sqrt(${fx}*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.58767238859991e-06*${fx}+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.58767238859991e-06*2.58767238859991e-06+${fy}*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.58767238859991e-06*2.58767238859991e-06+-8.02015566406893e-10*${fy}+${fz}*${fz})
variable           f_module      equal     sqrt(2.58767238859991e-06*2.58767238859991e-06+-8.02015566406893e-10*-8.02015566406893e-10+${fz}*${fz})
variable           f_module      equal     sqrt(2.58767238859991e-06*2.58767238859991e-06+-8.02015566406893e-10*-8.02015566406893e-10+-3.6074777951077e-06*${fz})
variable           f_module      equal     sqrt(2.58767238859991e-06*2.58767238859991e-06+-8.02015566406893e-10*-8.02015566406893e-10+-3.6074777951077e-06*-3.6074777951077e-06)
variable           dir_module    equal     sqrt(${unitx}*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000191765504087857*${unitx}+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000191765504087857*0.000191765504087857+${unity}*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000191765504087857*0.000191765504087857+-0.999999956402864*${unity}+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000191765504087857*0.000191765504087857+-0.999999956402864*-0.999999956402864+${unitz}*${unitz})
variable           dir_module    equal     sqrt(0.000191765504087857*0.000191765504087857+-0.999999956402864*-0.999999956402864+0.000224544565309424*${unitz})
variable           dir_module    equal     sqrt(0.000191765504087857*0.000191765504087857+-0.999999956402864*-0.999999956402864+0.000224544565309424*0.000224544565309424)

variable           dot      equal     ${fx}*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.58767238859991e-06*${unitx}+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.58767238859991e-06*0.000191765504087857+${fy}*${unity}+${fz}*${unitz}
variable           dot      equal     2.58767238859991e-06*0.000191765504087857+-8.02015566406893e-10*${unity}+${fz}*${unitz}
variable           dot      equal     2.58767238859991e-06*0.000191765504087857+-8.02015566406893e-10*-0.999999956402864+${fz}*${unitz}
variable           dot      equal     2.58767238859991e-06*0.000191765504087857+-8.02015566406893e-10*-0.999999956402864+-3.6074777951077e-06*${unitz}
variable           dot      equal     2.58767238859991e-06*0.000191765504087857+-8.02015566406893e-10*-0.999999956402864+-3.6074777951077e-06*0.000224544565309424
variable           cos      equal     ${dot}/${f_module}*${dir_module}
variable           cos      equal     4.88202298089544e-10/${f_module}*${dir_module}
variable           cos      equal     4.88202298089544e-10/4.43958839039684e-06*${dir_module}
variable           cos      equal     4.88202298089544e-10/4.43958839039684e-06*1
variable           radian   equal     acos(${cos})
variable           radian   equal     acos(0.000109965666895058)
variable           angle    equal     (${radian}/PI)*180
variable           angle    equal     (1.57068636112778/PI)*180
variable           tole     equal     abs(${angle}-90.0)
variable           tole     equal     abs(89.9936994313829-90.0)
print              "The dot product: ${dot}"
The dot product: 4.88202298089544e-10
#print              "The cos of the angle between the force vector and the displacement vector: ${cos}"
print              "The angle: ${angle}"
The angle: 89.9936994313829

if "(${dot} >= 0.0) && (${dot} < ${tol})" then "jump TaR.in relaxation" elif "(${dot} < 0.0) && (${dot} > -${tol})" "jump TaR.in relaxation" elif "(${iteration} == ${iter_tot}) && (${seed} < ${seed_stop})" "print 'The iteration number is maximum!'" "next seed" "variable iteration delete" "jump TaR.in loop" elif "(${iteration} == ${iter_tot}) && (${seed} == ${seed_stop})" "quit" else    "next iteration"    "jump TaR.in iteration"
jump TaR.in relaxation
min_style               cg
minimize                ${etol} ${ftol} 10000 10000
minimize                1e-30 ${ftol} 10000 10000
minimize                1e-30 1e-30 10000 10000
Per MPI rank memory allocation (min/avg/max) = 5.441 | 5.816 | 6.074 Mbytes
Step PotEng KinEng TotEng v_fx v_fy v_fz 
    5028   -1152448.3            0   -1152448.3 -0.00044798313    2.0980456 -0.00079324343 
    5224   -1152449.3            0   -1152449.3 -2.1662276e-05 2.2055159e-06 2.6004125e-05 
Loop time of 2.25504 on 104 procs for 196 steps with 288751 atoms

99.9% CPU use with 104 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -1152448.33807966  -1152449.34502402  -1152449.34502402
  Force two-norm initial, final = 2.0980458 0.00017071223
  Force max component initial, final = 2.0980456 3.6368868e-05
  Final line search alpha, max atom move = 1.0000000 3.6368868e-05
  Iterations, force evaluations = 196 385

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.60819    | 1.623      | 2.1029     |  33.7 | 71.97
Neigh   | 5.0207e-05 | 0.014869   | 0.024526   |   5.0 |  0.66
Comm    | 0.039909   | 0.36245    | 1.0833     |  50.6 | 16.07
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 2.0438e-05 | 0.0020597  | 0.0052718  |   2.8 |  0.09
Other   |            | 0.2527     |            |       | 11.21

Nlocal:        2776.45 ave        3930 max           0 min
Histogram: 8 4 4 0 4 12 8 0 26 38
Nghost:        3879.09 ave        5425 max         232 min
Histogram: 8 0 8 0 16 0 8 8 16 40
Neighs:        79213.4 ave      114454 max           0 min
Histogram: 8 4 4 0 8 8 8 8 20 36

Total # of neighbors = 8238190
Ave neighs/atom = 28.530429
Neighbor list builds = 5
Dangerous builds = 0
variable                disp_threshold    equal     1.0
variable                displacement      equal     sqrt((${x0}-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563837330499-${x_0})^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563837330499-1.16563631388477)^2+(${y0}-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563837330499-1.16563631388477)^2+(4.02468134711253-${y_0})^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563837330499-1.16563631388477)^2+(4.02468134711253-4.02468295526234)^2+(${z0}-${z_0})^2)
variable                displacement      equal     sqrt((1.16563837330499-1.16563631388477)^2+(4.02468134711253-4.02468295526234)^2+(31.320867743915-${z_0})^2)
variable                displacement      equal     sqrt((1.16563837330499-1.16563631388477)^2+(4.02468134711253-4.02468295526234)^2+(31.320867743915-31.3208683229327)^2)
if  "${displacement} >= ${disp_threshold}" then "print '${x0} ${y0} ${z0}' append end_site.dat screen no"

#include      full_relaxation.mod
#variable     back_delta  equal    0.0
#variable     x_new       equal    ${x0}-${back_delta}*${unitx}
#variable     y_new       equal    ${y0}-${back_delta}*${unity}
#variable     z_new       equal    ${z0}-${back_delta}*${unitz}

#include      verify_saddle.mod

#variable     x_err      equal    abs(${x_0}-${x0})
#variable     y_err      equal    abs(${y_0}-${y0})
#variable     z_err      equal    abs(${z_0}-${z0})
#if "(${x_err} < 0.01) && (${y_err} < 0.01) && (${z_err} < 0.01)" then "include full_relaxation.mod"

if "${seed} < ${seed_stop}" then "next seed" "print ${seed}" "variable iteration delete" "jump TaR.in loop" else "print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no" "quit"
print '${x_0} ${y_0} ${z_0}' file start_site.dat screen no
quit
